// generated by markovich:tablegen
// ishani.org

function SelectNextLetter(
    trigram_u32,
    input_weight,
    input_seed,
    decision_fn )
{
    const initial_letter_code = trigram_u32 & 0xff;
    const initial_letter = String.fromCharCode(initial_letter_code);

    switch (initial_letter)
    {
        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'a':
        {
            switch ( trigram_u32 )
            {
            // aab
            case 0x00626161:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aac
            case 0x00636161:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aad
            case 0x00646161:
            {
                const  data_chars   = "oae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aag
            case 0x00676161:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aai
            case 0x00696161:
            {
                const  data_chars   = "czbk";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aaj
            case 0x006a6161:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aak
            case 0x006b6161:
            {
                const  data_chars   = "iaue";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aam
            case 0x006d6161:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aan
            case 0x006e6161:
            {
                const  data_chars   = "ajd";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aao
            case 0x006f6161:
            {
                const  data_chars   = "iyks";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aap
            case 0x00706161:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aar
            case 0x00726161:
            {
                const  data_chars   = "aiue";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aas
            case 0x00736161:
            {
                const  data_chars   = "ah";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x6276, // 0.384615 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aat
            case 0x00746161:
            {
                const  data_chars   = "ose";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aay
            case 0x00796161:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aaz
            case 0x007a6161:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aba
            case 0x00616261:
            {
                const  data_chars   = "rstnykcimgedbojhu";
                const data_weights = [
                    0x4835, // 0.282051 
                    0x3b14, // 0.230769 
                    0x1f08, // 0.121212 
                    0x17df, // 0.093240 
                    0x144a, // 0.079254 
                    0x0b57, // 0.044289 
                    0x085b, // 0.032634 
                    0x0729, // 0.027972 
                    0x055f, // 0.020979 
                    0x055f, // 0.020979 
                    0x042d, // 0.016317 
                    0x02fc, // 0.011655 
                    0x0263, // 0.009324 
                    0x0099, // 0.002331 
                    0x0099, // 0.002331 
                    0x0099, // 0.002331 
                    0x0099, // 0.002331 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abb
            case 0x00626261:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abe
            case 0x00656261:
            {
                const  data_chars   = "tcskmrygndabpiowjh";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x1bdd, // 0.108844 
                    0x1328, // 0.074830 
                    0x116a, // 0.068027 
                    0x116a, // 0.068027 
                    0x116a, // 0.068027 
                    0x0fac, // 0.061224 
                    0x0def, // 0.054422 
                    0x0c31, // 0.047619 
                    0x06f7, // 0.027211 
                    0x0539, // 0.020408 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abi
            case 0x00696261:
            {
                const  data_chars   = "rkntsgodyczaeib";
                const data_weights = [
                    0x5a81, // 0.353535 
                    0x3b7a, // 0.232323 
                    0x1746, // 0.090909 
                    0x14b0, // 0.080808 
                    0x0cee, // 0.050505 
                    0x0a58, // 0.040404 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abl
            case 0x006c6261:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abo
            case 0x006f6261:
            {
                const  data_chars   = "rskntymci";
                const data_weights = [
                    0x6c17, // 0.422222 
                    0x3333, // 0.200000 
                    0x2d83, // 0.177778 
                    0x16c1, // 0.088889 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // abu
            case 0x00756261:
            {
                const  data_chars   = "rkstcnmgzhjdeoa";
                const data_weights = [
                    0x46f1, // 0.277108 
                    0x260a, // 0.148594 
                    0x23fc, // 0.140562 
                    0x21ed, // 0.132530 
                    0x1fdf, // 0.124498 
                    0x0e65, // 0.056225 
                    0x0a48, // 0.040161 
                    0x0732, // 0.028112 
                    0x041d, // 0.016064 
                    0x020e, // 0.008032 
                    0x020e, // 0.008032 
                    0x020e, // 0.008032 
                    0x0107, // 0.004016 
                    0x0107, // 0.004016 
                    0x0107, // 0.004016 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aby
            case 0x00796261:
            {
                const  data_chars   = "uos";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aca
            case 0x00616361:
            {
                const  data_chars   = "cb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // acc
            case 0x00636361:
            {
                const  data_chars   = "hou";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ace
            case 0x00656361:
            {
                const  data_chars   = "cry";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ach
            case 0x00686361:
            {
                const  data_chars   = "ioaust";
                const data_weights = [
                    0xb328, // 0.699828 
                    0x4a81, // 0.291023 
                    0x0151, // 0.005146 
                    0x00e1, // 0.003431 
                    0x0013, // 0.000286 
                    0x0013, // 0.000286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aci
            case 0x00696361:
            {
                const  data_chars   = "af";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aco
            case 0x006f6361:
            {
                const  data_chars   = "ne";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // act
            case 0x00746361:
            {
                const  data_chars   = "ioy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ada
            case 0x00616461:
            {
                const  data_chars   = "inktcsyrhgmoubzdwajef";
                const data_weights = [
                    0x6361, // 0.388193 
                    0x308b, // 0.189624 
                    0x16e6, // 0.089445 
                    0x1426, // 0.078712 
                    0x1252, // 0.071556 
                    0x0754, // 0.028623 
                    0x06df, // 0.026834 
                    0x0669, // 0.025045 
                    0x05f4, // 0.023256 
                    0x03aa, // 0.014311 
                    0x0335, // 0.012522 
                    0x02bf, // 0.010733 
                    0x01d5, // 0.007156 
                    0x01d5, // 0.007156 
                    0x01d5, // 0.007156 
                    0x0160, // 0.005367 
                    0x00ea, // 0.003578 
                    0x00ea, // 0.003578 
                    0x00ea, // 0.003578 
                    0x0075, // 0.001789 
                    0x0075, // 0.001789 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adc
            case 0x00636461:
            {
                return 'r';
            }
            break;

            // add
            case 0x00646461:
            {
                const  data_chars   = "ah";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ade
            case 0x00656461:
            {
                const  data_chars   = "rnsymhbkgzjtcwi";
                const data_weights = [
                    0x6077, // 0.376812 
                    0x303b, // 0.188406 
                    0x1dae, // 0.115942 
                    0x0ed7, // 0.057971 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adi
            case 0x00696461:
            {
                const  data_chars   = "snu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adj
            case 0x006a6461:
            {
                return 'i';
            }
            break;

            // ado
            case 0x006f6461:
            {
                const  data_chars   = "rmnkcgywsihbdtauf";
                const data_weights = [
                    0x5f7a, // 0.372951 
                    0x3582, // 0.209016 
                    0x14fc, // 0.081967 
                    0x11d6, // 0.069672 
                    0x0b8a, // 0.045082 
                    0x0a7e, // 0.040984 
                    0x0865, // 0.032787 
                    0x0758, // 0.028689 
                    0x064c, // 0.024590 
                    0x053f, // 0.020492 
                    0x0432, // 0.016393 
                    0x0326, // 0.012295 
                    0x0326, // 0.012295 
                    0x0326, // 0.012295 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x010d, // 0.004098 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adq
            case 0x00716461:
            {
                return 'u';
            }
            break;

            // adr
            case 0x00726461:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ads
            case 0x00736461:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adt
            case 0x00746461:
            {
                return 'o';
            }
            break;

            // adu
            case 0x00756461:
            {
                const  data_chars   = "kc";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // adz
            case 0x007a6461:
            {
                return 'u';
            }
            break;

            // aeb
            case 0x00626561:
            {
                const  data_chars   = "aoiy";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aec
            case 0x00636561:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aed
            case 0x00646561:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xd20d, // 0.820513 
                    0x20d2, // 0.128205 
                    0x0d21, // 0.051282 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aee
            case 0x00656561:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aef
            case 0x00666561:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aeg
            case 0x00676561:
            {
                const  data_chars   = "aoui";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aeh
            case 0x00686561:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aei
            case 0x00696561:
            {
                const  data_chars   = "nwkm";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aej
            case 0x006a6561:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aek
            case 0x006b6561:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x5555, // 0.333333 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aem
            case 0x006d6561:
            {
                const  data_chars   = "aoiue";
                const data_weights = [
                    0x8444, // 0.516667 
                    0x4889, // 0.283333 
                    0x1dde, // 0.116667 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aen
            case 0x006e6561:
            {
                const  data_chars   = "oaubetm";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aeo
            case 0x006f6561:
            {
                const  data_chars   = "knd";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aer
            case 0x00726561:
            {
                const  data_chars   = "iuay";
                const data_weights = [
                    0x8348, // 0.512821 
                    0x6907, // 0.410256 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aes
            case 0x00736561:
            {
                const  data_chars   = "huaeo";
                const data_weights = [
                    0x7064, // 0.439024 
                    0x3832, // 0.219512 
                    0x3832, // 0.219512 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aet
            case 0x00746561:
            {
                const  data_chars   = "aest";
                const data_weights = [
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x4b4b, // 0.294118 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aeu
            case 0x00756561:
            {
                const  data_chars   = "rc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aew
            case 0x00776561:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aey
            case 0x00796561:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aez
            case 0x007a6561:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x745d, // 0.454545 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // afo
            case 0x006f6661:
            {
                const  data_chars   = "rg";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aft
            case 0x00746661:
            {
                const  data_chars   = "se";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // afu
            case 0x00756661:
            {
                const  data_chars   = "krntsjcmeduwp";
                const data_weights = [
                    0x3871, // 0.220472 
                    0x3265, // 0.196850 
                    0x2851, // 0.157480 
                    0x1830, // 0.094488 
                    0x162c, // 0.086614 
                    0x1224, // 0.070866 
                    0x1224, // 0.070866 
                    0x0c18, // 0.047244 
                    0x0408, // 0.015748 
                    0x0408, // 0.015748 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aga
            case 0x00616761:
            {
                const  data_chars   = "wtsrmnyhkoieubcdfzjga";
                const data_weights = [
                    0x32da, // 0.198636 
                    0x1e1e, // 0.117647 
                    0x1b48, // 0.106564 
                    0x1b48, // 0.106564 
                    0x1a68, // 0.103154 
                    0x128d, // 0.072464 
                    0x0fb7, // 0.061381 
                    0x0c39, // 0.047741 
                    0x0b21, // 0.043478 
                    0x099a, // 0.037511 
                    0x092b, // 0.035806 
                    0x0505, // 0.019608 
                    0x029e, // 0.010230 
                    0x0267, // 0.009378 
                    0x0267, // 0.009378 
                    0x022f, // 0.008525 
                    0x00df, // 0.003410 
                    0x00df, // 0.003410 
                    0x00df, // 0.003410 
                    0x0038, // 0.000853 
                    0x0038, // 0.000853 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // age
            case 0x00656761:
            {
                const  data_chars   = "ntrmkbcidhosgjyfz";
                const data_weights = [
                    0x31c7, // 0.194444 
                    0x25ed, // 0.148148 
                    0x17b4, // 0.092593 
                    0x17b4, // 0.092593 
                    0x1098, // 0.064815 
                    0x1098, // 0.064815 
                    0x0e39, // 0.055556 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agg
            case 0x00676761:
            {
                return 'u';
            }
            break;

            // agi
            case 0x00696761:
            {
                const  data_chars   = "nsrmcthwydgzkobaujfei";
                const data_weights = [
                    0x3472, // 0.204861 
                    0x28e4, // 0.159722 
                    0x171c, // 0.090278 
                    0x171c, // 0.090278 
                    0x11c7, // 0.069444 
                    0x10e4, // 0.065972 
                    0x0f1c, // 0.059028 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0800, // 0.031250 
                    0x0639, // 0.024306 
                    0x0472, // 0.017361 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x02ab, // 0.010417 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x00e4, // 0.003472 
                    0x00e4, // 0.003472 
                    0x00e4, // 0.003472 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agl
            case 0x006c6761:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agn
            case 0x006e6761:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ago
            case 0x006f6761:
            {
                const  data_chars   = "smyercnzdhiuktjbga";
                const data_weights = [
                    0x28b4, // 0.158996 
                    0x2022, // 0.125523 
                    0x1f10, // 0.121339 
                    0x1dfe, // 0.117155 
                    0x1791, // 0.092050 
                    0x1791, // 0.092050 
                    0x145a, // 0.079498 
                    0x0ab6, // 0.041841 
                    0x09a4, // 0.037657 
                    0x066d, // 0.025105 
                    0x055b, // 0.020921 
                    0x0449, // 0.016736 
                    0x0449, // 0.016736 
                    0x0449, // 0.016736 
                    0x0337, // 0.012552 
                    0x0337, // 0.012552 
                    0x0224, // 0.008368 
                    0x0112, // 0.004184 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agu
            case 0x00756761:
            {
                const  data_chars   = "crmsniwy";
                const data_weights = [
                    0x871c, // 0.527778 
                    0x4555, // 0.270833 
                    0x1639, // 0.086806 
                    0x11c7, // 0.069444 
                    0x0639, // 0.024306 
                    0x02ab, // 0.010417 
                    0x01c7, // 0.006944 
                    0x00e4, // 0.003472 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agw
            case 0x00776761:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // agy
            case 0x00796761:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xa492, // 0.642857 
                    0x5b6e, // 0.357143 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aha
            case 0x00616861:
            {
                const  data_chars   = "rmtnsgcyzbidejok";
                const data_weights = [
                    0x6ff7, // 0.437367 
                    0x37fc, // 0.218684 
                    0x198c, // 0.099788 
                    0x127b, // 0.072187 
                    0x104e, // 0.063694 
                    0x0b6a, // 0.044586 
                    0x03ce, // 0.014862 
                    0x02b8, // 0.010616 
                    0x022d, // 0.008493 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x0116, // 0.004246 
                    0x008b, // 0.002123 
                    0x008b, // 0.002123 
                    0x008b, // 0.002123 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ahc
            case 0x00636861:
            {
                const  data_chars   = "ih";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ahe
            case 0x00656861:
            {
                const  data_chars   = "itrg";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ahi
            case 0x00696861:
            {
                const  data_chars   = "grkntmdscobyhie";
                const data_weights = [
                    0x5aa4, // 0.354067 
                    0x3c05, // 0.234450 
                    0x1c2c, // 0.110048 
                    0x1260, // 0.071770 
                    0x0c40, // 0.047847 
                    0x0b06, // 0.043062 
                    0x0893, // 0.033493 
                    0x0759, // 0.028708 
                    0x0620, // 0.023923 
                    0x03ad, // 0.014354 
                    0x0273, // 0.009569 
                    0x0273, // 0.009569 
                    0x0273, // 0.009569 
                    0x013a, // 0.004785 
                    0x013a, // 0.004785 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aho
            case 0x006f6861:
            {
                const  data_chars   = "rnmskgudcthy";
                const data_weights = [
                    0x6945, // 0.411215 
                    0x323e, // 0.196262 
                    0x217f, // 0.130841 
                    0x1588, // 0.084112 
                    0x0e5b, // 0.056075 
                    0x0992, // 0.037383 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ahs
            case 0x00736861:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ahy
            case 0x00796861:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aia
            case 0x00616961:
            {
                const  data_chars   = "nkcsrt";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aib
            case 0x00626961:
            {
                const  data_chars   = "aeoui";
                const data_weights = [
                    0xad09, // 0.675926 
                    0x1c72, // 0.111111 
                    0x1a13, // 0.101852 
                    0x1a13, // 0.101852 
                    0x025f, // 0.009259 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aic
            case 0x00636961:
            {
                const  data_chars   = "hoa";
                const data_weights = [
                    0xfd30, // 0.989011 
                    0x0168, // 0.005495 
                    0x0168, // 0.005495 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aid
            case 0x00646961:
            {
                const  data_chars   = "oaeu";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x5794, // 0.342105 
                    0x3b49, // 0.231579 
                    0x0159, // 0.005263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aie
            case 0x00656961:
            {
                const  data_chars   = "nik";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6db7, // 0.428571 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aif
            case 0x00666961:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aig
            case 0x00676961:
            {
                const  data_chars   = "aoieuy";
                const data_weights = [
                    0xa3ea, // 0.640288 
                    0x2a5c, // 0.165468 
                    0x1093, // 0.064748 
                    0x0ebc, // 0.057554 
                    0x0ce4, // 0.050360 
                    0x0586, // 0.021583 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aih
            case 0x00686961:
            {
                const  data_chars   = "aoiey";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3943, // 0.223684 
                    0x2f28, // 0.184211 
                    0x1436, // 0.078947 
                    0x035e, // 0.013158 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aii
            case 0x00696961:
            {
                const  data_chars   = "cnkrswy";
                const data_weights = [
                    0x4ec5, // 0.307692 
                    0x44ec, // 0.269231 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aij
            case 0x006a6961:
            {
                const  data_chars   = "ioue";
                const data_weights = [
                    0xa5a6, // 0.647059 
                    0x3636, // 0.211765 
                    0x2121, // 0.129412 
                    0x0303, // 0.011765 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aik
            case 0x006b6961:
            {
                const  data_chars   = "eaoiuy";
                const data_weights = [
                    0x3e7d, // 0.244094 
                    0x3d7b, // 0.240157 
                    0x3a75, // 0.228346 
                    0x2347, // 0.137795 
                    0x1e3c, // 0.118110 
                    0x0810, // 0.031496 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ail
            case 0x006c6961:
            {
                const  data_chars   = "yw";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aim
            case 0x006d6961:
            {
                const  data_chars   = "aoiuey";
                const data_weights = [
                    0x9091, // 0.564706 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0f0f, // 0.058824 
                    0x0c0c, // 0.047059 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ain
            case 0x006e6961:
            {
                const  data_chars   = "oaieutgbny";
                const data_weights = [
                    0x7ebc, // 0.495050 
                    0x3029, // 0.188119 
                    0x29d2, // 0.163366 
                    0x0f35, // 0.059406 
                    0x0df1, // 0.054455 
                    0x03cd, // 0.014851 
                    0x0289, // 0.009901 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aio
            case 0x006f6961:
            {
                const  data_chars   = "ikujnmtrsch";
                const data_weights = [
                    0x51ec, // 0.320000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aip
            case 0x00706961:
            {
                const  data_chars   = "upaeo";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // air
            case 0x00726961:
            {
                const  data_chars   = "aiouyed";
                const data_weights = [
                    0xc6c0, // 0.776371 
                    0x19ed, // 0.101266 
                    0x0f1f, // 0.059072 
                    0x067b, // 0.025316 
                    0x0567, // 0.021097 
                    0x033e, // 0.012658 
                    0x0115, // 0.004219 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ais
            case 0x00736961:
            {
                const  data_chars   = "haeousy";
                const data_weights = [
                    0x9365, // 0.575758 
                    0x219e, // 0.131313 
                    0x1b95, // 0.107744 
                    0x158c, // 0.084175 
                    0x13d3, // 0.077441 
                    0x052c, // 0.020202 
                    0x00dd, // 0.003367 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ait
            case 0x00746961:
            {
                const  data_chars   = "oaes";
                const data_weights = [
                    0x74a4, // 0.455621 
                    0x5deb, // 0.366864 
                    0x1b44, // 0.106509 
                    0x122d, // 0.071006 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aiu
            case 0x00756961:
            {
                const  data_chars   = "nrstce";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aiw
            case 0x00776961:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aiy
            case 0x00796961:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x904a, // 0.563636 
                    0x5d17, // 0.363636 
                    0x129e, // 0.072727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aiz
            case 0x007a6961:
            {
                const  data_chars   = "uaeo";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x4b4b, // 0.294118 
                    0x15c0, // 0.084967 
                    0x10bb, // 0.065359 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aja
            case 0x00616a61:
            {
                const  data_chars   = "nymr";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aje
            case 0x00656a61:
            {
                const  data_chars   = "rs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aji
            case 0x00696a61:
            {
                const  data_chars   = "mrkngytocshwbidauf";
                const data_weights = [
                    0x5fa4, // 0.373596 
                    0x2c96, // 0.174157 
                    0x205c, // 0.126404 
                    0x192b, // 0.098315 
                    0x0daa, // 0.053371 
                    0x0b81, // 0.044944 
                    0x07e9, // 0.030899 
                    0x05c1, // 0.022472 
                    0x0398, // 0.014045 
                    0x0398, // 0.014045 
                    0x02e0, // 0.011236 
                    0x0228, // 0.008427 
                    0x0170, // 0.005618 
                    0x0170, // 0.005618 
                    0x0170, // 0.005618 
                    0x0170, // 0.005618 
                    0x00b8, // 0.002809 
                    0x00b8, // 0.002809 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ajj
            case 0x006a6a61:
            {
                return 'i';
            }
            break;

            // ajo
            case 0x006f6a61:
            {
                const  data_chars   = "sumnyeg";
                const data_weights = [
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aju
            case 0x00756a61:
            {
                const  data_chars   = "knrsjtha";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ajy
            case 0x00796a61:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aka
            case 0x00616b61:
            {
                const  data_chars   = "mnstikwhdygbrzocejufap";
                const data_weights = [
                    0x20e8, // 0.128544 
                    0x1dba, // 0.116117 
                    0x198d, // 0.099806 
                    0x1776, // 0.091650 
                    0x10e7, // 0.066019 
                    0x0dd2, // 0.053981 
                    0x0ca0, // 0.049320 
                    0x0c3a, // 0.047767 
                    0x0bbb, // 0.045825 
                    0x0b22, // 0.043495 
                    0x0a57, // 0.040388 
                    0x09a5, // 0.037670 
                    0x08f3, // 0.034951 
                    0x07c1, // 0.030291 
                    0x065d, // 0.024854 
                    0x05de, // 0.022913 
                    0x0591, // 0.021748 
                    0x0460, // 0.017087 
                    0x0296, // 0.010097 
                    0x0249, // 0.008932 
                    0x01fd, // 0.007767 
                    0x0033, // 0.000777 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // akd
            case 0x00646b61:
            {
                return 's';
            }
            break;

            // ake
            case 0x00656b61:
            {
                const  data_chars   = "nmsbhdtyczrgkiouafwj";
                const data_weights = [
                    0x36c0, // 0.213873 
                    0x19e5, // 0.101156 
                    0x133d, // 0.075145 
                    0x127f, // 0.072254 
                    0x1047, // 0.063584 
                    0x1047, // 0.063584 
                    0x0ecc, // 0.057803 
                    0x0bd7, // 0.046243 
                    0x0b19, // 0.043353 
                    0x0b19, // 0.043353 
                    0x0b19, // 0.043353 
                    0x099e, // 0.037572 
                    0x0766, // 0.028902 
                    0x05eb, // 0.023121 
                    0x052e, // 0.020231 
                    0x0470, // 0.017341 
                    0x0470, // 0.017341 
                    0x03b3, // 0.014451 
                    0x0238, // 0.008671 
                    0x0238, // 0.008671 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aki
            case 0x00696b61:
            {
                const  data_chars   = "ntmcgsdbyhkrzoujefiawp";
                const data_weights = [
                    0x2e85, // 0.181710 
                    0x2518, // 0.144893 
                    0x1dcc, // 0.116390 
                    0x193c, // 0.098575 
                    0x11a2, // 0.068884 
                    0x101d, // 0.062945 
                    0x0dfc, // 0.054632 
                    0x0b40, // 0.043943 
                    0x0a56, // 0.040380 
                    0x091f, // 0.035629 
                    0x07e8, // 0.030879 
                    0x06fe, // 0.027316 
                    0x06fe, // 0.027316 
                    0x052b, // 0.020190 
                    0x030a, // 0.011876 
                    0x01d3, // 0.007126 
                    0x01d3, // 0.007126 
                    0x0185, // 0.005938 
                    0x0185, // 0.005938 
                    0x0137, // 0.004751 
                    0x009c, // 0.002375 
                    0x004e, // 0.001188 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // akk
            case 0x006b6b61:
            {
                const  data_chars   = "oaueiy";
                const data_weights = [
                    0x573b, // 0.340741 
                    0x518a, // 0.318519 
                    0x25ed, // 0.148148 
                    0x2222, // 0.133333 
                    0x0b61, // 0.044444 
                    0x03cb, // 0.014815 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ako
            case 0x006f6b61:
            {
                const  data_chars   = "sgnmbjztdirkcyehuoa";
                const data_weights = [
                    0x1e63, // 0.118705 
                    0x1d78, // 0.115108 
                    0x17f1, // 0.093525 
                    0x1706, // 0.089928 
                    0x1357, // 0.075540 
                    0x117f, // 0.068345 
                    0x1093, // 0.064748 
                    0x1093, // 0.064748 
                    0x1093, // 0.064748 
                    0x0dd0, // 0.053957 
                    0x0a21, // 0.039568 
                    0x075e, // 0.028777 
                    0x0672, // 0.025180 
                    0x0672, // 0.025180 
                    0x0672, // 0.025180 
                    0x049b, // 0.017986 
                    0x049b, // 0.017986 
                    0x01d7, // 0.007194 
                    0x00ec, // 0.003597 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aku
            case 0x00756b61:
            {
                const  data_chars   = "rsbnmtcjiedkygzhwoualp";
                const data_weights = [
                    0x3bf7, // 0.234234 
                    0x25ab, // 0.147147 
                    0x204a, // 0.126126 
                    0x1587, // 0.084084 
                    0x1273, // 0.072072 
                    0x0ac3, // 0.042042 
                    0x0a82, // 0.041041 
                    0x09fe, // 0.039039 
                    0x0875, // 0.033033 
                    0x072d, // 0.028028 
                    0x06aa, // 0.026026 
                    0x05e5, // 0.023023 
                    0x0520, // 0.020020 
                    0x0520, // 0.020020 
                    0x041a, // 0.016016 
                    0x03d8, // 0.015015 
                    0x0396, // 0.014014 
                    0x02d2, // 0.011011 
                    0x00c5, // 0.003003 
                    0x00c5, // 0.003003 
                    0x0042, // 0.001001 
                    0x0042, // 0.001001 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // akw
            case 0x00776b61:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aky
            case 0x00796b61:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x5d17, // 0.363636 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ala
            case 0x00616c61:
            {
                const  data_chars   = "cnisz";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alb
            case 0x00626c61:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alc
            case 0x00636c61:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alg
            case 0x00676c61:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ali
            case 0x00696c61:
            {
                const  data_chars   = "atv";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // all
            case 0x006c6c61:
            {
                const  data_chars   = "els";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alm
            case 0x006d6c61:
            {
                return 'o';
            }
            break;

            // alp
            case 0x00706c61:
            {
                const  data_chars   = "his";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // als
            case 0x00736c61:
            {
                const  data_chars   = "te";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alv
            case 0x00766c61:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // alz
            case 0x007a6c61:
            {
                return 'a';
            }
            break;

            // ama
            case 0x00616d61:
            {
                const  data_chars   = "ctngdmkserzibhyujoafpw";
                const data_weights = [
                    0x50a7, // 0.315043 
                    0x1c37, // 0.110218 
                    0x15eb, // 0.085620 
                    0x1341, // 0.075213 
                    0x0fbe, // 0.061495 
                    0x0f23, // 0.059130 
                    0x0e88, // 0.056764 
                    0x0e0c, // 0.054872 
                    0x09b0, // 0.037843 
                    0x0725, // 0.027909 
                    0x04f7, // 0.019395 
                    0x047b, // 0.017502 
                    0x041e, // 0.016083 
                    0x03a2, // 0.014191 
                    0x0345, // 0.012772 
                    0x024d, // 0.008988 
                    0x01f0, // 0.007569 
                    0x01b2, // 0.006623 
                    0x0117, // 0.004257 
                    0x00d9, // 0.003311 
                    0x00ba, // 0.002838 
                    0x009b, // 0.002365 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amb
            case 0x00626d61:
            {
                const  data_chars   = "eaou";
                const data_weights = [
                    0x62e9, // 0.386364 
                    0x5746, // 0.340909 
                    0x345d, // 0.204545 
                    0x1174, // 0.068182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ame
            case 0x00656d61:
            {
                const  data_chars   = "ngirtkzdmyscojaheuflb";
                const data_weights = [
                    0x3657, // 0.212264 
                    0x26a4, // 0.150943 
                    0x1a91, // 0.103774 
                    0x195c, // 0.099057 
                    0x0fb3, // 0.061321 
                    0x0e7e, // 0.056604 
                    0x0c13, // 0.047170 
                    0x0c13, // 0.047170 
                    0x0ade, // 0.042453 
                    0x09a9, // 0.037736 
                    0x073f, // 0.028302 
                    0x060a, // 0.023585 
                    0x04d5, // 0.018868 
                    0x039f, // 0.014151 
                    0x039f, // 0.014151 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ami
            case 0x00696d61:
            {
                const  data_chars   = "nkstmhyoiczgdaufbjrewlp";
                const data_weights = [
                    0x242c, // 0.141300 
                    0x1dec, // 0.116877 
                    0x1bcd, // 0.108591 
                    0x1553, // 0.083297 
                    0x1350, // 0.075447 
                    0x1131, // 0.067161 
                    0x0ef6, // 0.058439 
                    0x0d49, // 0.051897 
                    0x0b63, // 0.044483 
                    0x0af1, // 0.042739 
                    0x0961, // 0.036633 
                    0x0899, // 0.033580 
                    0x07ed, // 0.030964 
                    0x075e, // 0.028783 
                    0x04b0, // 0.018317 
                    0x0477, // 0.017444 
                    0x033d, // 0.012647 
                    0x0258, // 0.009158 
                    0x021f, // 0.008286 
                    0x01ad, // 0.006542 
                    0x0190, // 0.006106 
                    0x0039, // 0.000872 
                    0x001d, // 0.000436 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amm
            case 0x006d6d61:
            {
                const  data_chars   = "aieuy";
                const data_weights = [
                    0x7000, // 0.437500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amo
            case 0x006f6d61:
            {
                const  data_chars   = "trngcimsdojkeybuz";
                const data_weights = [
                    0x5044, // 0.313531 
                    0x3f5e, // 0.247525 
                    0x237c, // 0.138614 
                    0x100e, // 0.062706 
                    0x0bd4, // 0.046205 
                    0x094b, // 0.036304 
                    0x0873, // 0.033003 
                    0x06c2, // 0.026403 
                    0x0439, // 0.016502 
                    0x0439, // 0.016502 
                    0x0361, // 0.013201 
                    0x0361, // 0.013201 
                    0x0289, // 0.009901 
                    0x01b1, // 0.006601 
                    0x01b1, // 0.006601 
                    0x01b1, // 0.006601 
                    0x01b1, // 0.006601 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amp
            case 0x00706d61:
            {
                const  data_chars   = "aoue";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amt
            case 0x00746d61:
            {
                return 's';
            }
            break;

            // amu
            case 0x00756d61:
            {
                const  data_chars   = "rkistngwzcbymdph";
                const data_weights = [
                    0x809a, // 0.502347 
                    0x28dd, // 0.159624 
                    0x146f, // 0.079812 
                    0x10d4, // 0.065728 
                    0x0e6c, // 0.056338 
                    0x086a, // 0.032864 
                    0x0602, // 0.023474 
                    0x04cf, // 0.018779 
                    0x0267, // 0.009390 
                    0x0267, // 0.009390 
                    0x0267, // 0.009390 
                    0x0267, // 0.009390 
                    0x0267, // 0.009390 
                    0x0134, // 0.004695 
                    0x0134, // 0.004695 
                    0x0134, // 0.004695 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // amy
            case 0x00796d61:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ana
            case 0x00616e61:
            {
                const  data_chars   = "gikmsbnztrydwohcjeaufl";
                const data_weights = [
                    0x2c44, // 0.172906 
                    0x2a36, // 0.164884 
                    0x2115, // 0.129234 
                    0x1622, // 0.086453 
                    0x139f, // 0.076649 
                    0x0d01, // 0.050802 
                    0x0b2e, // 0.043672 
                    0x0a0a, // 0.039216 
                    0x09d0, // 0.038324 
                    0x07fc, // 0.031194 
                    0x07fc, // 0.031194 
                    0x069e, // 0.025847 
                    0x05ef, // 0.023173 
                    0x057a, // 0.021390 
                    0x0456, // 0.016934 
                    0x03e1, // 0.015152 
                    0x036c, // 0.013369 
                    0x0248, // 0.008913 
                    0x0124, // 0.004456 
                    0x00ea, // 0.003565 
                    0x0075, // 0.001783 
                    0x003a, // 0.000891 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anb
            case 0x00626e61:
            {
                const  data_chars   = "aeouiy";
                const data_weights = [
                    0x6ebe, // 0.432584 
                    0x51fa, // 0.320225 
                    0x2565, // 0.146067 
                    0x1142, // 0.067416 
                    0x0731, // 0.028090 
                    0x0170, // 0.005618 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anc
            case 0x00636e61:
            {
                const  data_chars   = "heaist";
                const data_weights = [
                    0xf054, // 0.938775 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // and
            case 0x00646e61:
            {
                const  data_chars   = "aoert";
                const data_weights = [
                    0x8e88, // 0.556757 
                    0x5307, // 0.324324 
                    0x1bad, // 0.108108 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ane
            case 0x00656e61:
            {
                const  data_chars   = "kgscndtmihzybojrpauefw";
                const data_weights = [
                    0x1c72, // 0.111111 
                    0x1862, // 0.095238 
                    0x1555, // 0.083333 
                    0x134d, // 0.075397 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1145, // 0.067460 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0d35, // 0.051587 
                    0x0d35, // 0.051587 
                    0x0b2d, // 0.043651 
                    0x0925, // 0.035714 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x0514, // 0.019841 
                    0x0514, // 0.019841 
                    0x030c, // 0.011905 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                    0x0104, // 0.003968 
                    0x0104, // 0.003968 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anf
            case 0x00666e61:
            {
                return 'u';
            }
            break;

            // ang
            case 0x00676e61:
            {
                const  data_chars   = "aoueyiwl";
                const data_weights = [
                    0x5dde, // 0.366667 
                    0x40da, // 0.253333 
                    0x258c, // 0.146667 
                    0x23d7, // 0.140000 
                    0x0da7, // 0.053333 
                    0x06d4, // 0.026667 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anh
            case 0x00686e61:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ani
            case 0x00696e61:
            {
                const  data_chars   = "smcgwnykhtjudaoizbfer";
                const data_weights = [
                    0x5241, // 0.321311 
                    0x1d61, // 0.114754 
                    0x1d61, // 0.114754 
                    0x1425, // 0.078689 
                    0x0ff3, // 0.062295 
                    0x0d6e, // 0.052459 
                    0x093c, // 0.036066 
                    0x078e, // 0.029508 
                    0x06b7, // 0.026230 
                    0x05e0, // 0.022951 
                    0x05e0, // 0.022951 
                    0x05e0, // 0.022951 
                    0x0509, // 0.019672 
                    0x0509, // 0.019672 
                    0x0432, // 0.016393 
                    0x0285, // 0.009836 
                    0x0285, // 0.009836 
                    0x01ae, // 0.006557 
                    0x01ae, // 0.006557 
                    0x00d7, // 0.003279 
                    0x00d7, // 0.003279 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anj
            case 0x006a6e61:
            {
                const  data_chars   = "iouay";
                const data_weights = [
                    0x75c3, // 0.460000 
                    0x53a0, // 0.326667 
                    0x2741, // 0.153333 
                    0x0da7, // 0.053333 
                    0x01b5, // 0.006667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ank
            case 0x006b6e61:
            {
                const  data_chars   = "oeaiuy";
                const data_weights = [
                    0x4c06, // 0.296970 
                    0x48ec, // 0.284848 
                    0x364e, // 0.212121 
                    0x142b, // 0.078788 
                    0x1111, // 0.066667 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anm
            case 0x006d6e61:
            {
                const  data_chars   = "aoeuyi";
                const data_weights = [
                    0x90b2, // 0.565217 
                    0x28d0, // 0.159420 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0ed7, // 0.057971 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ann
            case 0x006e6e61:
            {
                const  data_chars   = "oaeuiydn";
                const data_weights = [
                    0x921a, // 0.570707 
                    0x3b7a, // 0.232323 
                    0x19dc, // 0.101010 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x0677, // 0.025253 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ano
            case 0x006f6e61:
            {
                const  data_chars   = "smkhutcydbginorejwzaf";
                const data_weights = [
                    0x30d2, // 0.190698 
                    0x2582, // 0.146512 
                    0x2320, // 0.137209 
                    0x1738, // 0.090698 
                    0x0e4a, // 0.055814 
                    0x0b50, // 0.044186 
                    0x0a1f, // 0.039535 
                    0x0a1f, // 0.039535 
                    0x0a1f, // 0.039535 
                    0x093a, // 0.036047 
                    0x08a2, // 0.033721 
                    0x07bd, // 0.030233 
                    0x0640, // 0.024419 
                    0x050f, // 0.019767 
                    0x0477, // 0.017442 
                    0x042b, // 0.016279 
                    0x0392, // 0.013953 
                    0x0262, // 0.009302 
                    0x0215, // 0.008140 
                    0x017d, // 0.005814 
                    0x004c, // 0.001163 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anp
            case 0x00706e61:
            {
                const  data_chars   = "ouaei";
                const data_weights = [
                    0x4aed, // 0.292683 
                    0x44af, // 0.268293 
                    0x31f4, // 0.195122 
                    0x2577, // 0.146341 
                    0x18fa, // 0.097561 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anr
            case 0x00726e61:
            {
                const  data_chars   = "iaouye";
                const data_weights = [
                    0x3e94, // 0.244444 
                    0x38e4, // 0.222222 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ans
            case 0x00736e61:
            {
                const  data_chars   = "heuaoimy";
                const data_weights = [
                    0x4b18, // 0.293333 
                    0x40da, // 0.253333 
                    0x2e14, // 0.180000 
                    0x2222, // 0.133333 
                    0x1eb8, // 0.120000 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ant
            case 0x00746e61:
            {
                const  data_chars   = "aoesiz";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x5249, // 0.321429 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x06db, // 0.026786 
                    0x0249, // 0.008929 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anu
            case 0x00756e61:
            {
                const  data_chars   = "mkspnicdrht";
                const data_weights = [
                    0x6d62, // 0.427273 
                    0x5ac3, // 0.354545 
                    0x129e, // 0.072727 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anv
            case 0x00766e61:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anw
            case 0x00776e61:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // any
            case 0x00796e61:
            {
                const  data_chars   = "aout";
                const data_weights = [
                    0x64b9, // 0.393443 
                    0x5822, // 0.344262 
                    0x3ef3, // 0.245902 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // anz
            case 0x007a6e61:
            {
                const  data_chars   = "aeou";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x25ba, // 0.147368 
                    0x2056, // 0.126316 
                    0x2056, // 0.126316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aob
            case 0x00626f61:
            {
                const  data_chars   = "aeiu";
                const data_weights = [
                    0xb000, // 0.687500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoc
            case 0x00636f61:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aod
            case 0x00646f61:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xddde, // 0.866667 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoe
            case 0x00656f61:
            {
                const  data_chars   = "tb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aof
            case 0x00666f61:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aog
            case 0x00676f61:
            {
                const  data_chars   = "iaoue";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoh
            case 0x00686f61:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoi
            case 0x00696f61:
            {
                const  data_chars   = "dmscbrknw";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoj
            case 0x006a6f61:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aok
            case 0x006b6f61:
            {
                const  data_chars   = "aiueo";
                const data_weights = [
                    0xdf44, // 0.872131 
                    0x15d3, // 0.085246 
                    0x078e, // 0.029508 
                    0x01ae, // 0.006557 
                    0x01ae, // 0.006557 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aom
            case 0x006d6f61:
            {
                const  data_chars   = "aoiue";
                const data_weights = [
                    0x9715, // 0.590164 
                    0x2e2a, // 0.180328 
                    0x29f8, // 0.163934 
                    0x0c97, // 0.049180 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aon
            case 0x006e6f61:
            {
                const  data_chars   = "oaisuebc";
                const data_weights = [
                    0x78c1, // 0.471698 
                    0x2b79, // 0.169811 
                    0x1cfb, // 0.113208 
                    0x1cfb, // 0.113208 
                    0x1352, // 0.075472 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aor
            case 0x00726f61:
            {
                const  data_chars   = "iouey";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x4bda, // 0.296296 
                    0x2f68, // 0.185185 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aos
            case 0x00736f61:
            {
                const  data_chars   = "hauoe";
                const data_weights = [
                    0x6c9b, // 0.424242 
                    0x3e10, // 0.242424 
                    0x364e, // 0.212121 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aot
            case 0x00746f61:
            {
                const  data_chars   = "oas";
                const data_weights = [
                    0x8421, // 0.516129 
                    0x4a53, // 0.290323 
                    0x318c, // 0.193548 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aou
            case 0x00756f61:
            {
                const  data_chars   = "gr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aow
            case 0x00776f61:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoy
            case 0x00796f61:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd6b6, // 0.838710 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aoz
            case 0x007a6f61:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // apa
            case 0x00617061:
            {
                const  data_chars   = "nrt";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ape
            case 0x00657061:
            {
                const  data_chars   = "rckl";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // api
            case 0x00697061:
            {
                const  data_chars   = "tkp";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // apl
            case 0x006c7061:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // apo
            case 0x006f7061:
            {
                const  data_chars   = "riknp";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // app
            case 0x00707061:
            {
                const  data_chars   = "uoeiay";
                const data_weights = [
                    0x9b92, // 0.607692 
                    0x2372, // 0.138462 
                    0x15a9, // 0.084615 
                    0x13b1, // 0.076923 
                    0x0dc9, // 0.053846 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aps
            case 0x00737061:
            {
                return 'u';
            }
            break;

            // apt
            case 0x00747061:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // apu
            case 0x00757061:
            {
                const  data_chars   = "rpsac";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aqu
            case 0x00757161:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ara
            case 0x00617261:
            {
                const  data_chars   = "mskicgndtbyhzuojwrfape";
                const data_weights = [
                    0x21b5, // 0.131661 
                    0x1d6d, // 0.114943 
                    0x1d28, // 0.113898 
                    0x1c16, // 0.109718 
                    0x1634, // 0.086729 
                    0x111f, // 0.066876 
                    0x0eb6, // 0.057471 
                    0x0e72, // 0.056426 
                    0x0da5, // 0.053292 
                    0x0d1c, // 0.051202 
                    0x09e6, // 0.038662 
                    0x0739, // 0.028213 
                    0x066c, // 0.025078 
                    0x0448, // 0.016719 
                    0x03bf, // 0.014629 
                    0x02ad, // 0.010449 
                    0x0224, // 0.008359 
                    0x0156, // 0.005225 
                    0x00cd, // 0.003135 
                    0x00cd, // 0.003135 
                    0x00cd, // 0.003135 
                    0x0044, // 0.001045 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arb
            case 0x00627261:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arc
            case 0x00637261:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ard
            case 0x00647261:
            {
                const  data_chars   = "eoy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // are
            case 0x00657261:
            {
                const  data_chars   = "nkyrtimgbhaopwscd";
                const data_weights = [
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1cf0, // 0.113043 
                    0x1cf0, // 0.113043 
                    0x187d, // 0.095652 
                    0x1643, // 0.086957 
                    0x1409, // 0.078261 
                    0x0d5b, // 0.052174 
                    0x08e8, // 0.034783 
                    0x08e8, // 0.034783 
                    0x06ae, // 0.026087 
                    0x0474, // 0.017391 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arg
            case 0x00677261:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arh
            case 0x00687261:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ari
            case 0x00697261:
            {
                const  data_chars   = "mnksytgdbachiuzoefjwrp";
                const data_weights = [
                    0x2791, // 0.154562 
                    0x1944, // 0.098696 
                    0x175c, // 0.091248 
                    0x1480, // 0.080074 
                    0x1480, // 0.080074 
                    0x138c, // 0.076350 
                    0x0f41, // 0.059590 
                    0x0c65, // 0.048417 
                    0x0c65, // 0.048417 
                    0x0989, // 0.037244 
                    0x0989, // 0.037244 
                    0x081b, // 0.031657 
                    0x07a1, // 0.029795 
                    0x0633, // 0.024209 
                    0x05b8, // 0.022346 
                    0x053e, // 0.020484 
                    0x04c4, // 0.018622 
                    0x03d0, // 0.014898 
                    0x0262, // 0.009311 
                    0x01e8, // 0.007449 
                    0x016e, // 0.005587 
                    0x00f4, // 0.003724 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ark
            case 0x006b7261:
            {
                return 'e';
            }
            break;

            // arl
            case 0x006c7261:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arm
            case 0x006d7261:
            {
                const  data_chars   = "oys";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aro
            case 0x006f7261:
            {
                const  data_chars   = "mbknugcjtyzpdshe";
                const data_weights = [
                    0x2d2d, // 0.176471 
                    0x21e2, // 0.132353 
                    0x21e2, // 0.132353 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // arq
            case 0x00717261:
            {
                return 'u';
            }
            break;

            // arr
            case 0x00727261:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // art
            case 0x00747261:
            {
                const  data_chars   = "emnofi";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aru
            case 0x00757261:
            {
                const  data_chars   = "mkbgistnyhcdofwezurpja";
                const data_weights = [
                    0x2492, // 0.142857 
                    0x20dc, // 0.128364 
                    0x14ac, // 0.080745 
                    0x1424, // 0.078675 
                    0x128d, // 0.072464 
                    0x1205, // 0.070393 
                    0x117e, // 0.068323 
                    0x0d40, // 0.051760 
                    0x0c31, // 0.047619 
                    0x0ba9, // 0.045549 
                    0x0a9a, // 0.041408 
                    0x0a9a, // 0.041408 
                    0x087b, // 0.033126 
                    0x054d, // 0.020704 
                    0x03b6, // 0.014493 
                    0x032e, // 0.012422 
                    0x032e, // 0.012422 
                    0x02a6, // 0.010352 
                    0x02a6, // 0.010352 
                    0x021f, // 0.008282 
                    0x0197, // 0.006211 
                    0x0088, // 0.002070 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ary
            case 0x00797261:
            {
                const  data_chars   = "ousa";
                const data_weights = [
                    0x8788, // 0.529412 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asa
            case 0x00617361:
            {
                const  data_chars   = "kwmnghtirsdbyzojcuefa";
                const data_weights = [
                    0x56a6, // 0.338476 
                    0x2489, // 0.142719 
                    0x13c0, // 0.077146 
                    0x1148, // 0.067502 
                    0x0f4e, // 0.059788 
                    0x0f0f, // 0.058824 
                    0x0cd6, // 0.050145 
                    0x0a1f, // 0.039537 
                    0x0826, // 0.031823 
                    0x06aa, // 0.026037 
                    0x05ed, // 0.023144 
                    0x052f, // 0.020251 
                    0x0472, // 0.017358 
                    0x0375, // 0.013500 
                    0x0239, // 0.008679 
                    0x01fa, // 0.007715 
                    0x01fa, // 0.007715 
                    0x00fd, // 0.003857 
                    0x00fd, // 0.003857 
                    0x003f, // 0.000964 
                    0x003f, // 0.000964 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asc
            case 0x00637361:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ase
            case 0x00657361:
            {
                const  data_chars   = "ngdbmckrtihuysoz";
                const data_weights = [
                    0x464f, // 0.274648 
                    0x1cd8, // 0.112676 
                    0x15a2, // 0.084507 
                    0x15a2, // 0.084507 
                    0x13d5, // 0.077465 
                    0x1207, // 0.070423 
                    0x1207, // 0.070423 
                    0x0c9f, // 0.049296 
                    0x0904, // 0.035211 
                    0x0904, // 0.035211 
                    0x0569, // 0.021127 
                    0x0569, // 0.021127 
                    0x0569, // 0.021127 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ash
            case 0x00687361:
            {
                const  data_chars   = "iouae";
                const data_weights = [
                    0xf55d, // 0.958457 
                    0x0667, // 0.025011 
                    0x0395, // 0.013989 
                    0x008b, // 0.002120 
                    0x001c, // 0.000424 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asi
            case 0x00697361:
            {
                const  data_chars   = "admn";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ask
            case 0x006b7361:
            {
                const  data_chars   = "iua";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asm
            case 0x006d7361:
            {
                const  data_chars   = "aei";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asn
            case 0x006e7361:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aso
            case 0x006f7361:
            {
                const  data_chars   = "nkbedrzgusijmayo";
                const data_weights = [
                    0x3ad0, // 0.229730 
                    0x2298, // 0.135135 
                    0x1f23, // 0.121622 
                    0x114c, // 0.067568 
                    0x114c, // 0.067568 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asp
            case 0x00707361:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ass
            case 0x00737361:
            {
                const  data_chars   = "haoeu";
                const data_weights = [
                    0x6762, // 0.403846 
                    0x5d8a, // 0.365385 
                    0x189e, // 0.096154 
                    0x189e, // 0.096154 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ast
            case 0x00747361:
            {
                const  data_chars   = "ouyeil";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asu
            case 0x00757361:
            {
                const  data_chars   = "mgkntdhzyoirjsbcwuepfa";
                const data_weights = [
                    0x29ea, // 0.163728 
                    0x27fb, // 0.156171 
                    0x2567, // 0.146096 
                    0x1881, // 0.095718 
                    0x1169, // 0.068010 
                    0x0ce6, // 0.050378 
                    0x0af6, // 0.042821 
                    0x09ac, // 0.037783 
                    0x0862, // 0.032746 
                    0x07bd, // 0.030227 
                    0x0718, // 0.027708 
                    0x0718, // 0.027708 
                    0x05ce, // 0.022670 
                    0x0529, // 0.020151 
                    0x0529, // 0.020151 
                    0x03de, // 0.015113 
                    0x0339, // 0.012594 
                    0x0294, // 0.010076 
                    0x0294, // 0.010076 
                    0x014a, // 0.005038 
                    0x00a5, // 0.002519 
                    0x00a5, // 0.002519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // asy
            case 0x00797361:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ata
            case 0x00617461:
            {
                const  data_chars   = "knmrscgitbhydzojeuwfa";
                const data_weights = [
                    0x341a, // 0.203523 
                    0x2955, // 0.161448 
                    0x19cd, // 0.100783 
                    0x194d, // 0.098826 
                    0x1149, // 0.067515 
                    0x0fc8, // 0.061644 
                    0x0e87, // 0.056751 
                    0x0cc6, // 0.049902 
                    0x0a05, // 0.039139 
                    0x0884, // 0.033268 
                    0x0583, // 0.021526 
                    0x0503, // 0.019569 
                    0x0503, // 0.019569 
                    0x0402, // 0.015656 
                    0x0382, // 0.013699 
                    0x0342, // 0.012720 
                    0x0241, // 0.008806 
                    0x0181, // 0.005871 
                    0x0141, // 0.004892 
                    0x0101, // 0.003914 
                    0x0040, // 0.000978 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // atc
            case 0x00637461:
            {
                const  data_chars   = "ho";
                const data_weights = [
                    0xf555, // 0.958333 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ate
            case 0x00657461:
            {
                const  data_chars   = "nrgmkiscbyhtdoawfzeu";
                const data_weights = [
                    0x34a3, // 0.205607 
                    0x22b1, // 0.135514 
                    0x1cb6, // 0.112150 
                    0x16bb, // 0.088785 
                    0x1324, // 0.074766 
                    0x1324, // 0.074766 
                    0x0d29, // 0.051402 
                    0x0992, // 0.037383 
                    0x0860, // 0.032710 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                    0x04c9, // 0.018692 
                    0x0397, // 0.014019 
                    0x0397, // 0.014019 
                    0x0397, // 0.014019 
                    0x0397, // 0.014019 
                    0x0132, // 0.004673 
                    0x0132, // 0.004673 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ath
            case 0x00687461:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ati
            case 0x00697461:
            {
                const  data_chars   = "obc";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // atk
            case 0x006b7461:
            {
                return 'a';
            }
            break;

            // atn
            case 0x006e7461:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ato
            case 0x006f7461:
            {
                const  data_chars   = "mrkncygsbiduztheojfwap";
                const data_weights = [
                    0x2e50, // 0.180905 
                    0x20ce, // 0.128141 
                    0x1c4d, // 0.110553 
                    0x1728, // 0.090452 
                    0x1495, // 0.080402 
                    0x10b9, // 0.065327 
                    0x1015, // 0.062814 
                    0x0aef, // 0.042714 
                    0x09a6, // 0.037688 
                    0x09a6, // 0.037688 
                    0x0713, // 0.027638 
                    0x066f, // 0.025126 
                    0x05ca, // 0.022613 
                    0x0525, // 0.020101 
                    0x0481, // 0.017588 
                    0x03dc, // 0.015075 
                    0x0293, // 0.010050 
                    0x01ee, // 0.007538 
                    0x01ee, // 0.007538 
                    0x0149, // 0.005025 
                    0x00a5, // 0.002513 
                    0x00a5, // 0.002513 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // atr
            case 0x00727461:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ats
            case 0x00737461:
            {
                const  data_chars   = "uih";
                const data_weights = [
                    0xffa6, // 0.998631 
                    0x002d, // 0.000684 
                    0x002d, // 0.000684 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // att
            case 0x00747461:
            {
                const  data_chars   = "aeos";
                const data_weights = [
                    0x8421, // 0.516129 
                    0x4842, // 0.282258 
                    0x273a, // 0.153226 
                    0x0c63, // 0.048387 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // atu
            case 0x00757461:
            {
                const  data_chars   = "irs";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aub
            case 0x00627561:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // auc
            case 0x00637561:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aud
            case 0x00647561:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aue
            case 0x00657561:
            {
                const  data_chars   = "nmt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aug
            case 0x00677561:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // auj
            case 0x006a7561:
            {
                const  data_chars   = "ik";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // auk
            case 0x006b7561:
            {
                const  data_chars   = "iue";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aum
            case 0x006d7561:
            {
                const  data_chars   = "iae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aun
            case 0x006e7561:
            {
                const  data_chars   = "enbmost";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aup
            case 0x00707561:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aur
            case 0x00727561:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xfdf8, // 0.992064 
                    0x0208, // 0.007937 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aus
            case 0x00737561:
            {
                const  data_chars   = "hutao";
                const data_weights = [
                    0xb65b, // 0.712329 
                    0x3b9e, // 0.232877 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aut
            case 0x00747561:
            {
                const  data_chars   = "aos";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // auw
            case 0x00777561:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // auz
            case 0x007a7561:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ava
            case 0x00617661:
            {
                const  data_chars   = "nl";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ave
            case 0x00657661:
            {
                const  data_chars   = "lh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // awa
            case 0x00617761:
            {
                const  data_chars   = "crmstngdkbhzjiuyowafev";
                const data_weights = [
                    0x2adf, // 0.167472 
                    0x2866, // 0.157810 
                    0x16ac, // 0.088567 
                    0x1506, // 0.082126 
                    0x132b, // 0.074879 
                    0x10e7, // 0.066023 
                    0x0f41, // 0.059581 
                    0x0e39, // 0.055556 
                    0x0c5e, // 0.048309 
                    0x09b0, // 0.037842 
                    0x07d5, // 0.030596 
                    0x0737, // 0.028180 
                    0x05fa, // 0.023349 
                    0x05c5, // 0.022544 
                    0x04f2, // 0.019324 
                    0x03b6, // 0.014493 
                    0x0244, // 0.008857 
                    0x0108, // 0.004026 
                    0x0108, // 0.004026 
                    0x00d3, // 0.003221 
                    0x009e, // 0.002415 
                    0x0035, // 0.000805 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // awd
            case 0x00647761:
            {
                return 'a';
            }
            break;

            // awg
            case 0x00677761:
            {
                return 'u';
            }
            break;

            // aya
            case 0x00617961:
            {
                const  data_chars   = "mstnkcbgdhrozwuifajy";
                const data_weights = [
                    0x68ae, // 0.408907 
                    0x3747, // 0.215924 
                    0x19e9, // 0.101215 
                    0x0f8c, // 0.060729 
                    0x0c17, // 0.047233 
                    0x0a05, // 0.039136 
                    0x079a, // 0.029690 
                    0x0638, // 0.024291 
                    0x05e0, // 0.022942 
                    0x026b, // 0.009447 
                    0x0213, // 0.008097 
                    0x0213, // 0.008097 
                    0x01ba, // 0.006748 
                    0x0162, // 0.005398 
                    0x0109, // 0.004049 
                    0x00b1, // 0.002699 
                    0x0058, // 0.001350 
                    0x0058, // 0.001350 
                    0x0058, // 0.001350 
                    0x0058, // 0.001350 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aye
            case 0x00657961:
            {
                const  data_chars   = "dr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ayo
            case 0x006f7961:
            {
                const  data_chars   = "skinrubtojdg";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x2aab, // 0.166667 
                    0x1a13, // 0.101852 
                    0x17b4, // 0.092593 
                    0x17b4, // 0.092593 
                    0x0bda, // 0.046296 
                    0x097b, // 0.037037 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ays
            case 0x00737961:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ayu
            case 0x00757961:
            {
                const  data_chars   = "kmgtrzbncisheu";
                const data_weights = [
                    0x5ef8, // 0.370968 
                    0x1ce7, // 0.112903 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0c63, // 0.048387 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aza
            case 0x00617a61:
            {
                const  data_chars   = "wktmnirbeshadcogf";
                const data_weights = [
                    0x5866, // 0.345304 
                    0x5592, // 0.334254 
                    0x180b, // 0.093923 
                    0x13cd, // 0.077348 
                    0x07c7, // 0.030387 
                    0x0712, // 0.027624 
                    0x04f3, // 0.019337 
                    0x04f3, // 0.019337 
                    0x0389, // 0.013812 
                    0x02d4, // 0.011050 
                    0x021f, // 0.008287 
                    0x016a, // 0.005525 
                    0x00b5, // 0.002762 
                    0x00b5, // 0.002762 
                    0x00b5, // 0.002762 
                    0x00b5, // 0.002762 
                    0x00b5, // 0.002762 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // aze
            case 0x00657a61:
            {
                const  data_chars   = "nkmcgtdyhr";
                const data_weights = [
                    0x430c, // 0.261905 
                    0x2aab, // 0.166667 
                    0x2492, // 0.142857 
                    0x1e7a, // 0.119048 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // azo
            case 0x006f7a61:
            {
                const  data_chars   = "nekisj";
                const data_weights = [
                    0xac00, // 0.671875 
                    0x3800, // 0.218750 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // azu
            case 0x00757a61:
            {
                const  data_chars   = "mkrsncthyeoigfab";
                const data_weights = [
                    0x4afb, // 0.292887 
                    0x4269, // 0.259414 
                    0x246b, // 0.142259 
                    0x0eff, // 0.058577 
                    0x0ded, // 0.054393 
                    0x0cdb, // 0.050209 
                    0x0ab6, // 0.041841 
                    0x077f, // 0.029289 
                    0x066d, // 0.025105 
                    0x0224, // 0.008368 
                    0x0224, // 0.008368 
                    0x0224, // 0.008368 
                    0x0224, // 0.008368 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // azz
            case 0x007a7a61:
            {
                return 'o';
            }
            break;

            } // switch _u32
        } // a
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'b':
        {
            switch ( trigram_u32 )
            {
            // baa
            case 0x00616162:
            {
                const  data_chars   = "sig";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bab
            case 0x00626162:
            {
                const  data_chars   = "aeb";
                const data_weights = [
                    0xeeef, // 0.933333 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bac
            case 0x00636162:
            {
                const  data_chars   = "hck";
                const data_weights = [
                    0xf287, // 0.947368 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bad
            case 0x00646162:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x8f5c, // 0.560000 
                    0x5c29, // 0.360000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bae
            case 0x00656162:
            {
                const  data_chars   = "nm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // baf
            case 0x00666162:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bag
            case 0x00676162:
            {
                const  data_chars   = "augoi";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bah
            case 0x00686162:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bai
            case 0x00696162:
            {
                const  data_chars   = "ksrtconebmdghj";
                const data_weights = [
                    0x3832, // 0.219512 
                    0x3832, // 0.219512 
                    0x18fa, // 0.097561 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // baj
            case 0x006a6162:
            {
                const  data_chars   = "ioju";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bak
            case 0x006b6162:
            {
                const  data_chars   = "uaioek";
                const data_weights = [
                    0x3d17, // 0.238636 
                    0x3746, // 0.215909 
                    0x3174, // 0.193182 
                    0x28ba, // 0.159091 
                    0x2000, // 0.125000 
                    0x1174, // 0.068182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bal
            case 0x006c6162:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bam
            case 0x006d6162:
            {
                const  data_chars   = "aieobu";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4000, // 0.250000 
                    0x3249, // 0.196429 
                    0x0db7, // 0.053571 
                    0x0db7, // 0.053571 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ban
            case 0x006e6162:
            {
                const  data_chars   = "acosedgznybtujwkirmhp";
                const data_weights = [
                    0x3b14, // 0.230769 
                    0x1e86, // 0.119231 
                    0x1a96, // 0.103846 
                    0x13b1, // 0.076923 
                    0x10bd, // 0.065385 
                    0x0fc1, // 0.061538 
                    0x0fc1, // 0.061538 
                    0x0ccd, // 0.050000 
                    0x0bd1, // 0.046154 
                    0x09d9, // 0.038462 
                    0x07e0, // 0.030769 
                    0x05e8, // 0.023077 
                    0x04ec, // 0.019231 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x00fc, // 0.003846 
                    0x00fc, // 0.003846 
                    0x00fc, // 0.003846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bao
            case 0x006f6162:
            {
                const  data_chars   = "ckmry";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bap
            case 0x00706162:
            {
                const  data_chars   = "pt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bar
            case 0x00726162:
            {
                const  data_chars   = "auieoy";
                const data_weights = [
                    0x79bc, // 0.475524 
                    0x7293, // 0.447552 
                    0x0ec5, // 0.057692 
                    0x023d, // 0.008741 
                    0x023d, // 0.008741 
                    0x0073, // 0.001748 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bas
            case 0x00736162:
            {
                const  data_chars   = "haeuos";
                const data_weights = [
                    0xd3c1, // 0.827160 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0652, // 0.024691 
                    0x0195, // 0.006173 
                    0x00ca, // 0.003086 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bat
            case 0x00746162:
            {
                const  data_chars   = "aostech";
                const data_weights = [
                    0xdc88, // 0.861446 
                    0x0c56, // 0.048193 
                    0x0acc, // 0.042169 
                    0x04a0, // 0.018072 
                    0x04a0, // 0.018072 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bau
            case 0x00756162:
            {
                const  data_chars   = "srcn";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // baw
            case 0x00776162:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bay
            case 0x00796162:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0xfd96, // 0.990566 
                    0x026a, // 0.009434 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // baz
            case 0x007a6162:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bba
            case 0x00616262:
            {
                const  data_chars   = "rt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bbe
            case 0x00656262:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bea
            case 0x00616562:
            {
                const  data_chars   = "crks";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // beb
            case 0x00626562:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bec
            case 0x00636562:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bed
            case 0x00646562:
            {
                const  data_chars   = "aod";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bee
            case 0x00656562:
            {
                const  data_chars   = "rs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bef
            case 0x00666562:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // beg
            case 0x00676562:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // beh
            case 0x00686562:
            {
                const  data_chars   = "oia";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bei
            case 0x00696562:
            {
                const  data_chars   = "gkcs";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bej
            case 0x006a6562:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bek
            case 0x006b6562:
            {
                const  data_chars   = "aouki";
                const data_weights = [
                    0x51ec, // 0.320000 
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bel
            case 0x006c6562:
            {
                const  data_chars   = "lcm";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bem
            case 0x006d6562:
            {
                const  data_chars   = "aiou";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ben
            case 0x006e6562:
            {
                const  data_chars   = "toizkbjasgcern";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x2492, // 0.142857 
                    0x2082, // 0.126984 
                    0x2082, // 0.126984 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // beo
            case 0x006f6562:
            {
                const  data_chars   = "ktbm";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bep
            case 0x00706562:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ber
            case 0x00726562:
            {
                const  data_chars   = "uiagst";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bes
            case 0x00736562:
            {
                const  data_chars   = "hsuate";
                const data_weights = [
                    0x7dc1, // 0.491228 
                    0x5555, // 0.333333 
                    0x1675, // 0.087719 
                    0x0d79, // 0.052632 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bet
            case 0x00746562:
            {
                const  data_chars   = "satoech";
                const data_weights = [
                    0xe7be, // 0.905242 
                    0x0c63, // 0.048387 
                    0x06b6, // 0.026210 
                    0x0211, // 0.008065 
                    0x018c, // 0.006048 
                    0x0108, // 0.004032 
                    0x0084, // 0.002016 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // beu
            case 0x00756562:
            {
                const  data_chars   = "sn";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bew
            case 0x00776562:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bey
            case 0x00796562:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xec4f, // 0.923077 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bez
            case 0x007a6562:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bia
            case 0x00616962:
            {
                const  data_chars   = "rg";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bib
            case 0x00626962:
            {
                const  data_chars   = "aiou";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bic
            case 0x00636962:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bid
            case 0x00646962:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bie
            case 0x00656962:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bif
            case 0x00666962:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // big
            case 0x00676962:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bih
            case 0x00686962:
            {
                const  data_chars   = "ioa";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bii
            case 0x00696962:
            {
                const  data_chars   = "scm";
                const data_weights = [
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bij
            case 0x006a6962:
            {
                const  data_chars   = "ouia";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bik
            case 0x006b6962:
            {
                const  data_chars   = "iouake";
                const data_weights = [
                    0x72a0, // 0.447761 
                    0x3d22, // 0.238806 
                    0x1e91, // 0.119403 
                    0x1e91, // 0.119403 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bim
            case 0x006d6962:
            {
                const  data_chars   = "aiy";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bin
            case 0x006e6962:
            {
                const  data_chars   = "oangiksbyzde";
                const data_weights = [
                    0x53ef, // 0.327869 
                    0x25c5, // 0.147541 
                    0x2193, // 0.131148 
                    0x192e, // 0.098361 
                    0x14fc, // 0.081967 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bio
            case 0x006f6962:
            {
                const  data_chars   = "krm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bir
            case 0x00726962:
            {
                const  data_chars   = "aiuoedy";
                const data_weights = [
                    0x9f4a, // 0.622222 
                    0x2222, // 0.133333 
                    0x18a7, // 0.096296 
                    0x16c1, // 0.088889 
                    0x097b, // 0.037037 
                    0x03cb, // 0.014815 
                    0x01e5, // 0.007407 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bis
            case 0x00736962:
            {
                const  data_chars   = "hueaos";
                const data_weights = [
                    0x76db, // 0.464286 
                    0x4925, // 0.285714 
                    0x16db, // 0.089286 
                    0x1249, // 0.071429 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bit
            case 0x00746962:
            {
                const  data_chars   = "asoc";
                const data_weights = [
                    0x51b4, // 0.319149 
                    0x51b4, // 0.319149 
                    0x4c41, // 0.297872 
                    0x1057, // 0.063830 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // biu
            case 0x00756962:
            {
                const  data_chars   = "rst";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // biw
            case 0x00776962:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // biy
            case 0x00796962:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xc4ec, // 0.769231 
                    0x3b14, // 0.230769 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // biz
            case 0x007a6962:
            {
                const  data_chars   = "eafo";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bje
            case 0x00656a62:
            {
                const  data_chars   = "cr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bla
            case 0x00616c62:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bli
            case 0x00696c62:
            {
                const  data_chars   = "cd";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // blo
            case 0x006f6c62:
            {
                const  data_chars   = "sb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // blu
            case 0x00756c62:
            {
                const  data_chars   = "ef";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boa
            case 0x00616f62:
            {
                const  data_chars   = "nrt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bob
            case 0x00626f62:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boc
            case 0x00636f62:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bod
            case 0x00646f62:
            {
                const  data_chars   = "aoei";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boe
            case 0x00656f62:
            {
                const  data_chars   = "ktinr";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bof
            case 0x00666f62:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bog
            case 0x00676f62:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0xb8e4, // 0.722222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boh
            case 0x00686f62:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boi
            case 0x00696f62:
            {
                const  data_chars   = "cnszkwgfh";
                const data_weights = [
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boj
            case 0x006a6f62:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bok
            case 0x006b6f62:
            {
                const  data_chars   = "ukoaiey";
                const data_weights = [
                    0x722a, // 0.445946 
                    0x2983, // 0.162162 
                    0x1f23, // 0.121622 
                    0x1837, // 0.094595 
                    0x1837, // 0.094595 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bom
            case 0x006d6f62:
            {
                const  data_chars   = "aiemu";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bon
            case 0x006e6f62:
            {
                const  data_chars   = "oeakygsmijnzctdh";
                const data_weights = [
                    0x6cb6, // 0.424658 
                    0x188c, // 0.095890 
                    0x1189, // 0.068493 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boo
            case 0x006f6f62:
            {
                const  data_chars   = "jrt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bor
            case 0x00726f62:
            {
                const  data_chars   = "ioaueylv";
                const data_weights = [
                    0xac86, // 0.673913 
                    0x1bd3, // 0.108696 
                    0x19f9, // 0.101449 
                    0x10b2, // 0.065217 
                    0x0591, // 0.021739 
                    0x03b6, // 0.014493 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bos
            case 0x00736f62:
            {
                const  data_chars   = "haouec";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3723, // 0.215385 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bot
            case 0x00746f62:
            {
                const  data_chars   = "aostce";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x43c4, // 0.264706 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bou
            case 0x00756f62:
            {
                const  data_chars   = "rsegkn";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boy
            case 0x00796f62:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xd89e, // 0.846154 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // boz
            case 0x007a6f62:
            {
                const  data_chars   = "uae";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bpr
            case 0x00727062:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bra
            case 0x00617262:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // brg
            case 0x00677262:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bri
            case 0x00697262:
            {
                const  data_chars   = "dgc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bse
            case 0x00657362:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bst
            case 0x00747362:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bua
            case 0x00617562:
            {
                const  data_chars   = "dkt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bub
            case 0x00627562:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buc
            case 0x00637562:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfd71, // 0.990000 
                    0x028f, // 0.010000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bud
            case 0x00647562:
            {
                const  data_chars   = "aoed";
                const data_weights = [
                    0x7a6f, // 0.478261 
                    0x590b, // 0.347826 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bue
            case 0x00657562:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bug
            case 0x00677562:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buh
            case 0x00687562:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bui
            case 0x00697562:
            {
                const  data_chars   = "cwklnrz";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buj
            case 0x006a7562:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buk
            case 0x006b7562:
            {
                const  data_chars   = "uaikeoy";
                const data_weights = [
                    0x61e2, // 0.382353 
                    0x3c3c, // 0.235294 
                    0x3a5a, // 0.227941 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x01e2, // 0.007353 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bul
            case 0x006c7562:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bum
            case 0x006d7562:
            {
                const  data_chars   = "ioa";
                const data_weights = [
                    0x9746, // 0.590909 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bun
            case 0x006e7562:
            {
                const  data_chars   = "aekgsojncditbzypmrh";
                const data_weights = [
                    0x29a0, // 0.162602 
                    0x2577, // 0.146341 
                    0x1d23, // 0.113821 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x10a7, // 0.065041 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0a68, // 0.040650 
                    0x0a68, // 0.040650 
                    0x063e, // 0.024390 
                    0x042a, // 0.016260 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buo
            case 0x006f7562:
            {
                const  data_chars   = "ry";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bup
            case 0x00707562:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bur
            case 0x00727562:
            {
                const  data_chars   = "aiouey";
                const data_weights = [
                    0x5c29, // 0.360000 
                    0x4396, // 0.264000 
                    0x2b02, // 0.168000 
                    0x1cac, // 0.112000 
                    0x147b, // 0.080000 
                    0x0419, // 0.016000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bus
            case 0x00737562:
            {
                const  data_chars   = "haeuosi";
                const data_weights = [
                    0x8749, // 0.528455 
                    0x361d, // 0.211382 
                    0x1d23, // 0.113821 
                    0x10a7, // 0.065041 
                    0x0a68, // 0.040650 
                    0x0853, // 0.032520 
                    0x0215, // 0.008130 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // but
            case 0x00747562:
            {
                const  data_chars   = "oase";
                const data_weights = [
                    0x53e6, // 0.327731 
                    0x51bf, // 0.319328 
                    0x51bf, // 0.319328 
                    0x089b, // 0.033613 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buu
            case 0x00757562:
            {
                const  data_chars   = "rmnt";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buy
            case 0x00797562:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // buz
            case 0x007a7562:
            {
                const  data_chars   = "ueao";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bya
            case 0x00617962:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // byo
            case 0x006f7962:
            {
                const  data_chars   = "biudknceh";
                const data_weights = [
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // bys
            case 0x00737962:
            {
                const  data_chars   = "si";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // byu
            case 0x00757962:
            {
                const  data_chars   = "sdn";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // b
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'c':
        {
            switch ( trigram_u32 )
            {
            // cab
            case 0x00626163:
            {
                const  data_chars   = "il";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cac
            case 0x00636163:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cam
            case 0x006d6163:
            {
                const  data_chars   = "pei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // can
            case 0x006e6163:
            {
                const  data_chars   = "ay";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cap
            case 0x00706163:
            {
                const  data_chars   = "iste";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // car
            case 0x00726163:
            {
                const  data_chars   = "elbir";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cas
            case 0x00736163:
            {
                const  data_chars   = "at";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cat
            case 0x00746163:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cch
            case 0x00686363:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ccu
            case 0x00756363:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cea
            case 0x00616563:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ceb
            case 0x00626563:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cec
            case 0x00636563:
            {
                const  data_chars   = "oh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cel
            case 0x006c6563:
            {
                const  data_chars   = "lb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cem
            case 0x006d6563:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cen
            case 0x006e6563:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cer
            case 0x00726563:
            {
                const  data_chars   = "ity";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cet
            case 0x00746563:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cfa
            case 0x00616663:
            {
                const  data_chars   = "ob";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cha
            case 0x00616863:
            {
                const  data_chars   = "rynskguptbmcewji";
                const data_weights = [
                    0x39ed, // 0.226277 
                    0x3095, // 0.189781 
                    0x3095, // 0.189781 
                    0x12b0, // 0.072993 
                    0x12b0, // 0.072993 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0779, // 0.029197 
                    0x0779, // 0.029197 
                    0x0779, // 0.029197 
                    0x03bd, // 0.014599 
                    0x03bd, // 0.014599 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chb
            case 0x00626863:
            {
                return 'o';
            }
            break;

            // che
            case 0x00656863:
            {
                const  data_chars   = "knp";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chi
            case 0x00696863:
            {
                const  data_chars   = "nkmgbydcrshtjzaiouwepfv";
                const data_weights = [
                    0x2343, // 0.137734 
                    0x1f45, // 0.122141 
                    0x17af, // 0.092516 
                    0x1749, // 0.090956 
                    0x14e4, // 0.081601 
                    0x103c, // 0.063410 
                    0x0ee7, // 0.058212 
                    0x0c1c, // 0.047297 
                    0x0b93, // 0.045218 
                    0x0a1d, // 0.039501 
                    0x09d9, // 0.038462 
                    0x0884, // 0.033264 
                    0x0796, // 0.029626 
                    0x0597, // 0.021830 
                    0x0575, // 0.021310 
                    0x0530, // 0.020270 
                    0x0420, // 0.016112 
                    0x030f, // 0.011954 
                    0x0243, // 0.008836 
                    0x0243, // 0.008836 
                    0x0177, // 0.005717 
                    0x0133, // 0.004678 
                    0x0022, // 0.000520 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chn
            case 0x006e6863:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cho
            case 0x006f6863:
            {
                const  data_chars   = "msukrjdbngfyzotehcai";
                const data_weights = [
                    0x2ea3, // 0.182171 
                    0x20bf, // 0.127907 
                    0x20bf, // 0.127907 
                    0x1bc8, // 0.108527 
                    0x12da, // 0.073643 
                    0x0ee2, // 0.058140 
                    0x0de4, // 0.054264 
                    0x0de4, // 0.054264 
                    0x08ee, // 0.034884 
                    0x07f0, // 0.031008 
                    0x06f2, // 0.027132 
                    0x05f4, // 0.023256 
                    0x04f6, // 0.019380 
                    0x04f6, // 0.019380 
                    0x03f8, // 0.015504 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x00fe, // 0.003876 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chr
            case 0x00726863:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chs
            case 0x00736863:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chu
            case 0x00756863:
            {
                const  data_chars   = "ougsknrbzdmjtyeachwi";
                const data_weights = [
                    0x5231, // 0.321053 
                    0x2056, // 0.126316 
                    0x1841, // 0.094737 
                    0x102b, // 0.063158 
                    0x0d79, // 0.052632 
                    0x0c20, // 0.047368 
                    0x0c20, // 0.047368 
                    0x0ac7, // 0.042105 
                    0x0816, // 0.031579 
                    0x0816, // 0.031579 
                    0x0816, // 0.031579 
                    0x0816, // 0.031579 
                    0x040b, // 0.015789 
                    0x040b, // 0.015789 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // chy
            case 0x00796863:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cia
            case 0x00616963:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cie
            case 0x00656963:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cif
            case 0x00666963:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cim
            case 0x006d6963:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cin
            case 0x006e6963:
            {
                const  data_chars   = "eq";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cip
            case 0x00706963:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cir
            case 0x00726963:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cis
            case 0x00736963:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cit
            case 0x00746963:
            {
                const  data_chars   = "yai";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ciy
            case 0x00796963:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cla
            case 0x00616c63:
            {
                const  data_chars   = "is";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cle
            case 0x00656c63:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cli
            case 0x00696c63:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cni
            case 0x00696e63:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // coe
            case 0x00656f63:
            {
                const  data_chars   = "ub";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cok
            case 0x006b6f63:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // col
            case 0x006c6f63:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // com
            case 0x006d6f63:
            {
                const  data_chars   = "so";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // con
            case 0x006e6f63:
            {
                const  data_chars   = "tcrsdi";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cop
            case 0x00706f63:
            {
                const  data_chars   = "aep";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cor
            case 0x00726f63:
            {
                const  data_chars   = "erad";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cos
            case 0x00736f63:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cot
            case 0x00746f63:
            {
                const  data_chars   = "et";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cou
            case 0x00756f63:
            {
                const  data_chars   = "rn";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cov
            case 0x00766f63:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cra
            case 0x00617263:
            {
                const  data_chars   = "fa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cre
            case 0x00657263:
            {
                const  data_chars   = "aetc";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cro
            case 0x006f7263:
            {
                const  data_chars   = "sw";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cti
            case 0x00697463:
            {
                const  data_chars   = "ov";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cto
            case 0x006f7463:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ctu
            case 0x00757463:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cue
            case 0x00657563:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cui
            case 0x00697563:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cul
            case 0x006c7563:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cuo
            case 0x006f7563:
            {
                const  data_chars   = "rb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cur
            case 0x00727563:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cus
            case 0x00737563:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cut
            case 0x00747563:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // cyp
            case 0x00707963:
            {
                const  data_chars   = "rl";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // c
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'd':
        {
            switch ( trigram_u32 )
            {
            // daa
            case 0x00616164:
            {
                const  data_chars   = "ks";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dab
            case 0x00626164:
            {
                const  data_chars   = "auoie";
                const data_weights = [
                    0xb13b, // 0.692308 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dac
            case 0x00636164:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dad
            case 0x00646164:
            {
                const  data_chars   = "oadru";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dae
            case 0x00656164:
            {
                const  data_chars   = "nks";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // daf
            case 0x00666164:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dag
            case 0x00676164:
            {
                const  data_chars   = "aoiu";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x2095, // 0.127273 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dah
            case 0x00686164:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6800, // 0.406250 
                    0x1800, // 0.093750 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dai
            case 0x00696164:
            {
                const  data_chars   = "rskmnjgctbhdyziofaewul";
                const data_weights = [
                    0x41b7, // 0.256705 
                    0x170d, // 0.090038 
                    0x168f, // 0.088123 
                    0x168f, // 0.088123 
                    0x1320, // 0.074713 
                    0x11a8, // 0.068966 
                    0x0cc0, // 0.049808 
                    0x0b48, // 0.044061 
                    0x0aca, // 0.042146 
                    0x0951, // 0.036398 
                    0x08d4, // 0.034483 
                    0x07d9, // 0.030651 
                    0x0660, // 0.024904 
                    0x04e7, // 0.019157 
                    0x0274, // 0.009579 
                    0x0274, // 0.009579 
                    0x0274, // 0.009579 
                    0x01f6, // 0.007663 
                    0x0179, // 0.005747 
                    0x00fb, // 0.003831 
                    0x00fb, // 0.003831 
                    0x007e, // 0.001916 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // daj
            case 0x006a6164:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x2e8c, // 0.181818 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dak
            case 0x006b6164:
            {
                const  data_chars   = "eaiouy";
                const data_weights = [
                    0x5e9c, // 0.369565 
                    0x5216, // 0.320652 
                    0x34df, // 0.206522 
                    0x0f4e, // 0.059783 
                    0x09bd, // 0.038043 
                    0x0164, // 0.005435 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dam
            case 0x006d6164:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x8788, // 0.529412 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dan
            case 0x006e6164:
            {
                const  data_chars   = "ioancbgsuktmdjyrzh";
                const data_weights = [
                    0x9e2e, // 0.617886 
                    0x1dd5, // 0.116531 
                    0x18fa, // 0.097561 
                    0x063e, // 0.024390 
                    0x058d, // 0.021680 
                    0x058d, // 0.021680 
                    0x0378, // 0.013550 
                    0x0378, // 0.013550 
                    0x0378, // 0.013550 
                    0x02c6, // 0.010840 
                    0x02c6, // 0.010840 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0163, // 0.005420 
                    0x00b2, // 0.002710 
                    0x00b2, // 0.002710 
                    0x00b2, // 0.002710 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dao
            case 0x006f6164:
            {
                const  data_chars   = "kimn";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dap
            case 0x00706164:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dar
            case 0x00726164:
            {
                const  data_chars   = "ieauo";
                const data_weights = [
                    0x51ec, // 0.320000 
                    0x4444, // 0.266667 
                    0x369d, // 0.213333 
                    0x258c, // 0.146667 
                    0x0da7, // 0.053333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // das
            case 0x00736164:
            {
                const  data_chars   = "haue";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x42f4, // 0.261538 
                    0x1b92, // 0.107692 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dat
            case 0x00746164:
            {
                const  data_chars   = "esaotc";
                const data_weights = [
                    0xb9d6, // 0.725926 
                    0x1e57, // 0.118519 
                    0x14dc, // 0.081481 
                    0x0d46, // 0.051852 
                    0x03cb, // 0.014815 
                    0x01e5, // 0.007407 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dau
            case 0x00756164:
            {
                const  data_chars   = "erc";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // daw
            case 0x00776164:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // day
            case 0x00796164:
            {
                const  data_chars   = "aous";
                const data_weights = [
                    0x9365, // 0.575758 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // daz
            case 0x007a6164:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dcr
            case 0x00726364:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dda
            case 0x00616464:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ddh
            case 0x00686464:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ddl
            case 0x006c6464:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dea
            case 0x00616564:
            {
                const  data_chars   = "ijksu";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // deb
            case 0x00626564:
            {
                const  data_chars   = "auy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dec
            case 0x00636564:
            {
                const  data_chars   = "hk";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ded
            case 0x00646564:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dee
            case 0x00656564:
            {
                const  data_chars   = "kt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // def
            case 0x00666564:
            {
                const  data_chars   = "er";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // deg
            case 0x00676564:
            {
                const  data_chars   = "auoi";
                const data_weights = [
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // deh
            case 0x00686564:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dei
            case 0x00696564:
            {
                const  data_chars   = "rkn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dej
            case 0x006a6564:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dek
            case 0x006b6564:
            {
                const  data_chars   = "iaoeu";
                const data_weights = [
                    0x96f9, // 0.589744 
                    0x3483, // 0.205128 
                    0x2762, // 0.153846 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // del
            case 0x006c6564:
            {
                const  data_chars   = "ub";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dem
            case 0x006d6564:
            {
                const  data_chars   = "aioupem";
                const data_weights = [
                    0x5c72, // 0.361111 
                    0x38e4, // 0.222222 
                    0x31c7, // 0.194444 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // den
            case 0x006e6564:
            {
                const  data_chars   = "osctmjkpwgbadeyirhnu";
                const data_weights = [
                    0x2938, // 0.161017 
                    0x22b6, // 0.135593 
                    0x1c34, // 0.110169 
                    0x15b2, // 0.084746 
                    0x115b, // 0.067797 
                    0x0f30, // 0.059322 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0ad9, // 0.042373 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0682, // 0.025424 
                    0x0682, // 0.025424 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // deo
            case 0x006f6564:
            {
                const  data_chars   = "dkmt";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dep
            case 0x00706564:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // der
            case 0x00726564:
            {
                const  data_chars   = "auign";
                const data_weights = [
                    0xe4d9, // 0.893939 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // des
            case 0x00736564:
            {
                const  data_chars   = "uhao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x4990, // 0.287356 
                    0x08d4, // 0.034483 
                    0x02f1, // 0.011494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // det
            case 0x00746564:
            {
                const  data_chars   = "oase";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // deu
            case 0x00756564:
            {
                const  data_chars   = "rc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dev
            case 0x00766564:
            {
                return 'e';
            }
            break;

            // dew
            case 0x00776564:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dey
            case 0x00796564:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dez
            case 0x007a6564:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dge
            case 0x00656764:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dhi
            case 0x00696864:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dho
            case 0x006f6864:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dia
            case 0x00616964:
            {
                const  data_chars   = "ol";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dib
            case 0x00626964:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dic
            case 0x00636964:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // die
            case 0x00656964:
            {
                const  data_chars   = "nst";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // din
            case 0x006e6964:
            {
                const  data_chars   = "ge";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dir
            case 0x00726964:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dis
            case 0x00736964:
            {
                const  data_chars   = "tnosceh";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // diu
            case 0x00756964:
            {
                const  data_chars   = "mb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // div
            case 0x00766964:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // diz
            case 0x007a6964:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dji
            case 0x00696a64:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dla
            case 0x00616c64:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doa
            case 0x00616f64:
            {
                const  data_chars   = "ikgn";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dob
            case 0x00626f64:
            {
                const  data_chars   = "auioy";
                const data_weights = [
                    0xb26d, // 0.696970 
                    0x2e8c, // 0.181818 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doc
            case 0x00636f64:
            {
                const  data_chars   = "hcko";
                const data_weights = [
                    0xee8c, // 0.931818 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dod
            case 0x00646f64:
            {
                const  data_chars   = "aoer";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doe
            case 0x00656f64:
            {
                const  data_chars   = "ct";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dof
            case 0x00666f64:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dog
            case 0x00676f64:
            {
                const  data_chars   = "aouie";
                const data_weights = [
                    0xbc00, // 0.734375 
                    0x2400, // 0.140625 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doh
            case 0x00686f64:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8591, // 0.521739 
                    0x4dea, // 0.304348 
                    0x2c86, // 0.173913 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doi
            case 0x00696f64:
            {
                const  data_chars   = "ntcsdimw";
                const data_weights = [
                    0x589e, // 0.346154 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doj
            case 0x006a6f64:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xc988, // 0.787234 
                    0x3105, // 0.191489 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dok
            case 0x006b6f64:
            {
                const  data_chars   = "ouaiyek";
                const data_weights = [
                    0x4b4b, // 0.294118 
                    0x39ba, // 0.225490 
                    0x2828, // 0.156863 
                    0x20a1, // 0.127451 
                    0x1919, // 0.098039 
                    0x0c8d, // 0.049020 
                    0x0c8d, // 0.049020 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dom
            case 0x006d6f64:
            {
                const  data_chars   = "aeiouy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x373e, // 0.215789 
                    0x2dcf, // 0.178947 
                    0x12dd, // 0.073684 
                    0x0564, // 0.021053 
                    0x02b2, // 0.010526 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // don
            case 0x006e6f64:
            {
                const  data_chars   = "oaidbneutygm";
                const data_weights = [
                    0xa9c5, // 0.663158 
                    0x1841, // 0.094737 
                    0x12dd, // 0.073684 
                    0x0816, // 0.031579 
                    0x0816, // 0.031579 
                    0x0816, // 0.031579 
                    0x0564, // 0.021053 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doo
            case 0x006f6f64:
            {
                const  data_chars   = "ba";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dor
            case 0x00726f64:
            {
                const  data_chars   = "ioaueym";
                const data_weights = [
                    0xdc00, // 0.859375 
                    0x18ab, // 0.096354 
                    0x0400, // 0.015625 
                    0x02ab, // 0.010417 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                    0x00ab, // 0.002604 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dos
            case 0x00736f64:
            {
                const  data_chars   = "haeou";
                const data_weights = [
                    0x947b, // 0.580000 
                    0x2e14, // 0.180000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dot
            case 0x00746f64:
            {
                const  data_chars   = "eoast";
                const data_weights = [
                    0x611a, // 0.379310 
                    0x3dcb, // 0.241379 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dou
            case 0x00756f64:
            {
                const  data_chars   = "srcdbkntgijmyz";
                const data_weights = [
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dow
            case 0x00776f64:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doy
            case 0x00796f64:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xcb09, // 0.793103 
                    0x2c23, // 0.172414 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // doz
            case 0x007a6f64:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x9697, // 0.588235 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dqu
            case 0x00757164:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dre
            case 0x00657264:
            {
                const  data_chars   = "dw";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dri
            case 0x00697264:
            {
                const  data_chars   = "gn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dro
            case 0x006f7264:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dsa
            case 0x00617364:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dst
            case 0x00747364:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dto
            case 0x006f7464:
            {
                const  data_chars   = "aw";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // duc
            case 0x00637564:
            {
                const  data_chars   = "ht";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // duh
            case 0x00687564:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // duk
            case 0x006b7564:
            {
                const  data_chars   = "euai";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dur
            case 0x00727564:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dus
            case 0x00737564:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dut
            case 0x00747564:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // duy
            case 0x00797564:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dwa
            case 0x00617764:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // dzu
            case 0x00757a64:
            {
                const  data_chars   = "ki";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // d
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'e':
        {
            switch ( trigram_u32 )
            {
            // eab
            case 0x00626165:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eac
            case 0x00636165:
            {
                const  data_chars   = "ho";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ead
            case 0x00646165:
            {
                const  data_chars   = "qa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eaf
            case 0x00666165:
            {
                const  data_chars   = "ot";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eag
            case 0x00676165:
            {
                const  data_chars   = "eal";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eai
            case 0x00696165:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eaj
            case 0x006a6165:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eak
            case 0x006b6165:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eal
            case 0x006c6165:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eam
            case 0x006d6165:
            {
                const  data_chars   = "eou";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ean
            case 0x006e6165:
            {
                const  data_chars   = "az";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eap
            case 0x00706165:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ear
            case 0x00726165:
            {
                const  data_chars   = "itlma";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eas
            case 0x00736165:
            {
                const  data_chars   = "ahoit";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eat
            case 0x00746165:
            {
                const  data_chars   = "eirs";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eau
            case 0x00756165:
            {
                const  data_chars   = "xb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eav
            case 0x00766165:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eaw
            case 0x00776165:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eba
            case 0x00616265:
            {
                const  data_chars   = "rsytncmiubogdk";
                const data_weights = [
                    0x7989, // 0.474747 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x14b0, // 0.080808 
                    0x0cee, // 0.050505 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ebe
            case 0x00656265:
            {
                const  data_chars   = "trmoansck";
                const data_weights = [
                    0xc7ce, // 0.780488 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ebi
            case 0x00696265:
            {
                const  data_chars   = "stnrkbgucehj";
                const data_weights = [
                    0x47dc, // 0.280702 
                    0x286c, // 0.157895 
                    0x23ee, // 0.140351 
                    0x1f70, // 0.122807 
                    0x1675, // 0.087719 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ebo
            case 0x006f6265:
            {
                const  data_chars   = "snrukce";
                const data_weights = [
                    0x5c72, // 0.361111 
                    0x4000, // 0.250000 
                    0x31c7, // 0.194444 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ebu
            case 0x00756265:
            {
                const  data_chars   = "nkrcetsg";
                const data_weights = [
                    0x430c, // 0.261905 
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eby
            case 0x00796265:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ech
            case 0x00686365:
            {
                const  data_chars   = "oiaun";
                const data_weights = [
                    0xc64c, // 0.774603 
                    0x2d83, // 0.177778 
                    0x0680, // 0.025397 
                    0x04e0, // 0.019048 
                    0x00d0, // 0.003175 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eci
            case 0x00696365:
            {
                const  data_chars   = "ap";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eco
            case 0x006f6365:
            {
                const  data_chars   = "ump";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ecr
            case 0x00726365:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ect
            case 0x00746365:
            {
                const  data_chars   = "ui";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ecu
            case 0x00756365:
            {
                const  data_chars   = "rt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eda
            case 0x00616465:
            {
                const  data_chars   = "inkcghtsoerby";
                const data_weights = [
                    0x5000, // 0.312500 
                    0x3e00, // 0.242188 
                    0x2400, // 0.140625 
                    0x2000, // 0.125000 
                    0x0a00, // 0.039062 
                    0x0800, // 0.031250 
                    0x0600, // 0.023438 
                    0x0600, // 0.023438 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // edd
            case 0x00646465:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ede
            case 0x00656465:
            {
                const  data_chars   = "mrnstcvw";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // edi
            case 0x00696465:
            {
                const  data_chars   = "abc";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // edo
            case 0x006f6465:
            {
                const  data_chars   = "rmkncbgyishjto";
                const data_weights = [
                    0x4623, // 0.273973 
                    0x3b9e, // 0.232877 
                    0x188c, // 0.095890 
                    0x1189, // 0.068493 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eds
            case 0x00736465:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // edw
            case 0x00776465:
            {
                return 'a';
            }
            break;

            // edz
            case 0x007a6465:
            {
                return 'u';
            }
            break;

            // eeb
            case 0x00626565:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eec
            case 0x00636565:
            {
                const  data_chars   = "eh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eed
            case 0x00646565:
            {
                const  data_chars   = "ow";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eei
            case 0x00696565:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eej
            case 0x006a6565:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eek
            case 0x006b6565:
            {
                const  data_chars   = "ilua";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eem
            case 0x006d6565:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // een
            case 0x006e6565:
            {
                const  data_chars   = "lpa";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eep
            case 0x00706565:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eer
            case 0x00726565:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ees
            case 0x00736565:
            {
                const  data_chars   = "uha";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eet
            case 0x00746565:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eez
            case 0x007a6565:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // efe
            case 0x00656665:
            {
                const  data_chars   = "cn";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // efr
            case 0x00726665:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // efu
            case 0x00756665:
            {
                const  data_chars   = "krtcdnmshje";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ega
            case 0x00616765:
            {
                const  data_chars   = "wsmtohniykurfdcegalj";
                const data_weights = [
                    0x4e31, // 0.305439 
                    0x2690, // 0.150628 
                    0x1f10, // 0.121339 
                    0x1236, // 0.071130 
                    0x0ded, // 0.054393 
                    0x0cdb, // 0.050209 
                    0x0ab6, // 0.041841 
                    0x09a4, // 0.037657 
                    0x0892, // 0.033473 
                    0x0892, // 0.033473 
                    0x066d, // 0.025105 
                    0x0449, // 0.016736 
                    0x0337, // 0.012552 
                    0x0337, // 0.012552 
                    0x0224, // 0.008368 
                    0x0224, // 0.008368 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ege
            case 0x00656765:
            {
                const  data_chars   = "ty";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // egi
            case 0x00696765:
            {
                const  data_chars   = "snrdtuyzbmo";
                const data_weights = [
                    0x599a, // 0.350000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ego
            case 0x006f6765:
            {
                const  data_chars   = "ystnezorcm";
                const data_weights = [
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // egu
            case 0x00756765:
            {
                const  data_chars   = "rcsmn";
                const data_weights = [
                    0x7361, // 0.450704 
                    0x5dbf, // 0.366197 
                    0x193d, // 0.098592 
                    0x0e6c, // 0.056338 
                    0x0736, // 0.028169 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eha
            case 0x00616865:
            {
                const  data_chars   = "rmntscgboy";
                const data_weights = [
                    0x6ae0, // 0.417476 
                    0x3e23, // 0.242718 
                    0x1dd3, // 0.116505 
                    0x13e2, // 0.077670 
                    0x1166, // 0.067961 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ehe
            case 0x00656865:
            {
                const  data_chars   = "mj";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ehi
            case 0x00696865:
            {
                const  data_chars   = "rgskmtec";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x3da1, // 0.240741 
                    0x25ed, // 0.148148 
                    0x17b4, // 0.092593 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eho
            case 0x006f6865:
            {
                const  data_chars   = "nrmtjk";
                const data_weights = [
                    0x9746, // 0.590909 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eia
            case 0x00616965:
            {
                const  data_chars   = "nit";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eib
            case 0x00626965:
            {
                const  data_chars   = "uaieo";
                const data_weights = [
                    0x5c29, // 0.360000 
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eic
            case 0x00636965:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eid
            case 0x00646965:
            {
                const  data_chars   = "aoej";
                const data_weights = [
                    0xa60e, // 0.648649 
                    0x375a, // 0.216216 
                    0x1bad, // 0.108108 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eie
            case 0x00656965:
            {
                const  data_chars   = "nik";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eif
            case 0x00666965:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eig
            case 0x00676965:
            {
                const  data_chars   = "aeoyhu";
                const data_weights = [
                    0x7ce1, // 0.487805 
                    0x3832, // 0.219512 
                    0x2577, // 0.146341 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eih
            case 0x00686965:
            {
                const  data_chars   = "oiea";
                const data_weights = [
                    0x4dea, // 0.304348 
                    0x42c8, // 0.260870 
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eii
            case 0x00696965:
            {
                const  data_chars   = "cknow";
                const data_weights = [
                    0xb13b, // 0.692308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eij
            case 0x006a6965:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xa72f, // 0.653061 
                    0x3eb2, // 0.244898 
                    0x1a1f, // 0.102041 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eik
            case 0x006b6965:
            {
                const  data_chars   = "aeoyiu";
                const data_weights = [
                    0x4a79, // 0.290909 
                    0x45d1, // 0.272727 
                    0x2790, // 0.154545 
                    0x2095, // 0.127273 
                    0x2095, // 0.127273 
                    0x06fb, // 0.027273 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eim
            case 0x006d6965:
            {
                const  data_chars   = "aouei";
                const data_weights = [
                    0x895e, // 0.536585 
                    0x2bb5, // 0.170732 
                    0x1f38, // 0.121951 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ein
            case 0x006e6965:
            {
                const  data_chars   = "oaeikg";
                const data_weights = [
                    0x6a44, // 0.415094 
                    0x656f, // 0.396226 
                    0x1cfb, // 0.113208 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eio
            case 0x006f6965:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eip
            case 0x00706965:
            {
                const  data_chars   = "aiu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eir
            case 0x00726965:
            {
                const  data_chars   = "iyaeou";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x4000, // 0.250000 
                    0x345d, // 0.204545 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eis
            case 0x00736965:
            {
                const  data_chars   = "heauo";
                const data_weights = [
                    0x88a9, // 0.533835 
                    0x320c, // 0.195489 
                    0x1ecc, // 0.120301 
                    0x1340, // 0.075188 
                    0x1340, // 0.075188 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eit
            case 0x00746965:
            {
                const  data_chars   = "aoes";
                const data_weights = [
                    0x77d4, // 0.468085 
                    0x46cf, // 0.276596 
                    0x2621, // 0.148936 
                    0x1b3c, // 0.106383 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eiu
            case 0x00756965:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eiw
            case 0x00776965:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eiy
            case 0x00796965:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x8788, // 0.529412 
                    0x5a5a, // 0.352941 
                    0x1e1e, // 0.117647 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eiz
            case 0x007a6965:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x3a84, // 0.228571 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eja
            case 0x00616a65:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eji
            case 0x00696a65:
            {
                const  data_chars   = "mrbncdeogt";
                const data_weights = [
                    0x91a8, // 0.568965 
                    0x4235, // 0.258621 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ejo
            case 0x006f6a65:
            {
                const  data_chars   = "nmgs";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eju
            case 0x00756a65:
            {
                const  data_chars   = "kr";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ejy
            case 0x00796a65:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eka
            case 0x00616b65:
            {
                const  data_chars   = "wrmtnidkszgyabco";
                const data_weights = [
                    0x5d4a, // 0.364407 
                    0x22b6, // 0.135593 
                    0x1c34, // 0.110169 
                    0x0f30, // 0.059322 
                    0x0f30, // 0.059322 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0ad9, // 0.042373 
                    0x0682, // 0.025424 
                    0x0682, // 0.025424 
                    0x0682, // 0.025424 
                    0x0457, // 0.016949 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eke
            case 0x00656b65:
            {
                const  data_chars   = "rnps";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eki
            case 0x00696b65:
            {
                const  data_chars   = "mtnsgyhjkbrcdzafiwu";
                const data_weights = [
                    0x2d4f, // 0.176991 
                    0x2561, // 0.146018 
                    0x243f, // 0.141593 
                    0x1220, // 0.070796 
                    0x0fdc, // 0.061947 
                    0x0eba, // 0.057522 
                    0x0d98, // 0.053097 
                    0x0c76, // 0.048673 
                    0x0b54, // 0.044248 
                    0x0b54, // 0.044248 
                    0x07ee, // 0.030973 
                    0x06cc, // 0.026549 
                    0x06cc, // 0.026549 
                    0x05aa, // 0.022124 
                    0x0366, // 0.013274 
                    0x0366, // 0.013274 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                    0x0122, // 0.004425 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ekk
            case 0x006b6b65:
            {
                const  data_chars   = "oaueiy";
                const data_weights = [
                    0x7cb8, // 0.487179 
                    0x3b14, // 0.230769 
                    0x20d2, // 0.128205 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ekl
            case 0x006c6b65:
            {
                return 'y';
            }
            break;

            // eko
            case 0x006f6b65:
            {
                const  data_chars   = "bmzsgotjrdkpcuheay";
                const data_weights = [
                    0x2400, // 0.140625 
                    0x1c00, // 0.109375 
                    0x1c00, // 0.109375 
                    0x1c00, // 0.109375 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eku
            case 0x00756b65:
            {
                const  data_chars   = "rbsnjmytzu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eky
            case 0x00796b65:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elb
            case 0x00626c65:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elc
            case 0x00636c65:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ele
            case 0x00656c65:
            {
                const  data_chars   = "mrc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eli
            case 0x00696c65:
            {
                const  data_chars   = "pmt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ell
            case 0x006c6c65:
            {
                const  data_chars   = "eina";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elm
            case 0x006d6c65:
            {
                return 'o';
            }
            break;

            // elo
            case 0x006f6c65:
            {
                const  data_chars   = "pt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elp
            case 0x00706c65:
            {
                const  data_chars   = "ah";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elt
            case 0x00746c65:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // elu
            case 0x00756c65:
            {
                const  data_chars   = "xe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ema
            case 0x00616d65:
            {
                const  data_chars   = "csterniwmkhd";
                const data_weights = [
                    0x9d63, // 0.614786 
                    0x25da, // 0.147860 
                    0x18e7, // 0.097276 
                    0x09f6, // 0.038911 
                    0x07f8, // 0.031128 
                    0x04fb, // 0.019455 
                    0x03fc, // 0.015564 
                    0x02fd, // 0.011673 
                    0x01fe, // 0.007782 
                    0x01fe, // 0.007782 
                    0x00ff, // 0.003891 
                    0x00ff, // 0.003891 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emb
            case 0x00626d65:
            {
                const  data_chars   = "oaeuir";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x425f, // 0.259259 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eme
            case 0x00656d65:
            {
                const  data_chars   = "nktgr";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emi
            case 0x00696d65:
            {
                const  data_chars   = "ncztgsykeourmd";
                const data_weights = [
                    0x542a, // 0.328767 
                    0x1c0e, // 0.109589 
                    0x188c, // 0.095890 
                    0x150b, // 0.082192 
                    0x150b, // 0.082192 
                    0x150b, // 0.082192 
                    0x1189, // 0.068493 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emm
            case 0x006d6d65:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xd000, // 0.812500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emo
            case 0x006f6d65:
            {
                const  data_chars   = "nrtcism";
                const data_weights = [
                    0x76c3, // 0.463918 
                    0x3f57, // 0.247423 
                    0x34c9, // 0.206186 
                    0x0a8f, // 0.041237 
                    0x0547, // 0.020619 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emp
            case 0x00706d65:
            {
                const  data_chars   = "outail";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emu
            case 0x00756d65:
            {
                const  data_chars   = "rknisty";
                const data_weights = [
                    0x9aca, // 0.604651 
                    0x2fa1, // 0.186047 
                    0x17d0, // 0.093023 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // emy
            case 0x00796d65:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ena
            case 0x00616e65:
            {
                const  data_chars   = "igskmwnrctbexyp";
                const data_weights = [
                    0x73e4, // 0.452703 
                    0x27c9, // 0.155405 
                    0x1f23, // 0.121622 
                    0x1d68, // 0.114865 
                    0x0dd6, // 0.054054 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enb
            case 0x00626e65:
            {
                const  data_chars   = "aoueiy";
                const data_weights = [
                    0x5d8a, // 0.365385 
                    0x3b14, // 0.230769 
                    0x29d9, // 0.163462 
                    0x2000, // 0.125000 
                    0x1b14, // 0.105769 
                    0x0276, // 0.009615 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enc
            case 0x00636e65:
            {
                const  data_chars   = "he";
                const data_weights = [
                    0xf8ca, // 0.971831 
                    0x0736, // 0.028169 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // end
            case 0x00646e65:
            {
                const  data_chars   = "aoes";
                const data_weights = [
                    0x9b84, // 0.607477 
                    0x4ef4, // 0.308411 
                    0x1324, // 0.074766 
                    0x0264, // 0.009346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ene
            case 0x00656e65:
            {
                const  data_chars   = "knbrsmgityc";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enf
            case 0x00666e65:
            {
                return 'u';
            }
            break;

            // eng
            case 0x00676e65:
            {
                const  data_chars   = "auoeyil";
                const data_weights = [
                    0x5d93, // 0.365517 
                    0x316f, // 0.193103 
                    0x2a5f, // 0.165517 
                    0x289b, // 0.158621 
                    0x11a8, // 0.068966 
                    0x0a98, // 0.041379 
                    0x01c4, // 0.006897 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enh
            case 0x00686e65:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x9697, // 0.588235 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eni
            case 0x00696e65:
            {
                const  data_chars   = "snkcytbwghur";
                const data_weights = [
                    0x53ef, // 0.327869 
                    0x29f8, // 0.163934 
                    0x1d61, // 0.114754 
                    0x192e, // 0.098361 
                    0x14fc, // 0.081967 
                    0x10c9, // 0.065574 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enj
            case 0x006a6e65:
            {
                const  data_chars   = "iouay";
                const data_weights = [
                    0xb37f, // 0.701149 
                    0x308d, // 0.189655 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x0179, // 0.005747 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enk
            case 0x006b6e65:
            {
                const  data_chars   = "aoeyiu";
                const data_weights = [
                    0x4750, // 0.278571 
                    0x36db, // 0.214286 
                    0x2f8b, // 0.185714 
                    0x283b, // 0.157143 
                    0x2492, // 0.142857 
                    0x057c, // 0.021429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enl
            case 0x006c6e65:
            {
                return 'a';
            }
            break;

            // enm
            case 0x006d6e65:
            {
                const  data_chars   = "aeoiyu";
                const data_weights = [
                    0xa4fa, // 0.644444 
                    0x1c72, // 0.111111 
                    0x16c1, // 0.088889 
                    0x13e9, // 0.077778 
                    0x0b61, // 0.044444 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enn
            case 0x006e6e65:
            {
                const  data_chars   = "oaieuy";
                const data_weights = [
                    0x73cf, // 0.452381 
                    0x36db, // 0.214286 
                    0x33cf, // 0.202381 
                    0x1555, // 0.083333 
                    0x0925, // 0.035714 
                    0x030c, // 0.011905 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eno
            case 0x006f6e65:
            {
                const  data_chars   = "ksmuhtbyocdrgnjizw";
                const data_weights = [
                    0x39b4, // 0.225397 
                    0x2b13, // 0.168254 
                    0x1ba2, // 0.107937 
                    0x1ad2, // 0.104762 
                    0x1111, // 0.066667 
                    0x0f71, // 0.060317 
                    0x0b61, // 0.044444 
                    0x0a91, // 0.041270 
                    0x0a91, // 0.041270 
                    0x09c1, // 0.038095 
                    0x05b0, // 0.022222 
                    0x04e0, // 0.019048 
                    0x04e0, // 0.019048 
                    0x0340, // 0.012698 
                    0x0340, // 0.012698 
                    0x0270, // 0.009524 
                    0x00d0, // 0.003175 
                    0x00d0, // 0.003175 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enp
            case 0x00706e65:
            {
                const  data_chars   = "ouiaey";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x2ccd, // 0.175000 
                    0x2000, // 0.125000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enr
            case 0x00726e65:
            {
                const  data_chars   = "yiaoeu";
                const data_weights = [
                    0x5ed1, // 0.370370 
                    0x5a13, // 0.351852 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ens
            case 0x00736e65:
            {
                const  data_chars   = "heaouyi";
                const data_weights = [
                    0x9555, // 0.583333 
                    0x2444, // 0.141667 
                    0x1bbc, // 0.108333 
                    0x1555, // 0.083333 
                    0x0eef, // 0.058333 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ent
            case 0x00746e65:
            {
                const  data_chars   = "aoesruihly";
                const data_weights = [
                    0x525d, // 0.321739 
                    0x4dea, // 0.304348 
                    0x3333, // 0.200000 
                    0x1643, // 0.086957 
                    0x06ae, // 0.026087 
                    0x0474, // 0.017391 
                    0x0474, // 0.017391 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                    0x023a, // 0.008696 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enu
            case 0x00756e65:
            {
                const  data_chars   = "mpknsoeftu";
                const data_weights = [
                    0x70a4, // 0.440000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enw
            case 0x00776e65:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eny
            case 0x00796e65:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xc4ec, // 0.769231 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // enz
            case 0x007a6e65:
            {
                const  data_chars   = "aoue";
                const data_weights = [
                    0xa222, // 0.633333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eob
            case 0x00626f65:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eoc
            case 0x00636f65:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eod
            case 0x00646f65:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eog
            case 0x00676f65:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eok
            case 0x006b6f65:
            {
                const  data_chars   = "aouei";
                const data_weights = [
                    0xddde, // 0.866667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eom
            case 0x006d6f65:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eon
            case 0x006e6f65:
            {
                const  data_chars   = "saj";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eop
            case 0x00706f65:
            {
                const  data_chars   = "lp";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eor
            case 0x00726f65:
            {
                const  data_chars   = "ouai";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eos
            case 0x00736f65:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eot
            case 0x00746f65:
            {
                const  data_chars   = "oas";
                const data_weights = [
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epa
            case 0x00617065:
            {
                const  data_chars   = "lnta";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epc
            case 0x00637065:
            {
                return 'o';
            }
            break;

            // epe
            case 0x00657065:
            {
                const  data_chars   = "nuk";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epi
            case 0x00697065:
            {
                const  data_chars   = "hsnr";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epo
            case 0x006f7065:
            {
                const  data_chars   = "not";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epp
            case 0x00707065:
            {
                const  data_chars   = "uoeai";
                const data_weights = [
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // epu
            case 0x00757065:
            {
                const  data_chars   = "nt";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // era
            case 0x00617265:
            {
                const  data_chars   = "mnsokzibdgcjhtyrulp";
                const data_weights = [
                    0x1a17, // 0.101911 
                    0x1a17, // 0.101911 
                    0x1533, // 0.082803 
                    0x1533, // 0.082803 
                    0x1391, // 0.076433 
                    0x104e, // 0.063694 
                    0x0ead, // 0.057325 
                    0x0ead, // 0.057325 
                    0x0ead, // 0.057325 
                    0x0d0b, // 0.050955 
                    0x0d0b, // 0.050955 
                    0x0b6a, // 0.044586 
                    0x09c9, // 0.038217 
                    0x09c9, // 0.038217 
                    0x0827, // 0.031847 
                    0x0686, // 0.025478 
                    0x04e4, // 0.019108 
                    0x0343, // 0.012739 
                    0x01a1, // 0.006369 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erb
            case 0x00627265:
            {
                const  data_chars   = "aei";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erc
            case 0x00637265:
            {
                const  data_chars   = "hiou";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ere
            case 0x00657265:
            {
                const  data_chars   = "bkptonyi";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erf
            case 0x00667265:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erg
            case 0x00677265:
            {
                const  data_chars   = "eay";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erh
            case 0x00687265:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eri
            case 0x00697265:
            {
                const  data_chars   = "kmanygtsdbzhcuiow";
                const data_weights = [
                    0x3950, // 0.223881 
                    0x1e91, // 0.119403 
                    0x1e91, // 0.119403 
                    0x1e91, // 0.119403 
                    0x0f49, // 0.059701 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erl
            case 0x006c7265:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erm
            case 0x006d7265:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ern
            case 0x006e7265:
            {
                const  data_chars   = "amt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ero
            case 0x006f7265:
            {
                const  data_chars   = "kmotxb";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // err
            case 0x00727265:
            {
                const  data_chars   = "aiy";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ers
            case 0x00737265:
            {
                const  data_chars   = "ieoa";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ert
            case 0x00747265:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eru
            case 0x00757265:
            {
                const  data_chars   = "mbgyktohnsfiapu";
                const data_weights = [
                    0x2f28, // 0.184211 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // erv
            case 0x00767265:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ery
            case 0x00797265:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // esa
            case 0x00617365:
            {
                const  data_chars   = "kwnstmodrij";
                const data_weights = [
                    0x5271, // 0.322034 
                    0x363d, // 0.211864 
                    0x22b6, // 0.135593 
                    0x208b, // 0.127119 
                    0x115b, // 0.067797 
                    0x0d04, // 0.050847 
                    0x0682, // 0.025424 
                    0x0682, // 0.025424 
                    0x0457, // 0.016949 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ese
            case 0x00657365:
            {
                const  data_chars   = "nklrti";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x3cf4, // 0.238095 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // esh
            case 0x00687365:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xe249, // 0.883929 
                    0x15b7, // 0.084821 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // esi
            case 0x00697365:
            {
                const  data_chars   = "dg";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eso
            case 0x006f7365:
            {
                const  data_chars   = "kmntrlgjz";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // esp
            case 0x00707365:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ess
            case 0x00737365:
            {
                const  data_chars   = "heoaw";
                const data_weights = [
                    0x9436, // 0.578947 
                    0x2f28, // 0.184211 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // est
            case 0x00747365:
            {
                const  data_chars   = "ioeh";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // esu
            case 0x00757365:
            {
                const  data_chars   = "ktgmbhrensyd";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x3800, // 0.218750 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eta
            case 0x00617465:
            {
                const  data_chars   = "knrmitbcgzsajduyo";
                const data_weights = [
                    0x3ac1, // 0.229508 
                    0x29f8, // 0.163934 
                    0x1d61, // 0.114754 
                    0x1b47, // 0.106557 
                    0x1b47, // 0.106557 
                    0x10c9, // 0.065574 
                    0x0a7e, // 0.040984 
                    0x0865, // 0.032787 
                    0x064c, // 0.024590 
                    0x064c, // 0.024590 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // etc
            case 0x00637465:
            {
                return 'h';
            }
            break;

            // ete
            case 0x00657465:
            {
                const  data_chars   = "gmnsriktd";
                const data_weights = [
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eth
            case 0x00687465:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // etn
            case 0x006e7465:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eto
            case 0x006f7465:
            {
                const  data_chars   = "rmksngbiucyjdhtw";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x1b9c, // 0.107843 
                    0x1919, // 0.098039 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0c8d, // 0.049020 
                    0x0a0a, // 0.039216 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // etr
            case 0x00727465:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ets
            case 0x00737465:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0xff9e, // 0.998510 
                    0x0062, // 0.001490 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ett
            case 0x00747465:
            {
                const  data_chars   = "oaesz";
                const data_weights = [
                    0xa925, // 0.660714 
                    0x2925, // 0.160714 
                    0x16db, // 0.089286 
                    0x1249, // 0.071429 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // etu
            case 0x00757465:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // euc
            case 0x00637565:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // euk
            case 0x006b7565:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eum
            case 0x006d7565:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eun
            case 0x006e7565:
            {
                const  data_chars   = "bi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // euo
            case 0x006f7565:
            {
                const  data_chars   = "pb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eup
            case 0x00707565:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eur
            case 0x00727565:
            {
                const  data_chars   = "aieu";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2db7, // 0.178571 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eus
            case 0x00737565:
            {
                const  data_chars   = "hue";
                const data_weights = [
                    0xc30c, // 0.761905 
                    0x30c3, // 0.190476 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eut
            case 0x00747565:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eve
            case 0x00657665:
            {
                const  data_chars   = "lr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ewa
            case 0x00617765:
            {
                const  data_chars   = "rtkdivy";
                const data_weights = [
                    0x5ed1, // 0.370370 
                    0x425f, // 0.259259 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ewc
            case 0x00637765:
            {
                return 'i';
            }
            break;

            // ewe
            case 0x00657765:
            {
                const  data_chars   = "ne";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // exc
            case 0x00637865:
            {
                return 'e';
            }
            break;

            // exe
            case 0x00657865:
            {
                const  data_chars   = "cr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // exp
            case 0x00707865:
            {
                return 'r';
            }
            break;

            // exs
            case 0x00737865:
            {
                return 't';
            }
            break;

            // ext
            case 0x00747865:
            {
                return 'i';
            }
            break;

            // eya
            case 0x00617965:
            {
                const  data_chars   = "msctkngforub";
                const data_weights = [
                    0x9581, // 0.584000 
                    0x1687, // 0.088000 
                    0x1687, // 0.088000 
                    0x126f, // 0.072000 
                    0x1062, // 0.064000 
                    0x0a3d, // 0.040000 
                    0x0625, // 0.024000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eyl
            case 0x006c7965:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eyo
            case 0x006f7965:
            {
                const  data_chars   = "skn";
                const data_weights = [
                    0xe1e2, // 0.882353 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eyu
            case 0x00757965:
            {
                const  data_chars   = "koe";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eza
            case 0x00617a65:
            {
                const  data_chars   = "kwitmnars";
                const data_weights = [
                    0x782a, // 0.469388 
                    0x6344, // 0.387755 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // eze
            case 0x00657a65:
            {
                const  data_chars   = "nh";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ezi
            case 0x00697a65:
            {
                return 'k';
            }
            break;

            // ezo
            case 0x006f7a65:
            {
                const  data_chars   = "nkrmeag";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ezu
            case 0x00757a65:
            {
                const  data_chars   = "kmrtghn";
                const data_weights = [
                    0x797e, // 0.474576 
                    0x4116, // 0.254237 
                    0x270d, // 0.152542 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // e
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'f':
        {
            switch ( trigram_u32 )
            {
            // fab
            case 0x00626166:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fac
            case 0x00636166:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fal
            case 0x006c6166:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fam
            case 0x006d6166:
            {
                const  data_chars   = "iy";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fan
            case 0x006e6166:
            {
                const  data_chars   = "tu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // far
            case 0x00726166:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fas
            case 0x00736166:
            {
                const  data_chars   = "hsu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fec
            case 0x00636566:
            {
                const  data_chars   = "th";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fei
            case 0x00696566:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fen
            case 0x006e6566:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fer
            case 0x00726566:
            {
                const  data_chars   = "ir";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fes
            case 0x00736566:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ffi
            case 0x00696666:
            {
                const  data_chars   = "ce";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fic
            case 0x00636966:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fie
            case 0x00656966:
            {
                const  data_chars   = "lb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fif
            case 0x00666966:
            {
                const  data_chars   = "te";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fig
            case 0x00676966:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fil
            case 0x006c6966:
            {
                const  data_chars   = "lm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fin
            case 0x006e6966:
            {
                const  data_chars   = "oel";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fir
            case 0x00726966:
            {
                const  data_chars   = "su";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fis
            case 0x00736966:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fit
            case 0x00746966:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fiv
            case 0x00766966:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fle
            case 0x00656c66:
            {
                const  data_chars   = "xa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // flo
            case 0x006f6c66:
            {
                const  data_chars   = "rw";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fog
            case 0x00676f66:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fok
            case 0x006b6f66:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fom
            case 0x006d6f66:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fon
            case 0x006e6f66:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // foo
            case 0x006f6f66:
            {
                const  data_chars   = "kt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // for
            case 0x00726f66:
            {
                const  data_chars   = "tekmucd";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fou
            case 0x00756f66:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fra
            case 0x00617266:
            {
                const  data_chars   = "ns";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fre
            case 0x00657266:
            {
                const  data_chars   = "sin";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fri
            case 0x00697266:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fte
            case 0x00657466:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fty
            case 0x00797466:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fua
            case 0x00617566:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fub
            case 0x00627566:
            {
                const  data_chars   = "ueao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuc
            case 0x00637566:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fud
            case 0x00647566:
            {
                const  data_chars   = "oae";
                const data_weights = [
                    0x93b1, // 0.576923 
                    0x53b1, // 0.326923 
                    0x189e, // 0.096154 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fue
            case 0x00657566:
            {
                const  data_chars   = "nmfrzadg";
                const data_weights = [
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuf
            case 0x00667566:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fug
            case 0x00677566:
            {
                const  data_chars   = "oaeu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuh
            case 0x00687566:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fui
            case 0x00697566:
            {
                const  data_chars   = "rsjno";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuj
            case 0x006a7566:
            {
                const  data_chars   = "iuo";
                const data_weights = [
                    0xfba9, // 0.983051 
                    0x02e5, // 0.011299 
                    0x0172, // 0.005650 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuk
            case 0x006b7566:
            {
                const  data_chars   = "uaieok";
                const data_weights = [
                    0x987f, // 0.595694 
                    0x4535, // 0.270335 
                    0x1399, // 0.076555 
                    0x0893, // 0.033493 
                    0x0310, // 0.011962 
                    0x0310, // 0.011962 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fum
            case 0x006d7566:
            {
                const  data_chars   = "ioaeu";
                const data_weights = [
                    0xa492, // 0.642857 
                    0x3b6e, // 0.232143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fun
            case 0x006e7566:
            {
                const  data_chars   = "aeobyimkgnct";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x44af, // 0.268293 
                    0x0c7d, // 0.048780 
                    0x04ff, // 0.019512 
                    0x03bf, // 0.014634 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuo
            case 0x006f7566:
            {
                const  data_chars   = "nt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fup
            case 0x00707566:
            {
                const  data_chars   = "pu";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fur
            case 0x00727566:
            {
                const  data_chars   = "ueiaoy";
                const data_weights = [
                    0xa3ec, // 0.640316 
                    0x3092, // 0.189723 
                    0x1031, // 0.063241 
                    0x0f2e, // 0.059289 
                    0x0b21, // 0.043478 
                    0x0103, // 0.003953 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fus
            case 0x00737566:
            {
                const  data_chars   = "haeosu";
                const data_weights = [
                    0x6fd1, // 0.436782 
                    0x4f73, // 0.310345 
                    0x2641, // 0.149425 
                    0x11a8, // 0.068966 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fut
            case 0x00747566:
            {
                const  data_chars   = "aoste";
                const data_weights = [
                    0xb216, // 0.695652 
                    0x2a0c, // 0.164251 
                    0x19f9, // 0.101449 
                    0x062f, // 0.024155 
                    0x03b6, // 0.014493 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuu
            case 0x00757566:
            {
                const  data_chars   = "rstf";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuw
            case 0x00777566:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuy
            case 0x00797566:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // fuz
            case 0x007a7566:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // f
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'g':
        {
            switch ( trigram_u32 )
            {
            // gaa
            case 0x00616167:
            {
                const  data_chars   = "cnd";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gab
            case 0x00626167:
            {
                const  data_chars   = "aeiouy";
                const data_weights = [
                    0x8a61, // 0.540541 
                    0x306f, // 0.189189 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gac
            case 0x00636167:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gad
            case 0x00646167:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xb05b, // 0.688889 
                    0x2d83, // 0.177778 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gae
            case 0x00656167:
            {
                const  data_chars   = "rsmtucgh";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x4a1b, // 0.289474 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gaf
            case 0x00666167:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gag
            case 0x00676167:
            {
                const  data_chars   = "aouy";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gah
            case 0x00686167:
            {
                const  data_chars   = "aoise";
                const data_weights = [
                    0xc1fd, // 0.757764 
                    0x1e36, // 0.118012 
                    0x1b08, // 0.105590 
                    0x032e, // 0.012422 
                    0x0197, // 0.006211 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gai
            case 0x00696167:
            {
                const  data_chars   = "tkmscnzdebrjh";
                const data_weights = [
                    0x33d9, // 0.202532 
                    0x309c, // 0.189873 
                    0x2d5e, // 0.177215 
                    0x1d2a, // 0.113924 
                    0x1371, // 0.075949 
                    0x1034, // 0.063291 
                    0x0cf6, // 0.050633 
                    0x09b9, // 0.037975 
                    0x067b, // 0.025316 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gaj
            case 0x006a6167:
            {
                const  data_chars   = "oia";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gak
            case 0x006b6167:
            {
                const  data_chars   = "uikeaoy";
                const data_weights = [
                    0x9c72, // 0.611111 
                    0x2e76, // 0.181481 
                    0x16c1, // 0.088889 
                    0x101e, // 0.062963 
                    0x06a3, // 0.025926 
                    0x06a3, // 0.025926 
                    0x00f3, // 0.003704 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gal
            case 0x006c6167:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gam
            case 0x006d6167:
            {
                const  data_chars   = "iaoeu";
                const data_weights = [
                    0x922d, // 0.570997 
                    0x3ac8, // 0.229607 
                    0x1bd8, // 0.108761 
                    0x1104, // 0.066465 
                    0x0630, // 0.024169 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gan
            case 0x006e6167:
            {
                const  data_chars   = "oejakbdunstgmyiczp";
                const data_weights = [
                    0x4e39, // 0.305556 
                    0x4aab, // 0.291667 
                    0x12ab, // 0.072917 
                    0x11c7, // 0.069444 
                    0x0aab, // 0.041667 
                    0x09c7, // 0.038194 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0639, // 0.024306 
                    0x0555, // 0.020833 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x00e4, // 0.003472 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gao
            case 0x006f6167:
            {
                const  data_chars   = "kdgbcmnzh";
                const data_weights = [
                    0xea90, // 0.916256 
                    0x03c9, // 0.014778 
                    0x03c9, // 0.014778 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0143, // 0.004926 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gap
            case 0x00706167:
            {
                const  data_chars   = "op";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gar
            case 0x00726167:
            {
                const  data_chars   = "iauedoyht";
                const data_weights = [
                    0x6be9, // 0.421525 
                    0x472d, // 0.278027 
                    0x2954, // 0.161435 
                    0x1a67, // 0.103139 
                    0x024c, // 0.008969 
                    0x024c, // 0.008969 
                    0x024c, // 0.008969 
                    0x0126, // 0.004484 
                    0x0126, // 0.004484 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gas
            case 0x00736167:
            {
                const  data_chars   = "haeuos";
                const data_weights = [
                    0x9674, // 0.587703 
                    0x4c62, // 0.298373 
                    0x120e, // 0.070524 
                    0x0605, // 0.023508 
                    0x02c7, // 0.010850 
                    0x0251, // 0.009042 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gat
            case 0x00746167:
            {
                const  data_chars   = "asoetc";
                const data_weights = [
                    0xb715, // 0.715170 
                    0x23aa, // 0.139319 
                    0x1af3, // 0.105263 
                    0x058c, // 0.021672 
                    0x03f6, // 0.015480 
                    0x00cb, // 0.003096 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gau
            case 0x00756167:
            {
                const  data_chars   = "rtcde";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gaw
            case 0x00776167:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xffac, // 0.998720 
                    0x0054, // 0.001280 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gay
            case 0x00796167:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xe5b5, // 0.897297 
                    0x135f, // 0.075676 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gaz
            case 0x007a6167:
            {
                const  data_chars   = "aeu";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gdo
            case 0x006f6467:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gea
            case 0x00616567:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // geb
            case 0x00626567:
            {
                const  data_chars   = "aei";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gec
            case 0x00636567:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ged
            case 0x00646567:
            {
                const  data_chars   = "oae";
                const data_weights = [
                    0x86bd, // 0.526316 
                    0x6bca, // 0.421053 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gef
            case 0x00666567:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // geg
            case 0x00676567:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // geh
            case 0x00686567:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gei
            case 0x00696567:
            {
                const  data_chars   = "jnsdhktwyb";
                const data_weights = [
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gej
            case 0x006a6567:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0x9555, // 0.583333 
                    0x6aab, // 0.416667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gek
            case 0x006b6567:
            {
                const  data_chars   = "iakuo";
                const data_weights = [
                    0x7c1f, // 0.484848 
                    0x45d1, // 0.272727 
                    0x26ca, // 0.151515 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gem
            case 0x006d6567:
            {
                const  data_chars   = "aouiemp";
                const data_weights = [
                    0x739d, // 0.451613 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gen
            case 0x006e6567:
            {
                const  data_chars   = "ojksdatyzbcmnguierp";
                const data_weights = [
                    0x293c, // 0.161074 
                    0x1d35, // 0.114094 
                    0x180e, // 0.093960 
                    0x149e, // 0.080537 
                    0x112e, // 0.067114 
                    0x112e, // 0.067114 
                    0x0dbf, // 0.053691 
                    0x0dbf, // 0.053691 
                    0x0c07, // 0.046980 
                    0x0a4f, // 0.040268 
                    0x0897, // 0.033557 
                    0x0897, // 0.033557 
                    0x0897, // 0.033557 
                    0x06df, // 0.026846 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x0370, // 0.013423 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // geo
            case 0x006f6567:
            {
                const  data_chars   = "ksc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gep
            case 0x00706567:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ger
            case 0x00726567:
            {
                const  data_chars   = "uioam";
                const data_weights = [
                    0x9e7a, // 0.619048 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ges
            case 0x00736567:
            {
                const  data_chars   = "haues";
                const data_weights = [
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // get
            case 0x00746567:
            {
                const  data_chars   = "saoet";
                const data_weights = [
                    0x8c9f, // 0.549296 
                    0x481d, // 0.281690 
                    0x240e, // 0.140845 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gey
            case 0x00796567:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gez
            case 0x007a6567:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gha
            case 0x00616867:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ghl
            case 0x006c6867:
            {
                return 'a';
            }
            break;

            // ght
            case 0x00746867:
            {
                const  data_chars   = "os";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gia
            case 0x00616967:
            {
                const  data_chars   = "cgkn";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gib
            case 0x00626967:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gic
            case 0x00636967:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gid
            case 0x00646967:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xd41d, // 0.828571 
                    0x2be3, // 0.171429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gie
            case 0x00656967:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gif
            case 0x00666967:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gig
            case 0x00676967:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd70a, // 0.840000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gih
            case 0x00686967:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1f08, // 0.121212 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gii
            case 0x00696967:
            {
                const  data_chars   = "cs";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gij
            case 0x006a6967:
            {
                const  data_chars   = "iuo";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gik
            case 0x006b6967:
            {
                const  data_chars   = "uaioe";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x51ec, // 0.320000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gim
            case 0x006d6967:
            {
                const  data_chars   = "aioepuym";
                const data_weights = [
                    0xad2d, // 0.676471 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gin
            case 0x006e6967:
            {
                const  data_chars   = "oazuegsikdyjpbrn";
                const data_weights = [
                    0xa0c8, // 0.628049 
                    0x2706, // 0.152439 
                    0x0c7d, // 0.048780 
                    0x07ce, // 0.030488 
                    0x063e, // 0.024390 
                    0x04af, // 0.018293 
                    0x04af, // 0.018293 
                    0x04af, // 0.018293 
                    0x04af, // 0.018293 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gio
            case 0x006f6967:
            {
                const  data_chars   = "nuh";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gip
            case 0x00706967:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gir
            case 0x00726967:
            {
                const  data_chars   = "iuaeo";
                const data_weights = [
                    0xb91c, // 0.723077 
                    0x1b92, // 0.107692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gis
            case 0x00736967:
            {
                const  data_chars   = "hauoes";
                const data_weights = [
                    0x6fd8, // 0.436893 
                    0x6ae0, // 0.417476 
                    0x1166, // 0.067961 
                    0x09f1, // 0.038835 
                    0x0775, // 0.029126 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // git
            case 0x00746967:
            {
                const  data_chars   = "asoe";
                const data_weights = [
                    0xc825, // 0.781818 
                    0x2095, // 0.127273 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // giu
            case 0x00756967:
            {
                const  data_chars   = "rdc";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // giw
            case 0x00776967:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // giy
            case 0x00796967:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // giz
            case 0x007a6967:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x9e7a, // 0.619048 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gka
            case 0x00616b67:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gla
            case 0x00616c67:
            {
                const  data_chars   = "sc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gle
            case 0x00656c67:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gli
            case 0x00696c67:
            {
                const  data_chars   = "cs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // glo
            case 0x006f6c67:
            {
                const  data_chars   = "brv";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gna
            case 0x00616e67:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gne
            case 0x00656e67:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goa
            case 0x00616f67:
            {
                const  data_chars   = "kr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gob
            case 0x00626f67:
            {
                const  data_chars   = "aouyi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goc
            case 0x00636f67:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // god
            case 0x00646f67:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xaf28, // 0.684211 
                    0x4a1b, // 0.289474 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goe
            case 0x00656f67:
            {
                const  data_chars   = "nmczsghk";
                const data_weights = [
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gof
            case 0x00666f67:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gog
            case 0x00676f67:
            {
                const  data_chars   = "aoiy";
                const data_weights = [
                    0xa5a6, // 0.647059 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goh
            case 0x00686f67:
            {
                const  data_chars   = "aoyi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3bbc, // 0.233333 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goi
            case 0x00696f67:
            {
                const  data_chars   = "sncwkgid";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goj
            case 0x006a6f67:
            {
                const  data_chars   = "oiu";
                const data_weights = [
                    0x70f1, // 0.441176 
                    0x5a5a, // 0.352941 
                    0x34b5, // 0.205882 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gok
            case 0x006b6f67:
            {
                const  data_chars   = "uaoei";
                const data_weights = [
                    0x64d9, // 0.393939 
                    0x433b, // 0.262626 
                    0x1f08, // 0.121212 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gol
            case 0x006c6f67:
            {
                const  data_chars   = "di";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gom
            case 0x006d6f67:
            {
                const  data_chars   = "eaiouyb";
                const data_weights = [
                    0x677d, // 0.404255 
                    0x3ea3, // 0.244681 
                    0x3678, // 0.212766 
                    0x15ca, // 0.085106 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x02b9, // 0.010638 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gon
            case 0x006e6f67:
            {
                const  data_chars   = "ogaidnjystkzreb";
                const data_weights = [
                    0x7967, // 0.474227 
                    0x1fac, // 0.123711 
                    0x1a64, // 0.103093 
                    0x0fd6, // 0.061856 
                    0x0fd6, // 0.061856 
                    0x07eb, // 0.030928 
                    0x07eb, // 0.030928 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goo
            case 0x006f6f67:
            {
                const  data_chars   = "dntzkrsc";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gop
            case 0x00706f67:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gor
            case 0x00726f67:
            {
                const  data_chars   = "oiyaueg";
                const data_weights = [
                    0x6305, // 0.386792 
                    0x4ade, // 0.292453 
                    0x2b79, // 0.169811 
                    0x1827, // 0.094340 
                    0x073f, // 0.028302 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gos
            case 0x00736f67:
            {
                const  data_chars   = "haeuoi";
                const data_weights = [
                    0x9e11, // 0.617450 
                    0x2cac, // 0.174497 
                    0x2415, // 0.140940 
                    0x0a4f, // 0.040268 
                    0x0528, // 0.020134 
                    0x01b8, // 0.006711 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // got
            case 0x00746f67:
            {
                const  data_chars   = "aoes";
                const data_weights = [
                    0x5f86, // 0.373134 
                    0x5bb4, // 0.358209 
                    0x3950, // 0.223881 
                    0x0b76, // 0.044776 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gou
            case 0x00756f67:
            {
                const  data_chars   = "ckrszno";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gov
            case 0x00766f67:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gow
            case 0x00776f67:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goy
            case 0x00796f67:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd4bb, // 0.830986 
                    0x1cd8, // 0.112676 
                    0x0e6c, // 0.056338 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // goz
            case 0x007a6f67:
            {
                const  data_chars   = "aeuo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gra
            case 0x00617267:
            {
                const  data_chars   = "ncs";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gre
            case 0x00657267:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gro
            case 0x006f7267:
            {
                const  data_chars   = "uv";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gsh
            case 0x00687367:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gto
            case 0x006f7467:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gua
            case 0x00617567:
            {
                const  data_chars   = "inu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gub
            case 0x00627567:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guc
            case 0x00637567:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0xff41, // 0.997093 
                    0x00bf, // 0.002907 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gud
            case 0x00647567:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gue
            case 0x00657567:
            {
                const  data_chars   = "scr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gug
            case 0x00677567:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guh
            case 0x00687567:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gui
            case 0x00697567:
            {
                const  data_chars   = "sndk";
                const data_weights = [
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guj
            case 0x006a7567:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guk
            case 0x006b7567:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gum
            case 0x006d7567:
            {
                const  data_chars   = "iaeoymb";
                const data_weights = [
                    0x7e7e, // 0.494118 
                    0x5454, // 0.329412 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0909, // 0.035294 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gun
            case 0x006e7567:
            {
                const  data_chars   = "imoanczjdgtkrb";
                const data_weights = [
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gur
            case 0x00727567:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x7442, // 0.454128 
                    0x3f6a, // 0.247706 
                    0x2dcc, // 0.178899 
                    0x13f7, // 0.077982 
                    0x0a92, // 0.041284 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gus
            case 0x00737567:
            {
                const  data_chars   = "uhas";
                const data_weights = [
                    0x710a, // 0.441558 
                    0x531e, // 0.324675 
                    0x3885, // 0.220779 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gut
            case 0x00747567:
            {
                const  data_chars   = "asot";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guu
            case 0x00757567:
            {
                const  data_chars   = "zb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guw
            case 0x00777567:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guy
            case 0x00797567:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // guz
            case 0x007a7567:
            {
                const  data_chars   = "ueo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gwa
            case 0x00617767:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gwe
            case 0x00657767:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gya
            case 0x00617967:
            {
                const  data_chars   = "kg";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gyo
            case 0x006f7967:
            {
                const  data_chars   = "ukjdstnemrgzch";
                const data_weights = [
                    0x2fa1, // 0.186047 
                    0x2ca7, // 0.174419 
                    0x1aca, // 0.104651 
                    0x1aca, // 0.104651 
                    0x14d6, // 0.081395 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gyt
            case 0x00747967:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // gyu
            case 0x00757967:
            {
                const  data_chars   = "uncabdfok";
                const data_weights = [
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // g
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'h':
        {
            switch ( trigram_u32 )
            {
            // haa
            case 0x00616168:
            {
                const  data_chars   = "cdnp";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hab
            case 0x00626168:
            {
                const  data_chars   = "auioe";
                const data_weights = [
                    0x63e7, // 0.390244 
                    0x512c, // 0.317073 
                    0x1f38, // 0.121951 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hac
            case 0x00636168:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // had
            case 0x00646168:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xd249, // 0.821429 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hae
            case 0x00656168:
            {
                const  data_chars   = "nmbl";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // haf
            case 0x00666168:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hag
            case 0x00676168:
            {
                const  data_chars   = "iaueoy";
                const data_weights = [
                    0x9679, // 0.587786 
                    0x1f44, // 0.122137 
                    0x1f44, // 0.122137 
                    0x138b, // 0.076336 
                    0x138b, // 0.076336 
                    0x03e9, // 0.015267 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hah
            case 0x00686168:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hai
            case 0x00696168:
            {
                const  data_chars   = "nkdrjsmtbzgiwyf";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1aab, // 0.104167 
                    0x1aab, // 0.104167 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // haj
            case 0x006a6168:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hak
            case 0x006b6168:
            {
                const  data_chars   = "uoakei";
                const data_weights = [
                    0x7edb, // 0.495536 
                    0x3249, // 0.196429 
                    0x2a49, // 0.165179 
                    0x1492, // 0.080357 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hal
            case 0x006c6168:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ham
            case 0x006d6168:
            {
                const  data_chars   = "aioubem";
                const data_weights = [
                    0xf07c, // 0.939394 
                    0x083e, // 0.032197 
                    0x0365, // 0.013258 
                    0x026d, // 0.009470 
                    0x007c, // 0.001894 
                    0x007c, // 0.001894 
                    0x007c, // 0.001894 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // han
            case 0x006e6168:
            {
                const  data_chars   = "aeondtzskbgyjiurpw";
                const data_weights = [
                    0xa208, // 0.632941 
                    0x13e1, // 0.077647 
                    0x0c0c, // 0.047059 
                    0x0a3d, // 0.040000 
                    0x086f, // 0.032941 
                    0x073a, // 0.028235 
                    0x06a0, // 0.025882 
                    0x056c, // 0.021176 
                    0x0437, // 0.016471 
                    0x0437, // 0.016471 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0269, // 0.009412 
                    0x0269, // 0.009412 
                    0x01cf, // 0.007059 
                    0x0134, // 0.004706 
                    0x0134, // 0.004706 
                    0x009a, // 0.002353 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hao
            case 0x006f6168:
            {
                const  data_chars   = "ybis";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hap
            case 0x00706168:
            {
                const  data_chars   = "pue";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // har
            case 0x00726168:
            {
                const  data_chars   = "auioebymdfg";
                const data_weights = [
                    0xb294, // 0.697576 
                    0x308e, // 0.189673 
                    0x1213, // 0.070601 
                    0x03c7, // 0.014752 
                    0x033d, // 0.012645 
                    0x019e, // 0.006322 
                    0x00cf, // 0.003161 
                    0x008a, // 0.002107 
                    0x0045, // 0.001054 
                    0x0045, // 0.001054 
                    0x0045, // 0.001054 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // has
            case 0x00736168:
            {
                const  data_chars   = "heauskn";
                const data_weights = [
                    0xb2cb, // 0.698413 
                    0x1555, // 0.083333 
                    0x1451, // 0.079365 
                    0x1249, // 0.071429 
                    0x0f3d, // 0.059524 
                    0x0104, // 0.003968 
                    0x0104, // 0.003968 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hat
            case 0x00746168:
            {
                const  data_chars   = "astocei";
                const data_weights = [
                    0x9d7c, // 0.615176 
                    0x2dca, // 0.178862 
                    0x136d, // 0.075881 
                    0x1158, // 0.067751 
                    0x09b6, // 0.037940 
                    0x04db, // 0.018970 
                    0x0163, // 0.005420 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hau
            case 0x00756168:
            {
                const  data_chars   = "sb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // haw
            case 0x00776168:
            {
                const  data_chars   = "ak";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hay
            case 0x00796168:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xf582, // 0.959016 
                    0x0865, // 0.032787 
                    0x0219, // 0.008197 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // haz
            case 0x007a6168:
            {
                const  data_chars   = "aue";
                const data_weights = [
                    0x895e, // 0.536585 
                    0x63e7, // 0.390244 
                    0x12bb, // 0.073171 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hbo
            case 0x006f6268:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hch
            case 0x00686368:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hci
            case 0x00696368:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hea
            case 0x00616568:
            {
                const  data_chars   = "rtd";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // heb
            case 0x00626568:
            {
                const  data_chars   = "ioau";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hed
            case 0x00646568:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // heg
            case 0x00676568:
            {
                const  data_chars   = "uoai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hei
            case 0x00696568:
            {
                const  data_chars   = "swkcjgrndzatyihbm";
                const data_weights = [
                    0x3513, // 0.207317 
                    0x1f38, // 0.121951 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0f9c, // 0.060976 
                    0x0f9c, // 0.060976 
                    0x0f9c, // 0.060976 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x095e, // 0.036585 
                    0x095e, // 0.036585 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hej
            case 0x006a6568:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hek
            case 0x006b6568:
            {
                const  data_chars   = "ikuao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hel
            case 0x006c6568:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hem
            case 0x006d6568:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hen
            case 0x006e6568:
            {
                const  data_chars   = "ajnkszdogtmp";
                const data_weights = [
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hep
            case 0x00706568:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // her
            case 0x00726568:
            {
                const  data_chars   = "aibmuno";
                const data_weights = [
                    0x6f4e, // 0.434783 
                    0x37a7, // 0.217391 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hes
            case 0x00736568:
            {
                const  data_chars   = "aho";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // het
            case 0x00746568:
            {
                const  data_chars   = "aso";
                const data_weights = [
                    0xb4b5, // 0.705882 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hey
            case 0x00796568:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hga
            case 0x00616768:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hgs
            case 0x00736768:
            {
                const  data_chars   = "th";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hhi
            case 0x00696868:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hia
            case 0x00616968:
            {
                const  data_chars   = "irsgktwmczondbyu";
                const data_weights = [
                    0x3019, // 0.187879 
                    0x2b71, // 0.169697 
                    0x18d3, // 0.096970 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x0c6a, // 0.048485 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x0635, // 0.024242 
                    0x0635, // 0.024242 
                    0x04a8, // 0.018182 
                    0x018d, // 0.006061 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hib
            case 0x00626968:
            {
                const  data_chars   = "aeuoiy";
                const data_weights = [
                    0x7c06, // 0.484461 
                    0x3a80, // 0.228519 
                    0x2750, // 0.153565 
                    0x11c9, // 0.069470 
                    0x0f72, // 0.060329 
                    0x00f0, // 0.003656 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hic
            case 0x00636968:
            {
                const  data_chars   = "hl";
                const data_weights = [
                    0xff0a, // 0.996241 
                    0x00f6, // 0.003759 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hid
            case 0x00646968:
            {
                const  data_chars   = "aoeuz";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x4750, // 0.278571 
                    0x2eef, // 0.183333 
                    0x009c, // 0.002381 
                    0x009c, // 0.002381 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hie
            case 0x00656968:
            {
                const  data_chars   = "nkidmbrhsgozc";
                const data_weights = [
                    0x3ef3, // 0.245902 
                    0x2e2a, // 0.180328 
                    0x29f8, // 0.163934 
                    0x192e, // 0.098361 
                    0x14fc, // 0.081967 
                    0x0c97, // 0.049180 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hif
            case 0x00666968:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hig
            case 0x00676968:
            {
                const  data_chars   = "aoeuihys";
                const data_weights = [
                    0xa26b, // 0.634449 
                    0x21a0, // 0.131351 
                    0x1f68, // 0.122677 
                    0x0f3a, // 0.059480 
                    0x0bbd, // 0.045849 
                    0x00a2, // 0.002478 
                    0x00a2, // 0.002478 
                    0x0051, // 0.001239 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hih
            case 0x00686968:
            {
                const  data_chars   = "aioey";
                const data_weights = [
                    0x8314, // 0.512028 
                    0x3cb3, // 0.237113 
                    0x3af1, // 0.230241 
                    0x0466, // 0.017182 
                    0x00e1, // 0.003436 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hii
            case 0x00696968:
            {
                const  data_chars   = "snkwcdbmtzrgjheya";
                const data_weights = [
                    0x2e48, // 0.180791 
                    0x2428, // 0.141243 
                    0x1b7b, // 0.107345 
                    0x1724, // 0.090395 
                    0x15b2, // 0.084746 
                    0x0fe9, // 0.062147 
                    0x0fe9, // 0.062147 
                    0x0fe9, // 0.062147 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x08ae, // 0.033898 
                    0x05c9, // 0.022599 
                    0x0457, // 0.016949 
                    0x02e5, // 0.011299 
                    0x02e5, // 0.011299 
                    0x0172, // 0.005650 
                    0x0172, // 0.005650 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hij
            case 0x006a6968:
            {
                const  data_chars   = "iouahy";
                const data_weights = [
                    0x7e45, // 0.493243 
                    0x5bad, // 0.358108 
                    0x1d68, // 0.114865 
                    0x0530, // 0.020270 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hik
            case 0x006b6968:
            {
                const  data_chars   = "aioueyk";
                const data_weights = [
                    0x5cd4, // 0.362611 
                    0x489d, // 0.283642 
                    0x2ab3, // 0.166801 
                    0x2312, // 0.136986 
                    0x0704, // 0.027397 
                    0x0318, // 0.012087 
                    0x02af, // 0.010475 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hil
            case 0x006c6968:
            {
                const  data_chars   = "liot";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // him
            case 0x006d6968:
            {
                const  data_chars   = "oaieumby";
                const data_weights = [
                    0x7c00, // 0.484382 
                    0x5cb1, // 0.362077 
                    0x1309, // 0.074351 
                    0x0a06, // 0.039155 
                    0x0615, // 0.023757 
                    0x0327, // 0.012319 
                    0x0090, // 0.002200 
                    0x0073, // 0.001760 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hin
            case 0x006e6968:
            {
                const  data_chars   = "oakmsdtinjgyezuhbcfprw";
                const data_weights = [
                    0x5103, // 0.316448 
                    0x31fa, // 0.195219 
                    0x1077, // 0.064314 
                    0x0cf8, // 0.050655 
                    0x0c18, // 0.047240 
                    0x0ba8, // 0.045532 
                    0x09c3, // 0.038133 
                    0x0978, // 0.036995 
                    0x06d9, // 0.026750 
                    0x05af, // 0.022197 
                    0x0589, // 0.021628 
                    0x0484, // 0.017644 
                    0x043a, // 0.016505 
                    0x043a, // 0.016505 
                    0x0414, // 0.015936 
                    0x03ef, // 0.015367 
                    0x03ca, // 0.014798 
                    0x03ca, // 0.014798 
                    0x01e5, // 0.007399 
                    0x01c0, // 0.006830 
                    0x019a, // 0.006261 
                    0x00ba, // 0.002846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hio
            case 0x006f6968:
            {
                const  data_chars   = "kgnmditjhybzcsrewufap";
                const data_weights = [
                    0x2b11, // 0.168224 
                    0x17ed, // 0.093458 
                    0x14bc, // 0.080997 
                    0x13f0, // 0.077882 
                    0x1324, // 0.074766 
                    0x118c, // 0.068536 
                    0x10bf, // 0.065421 
                    0x0f27, // 0.059190 
                    0x0e5b, // 0.056075 
                    0x0cc3, // 0.049844 
                    0x0bf6, // 0.046729 
                    0x08c6, // 0.034268 
                    0x07fa, // 0.031153 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x0331, // 0.012461 
                    0x0264, // 0.009346 
                    0x0198, // 0.006231 
                    0x00cc, // 0.003115 
                    0x00cc, // 0.003115 
                    0x00cc, // 0.003115 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hip
            case 0x00706968:
            {
                const  data_chars   = "pouea";
                const data_weights = [
                    0xb426, // 0.703704 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hir
            case 0x00726968:
            {
                const  data_chars   = "aoiuey";
                const data_weights = [
                    0x6d77, // 0.427591 
                    0x6a7a, // 0.415923 
                    0x1bc3, // 0.108442 
                    0x06ad, // 0.026081 
                    0x032a, // 0.012354 
                    0x0276, // 0.009609 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // his
            case 0x00736968:
            {
                const  data_chars   = "ahueoskymtc";
                const data_weights = [
                    0x6dff, // 0.429668 
                    0x5c51, // 0.360614 
                    0x159b, // 0.084399 
                    0x1255, // 0.071611 
                    0x0883, // 0.033248 
                    0x01f7, // 0.007673 
                    0x00a8, // 0.002558 
                    0x00a8, // 0.002558 
                    0x00a8, // 0.002558 
                    0x00a8, // 0.002558 
                    0x00a8, // 0.002558 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hit
            case 0x00746968:
            {
                const  data_chars   = "aosetci";
                const data_weights = [
                    0x9395, // 0.576487 
                    0x3ebb, // 0.245042 
                    0x1792, // 0.092068 
                    0x1168, // 0.067989 
                    0x0343, // 0.012748 
                    0x0116, // 0.004249 
                    0x005d, // 0.001416 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hiu
            case 0x00756968:
            {
                const  data_chars   = "rcsnmedtwzobg";
                const data_weights = [
                    0x5333, // 0.325000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hiv
            case 0x00766968:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hiw
            case 0x00776968:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0xfc00, // 0.984375 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hiy
            case 0x00796968:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xa774, // 0.654110 
                    0x49a5, // 0.287671 
                    0x0ee7, // 0.058219 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hiz
            case 0x007a6968:
            {
                const  data_chars   = "uaeo";
                const data_weights = [
                    0x7297, // 0.447619 
                    0x5f16, // 0.371429 
                    0x1c0a, // 0.109524 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hka
            case 0x00616b68:
            {
                const  data_chars   = "wa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hla
            case 0x00616c68:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hma
            case 0x00616d68:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hmo
            case 0x006f6d68:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hne
            case 0x00656e68:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hno
            case 0x006f6e68:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoa
            case 0x00616f68:
            {
                const  data_chars   = "ngls";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hob
            case 0x00626f68:
            {
                const  data_chars   = "uaoeiy";
                const data_weights = [
                    0x57ac, // 0.342466 
                    0x4623, // 0.273973 
                    0x381c, // 0.219178 
                    0x188c, // 0.095890 
                    0x0e07, // 0.054795 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoc
            case 0x00636f68:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xf5c3, // 0.960000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hod
            case 0x00646f68:
            {
                const  data_chars   = "oaeu";
                const data_weights = [
                    0x7777, // 0.466667 
                    0x5f93, // 0.373333 
                    0x258c, // 0.146667 
                    0x036a, // 0.013333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoe
            case 0x00656f68:
            {
                const  data_chars   = "ni";
                const data_weights = [
                    0x9555, // 0.583333 
                    0x6aab, // 0.416667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hof
            case 0x00666f68:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hog
            case 0x00676f68:
            {
                const  data_chars   = "aeuioy";
                const data_weights = [
                    0x84dc, // 0.518987 
                    0x23a5, // 0.139241 
                    0x2068, // 0.126582 
                    0x19ed, // 0.101266 
                    0x16af, // 0.088608 
                    0x067b, // 0.025316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoh
            case 0x00686f68:
            {
                const  data_chars   = "oeai";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoi
            case 0x00696f68:
            {
                const  data_chars   = "nckgrs";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoj
            case 0x006a6f68:
            {
                const  data_chars   = "iaou";
                const data_weights = [
                    0xb503, // 0.707071 
                    0x219e, // 0.131313 
                    0x14b0, // 0.080808 
                    0x14b0, // 0.080808 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hok
            case 0x006b6f68:
            {
                const  data_chars   = "uaokiey";
                const data_weights = [
                    0x711e, // 0.441860 
                    0x2ea3, // 0.182171 
                    0x21bd, // 0.131783 
                    0x1bc8, // 0.108527 
                    0x15d4, // 0.085271 
                    0x0aea, // 0.042636 
                    0x01fc, // 0.007752 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hol
            case 0x006c6f68:
            {
                const  data_chars   = "iel";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hom
            case 0x006d6f68:
            {
                const  data_chars   = "ameiuybo";
                const data_weights = [
                    0x4a46, // 0.290123 
                    0x4588, // 0.271605 
                    0x40ca, // 0.253086 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x07e7, // 0.030864 
                    0x0652, // 0.024691 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hon
            case 0x006e6f68:
            {
                const  data_chars   = "gmojackstdbnizyehrupf";
                const data_weights = [
                    0x1ed6, // 0.120448 
                    0x1e1e, // 0.117647 
                    0x1caf, // 0.112045 
                    0x14cc, // 0.081232 
                    0x12a5, // 0.072829 
                    0x1136, // 0.067227 
                    0x0fc7, // 0.061625 
                    0x0da0, // 0.053221 
                    0x0ce8, // 0.050420 
                    0x0b79, // 0.044818 
                    0x0a0a, // 0.039216 
                    0x0952, // 0.036415 
                    0x07e3, // 0.030812 
                    0x07e3, // 0.030812 
                    0x072c, // 0.028011 
                    0x05bd, // 0.022409 
                    0x02de, // 0.011204 
                    0x0227, // 0.008403 
                    0x016f, // 0.005602 
                    0x00b8, // 0.002801 
                    0x00b8, // 0.002801 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoo
            case 0x006f6f68:
            {
                const  data_chars   = "njlck";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hop
            case 0x00706f68:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hor
            case 0x00726f68:
            {
                const  data_chars   = "oiayeu";
                const data_weights = [
                    0x71b0, // 0.444099 
                    0x60fe, // 0.378882 
                    0x1b08, // 0.105590 
                    0x07f3, // 0.031056 
                    0x0591, // 0.021739 
                    0x04c5, // 0.018634 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hos
            case 0x00736f68:
            {
                const  data_chars   = "hoeuaspt";
                const data_weights = [
                    0x7b7f, // 0.482412 
                    0x5631, // 0.336683 
                    0x1203, // 0.070352 
                    0x0b94, // 0.045226 
                    0x0901, // 0.035176 
                    0x0525, // 0.020101 
                    0x0149, // 0.005025 
                    0x0149, // 0.005025 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hot
            case 0x00746f68:
            {
                const  data_chars   = "oaetsc";
                const data_weights = [
                    0x5454, // 0.329412 
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x1b1b, // 0.105882 
                    0x0f0f, // 0.058824 
                    0x0909, // 0.035294 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hou
            case 0x00756f68:
            {
                const  data_chars   = "ksghrjnbdmctoazy";
                const data_weights = [
                    0x3885, // 0.220779 
                    0x2b39, // 0.168831 
                    0x1a99, // 0.103896 
                    0x13f3, // 0.077922 
                    0x13f3, // 0.077922 
                    0x10a0, // 0.064935 
                    0x10a0, // 0.064935 
                    0x0d4c, // 0.051948 
                    0x09f9, // 0.038961 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // how
            case 0x00776f68:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoy
            case 0x00796f68:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x8c63, // 0.548387 
                    0x5295, // 0.322581 
                    0x2108, // 0.129032 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hoz
            case 0x007a6f68:
            {
                const  data_chars   = "uaeo";
                const data_weights = [
                    0x87d6, // 0.530612 
                    0x3978, // 0.224490 
                    0x2492, // 0.142857 
                    0x1a1f, // 0.102041 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hre
            case 0x00657268:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hri
            case 0x00697268:
            {
                const  data_chars   = "sk";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hsa
            case 0x00617368:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hsu
            case 0x00757368:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hta
            case 0x00617468:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hte
            case 0x00657468:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hto
            case 0x006f7468:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hua
            case 0x00617568:
            {
                const  data_chars   = "wiknr";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hub
            case 0x00627568:
            {
                const  data_chars   = "euoya";
                const data_weights = [
                    0xb13b, // 0.692308 
                    0x2df3, // 0.179487 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huc
            case 0x00637568:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hud
            case 0x00647568:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hue
            case 0x00657568:
            {
                const  data_chars   = "nsi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huf
            case 0x00667568:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hug
            case 0x00677568:
            {
                const  data_chars   = "aouie";
                const data_weights = [
                    0x90b2, // 0.565217 
                    0x42c8, // 0.260870 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huh
            case 0x00687568:
            {
                const  data_chars   = "oigae";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hui
            case 0x00697568:
            {
                const  data_chars   = "cns";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huj
            case 0x006a7568:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0x9555, // 0.583333 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huk
            case 0x006b7568:
            {
                const  data_chars   = "uaoeyik";
                const data_weights = [
                    0xbc61, // 0.735849 
                    0x1a91, // 0.103774 
                    0x10e8, // 0.066038 
                    0x0c13, // 0.047170 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hum
            case 0x006d7568:
            {
                const  data_chars   = "abouim";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hun
            case 0x006e7568:
            {
                const  data_chars   = "akbtoiszdncgjpyu";
                const data_weights = [
                    0x3878, // 0.220588 
                    0x34b5, // 0.205882 
                    0x1e1e, // 0.117647 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huo
            case 0x006f7568:
            {
                const  data_chars   = "mkrhncdstgi";
                const data_weights = [
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hup
            case 0x00707568:
            {
                const  data_chars   = "poe";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hur
            case 0x00727568:
            {
                const  data_chars   = "uaieoc";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hus
            case 0x00737568:
            {
                const  data_chars   = "hsuaeo";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x26ca, // 0.151515 
                    0x26ca, // 0.151515 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hut
            case 0x00747568:
            {
                const  data_chars   = "osaec";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huu
            case 0x00757568:
            {
                const  data_chars   = "skrmdgnhbczio";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x238e, // 0.138889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huw
            case 0x00777568:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huy
            case 0x00797568:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // huz
            case 0x007a7568:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hvd
            case 0x00647668:
            {
                return 'c';
            }
            break;

            // hwa
            case 0x00617768:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hwo
            case 0x006f7768:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hya
            case 0x00617968:
            {
                const  data_chars   = "ktr";
                const data_weights = [
                    0xf2df, // 0.948718 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hyd
            case 0x00647968:
            {
                return 'r';
            }
            break;

            // hyo
            case 0x006f7968:
            {
                const  data_chars   = "ugtkndsrem";
                const data_weights = [
                    0x3a84, // 0.228571 
                    0x3a84, // 0.228571 
                    0x2492, // 0.142857 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // hyu
            case 0x00757968:
            {
                const  data_chars   = "gdu";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // h
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'i':
        {
            switch ( trigram_u32 )
            {
            // iab
            case 0x00626169:
            {
                const  data_chars   = "uai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iac
            case 0x00636169:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iad
            case 0x00646169:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iae
            case 0x00656169:
            {
                const  data_chars   = "zb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iag
            case 0x00676169:
            {
                const  data_chars   = "eai";
                const data_weights = [
                    0xbd38, // 0.739130 
                    0x3d38, // 0.239130 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iai
            case 0x00696169:
            {
                const  data_chars   = "nmdgkzoc";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iaj
            case 0x006a6169:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iak
            case 0x006b6169:
            {
                const  data_chars   = "aieuow";
                const data_weights = [
                    0x599a, // 0.350000 
                    0x5555, // 0.333333 
                    0x3777, // 0.216667 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ial
            case 0x006c6169:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iam
            case 0x006d6169:
            {
                const  data_chars   = "iau";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ian
            case 0x006e6169:
            {
                const  data_chars   = "ajbdgnrcosz";
                const data_weights = [
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iao
            case 0x006f6169:
            {
                const  data_chars   = "yiknmwd";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iap
            case 0x00706169:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iar
            case 0x00726169:
            {
                const  data_chars   = "aiu";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x43eb, // 0.265306 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ias
            case 0x00736169:
            {
                const  data_chars   = "ahouks";
                const data_weights = [
                    0x86bd, // 0.526316 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iat
            case 0x00746169:
            {
                const  data_chars   = "saeou";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iaw
            case 0x00776169:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iay
            case 0x00796169:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iaz
            case 0x007a6169:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iba
            case 0x00616269:
            {
                const  data_chars   = "rnstymckhbudgjzoifaw";
                const data_weights = [
                    0x564c, // 0.337104 
                    0x291f, // 0.160633 
                    0x25a6, // 0.147059 
                    0x1038, // 0.063348 
                    0x0a6d, // 0.040724 
                    0x09d9, // 0.038462 
                    0x0944, // 0.036199 
                    0x08b0, // 0.033937 
                    0x05cb, // 0.022624 
                    0x0536, // 0.020362 
                    0x04a2, // 0.018100 
                    0x04a2, // 0.018100 
                    0x037a, // 0.013575 
                    0x037a, // 0.013575 
                    0x02e5, // 0.011312 
                    0x0251, // 0.009050 
                    0x01bd, // 0.006787 
                    0x0129, // 0.004525 
                    0x0094, // 0.002262 
                    0x0094, // 0.002262 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ibe
            case 0x00656269:
            {
                const  data_chars   = "tnscipdrfahmoye";
                const data_weights = [
                    0xbf31, // 0.746835 
                    0x0e95, // 0.056962 
                    0x0b57, // 0.044304 
                    0x09b9, // 0.037975 
                    0x04dc, // 0.018987 
                    0x04dc, // 0.018987 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ibi
            case 0x00696269:
            {
                const  data_chars   = "rtknsywjhagfbicu";
                const data_weights = [
                    0x64f5, // 0.394366 
                    0x240e, // 0.140845 
                    0x240e, // 0.140845 
                    0x1207, // 0.070423 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ibo
            case 0x006f6269:
            {
                const  data_chars   = "rkstnujgizdyewb";
                const data_weights = [
                    0x56b6, // 0.338710 
                    0x1ce7, // 0.112903 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x14a5, // 0.080645 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ibu
            case 0x00756269:
            {
                const  data_chars   = "knctsrymduei";
                const data_weights = [
                    0x2fe3, // 0.187050 
                    0x2c34, // 0.172662 
                    0x2a5c, // 0.165468 
                    0x2885, // 0.158273 
                    0x2127, // 0.129496 
                    0x1d78, // 0.115108 
                    0x075e, // 0.028777 
                    0x03af, // 0.014388 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iby
            case 0x00796269:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ica
            case 0x00616369:
            {
                const  data_chars   = "ltn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // icc
            case 0x00636369:
            {
                const  data_chars   = "hu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ice
            case 0x00656369:
            {
                const  data_chars   = "ba";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ich
            case 0x00686369:
            {
                const  data_chars   = "oiuab";
                const data_weights = [
                    0x7cfe, // 0.488246 
                    0x7b73, // 0.482218 
                    0x0452, // 0.016878 
                    0x0316, // 0.012055 
                    0x0028, // 0.000603 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ici
            case 0x00696369:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // icl
            case 0x006c6369:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // icn
            case 0x006e6369:
            {
                return 'i';
            }
            break;

            // ico
            case 0x006f6369:
            {
                const  data_chars   = "lh";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ict
            case 0x00746369:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ida
            case 0x00616469:
            {
                const  data_chars   = "inkrtcsghybfdwjmzola";
                const data_weights = [
                    0x7632, // 0.461702 
                    0x2caa, // 0.174468 
                    0x1427, // 0.078723 
                    0x0eb5, // 0.057447 
                    0x0e29, // 0.055319 
                    0x0d9e, // 0.053191 
                    0x08b7, // 0.034043 
                    0x0689, // 0.025532 
                    0x0345, // 0.012766 
                    0x02b9, // 0.010638 
                    0x022e, // 0.008511 
                    0x0117, // 0.004255 
                    0x0117, // 0.004255 
                    0x0117, // 0.004255 
                    0x0117, // 0.004255 
                    0x008b, // 0.002128 
                    0x008b, // 0.002128 
                    0x008b, // 0.002128 
                    0x008b, // 0.002128 
                    0x008b, // 0.002128 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idd
            case 0x00646469:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ide
            case 0x00656469:
            {
                const  data_chars   = "nsrmtkyghocabjiuw";
                const data_weights = [
                    0x3d82, // 0.240260 
                    0x3885, // 0.220779 
                    0x1c42, // 0.110390 
                    0x18ef, // 0.097403 
                    0x1249, // 0.071429 
                    0x0d4c, // 0.051948 
                    0x09f9, // 0.038961 
                    0x09f9, // 0.038961 
                    0x0850, // 0.032468 
                    0x06a6, // 0.025974 
                    0x04fd, // 0.019481 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x01aa, // 0.006494 
                    0x01aa, // 0.006494 
                    0x01aa, // 0.006494 
                    0x01aa, // 0.006494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idg
            case 0x00676469:
            {
                return 'e';
            }
            break;

            // idh
            case 0x00686469:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idi
            case 0x00696469:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idj
            case 0x006a6469:
            {
                return 'i';
            }
            break;

            // idl
            case 0x006c6469:
            {
                return 'a';
            }
            break;

            // ido
            case 0x006f6469:
            {
                const  data_chars   = "rmnksgcbujihdztfaye";
                const data_weights = [
                    0x731a, // 0.449612 
                    0x29ad, // 0.162791 
                    0x13d8, // 0.077519 
                    0x0de4, // 0.054264 
                    0x09ec, // 0.038760 
                    0x08ee, // 0.034884 
                    0x06f2, // 0.027132 
                    0x06f2, // 0.027132 
                    0x05f4, // 0.023256 
                    0x04f6, // 0.019380 
                    0x04f6, // 0.019380 
                    0x04f6, // 0.019380 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x01fc, // 0.007752 
                    0x00fe, // 0.003876 
                    0x00fe, // 0.003876 
                    0x00fe, // 0.003876 
                    0x00fe, // 0.003876 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idt
            case 0x00746469:
            {
                return 'o';
            }
            break;

            // idu
            case 0x00756469:
            {
                const  data_chars   = "kh";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // idz
            case 0x007a6469:
            {
                return 'u';
            }
            break;

            // ieb
            case 0x00626569:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iec
            case 0x00636569:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ied
            case 0x00646569:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xc925, // 0.785714 
                    0x36db, // 0.214286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ieg
            case 0x00676569:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ieh
            case 0x00686569:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iei
            case 0x00696569:
            {
                const  data_chars   = "tfzdkgjc";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iej
            case 0x006a6569:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iek
            case 0x006b6569:
            {
                const  data_chars   = "ioau";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4000, // 0.250000 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iel
            case 0x006c6569:
            {
                const  data_chars   = "dp";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iem
            case 0x006d6569:
            {
                const  data_chars   = "aoib";
                const data_weights = [
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ien
            case 0x006e6569:
            {
                const  data_chars   = "aocgtdimbsu";
                const data_weights = [
                    0x469f, // 0.275862 
                    0x3dcb, // 0.241379 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ieo
            case 0x006f6569:
            {
                const  data_chars   = "ks";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ier
            case 0x00726569:
            {
                const  data_chars   = "uaio";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ies
            case 0x00736569:
            {
                const  data_chars   = "hae";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iet
            case 0x00746569:
            {
                const  data_chars   = "oan";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ieu
            case 0x00756569:
            {
                const  data_chars   = "ser";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iey
            case 0x00796569:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iez
            case 0x007a6569:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ife
            case 0x00656669:
            {
                const  data_chars   = "sc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ifi
            case 0x00696669:
            {
                const  data_chars   = "ce";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ift
            case 0x00746669:
            {
                const  data_chars   = "ye";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ifu
            case 0x00756669:
            {
                const  data_chars   = "knrjtscmdguh";
                const data_weights = [
                    0x5800, // 0.343750 
                    0x2d55, // 0.177083 
                    0x1d55, // 0.114583 
                    0x1955, // 0.098958 
                    0x1555, // 0.083333 
                    0x12ab, // 0.072917 
                    0x0d55, // 0.052083 
                    0x06ab, // 0.026042 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x0155, // 0.005208 
                    0x0155, // 0.005208 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iga
            case 0x00616769:
            {
                const  data_chars   = "swotkmnhyiruedzafjb";
                const data_weights = [
                    0x46b1, // 0.276134 
                    0x2c2e, // 0.172584 
                    0x19c0, // 0.100592 
                    0x126e, // 0.071992 
                    0x1069, // 0.064103 
                    0x0e23, // 0.055227 
                    0x0da2, // 0.053254 
                    0x0ce0, // 0.050296 
                    0x0bde, // 0.046351 
                    0x0793, // 0.029586 
                    0x060f, // 0.023669 
                    0x050d, // 0.019724 
                    0x0348, // 0.012821 
                    0x0246, // 0.008876 
                    0x00c2, // 0.002959 
                    0x00c2, // 0.002959 
                    0x00c2, // 0.002959 
                    0x00c2, // 0.002959 
                    0x00c2, // 0.002959 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ige
            case 0x00656769:
            {
                const  data_chars   = "ntmkyhodirjzsafcb";
                const data_weights = [
                    0x428f, // 0.260000 
                    0x3852, // 0.220000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // igh
            case 0x00686769:
            {
                const  data_chars   = "tl";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // igi
            case 0x00696769:
            {
                const  data_chars   = "srnmtwcgjkybhfdpaio";
                const data_weights = [
                    0x3119, // 0.191781 
                    0x3119, // 0.191781 
                    0x1f90, // 0.123288 
                    0x1c0e, // 0.109589 
                    0x1189, // 0.068493 
                    0x0e07, // 0.054795 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ign
            case 0x006e6769:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // igo
            case 0x006f6769:
            {
                const  data_chars   = "srctkmneyzbdhijougal";
                const data_weights = [
                    0x24c6, // 0.143646 
                    0x1f1e, // 0.121547 
                    0x180b, // 0.093923 
                    0x180b, // 0.093923 
                    0x13cd, // 0.077348 
                    0x1263, // 0.071823 
                    0x10f9, // 0.066298 
                    0x10f9, // 0.066298 
                    0x0cbb, // 0.049724 
                    0x0b51, // 0.044199 
                    0x087c, // 0.033149 
                    0x0712, // 0.027624 
                    0x0712, // 0.027624 
                    0x05a8, // 0.022099 
                    0x043e, // 0.016575 
                    0x02d4, // 0.011050 
                    0x02d4, // 0.011050 
                    0x02d4, // 0.011050 
                    0x016a, // 0.005525 
                    0x016a, // 0.005525 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // igs
            case 0x00736769:
            {
                return 'h';
            }
            break;

            // igu
            case 0x00756769:
            {
                const  data_chars   = "crmsnwi";
                const data_weights = [
                    0x980f, // 0.593985 
                    0x2c45, // 0.172932 
                    0x1af3, // 0.105263 
                    0x1719, // 0.090226 
                    0x05c6, // 0.022556 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // igy
            case 0x00796769:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iha
            case 0x00616869:
            {
                const  data_chars   = "rmtsnckgyzidbejp";
                const data_weights = [
                    0x5ec6, // 0.370203 
                    0x3402, // 0.203160 
                    0x2590, // 0.146727 
                    0x13a6, // 0.076749 
                    0x102e, // 0.063205 
                    0x08ab, // 0.033860 
                    0x05c7, // 0.022573 
                    0x05c7, // 0.022573 
                    0x040c, // 0.015801 
                    0x02e4, // 0.011287 
                    0x0250, // 0.009029 
                    0x0250, // 0.009029 
                    0x01bc, // 0.006772 
                    0x0128, // 0.004515 
                    0x0094, // 0.002257 
                    0x0094, // 0.002257 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ihe
            case 0x00656869:
            {
                const  data_chars   = "inmtybe";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ihg
            case 0x00676869:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ihi
            case 0x00696869:
            {
                const  data_chars   = "rgknstdmyebojuc";
                const data_weights = [
                    0x4f68, // 0.310185 
                    0x484c, // 0.282407 
                    0x1ed1, // 0.120370 
                    0x1426, // 0.078704 
                    0x12f7, // 0.074074 
                    0x084c, // 0.032407 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x038e, // 0.013889 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iho
            case 0x006f6869:
            {
                const  data_chars   = "nrmkstudgzjbcayi";
                const data_weights = [
                    0x66ea, // 0.402010 
                    0x34be, // 0.206030 
                    0x1ee0, // 0.120603 
                    0x1871, // 0.095477 
                    0x0b94, // 0.045226 
                    0x066f, // 0.025126 
                    0x0525, // 0.020101 
                    0x03dc, // 0.015075 
                    0x03dc, // 0.015075 
                    0x03dc, // 0.015075 
                    0x0293, // 0.010050 
                    0x0293, // 0.010050 
                    0x0149, // 0.005025 
                    0x0149, // 0.005025 
                    0x0149, // 0.005025 
                    0x0149, // 0.005025 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ihy
            case 0x00796869:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iia
            case 0x00616969:
            {
                const  data_chars   = "cpr";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iib
            case 0x00626969:
            {
                const  data_chars   = "aoiue";
                const data_weights = [
                    0xae14, // 0.680000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iic
            case 0x00636969:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfbce, // 0.983607 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iid
            case 0x00646969:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x96f9, // 0.589744 
                    0x4ec5, // 0.307692 
                    0x1a42, // 0.102564 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iie
            case 0x00656969:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iig
            case 0x00676969:
            {
                const  data_chars   = "aiou";
                const data_weights = [
                    0x86bd, // 0.526316 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iih
            case 0x00686969:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iii
            case 0x00696969:
            {
                const  data_chars   = "dzcjn";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iij
            case 0x006a6969:
            {
                const  data_chars   = "iuo";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iik
            case 0x006b6969:
            {
                const  data_chars   = "ueaoik";
                const data_weights = [
                    0x4a34, // 0.289855 
                    0x467e, // 0.275362 
                    0x42c8, // 0.260870 
                    0x19f9, // 0.101449 
                    0x0ed7, // 0.057971 
                    0x03b6, // 0.014493 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iim
            case 0x006d6969:
            {
                const  data_chars   = "aoui";
                const data_weights = [
                    0xacf9, // 0.675676 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iin
            case 0x006e6969:
            {
                const  data_chars   = "aoeunbj";
                const data_weights = [
                    0x7249, // 0.446429 
                    0x6925, // 0.410714 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iio
            case 0x006f6969:
            {
                const  data_chars   = "kg";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iir
            case 0x00726969:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iis
            case 0x00736969:
            {
                const  data_chars   = "haosue";
                const data_weights = [
                    0xa238, // 0.633663 
                    0x32b1, // 0.198020 
                    0x1be2, // 0.108911 
                    0x0a23, // 0.039604 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iit
            case 0x00746969:
            {
                const  data_chars   = "aosec";
                const data_weights = [
                    0x7cb8, // 0.487179 
                    0x41a4, // 0.256410 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iiu
            case 0x00756969:
            {
                const  data_chars   = "cr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iiw
            case 0x00776969:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iiy
            case 0x00796969:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iiz
            case 0x007a6969:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0xb7cb, // 0.717949 
                    0x3b14, // 0.230769 
                    0x0d21, // 0.051282 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ija
            case 0x00616a69:
            {
                const  data_chars   = "kg";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ije
            case 0x00656a69:
            {
                const  data_chars   = "rc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ijh
            case 0x00686a69:
            {
                return 'o';
            }
            break;

            // iji
            case 0x00696a69:
            {
                const  data_chars   = "mnrkygtcbdswhfo";
                const data_weights = [
                    0x5df2, // 0.366972 
                    0x3026, // 0.188073 
                    0x1b02, // 0.105505 
                    0x12ca, // 0.073394 
                    0x1071, // 0.064220 
                    0x0bbe, // 0.045872 
                    0x0965, // 0.036697 
                    0x070c, // 0.027523 
                    0x05df, // 0.022936 
                    0x05df, // 0.022936 
                    0x04b2, // 0.018349 
                    0x0386, // 0.013761 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ijo
            case 0x006f6a69:
            {
                const  data_chars   = "unmdjgkhscroyzbi";
                const data_weights = [
                    0x3cbf, // 0.237288 
                    0x1e5f, // 0.118644 
                    0x1a09, // 0.101695 
                    0x15b2, // 0.084746 
                    0x15b2, // 0.084746 
                    0x115b, // 0.067797 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iju
            case 0x00756a69:
            {
                const  data_chars   = "kntisyjhumrgbwd";
                const data_weights = [
                    0x3c0d, // 0.234568 
                    0x2916, // 0.160494 
                    0x1f9b, // 0.123457 
                    0x1620, // 0.086420 
                    0x1620, // 0.086420 
                    0x0fcd, // 0.061728 
                    0x0ca4, // 0.049383 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x0652, // 0.024691 
                    0x0652, // 0.024691 
                    0x0652, // 0.024691 
                    0x0652, // 0.024691 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ijy
            case 0x00796a69:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ika
            case 0x00616b69:
            {
                const  data_chars   = "wnmtriksgdbzpceujyoh";
                const data_weights = [
                    0x3b1e, // 0.230924 
                    0x1fdf, // 0.124498 
                    0x19b4, // 0.100402 
                    0x1722, // 0.090361 
                    0x16e0, // 0.089357 
                    0x0ee8, // 0.058233 
                    0x0e65, // 0.056225 
                    0x0c98, // 0.049197 
                    0x0b91, // 0.045181 
                    0x07b6, // 0.030120 
                    0x062b, // 0.024096 
                    0x05a8, // 0.022088 
                    0x0399, // 0.014056 
                    0x02d4, // 0.011044 
                    0x02d4, // 0.011044 
                    0x02d4, // 0.011044 
                    0x0292, // 0.010040 
                    0x0250, // 0.009036 
                    0x01cd, // 0.007028 
                    0x018b, // 0.006024 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ike
            case 0x00656b69:
            {
                const  data_chars   = "ncgsmbidhjkturyzpeaw";
                const data_weights = [
                    0x5432, // 0.328889 
                    0x1908, // 0.097778 
                    0x1111, // 0.066667 
                    0x0fee, // 0.062222 
                    0x0fee, // 0.062222 
                    0x0ecb, // 0.057778 
                    0x0ecb, // 0.057778 
                    0x0b61, // 0.044444 
                    0x07f7, // 0.031111 
                    0x07f7, // 0.031111 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x048d, // 0.017778 
                    0x048d, // 0.017778 
                    0x036a, // 0.013333 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iki
            case 0x00696b69:
            {
                const  data_chars   = "tnrmdscygzbkjouhiaf";
                const data_weights = [
                    0x3394, // 0.201474 
                    0x251c, // 0.144963 
                    0x1bad, // 0.108108 
                    0x16a5, // 0.088452 
                    0x1421, // 0.078624 
                    0x12df, // 0.073710 
                    0x0e78, // 0.056511 
                    0x0b52, // 0.044226 
                    0x0a10, // 0.039312 
                    0x08ce, // 0.034398 
                    0x064a, // 0.024570 
                    0x05a9, // 0.022113 
                    0x05a9, // 0.022113 
                    0x0508, // 0.019656 
                    0x03c6, // 0.014742 
                    0x01e3, // 0.007371 
                    0x01e3, // 0.007371 
                    0x01e3, // 0.007371 
                    0x0142, // 0.004914 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ikj
            case 0x006a6b69:
            {
                return 'u';
            }
            break;

            // ikk
            case 0x006b6b69:
            {
                const  data_chars   = "oaueiy";
                const data_weights = [
                    0x5a24, // 0.352113 
                    0x39b1, // 0.225352 
                    0x39b1, // 0.225352 
                    0x193d, // 0.098592 
                    0x0e6c, // 0.056338 
                    0x0ad1, // 0.042254 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iko
            case 0x006f6b69:
            {
                const  data_chars   = "smknijtgberzycdhupofa";
                const data_weights = [
                    0x2098, // 0.127321 
                    0x1f3c, // 0.122016 
                    0x1716, // 0.090186 
                    0x1669, // 0.087533 
                    0x150d, // 0.082228 
                    0x104c, // 0.063660 
                    0x0f9e, // 0.061008 
                    0x0e43, // 0.055703 
                    0x0e43, // 0.055703 
                    0x0b8b, // 0.045093 
                    0x0add, // 0.042440 
                    0x0826, // 0.031830 
                    0x0826, // 0.031830 
                    0x0778, // 0.029178 
                    0x061d, // 0.023873 
                    0x061d, // 0.023873 
                    0x0413, // 0.015915 
                    0x00ae, // 0.002653 
                    0x00ae, // 0.002653 
                    0x00ae, // 0.002653 
                    0x00ae, // 0.002653 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iku
            case 0x00756b69:
            {
                const  data_chars   = "rmbsnzctgikjdyehuwo";
                const data_weights = [
                    0x3b1e, // 0.230932 
                    0x21a1, // 0.131356 
                    0x208b, // 0.127119 
                    0x2000, // 0.125000 
                    0x1527, // 0.082627 
                    0x1271, // 0.072034 
                    0x0d04, // 0.050847 
                    0x09c3, // 0.038136 
                    0x0682, // 0.025424 
                    0x056c, // 0.021186 
                    0x04e2, // 0.019068 
                    0x03cc, // 0.014831 
                    0x03cc, // 0.014831 
                    0x0341, // 0.012712 
                    0x0341, // 0.012712 
                    0x022b, // 0.008475 
                    0x0116, // 0.004237 
                    0x0116, // 0.004237 
                    0x0116, // 0.004237 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iky
            case 0x00796b69:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0xa7de, // 0.655738 
                    0x53ef, // 0.327869 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ild
            case 0x00646c69:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ili
            case 0x00696c69:
            {
                const  data_chars   = "op";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ill
            case 0x006c6c69:
            {
                const  data_chars   = "aesi";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ilo
            case 0x006f6c69:
            {
                const  data_chars   = "st";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ilt
            case 0x00746c69:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ilw
            case 0x00776c69:
            {
                return 'a';
            }
            break;

            // ima
            case 0x00616d69:
            {
                const  data_chars   = "cstnemigrdkzbjyuwohfap";
                const data_weights = [
                    0x6497, // 0.392933 
                    0x1810, // 0.093993 
                    0x16cc, // 0.089046 
                    0x1048, // 0.063604 
                    0x0f8f, // 0.060777 
                    0x0b94, // 0.045230 
                    0x0a50, // 0.040283 
                    0x09f3, // 0.038869 
                    0x07c8, // 0.030389 
                    0x073d, // 0.028269 
                    0x073d, // 0.028269 
                    0x0486, // 0.017668 
                    0x03cd, // 0.014841 
                    0x039e, // 0.014134 
                    0x022c, // 0.008481 
                    0x01fd, // 0.007774 
                    0x01cf, // 0.007067 
                    0x0173, // 0.005654 
                    0x0173, // 0.005654 
                    0x0116, // 0.004240 
                    0x008b, // 0.002120 
                    0x002e, // 0.000707 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imb
            case 0x00626d69:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x9697, // 0.588235 
                    0x5a5a, // 0.352941 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imc
            case 0x00636d69:
            {
                return 'h';
            }
            break;

            // ime
            case 0x00656d69:
            {
                const  data_chars   = "nitmkgjrdcshyeubo";
                const data_weights = [
                    0x51ec, // 0.320000 
                    0x1cac, // 0.112000 
                    0x1893, // 0.096000 
                    0x1687, // 0.088000 
                    0x0e56, // 0.056000 
                    0x0e56, // 0.056000 
                    0x0c4a, // 0.048000 
                    0x0c4a, // 0.048000 
                    0x0a3d, // 0.040000 
                    0x0831, // 0.032000 
                    0x0831, // 0.032000 
                    0x0625, // 0.024000 
                    0x0419, // 0.016000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imi
            case 0x00696d69:
            {
                const  data_chars   = "nzyctkgsmdhowiujbar";
                const data_weights = [
                    0x448f, // 0.267806 
                    0x43d4, // 0.264957 
                    0x1c72, // 0.111111 
                    0x1527, // 0.082621 
                    0x12f7, // 0.074074 
                    0x0c66, // 0.048433 
                    0x097b, // 0.037037 
                    0x0806, // 0.031339 
                    0x051b, // 0.019943 
                    0x0460, // 0.017094 
                    0x03a6, // 0.014245 
                    0x0175, // 0.005698 
                    0x0175, // 0.005698 
                    0x0175, // 0.005698 
                    0x00bb, // 0.002849 
                    0x00bb, // 0.002849 
                    0x00bb, // 0.002849 
                    0x00bb, // 0.002849 
                    0x00bb, // 0.002849 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imm
            case 0x006d6d69:
            {
                const  data_chars   = "aieou";
                const data_weights = [
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imo
            case 0x006f6d69:
            {
                const  data_chars   = "tnksmhrioygaubfcdjzewp";
                const data_weights = [
                    0x27b3, // 0.155071 
                    0x22c3, // 0.135792 
                    0x1f1d, // 0.121542 
                    0x1350, // 0.075440 
                    0x123d, // 0.071249 
                    0x0f05, // 0.058676 
                    0x0d17, // 0.051132 
                    0x0c04, // 0.046940 
                    0x0af2, // 0.042749 
                    0x09a8, // 0.037720 
                    0x085e, // 0.032691 
                    0x0783, // 0.029338 
                    0x06a7, // 0.025985 
                    0x04ef, // 0.019279 
                    0x04ef, // 0.019279 
                    0x0482, // 0.017603 
                    0x0482, // 0.017603 
                    0x03a6, // 0.014250 
                    0x0301, // 0.011735 
                    0x0225, // 0.008382 
                    0x0181, // 0.005868 
                    0x006e, // 0.001676 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imp
            case 0x00706d69:
            {
                const  data_chars   = "oae";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imu
            case 0x00756d69:
            {
                const  data_chars   = "rktsnimzagj";
                const data_weights = [
                    0x7b86, // 0.482517 
                    0x3220, // 0.195804 
                    0x2039, // 0.125874 
                    0x157c, // 0.083916 
                    0x0abe, // 0.041958 
                    0x0729, // 0.027972 
                    0x0395, // 0.013986 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // imy
            case 0x00796d69:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ina
            case 0x00616e69:
            {
                const  data_chars   = "mkigtrnsbdzowhycuefjlp";
                const data_weights = [
                    0x8051, // 0.501238 
                    0x1721, // 0.090347 
                    0x167f, // 0.087871 
                    0x1447, // 0.079208 
                    0x0e19, // 0.055074 
                    0x0a23, // 0.039604 
                    0x09aa, // 0.037748 
                    0x067f, // 0.025371 
                    0x037c, // 0.013614 
                    0x0354, // 0.012995 
                    0x02b1, // 0.010520 
                    0x0260, // 0.009282 
                    0x01be, // 0.006807 
                    0x0196, // 0.006188 
                    0x0196, // 0.006188 
                    0x0196, // 0.006188 
                    0x016d, // 0.005569 
                    0x00cb, // 0.003094 
                    0x0051, // 0.001238 
                    0x0029, // 0.000619 
                    0x0029, // 0.000619 
                    0x0029, // 0.000619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inb
            case 0x00626e69:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x7e17, // 0.492537 
                    0x4c6b, // 0.298507 
                    0x2263, // 0.134328 
                    0x131b, // 0.074627 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inc
            case 0x00636e69:
            {
                const  data_chars   = "heilo";
                const data_weights = [
                    0xe148, // 0.880000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ind
            case 0x00646e69:
            {
                const  data_chars   = "eao";
                const data_weights = [
                    0x7ce1, // 0.487805 
                    0x429a, // 0.260163 
                    0x4085, // 0.252033 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ine
            case 0x00656e69:
            {
                const  data_chars   = "nkmgtocsiphuzybdrjweax";
                const data_weights = [
                    0x345d, // 0.204545 
                    0x1746, // 0.090909 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x09b2, // 0.037879 
                    0x09b2, // 0.037879 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inf
            case 0x00666e69:
            {
                return 'u';
            }
            break;

            // ing
            case 0x00676e69:
            {
                const  data_chars   = "auoyesitd";
                const data_weights = [
                    0x6925, // 0.410714 
                    0x4000, // 0.250000 
                    0x2249, // 0.133929 
                    0x1492, // 0.080357 
                    0x1000, // 0.062500 
                    0x06db, // 0.026786 
                    0x0492, // 0.017857 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inh
            case 0x00686e69:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ini
            case 0x00696e69:
            {
                const  data_chars   = "scnkitgwjhmruabpeozd";
                const data_weights = [
                    0x79c6, // 0.475676 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x0b12, // 0.043243 
                    0x0b12, // 0.043243 
                    0x09b0, // 0.037838 
                    0x084d, // 0.032432 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0589, // 0.021622 
                    0x0589, // 0.021622 
                    0x0427, // 0.016216 
                    0x02c4, // 0.010811 
                    0x02c4, // 0.010811 
                    0x02c4, // 0.010811 
                    0x02c4, // 0.010811 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inj
            case 0x006a6e69:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0x715f, // 0.442857 
                    0x457c, // 0.271429 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ink
            case 0x006b6e69:
            {
                const  data_chars   = "aouiey";
                const data_weights = [
                    0x6896, // 0.408537 
                    0x47ce, // 0.280488 
                    0x18fa, // 0.097561 
                    0x15db, // 0.085366 
                    0x12bb, // 0.073171 
                    0x0e0c, // 0.054878 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inl
            case 0x006c6e69:
            {
                return 'a';
            }
            break;

            // inm
            case 0x006d6e69:
            {
                const  data_chars   = "aeiouy";
                const data_weights = [
                    0x8118, // 0.504274 
                    0x2df3, // 0.179487 
                    0x2df3, // 0.179487 
                    0x13b1, // 0.076923 
                    0x0af1, // 0.042735 
                    0x0460, // 0.017094 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inn
            case 0x006e6e69:
            {
                const  data_chars   = "oaieynus";
                const data_weights = [
                    0x60a7, // 0.377551 
                    0x5398, // 0.326531 
                    0x2492, // 0.142857 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ino
            case 0x006f6e69:
            {
                const  data_chars   = "ksmhutydnbgcozwreijafpv";
                const data_weights = [
                    0x28eb, // 0.159836 
                    0x2483, // 0.142623 
                    0x23e2, // 0.140164 
                    0x174b, // 0.090984 
                    0x105e, // 0.063934 
                    0x0da4, // 0.053279 
                    0x0ab4, // 0.041803 
                    0x09a7, // 0.037705 
                    0x09a7, // 0.037705 
                    0x0971, // 0.036885 
                    0x07c4, // 0.030328 
                    0x07c4, // 0.030328 
                    0x0722, // 0.027869 
                    0x0616, // 0.023770 
                    0x0468, // 0.017213 
                    0x0468, // 0.017213 
                    0x0468, // 0.017213 
                    0x02ba, // 0.010656 
                    0x0285, // 0.009836 
                    0x0142, // 0.004918 
                    0x010d, // 0.004098 
                    0x0036, // 0.000820 
                    0x0036, // 0.000820 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inp
            case 0x00706e69:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x5a5a, // 0.352941 
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inr
            case 0x00726e69:
            {
                const  data_chars   = "yiaeou";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ins
            case 0x00736e69:
            {
                const  data_chars   = "haeuoty";
                const data_weights = [
                    0x4d35, // 0.301587 
                    0x4514, // 0.269841 
                    0x34d3, // 0.206349 
                    0x28a3, // 0.158730 
                    0x0a29, // 0.039683 
                    0x0410, // 0.015873 
                    0x0208, // 0.007937 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // int
            case 0x00746e69:
            {
                const  data_chars   = "oaesl";
                const data_weights = [
                    0x65d9, // 0.397849 
                    0x4a53, // 0.290323 
                    0x344d, // 0.204301 
                    0x18c6, // 0.096774 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inu
            case 0x00756e69:
            {
                const  data_chars   = "mknbgpyitojruzswdhe";
                const data_weights = [
                    0x3a6b, // 0.228188 
                    0x2cac, // 0.174497 
                    0x19c6, // 0.100671 
                    0x19c6, // 0.100671 
                    0x1656, // 0.087248 
                    0x0dbf, // 0.053691 
                    0x0a4f, // 0.040268 
                    0x0897, // 0.033557 
                    0x0897, // 0.033557 
                    0x06df, // 0.026846 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inv
            case 0x00766e69:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inw
            case 0x00776e69:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iny
            case 0x00796e69:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x8283, // 0.509804 
                    0x4141, // 0.254902 
                    0x3c3c, // 0.235294 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // inz
            case 0x007a6e69:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x9d42, // 0.614286 
                    0x2492, // 0.142857 
                    0x20ea, // 0.128571 
                    0x1d42, // 0.114286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioa
            case 0x00616f69:
            {
                const  data_chars   = "cb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iob
            case 0x00626f69:
            {
                const  data_chars   = "aeuio";
                const data_weights = [
                    0x90b2, // 0.565217 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioc
            case 0x00636f69:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iod
            case 0x00646f69:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x7800, // 0.468750 
                    0x7800, // 0.468750 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioe
            case 0x00656f69:
            {
                const  data_chars   = "db";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iof
            case 0x00666f69:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iog
            case 0x00676f69:
            {
                const  data_chars   = "aiuo";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4fa5, // 0.311111 
                    0x38e4, // 0.222222 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioh
            case 0x00686f69:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xb216, // 0.695652 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioi
            case 0x00696f69:
            {
                const  data_chars   = "kdczmrbtwgns";
                const data_weights = [
                    0x364e, // 0.212121 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioj
            case 0x006a6f69:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iok
            case 0x006b6f69:
            {
                const  data_chars   = "auioe";
                const data_weights = [
                    0xb25c, // 0.696721 
                    0x29f8, // 0.163934 
                    0x192e, // 0.098361 
                    0x0865, // 0.032787 
                    0x0219, // 0.008197 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iom
            case 0x006d6f69:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x60b6, // 0.377778 
                    0x60b6, // 0.377778 
                    0x1c72, // 0.111111 
                    0x16c1, // 0.088889 
                    0x0b61, // 0.044444 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ion
            case 0x006e6f69:
            {
                const  data_chars   = "oasjeubckmin";
                const data_weights = [
                    0x846a, // 0.517241 
                    0x1ee6, // 0.120690 
                    0x1612, // 0.086207 
                    0x11a8, // 0.068966 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioo
            case 0x006f6f69:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iop
            case 0x00706f69:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ior
            case 0x00726f69:
            {
                const  data_chars   = "ioe";
                const data_weights = [
                    0xe148, // 0.880000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ios
            case 0x00736f69:
            {
                const  data_chars   = "aheuot";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iot
            case 0x00746f69:
            {
                const  data_chars   = "aoset";
                const data_weights = [
                    0x537a, // 0.326087 
                    0x537a, // 0.326087 
                    0x4dea, // 0.304348 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iou
            case 0x00756f69:
            {
                const  data_chars   = "rj";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iow
            case 0x00776f69:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioy
            case 0x00796f69:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xf333, // 0.950000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ioz
            case 0x007a6f69:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x90b2, // 0.565217 
                    0x590b, // 0.347826 
                    0x1643, // 0.086957 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipa
            case 0x00617069:
            {
                const  data_chars   = "nord";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipe
            case 0x00657069:
            {
                const  data_chars   = "si";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iph
            case 0x00687069:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipi
            case 0x00697069:
            {
                const  data_chars   = "aep";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipo
            case 0x006f7069:
            {
                const  data_chars   = "krn";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipp
            case 0x00707069:
            {
                const  data_chars   = "ouaei";
                const data_weights = [
                    0x5e86, // 0.369231 
                    0x52b5, // 0.323077 
                    0x3f04, // 0.246154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ipu
            case 0x00757069:
            {
                const  data_chars   = "rnc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iqu
            case 0x00757169:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ira
            case 0x00617269:
            {
                const  data_chars   = "knitsgmhycobdruzfjwpeq";
                const data_weights = [
                    0x307d, // 0.189406 
                    0x1c5a, // 0.110754 
                    0x1a4c, // 0.102729 
                    0x18a8, // 0.096308 
                    0x1703, // 0.089888 
                    0x10d9, // 0.065811 
                    0x1070, // 0.064205 
                    0x0b18, // 0.043339 
                    0x0973, // 0.036918 
                    0x090a, // 0.035313 
                    0x08a1, // 0.033708 
                    0x06fc, // 0.027287 
                    0x062a, // 0.024077 
                    0x0558, // 0.020867 
                    0x04ee, // 0.019262 
                    0x02e0, // 0.011236 
                    0x0277, // 0.009631 
                    0x020e, // 0.008026 
                    0x013c, // 0.004815 
                    0x00d2, // 0.003210 
                    0x0069, // 0.001605 
                    0x0069, // 0.001605 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // irc
            case 0x00637269:
            {
                const  data_chars   = "uh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ird
            case 0x00647269:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ire
            case 0x00657269:
            {
                const  data_chars   = "nitrgujdhbcfkps";
                const data_weights = [
                    0x3b6e, // 0.232143 
                    0x2db7, // 0.178571 
                    0x2925, // 0.160714 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iri
            case 0x00697269:
            {
                const  data_chars   = "kngmstcybhzdeuafpoijw";
                const data_weights = [
                    0x2189, // 0.130990 
                    0x1f14, // 0.121406 
                    0x1afe, // 0.105431 
                    0x1544, // 0.083067 
                    0x12d0, // 0.073482 
                    0x0eb9, // 0.057508 
                    0x0de7, // 0.054313 
                    0x0de7, // 0.054313 
                    0x0de7, // 0.054313 
                    0x0aa2, // 0.041534 
                    0x0aa2, // 0.041534 
                    0x08ff, // 0.035144 
                    0x075c, // 0.028754 
                    0x075c, // 0.028754 
                    0x05ba, // 0.022364 
                    0x0417, // 0.015974 
                    0x0417, // 0.015974 
                    0x0346, // 0.012780 
                    0x0346, // 0.012780 
                    0x01a3, // 0.006390 
                    0x00d1, // 0.003195 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iro
            case 0x006f7269:
            {
                const  data_chars   = "ksmntygchidubzojewrafp";
                const data_weights = [
                    0x226e, // 0.134490 
                    0x1bc4, // 0.108460 
                    0x1bc4, // 0.108460 
                    0x15a8, // 0.084599 
                    0x13fe, // 0.078091 
                    0x0e70, // 0.056399 
                    0x0de2, // 0.054230 
                    0x0d54, // 0.052061 
                    0x0d54, // 0.052061 
                    0x0d54, // 0.052061 
                    0x0b1b, // 0.043384 
                    0x0971, // 0.036876 
                    0x0854, // 0.032538 
                    0x0738, // 0.028200 
                    0x058e, // 0.021692 
                    0x03e3, // 0.015184 
                    0x02c7, // 0.010846 
                    0x0239, // 0.008677 
                    0x0239, // 0.008677 
                    0x01aa, // 0.006508 
                    0x011c, // 0.004338 
                    0x008e, // 0.002169 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // irs
            case 0x00737269:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iru
            case 0x00757269:
            {
                const  data_chars   = "mkgbsdniryzchfwot";
                const data_weights = [
                    0x2f43, // 0.184615 
                    0x2b53, // 0.169231 
                    0x2372, // 0.138462 
                    0x1b92, // 0.107692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iry
            case 0x00797269:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0x8aab, // 0.541667 
                    0x7000, // 0.437500 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isa
            case 0x00617369:
            {
                const  data_chars   = "kwntigmsrdbcyzhpojea";
                const data_weights = [
                    0x51e7, // 0.319930 
                    0x369a, // 0.213287 
                    0x1983, // 0.099650 
                    0x189e, // 0.096154 
                    0x0e52, // 0.055944 
                    0x0881, // 0.033217 
                    0x080e, // 0.031469 
                    0x080e, // 0.031469 
                    0x05d1, // 0.022727 
                    0x0407, // 0.015734 
                    0x0407, // 0.015734 
                    0x0395, // 0.013986 
                    0x0395, // 0.013986 
                    0x02af, // 0.010490 
                    0x02af, // 0.010490 
                    0x01ca, // 0.006993 
                    0x00e5, // 0.003497 
                    0x0073, // 0.001748 
                    0x0073, // 0.001748 
                    0x0073, // 0.001748 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isc
            case 0x00637369:
            {
                const  data_chars   = "hao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ise
            case 0x00657369:
            {
                const  data_chars   = "niktmgydrcsjzhbuop";
                const data_weights = [
                    0x5ef8, // 0.370968 
                    0x39ce, // 0.225806 
                    0x1e48, // 0.118280 
                    0x1606, // 0.086022 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ish
            case 0x00687369:
            {
                const  data_chars   = "ioauwh";
                const data_weights = [
                    0xeb56, // 0.919286 
                    0x0b34, // 0.043755 
                    0x05fb, // 0.023364 
                    0x0343, // 0.012744 
                    0x001c, // 0.000425 
                    0x001c, // 0.000425 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isi
            case 0x00697369:
            {
                const  data_chars   = "ht";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isk
            case 0x006b7369:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isl
            case 0x006c7369:
            {
                return 'e';
            }
            break;

            // ism
            case 0x006d7369:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isn
            case 0x006e7369:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iso
            case 0x006f7369:
            {
                const  data_chars   = "ngukmsbdyhzrcipeojt";
                const data_weights = [
                    0x3569, // 0.208633 
                    0x1f4f, // 0.122302 
                    0x19c9, // 0.100719 
                    0x19c9, // 0.100719 
                    0x1442, // 0.079137 
                    0x0ebc, // 0.057554 
                    0x0ebc, // 0.057554 
                    0x0b0d, // 0.043165 
                    0x0b0d, // 0.043165 
                    0x0b0d, // 0.043165 
                    0x0b0d, // 0.043165 
                    0x075e, // 0.028777 
                    0x0586, // 0.021583 
                    0x03af, // 0.014388 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iss
            case 0x00737369:
            {
                const  data_chars   = "heaoiu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x417d, // 0.255814 
                    0x20bf, // 0.127907 
                    0x14d6, // 0.081395 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ist
            case 0x00747369:
            {
                const  data_chars   = "aior";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isu
            case 0x00757369:
            {
                const  data_chars   = "kigmnrtzjbdehcwyo";
                const data_weights = [
                    0x2bee, // 0.171598 
                    0x245b, // 0.142012 
                    0x1cc8, // 0.112426 
                    0x19c0, // 0.100592 
                    0x183d, // 0.094675 
                    0x13b1, // 0.076923 
                    0x0f26, // 0.059172 
                    0x0f26, // 0.059172 
                    0x0c1e, // 0.047337 
                    0x060f, // 0.023669 
                    0x060f, // 0.023669 
                    0x060f, // 0.023669 
                    0x048b, // 0.017751 
                    0x048b, // 0.017751 
                    0x0308, // 0.011834 
                    0x0308, // 0.011834 
                    0x0184, // 0.005917 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // isy
            case 0x00797369:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ita
            case 0x00617469:
            {
                const  data_chars   = "knmistcyhgbdorzajuwfple";
                const data_weights = [
                    0x2d30, // 0.176516 
                    0x2522, // 0.145050 
                    0x198b, // 0.099770 
                    0x15cf, // 0.085188 
                    0x0fea, // 0.062164 
                    0x0f53, // 0.059862 
                    0x0cc5, // 0.049885 
                    0x09d3, // 0.038373 
                    0x093c, // 0.036071 
                    0x08d7, // 0.034536 
                    0x07dc, // 0.030698 
                    0x0745, // 0.028396 
                    0x0745, // 0.028396 
                    0x06e0, // 0.026861 
                    0x054e, // 0.020721 
                    0x0485, // 0.017652 
                    0x0453, // 0.016884 
                    0x0389, // 0.013814 
                    0x025c, // 0.009210 
                    0x0229, // 0.008442 
                    0x0160, // 0.005372 
                    0x00c9, // 0.003070 
                    0x00c9, // 0.003070 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // itc
            case 0x00637469:
            {
                return 'h';
            }
            break;

            // ite
            case 0x00657469:
            {
                const  data_chars   = "nirktsgmhjlod";
                const data_weights = [
                    0x4814, // 0.281553 
                    0x3e23, // 0.242718 
                    0x2050, // 0.126214 
                    0x1b57, // 0.106796 
                    0x165e, // 0.087379 
                    0x0c6d, // 0.048544 
                    0x09f1, // 0.038835 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // itf
            case 0x00667469:
            {
                return 'u';
            }
            break;

            // iti
            case 0x00697469:
            {
                const  data_chars   = "nz";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ito
            case 0x006f7469:
            {
                const  data_chars   = "mksrytngbdicuzhjaeopfl";
                const data_weights = [
                    0x2898, // 0.158568 
                    0x2749, // 0.153453 
                    0x1ccf, // 0.112532 
                    0x1ad8, // 0.104859 
                    0x1255, // 0.071611 
                    0x0e67, // 0.056266 
                    0x0c71, // 0.048593 
                    0x0b21, // 0.043478 
                    0x0a7a, // 0.040921 
                    0x092b, // 0.035806 
                    0x0883, // 0.033248 
                    0x07db, // 0.030691 
                    0x0734, // 0.028133 
                    0x05e5, // 0.023018 
                    0x0346, // 0.012788 
                    0x0346, // 0.012788 
                    0x029e, // 0.010230 
                    0x01f7, // 0.007673 
                    0x014f, // 0.005115 
                    0x014f, // 0.005115 
                    0x00a8, // 0.002558 
                    0x00a8, // 0.002558 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // its
            case 0x00737469:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // itt
            case 0x00747469:
            {
                const  data_chars   = "aoes";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x5555, // 0.333333 
                    0x3aab, // 0.229167 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // itu
            case 0x00757469:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ity
            case 0x00797469:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iub
            case 0x00627569:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iuc
            case 0x00637569:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iud
            case 0x00647569:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iue
            case 0x00657569:
            {
                const  data_chars   = "nmdb";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iug
            case 0x00677569:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iuk
            case 0x006b7569:
            {
                const  data_chars   = "iae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ium
            case 0x006d7569:
            {
                const  data_chars   = "aieu";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iun
            case 0x006e7569:
            {
                const  data_chars   = "ejtdkabcgo";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iuo
            case 0x006f7569:
            {
                const  data_chars   = "ntz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iup
            case 0x00707569:
            {
                const  data_chars   = "up";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iur
            case 0x00727569:
            {
                const  data_chars   = "aie";
                const data_weights = [
                    0xeeef, // 0.933333 
                    0x0da7, // 0.053333 
                    0x036a, // 0.013333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ius
            case 0x00737569:
            {
                const  data_chars   = "huo";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x6666, // 0.400000 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iut
            case 0x00747569:
            {
                const  data_chars   = "aose";
                const data_weights = [
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iuw
            case 0x00777569:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iuz
            case 0x007a7569:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ive
            case 0x00657669:
            {
                const  data_chars   = "rs";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ivi
            case 0x00697669:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ivo
            case 0x006f7669:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iwa
            case 0x00617769:
            {
                const  data_chars   = "krtsnidgmyzbchojfuw";
                const data_weights = [
                    0x272d, // 0.153025 
                    0x1c3e, // 0.110320 
                    0x1824, // 0.094306 
                    0x1824, // 0.094306 
                    0x17b0, // 0.092527 
                    0x1480, // 0.080071 
                    0x114f, // 0.067616 
                    0x114f, // 0.067616 
                    0x0f08, // 0.058719 
                    0x0991, // 0.037367 
                    0x06d5, // 0.026690 
                    0x06d5, // 0.026690 
                    0x06d5, // 0.026690 
                    0x0503, // 0.019573 
                    0x048e, // 0.017794 
                    0x03a5, // 0.014235 
                    0x015e, // 0.005338 
                    0x00e9, // 0.003559 
                    0x00e9, // 0.003559 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iwe
            case 0x00657769:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iwo
            case 0x006f7769:
            {
                const  data_chars   = "td";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ixa
            case 0x00617869:
            {
                return 'w';
            }
            break;

            // iya
            case 0x00617969:
            {
                const  data_chars   = "mnkstgczdjbhuorywiafe";
                const data_weights = [
                    0x6452, // 0.391876 
                    0x19ff, // 0.101553 
                    0x13e1, // 0.077658 
                    0x120c, // 0.070490 
                    0x0fe8, // 0.062127 
                    0x0e60, // 0.056153 
                    0x0cd9, // 0.050179 
                    0x0842, // 0.032258 
                    0x0709, // 0.027479 
                    0x0709, // 0.027479 
                    0x061e, // 0.023895 
                    0x0496, // 0.017921 
                    0x035d, // 0.013142 
                    0x030f, // 0.011947 
                    0x0272, // 0.009558 
                    0x0272, // 0.009558 
                    0x01d6, // 0.007168 
                    0x00eb, // 0.003584 
                    0x009d, // 0.002389 
                    0x009d, // 0.002389 
                    0x004e, // 0.001195 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iyo
            case 0x006f7969:
            {
                const  data_chars   = "sknmtgudhrzbcofayipwj";
                const data_weights = [
                    0x4e8e, // 0.306859 
                    0x2059, // 0.126354 
                    0x1368, // 0.075812 
                    0x1368, // 0.075812 
                    0x127c, // 0.072202 
                    0x10a3, // 0.064982 
                    0x0cf0, // 0.050542 
                    0x0cf0, // 0.050542 
                    0x0c04, // 0.046931 
                    0x0a2b, // 0.039711 
                    0x049f, // 0.018051 
                    0x03b2, // 0.014440 
                    0x02c6, // 0.010830 
                    0x01d9, // 0.007220 
                    0x01d9, // 0.007220 
                    0x01d9, // 0.007220 
                    0x01d9, // 0.007220 
                    0x01d9, // 0.007220 
                    0x00ed, // 0.003610 
                    0x00ed, // 0.003610 
                    0x00ed, // 0.003610 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iyu
            case 0x00757969:
            {
                const  data_chars   = "knbsrghzmdcuptef";
                const data_weights = [
                    0x4d35, // 0.301587 
                    0x2cb3, // 0.174603 
                    0x2082, // 0.126984 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // iza
            case 0x00617a69:
            {
                const  data_chars   = "wkntirobsegcm";
                const data_weights = [
                    0x71b0, // 0.444089 
                    0x5fb1, // 0.373802 
                    0x0eb9, // 0.057508 
                    0x082e, // 0.031949 
                    0x075c, // 0.028754 
                    0x05ba, // 0.022364 
                    0x0417, // 0.015974 
                    0x01a3, // 0.006390 
                    0x01a3, // 0.006390 
                    0x00d1, // 0.003195 
                    0x00d1, // 0.003195 
                    0x00d1, // 0.003195 
                    0x00d1, // 0.003195 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ize
            case 0x00657a69:
            {
                const  data_chars   = "nkmirc";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // izf
            case 0x00667a69:
            {
                return 'o';
            }
            break;

            // izo
            case 0x006f7a69:
            {
                const  data_chars   = "nmebgdkijtsryhozu";
                const data_weights = [
                    0x5dbf, // 0.366197 
                    0x1cd8, // 0.112676 
                    0x15a2, // 0.084507 
                    0x1207, // 0.070423 
                    0x1207, // 0.070423 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // izu
            case 0x00757a69:
            {
                const  data_chars   = "mknsrghtceyodbiawujfz";
                const data_weights = [
                    0x4f56, // 0.309910 
                    0x366e, // 0.212613 
                    0x1b37, // 0.106306 
                    0x0d60, // 0.052252 
                    0x0d60, // 0.052252 
                    0x0cea, // 0.050450 
                    0x0a26, // 0.039640 
                    0x08c4, // 0.034234 
                    0x06eb, // 0.027027 
                    0x0513, // 0.019820 
                    0x049d, // 0.018018 
                    0x0427, // 0.016216 
                    0x03b1, // 0.014414 
                    0x033b, // 0.012613 
                    0x02c4, // 0.010811 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x00ec, // 0.003604 
                    0x0076, // 0.001802 
                    0x0076, // 0.001802 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // izy
            case 0x00797a69:
            {
                return 'u';
            }
            break;

            } // switch _u32
        } // i
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'j':
        {
            switch ( trigram_u32 )
            {
            // jab
            case 0x0062616a:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jad
            case 0x0064616a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jag
            case 0x0067616a:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x2e8c, // 0.181818 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jah
            case 0x0068616a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jai
            case 0x0069616a:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jaj
            case 0x006a616a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jak
            case 0x006b616a:
            {
                const  data_chars   = "uaoek";
                const data_weights = [
                    0xc4ec, // 0.769231 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jal
            case 0x006c616a:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jam
            case 0x006d616a:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jan
            case 0x006e616a:
            {
                const  data_chars   = "aougjp";
                const data_weights = [
                    0x8618, // 0.523810 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jap
            case 0x0070616a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jar
            case 0x0072616a:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jas
            case 0x0073616a:
            {
                const  data_chars   = "hma";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jat
            case 0x0074616a:
            {
                const  data_chars   = "co";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jay
            case 0x0079616a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jaz
            case 0x007a616a:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jec
            case 0x0063656a:
            {
                const  data_chars   = "th";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jer
            case 0x0072656a:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jes
            case 0x0073656a:
            {
                const  data_chars   = "tu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jet
            case 0x0074656a:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jia
            case 0x0061696a:
            {
                const  data_chars   = "kmno";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jib
            case 0x0062696a:
            {
                const  data_chars   = "eaoui";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jic
            case 0x0063696a:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jid
            case 0x0064696a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x89d9, // 0.538462 
                    0x7627, // 0.461538 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jie
            case 0x0065696a:
            {
                const  data_chars   = "ikstd";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jif
            case 0x0066696a:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jig
            case 0x0067696a:
            {
                const  data_chars   = "aouyei";
                const data_weights = [
                    0xa8ba, // 0.659091 
                    0x28ba, // 0.159091 
                    0x145d, // 0.079545 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jih
            case 0x0068696a:
            {
                const  data_chars   = "iaoe";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jii
            case 0x0069696a:
            {
                const  data_chars   = "ngkdmchswe";
                const data_weights = [
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jij
            case 0x006a696a:
            {
                const  data_chars   = "oiua";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jik
            case 0x006b696a:
            {
                const  data_chars   = "aikouey";
                const data_weights = [
                    0x603e, // 0.375940 
                    0x35e5, // 0.210526 
                    0x22a6, // 0.135338 
                    0x1cdf, // 0.112782 
                    0x1906, // 0.097744 
                    0x0d79, // 0.052632 
                    0x03da, // 0.015038 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jim
            case 0x006d696a:
            {
                const  data_chars   = "aieobumy";
                const data_weights = [
                    0xd07c, // 0.814385 
                    0x100a, // 0.062645 
                    0x0b49, // 0.044084 
                    0x0721, // 0.027842 
                    0x0559, // 0.020882 
                    0x0559, // 0.020882 
                    0x0130, // 0.004640 
                    0x0130, // 0.004640 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jin
            case 0x006e696a:
            {
                const  data_chars   = "oganbzdmjkyeicsrtpu";
                const data_weights = [
                    0x3fbf, // 0.249012 
                    0x1e5b, // 0.118577 
                    0x1849, // 0.094862 
                    0x133a, // 0.075099 
                    0x1134, // 0.067194 
                    0x1031, // 0.063241 
                    0x0f2e, // 0.059289 
                    0x0f2e, // 0.059289 
                    0x091b, // 0.035573 
                    0x0818, // 0.031621 
                    0x0818, // 0.031621 
                    0x0612, // 0.023715 
                    0x050f, // 0.019763 
                    0x050f, // 0.019763 
                    0x050f, // 0.019763 
                    0x0309, // 0.011858 
                    0x0309, // 0.011858 
                    0x0103, // 0.003953 
                    0x0103, // 0.003953 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jio
            case 0x006f696a:
            {
                const  data_chars   = "knmchj";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jip
            case 0x0070696a:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jir
            case 0x0072696a:
            {
                const  data_chars   = "ioauy";
                const data_weights = [
                    0x782a, // 0.469388 
                    0x6c68, // 0.423469 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x014e, // 0.005102 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jis
            case 0x0073696a:
            {
                const  data_chars   = "hasue";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5ed1, // 0.370370 
                    0x17b4, // 0.092593 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jit
            case 0x0074696a:
            {
                const  data_chars   = "saocet";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x2e39, // 0.180556 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x11c7, // 0.069444 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jiu
            case 0x0075696a:
            {
                const  data_chars   = "rs";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jiw
            case 0x0077696a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jiy
            case 0x0079696a:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xe222, // 0.883333 
                    0x1555, // 0.083333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jiz
            case 0x007a696a:
            {
                const  data_chars   = "oaeu";
                const data_weights = [
                    0xcec5, // 0.807692 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jji
            case 0x00696a6a:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // job
            case 0x00626f6a:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joc
            case 0x00636f6a:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jod
            case 0x00646f6a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xc3c4, // 0.764706 
                    0x3c3c, // 0.235294 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joe
            case 0x00656f6a:
            {
                const  data_chars   = "nti";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jof
            case 0x00666f6a:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jog
            case 0x00676f6a:
            {
                const  data_chars   = "aeiuoy";
                const data_weights = [
                    0xa5a6, // 0.647059 
                    0x3232, // 0.196078 
                    0x1414, // 0.078431 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joh
            case 0x00686f6a:
            {
                const  data_chars   = "oaine";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joi
            case 0x00696f6a:
            {
                const  data_chars   = "cn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joj
            case 0x006a6f6a:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xcec5, // 0.807692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jok
            case 0x006b6f6a:
            {
                const  data_chars   = "aoieuy";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jol
            case 0x006c6f6a:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jom
            case 0x006d6f6a:
            {
                const  data_chars   = "aieoyu";
                const data_weights = [
                    0xb7a7, // 0.717391 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jon
            case 0x006e6f6a:
            {
                const  data_chars   = "oaiue";
                const data_weights = [
                    0x6186, // 0.380952 
                    0x4f3d, // 0.309524 
                    0x36db, // 0.214286 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joo
            case 0x006f6f6a:
            {
                const  data_chars   = "kmn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jor
            case 0x00726f6a:
            {
                const  data_chars   = "oay";
                const data_weights = [
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jos
            case 0x00736f6a:
            {
                const  data_chars   = "hueao";
                const data_weights = [
                    0x8376, // 0.513514 
                    0x306f, // 0.189189 
                    0x2983, // 0.162162 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jot
            case 0x00746f6a:
            {
                const  data_chars   = "osae";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jou
            case 0x00756f6a:
            {
                const  data_chars   = "bgskdnthizr";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jow
            case 0x00776f6a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joy
            case 0x00796f6a:
            {
                const  data_chars   = "ato";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // joz
            case 0x007a6f6a:
            {
                const  data_chars   = "aeou";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jua
            case 0x0061756a:
            {
                const  data_chars   = "nrs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jub
            case 0x0062756a:
            {
                const  data_chars   = "aeu";
                const data_weights = [
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juc
            case 0x0063756a:
            {
                const  data_chars   = "ch";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jud
            case 0x0064756a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jue
            case 0x0065756a:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juf
            case 0x0066756a:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jug
            case 0x0067756a:
            {
                const  data_chars   = "oay";
                const data_weights = [
                    0xcaab, // 0.791667 
                    0x2aab, // 0.166667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juh
            case 0x0068756a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jui
            case 0x0069756a:
            {
                const  data_chars   = "csntk";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x599a, // 0.350000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juj
            case 0x006a756a:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x5d17, // 0.363636 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juk
            case 0x006b756a:
            {
                const  data_chars   = "ukyoaie";
                const data_weights = [
                    0xcf5c, // 0.810000 
                    0x0f5c, // 0.060000 
                    0x0ccd, // 0.050000 
                    0x07ae, // 0.030000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x028f, // 0.010000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jum
            case 0x006d756a:
            {
                const  data_chars   = "oaiepy";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jun
            case 0x006e756a:
            {
                const  data_chars   = "iaoktrbswzpnyecjd";
                const data_weights = [
                    0x7b03, // 0.480519 
                    0x213f, // 0.129870 
                    0x1dec, // 0.116883 
                    0x0d4c, // 0.051948 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juo
            case 0x006f756a:
            {
                const  data_chars   = "dh";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jur
            case 0x0072756a:
            {
                const  data_chars   = "oiua";
                const data_weights = [
                    0xa529, // 0.645161 
                    0x4a53, // 0.290323 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jus
            case 0x0073756a:
            {
                const  data_chars   = "ahoseu";
                const data_weights = [
                    0x9aab, // 0.604167 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jut
            case 0x0074756a:
            {
                const  data_chars   = "sacto";
                const data_weights = [
                    0x79e8, // 0.476190 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juu
            case 0x0075756a:
            {
                const  data_chars   = "ndsjirgbfkmty";
                const data_weights = [
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juw
            case 0x0077756a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juy
            case 0x0079756a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // juz
            case 0x007a756a:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jyo
            case 0x006f796a:
            {
                const  data_chars   = "juz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // jyu
            case 0x0075796a:
            {
                const  data_chars   = "kjs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // j
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'k':
        {
            switch ( trigram_u32 )
            {
            // kaa
            case 0x0061616b:
            {
                const  data_chars   = "ircskodjtzm";
                const data_weights = [
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kab
            case 0x0062616b:
            {
                const  data_chars   = "aueoiy";
                const data_weights = [
                    0x66a1, // 0.400901 
                    0x49cd, // 0.288288 
                    0x2bd2, // 0.171171 
                    0x139b, // 0.076577 
                    0x0efe, // 0.058559 
                    0x0127, // 0.004505 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kac
            case 0x0063616b:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfe70, // 0.993902 
                    0x0190, // 0.006098 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kad
            case 0x0064616b:
            {
                const  data_chars   = "oaezut";
                const data_weights = [
                    0x830c, // 0.511905 
                    0x69a7, // 0.412698 
                    0x0c31, // 0.047619 
                    0x0410, // 0.015873 
                    0x0208, // 0.007937 
                    0x0104, // 0.003968 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kae
            case 0x0065616b:
            {
                const  data_chars   = "mrncsdkbtfghioyu";
                const data_weights = [
                    0x2f4e, // 0.184783 
                    0x2c86, // 0.173913 
                    0x1bd3, // 0.108696 
                    0x190b, // 0.097826 
                    0x190b, // 0.097826 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kaf
            case 0x0066616b:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0xf777, // 0.966667 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kag
            case 0x0067616b:
            {
                const  data_chars   = "aeuoiyw";
                const data_weights = [
                    0x63f9, // 0.390511 
                    0x3452, // 0.204380 
                    0x255f, // 0.145985 
                    0x2470, // 0.142336 
                    0x1c07, // 0.109489 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kah
            case 0x0068616b:
            {
                const  data_chars   = "aoie";
                const data_weights = [
                    0x886e, // 0.532934 
                    0x3bc9, // 0.233533 
                    0x310e, // 0.191617 
                    0x0abb, // 0.041916 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kai
            case 0x0069616b:
            {
                const  data_chars   = "sdcgkmtnzhybjwrfioueap";
                const data_weights = [
                    0x1e1e, // 0.117647 
                    0x1d99, // 0.115619 
                    0x1b01, // 0.105477 
                    0x18ed, // 0.097363 
                    0x122d, // 0.070994 
                    0x11a8, // 0.068966 
                    0x109e, // 0.064909 
                    0x1019, // 0.062880 
                    0x0d80, // 0.052738 
                    0x0a63, // 0.040568 
                    0x08d4, // 0.034483 
                    0x084f, // 0.032454 
                    0x07ca, // 0.030426 
                    0x06c0, // 0.026369 
                    0x0531, // 0.020284 
                    0x04ac, // 0.018256 
                    0x031e, // 0.012170 
                    0x0214, // 0.008114 
                    0x0214, // 0.008114 
                    0x018f, // 0.006085 
                    0x010a, // 0.004057 
                    0x0085, // 0.002028 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kaj
            case 0x006a616b:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xdbb0, // 0.858156 
                    0x13f9, // 0.078014 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kak
            case 0x006b616b:
            {
                const  data_chars   = "uieaoky";
                const data_weights = [
                    0x5c9b, // 0.361746 
                    0x3a03, // 0.226611 
                    0x35c1, // 0.209979 
                    0x176b, // 0.091476 
                    0x15d2, // 0.085239 
                    0x04ca, // 0.018711 
                    0x0199, // 0.006237 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kam
            case 0x006d616b:
            {
                const  data_chars   = "iaoeubym";
                const data_weights = [
                    0xb4ca, // 0.706201 
                    0x278f, // 0.154528 
                    0x0f9f, // 0.061024 
                    0x0af6, // 0.042815 
                    0x072e, // 0.028051 
                    0x00e2, // 0.003445 
                    0x00a1, // 0.002461 
                    0x0061, // 0.001476 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kan
            case 0x006e616b:
            {
                const  data_chars   = "oaeinsbdkugtmzjrpych";
                const data_weights = [
                    0x421c, // 0.258236 
                    0x39ad, // 0.225292 
                    0x21bc, // 0.131775 
                    0x0d9a, // 0.053135 
                    0x0c3e, // 0.047821 
                    0x08b5, // 0.034006 
                    0x08b5, // 0.034006 
                    0x086f, // 0.032944 
                    0x079e, // 0.029756 
                    0x05fc, // 0.023379 
                    0x05b7, // 0.022317 
                    0x0571, // 0.021254 
                    0x0571, // 0.021254 
                    0x052b, // 0.020191 
                    0x0415, // 0.015940 
                    0x02b8, // 0.010627 
                    0x01e8, // 0.007439 
                    0x015c, // 0.005313 
                    0x0117, // 0.004251 
                    0x0046, // 0.001063 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kao
            case 0x006f616b:
            {
                const  data_chars   = "kmrsgntyicbdz";
                const data_weights = [
                    0x40e7, // 0.253521 
                    0x2b45, // 0.169014 
                    0x193d, // 0.098592 
                    0x15a2, // 0.084507 
                    0x1207, // 0.070423 
                    0x1207, // 0.070423 
                    0x0e6c, // 0.056338 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kap
            case 0x0070616b:
            {
                const  data_chars   = "poaeiu";
                const data_weights = [
                    0xc925, // 0.785714 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kar
            case 0x0072616b:
            {
                const  data_chars   = "iaueoy";
                const data_weights = [
                    0x6b3a, // 0.418860 
                    0x58b4, // 0.346491 
                    0x2000, // 0.125000 
                    0x1167, // 0.067982 
                    0x086c, // 0.032895 
                    0x023f, // 0.008772 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kas
            case 0x0073616b:
            {
                const  data_chars   = "haueosimt";
                const data_weights = [
                    0x6988, // 0.412238 
                    0x5136, // 0.317230 
                    0x272a, // 0.152979 
                    0x1360, // 0.075684 
                    0x083f, // 0.032206 
                    0x013d, // 0.004831 
                    0x006a, // 0.001610 
                    0x006a, // 0.001610 
                    0x006a, // 0.001610 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kat
            case 0x0074616b:
            {
                const  data_chars   = "asotec";
                const data_weights = [
                    0x7861, // 0.470229 
                    0x5e95, // 0.369466 
                    0x151b, // 0.082443 
                    0x0c1e, // 0.047328 
                    0x076d, // 0.029008 
                    0x0064, // 0.001527 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kau
            case 0x0075616b:
            {
                const  data_chars   = "rscednwjptm";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kaw
            case 0x0077616b:
            {
                const  data_chars   = "ag";
                const data_weights = [
                    0xffbd, // 0.998975 
                    0x0043, // 0.001025 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kay
            case 0x0079616b:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x2078, // 0.126829 
                    0x12bb, // 0.073171 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kaz
            case 0x007a616b:
            {
                const  data_chars   = "uaeo";
                const data_weights = [
                    0x712b, // 0.442060 
                    0x55b3, // 0.334764 
                    0x2442, // 0.141631 
                    0x14e0, // 0.081545 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kds
            case 0x0073646b:
            {
                const  data_chars   = "at";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kea
            case 0x0061656b:
            {
                const  data_chars   = "icgnsrkm";
                const data_weights = [
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // keb
            case 0x0062656b:
            {
                const  data_chars   = "auoei";
                const data_weights = [
                    0x5a13, // 0.351852 
                    0x425f, // 0.259259 
                    0x2aab, // 0.166667 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kec
            case 0x0063656b:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ked
            case 0x0064656b:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x9bd3, // 0.608696 
                    0x590b, // 0.347826 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kee
            case 0x0065656b:
            {
                const  data_chars   = "bnst";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kef
            case 0x0066656b:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // keg
            case 0x0067656b:
            {
                const  data_chars   = "aoui";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x3555, // 0.208333 
                    0x2555, // 0.145833 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // keh
            case 0x0068656b:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xb4b5, // 0.705882 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kei
            case 0x0069656b:
            {
                const  data_chars   = "skjtdmnzgbychreiwuoa";
                const data_weights = [
                    0x37db, // 0.218182 
                    0x2c38, // 0.172727 
                    0x104a, // 0.063636 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kej
            case 0x006a656b:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xa666, // 0.650000 
                    0x4ccd, // 0.300000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kek
            case 0x006b656b:
            {
                const  data_chars   = "akoui";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x364e, // 0.212121 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kem
            case 0x006d656b:
            {
                const  data_chars   = "aioume";
                const data_weights = [
                    0x7333, // 0.450000 
                    0x3ccd, // 0.237500 
                    0x2333, // 0.137500 
                    0x2000, // 0.125000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ken
            case 0x006e656b:
            {
                const  data_chars   = "oaksgjcmyebdiznturphw";
                const data_weights = [
                    0x55eb, // 0.335616 
                    0x17ac, // 0.092466 
                    0x0ee7, // 0.058219 
                    0x0ee7, // 0.058219 
                    0x0e07, // 0.054795 
                    0x0c46, // 0.047945 
                    0x0b66, // 0.044521 
                    0x0a85, // 0.041096 
                    0x09a5, // 0.037671 
                    0x09a5, // 0.037671 
                    0x08c4, // 0.034247 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0623, // 0.023973 
                    0x0623, // 0.023973 
                    0x0462, // 0.017123 
                    0x0382, // 0.013699 
                    0x02a1, // 0.010274 
                    0x01c1, // 0.006849 
                    0x00e0, // 0.003425 
                    0x00e0, // 0.003425 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // keo
            case 0x006f656b:
            {
                const  data_chars   = "rcks";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kep
            case 0x0070656b:
            {
                const  data_chars   = "puico";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ker
            case 0x0072656b:
            {
                const  data_chars   = "ueaoi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3249, // 0.196429 
                    0x2925, // 0.160714 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kes
            case 0x0073656b:
            {
                const  data_chars   = "haesuo";
                const data_weights = [
                    0x8ee2, // 0.558140 
                    0x3b89, // 0.232558 
                    0x14d6, // 0.081395 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x08ee, // 0.034884 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ket
            case 0x0074656b:
            {
                const  data_chars   = "osate";
                const data_weights = [
                    0x587e, // 0.345679 
                    0x425f, // 0.259259 
                    0x3c0d, // 0.234568 
                    0x1f9b, // 0.123457 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // keu
            case 0x0075656b:
            {
                const  data_chars   = "rscomn";
                const data_weights = [
                    0x7878, // 0.470588 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kew
            case 0x0077656b:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // key
            case 0x0079656b:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xd2d3, // 0.823529 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kez
            case 0x007a656b:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x9612, // 0.586207 
                    0x3dcb, // 0.241379 
                    0x2c23, // 0.172414 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kha
            case 0x0061686b:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kho
            case 0x006f686b:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kia
            case 0x0061696b:
            {
                const  data_chars   = "gitkrnsu";
                const data_weights = [
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kib
            case 0x0062696b:
            {
                const  data_chars   = "aieuoy";
                const data_weights = [
                    0x8c63, // 0.548387 
                    0x2319, // 0.137097 
                    0x1ef8, // 0.120968 
                    0x18c6, // 0.096774 
                    0x14a5, // 0.080645 
                    0x0421, // 0.016129 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kic
            case 0x0063696b:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfe9c, // 0.994565 
                    0x0164, // 0.005435 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kid
            case 0x0064696b:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x9320, // 0.574713 
                    0x56ce, // 0.339080 
                    0x1499, // 0.080460 
                    0x0179, // 0.005747 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kie
            case 0x0065696b:
            {
                const  data_chars   = "kbdnr";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kif
            case 0x0066696b:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kig
            case 0x0067696b:
            {
                const  data_chars   = "aouiey";
                const data_weights = [
                    0xb7a7, // 0.717391 
                    0x1dae, // 0.115942 
                    0x19f9, // 0.101449 
                    0x0946, // 0.036232 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kih
            case 0x0068696b:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x90f7, // 0.566265 
                    0x40c5, // 0.253012 
                    0x2819, // 0.156626 
                    0x062b, // 0.024096 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kii
            case 0x0069696b:
            {
                const  data_chars   = "stnrihckmuyawjbgo";
                const data_weights = [
                    0x28ba, // 0.159091 
                    0x22e9, // 0.136364 
                    0x1d17, // 0.113636 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kij
            case 0x006a696b:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xb2b8, // 0.698113 
                    0x39f6, // 0.226415 
                    0x1352, // 0.075472 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kik
            case 0x006b696b:
            {
                const  data_chars   = "uaioyke";
                const data_weights = [
                    0x44fe, // 0.269504 
                    0x3f8c, // 0.248227 
                    0x3678, // 0.212766 
                    0x2b93, // 0.170213 
                    0x0e86, // 0.056738 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kim
            case 0x006d696b:
            {
                const  data_chars   = "aiouempby";
                const data_weights = [
                    0x7f21, // 0.496599 
                    0x3dd3, // 0.241497 
                    0x22d4, // 0.136054 
                    0x0ecd, // 0.057823 
                    0x0def, // 0.054422 
                    0x00df, // 0.003401 
                    0x00df, // 0.003401 
                    0x00df, // 0.003401 
                    0x00df, // 0.003401 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kin
            case 0x006e696b:
            {
                const  data_chars   = "oaueiksdzntbjygrmcp";
                const data_weights = [
                    0x875a, // 0.528713 
                    0x23fe, // 0.140594 
                    0x0f35, // 0.059406 
                    0x0e32, // 0.055446 
                    0x0c2b, // 0.047525 
                    0x0615, // 0.023762 
                    0x0490, // 0.017822 
                    0x0490, // 0.017822 
                    0x038c, // 0.013861 
                    0x038c, // 0.013861 
                    0x030b, // 0.011881 
                    0x030b, // 0.011881 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0207, // 0.007921 
                    0x0207, // 0.007921 
                    0x0207, // 0.007921 
                    0x0207, // 0.007921 
                    0x0185, // 0.005941 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kio
            case 0x006f696b:
            {
                const  data_chars   = "kntrscij";
                const data_weights = [
                    0x5ed1, // 0.370370 
                    0x2f68, // 0.185185 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kip
            case 0x0070696b:
            {
                const  data_chars   = "pou";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kir
            case 0x0072696b:
            {
                const  data_chars   = "iaeuoy";
                const data_weights = [
                    0xaddc, // 0.679144 
                    0x2398, // 0.139037 
                    0x11cc, // 0.069519 
                    0x0f0f, // 0.058824 
                    0x0837, // 0.032086 
                    0x057a, // 0.021390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kis
            case 0x0073696b:
            {
                const  data_chars   = "haoeusyt";
                const data_weights = [
                    0x7810, // 0.468992 
                    0x427b, // 0.259690 
                    0x17d0, // 0.093023 
                    0x16d2, // 0.089147 
                    0x0ee2, // 0.058140 
                    0x05f4, // 0.023256 
                    0x00fe, // 0.003876 
                    0x00fe, // 0.003876 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kit
            case 0x0074696b:
            {
                const  data_chars   = "asotecf";
                const data_weights = [
                    0xe36f, // 0.888412 
                    0x0e8f, // 0.056867 
                    0x09e3, // 0.038627 
                    0x01a6, // 0.006438 
                    0x01a6, // 0.006438 
                    0x008d, // 0.002146 
                    0x0046, // 0.001073 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kiu
            case 0x0075696b:
            {
                const  data_chars   = "rscekmntwz";
                const data_weights = [
                    0x72c2, // 0.448276 
                    0x234f, // 0.137931 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kiw
            case 0x0077696b:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kiy
            case 0x0079696b:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x84a4, // 0.518135 
                    0x760d, // 0.461140 
                    0x054e, // 0.020725 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kiz
            case 0x007a696b:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x8d9e, // 0.553191 
                    0x4efb, // 0.308511 
                    0x1310, // 0.074468 
                    0x1057, // 0.063830 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kju
            case 0x00756a6b:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kka
            case 0x00616b6b:
            {
                const  data_chars   = "inrkwmsbtuae";
                const data_weights = [
                    0x345d, // 0.204545 
                    0x3174, // 0.193182 
                    0x3174, // 0.193182 
                    0x1746, // 0.090909 
                    0x145d, // 0.079545 
                    0x145d, // 0.079545 
                    0x0e8c, // 0.056818 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kke
            case 0x00656b6b:
            {
                const  data_chars   = "nisjgmdu";
                const data_weights = [
                    0x9174, // 0.568182 
                    0x28ba, // 0.159091 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kki
            case 0x00696b6b:
            {
                const  data_chars   = "rbntuyi";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kko
            case 0x006f6b6b:
            {
                const  data_chars   = "kndumscbtirhjge";
                const data_weights = [
                    0x3532, // 0.207792 
                    0x213f, // 0.129870 
                    0x1dec, // 0.116883 
                    0x1dec, // 0.116883 
                    0x1a99, // 0.103896 
                    0x10a0, // 0.064935 
                    0x10a0, // 0.064935 
                    0x0d4c, // 0.051948 
                    0x09f9, // 0.038961 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kku
            case 0x00756b6b:
            {
                const  data_chars   = "rmscbhyinof";
                const data_weights = [
                    0x6969, // 0.411765 
                    0x34b5, // 0.205882 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kky
            case 0x00796b6b:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kme
            case 0x00656d6b:
            {
                const  data_chars   = "wa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koa
            case 0x00616f6b:
            {
                const  data_chars   = "nmrscjizktoyd";
                const data_weights = [
                    0x3832, // 0.219512 
                    0x2577, // 0.146341 
                    0x1f38, // 0.121951 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kob
            case 0x00626f6b:
            {
                const  data_chars   = "aueoi";
                const data_weights = [
                    0x83c4, // 0.514706 
                    0x2e6e, // 0.181373 
                    0x20a1, // 0.127451 
                    0x17d8, // 0.093137 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koc
            case 0x00636f6b:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfcd7, // 0.987654 
                    0x0329, // 0.012346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kod
            case 0x00646f6b:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0xafc3, // 0.686567 
                    0x3d22, // 0.238806 
                    0x1132, // 0.067164 
                    0x01e9, // 0.007463 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koe
            case 0x00656f6b:
            {
                const  data_chars   = "nitdsbrjcmh";
                const data_weights = [
                    0x9d42, // 0.614286 
                    0x15f1, // 0.085714 
                    0x1249, // 0.071429 
                    0x0ea1, // 0.057143 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kof
            case 0x00666f6b:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kog
            case 0x00676f6b:
            {
                const  data_chars   = "aueioy";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x1b14, // 0.105769 
                    0x189e, // 0.096154 
                    0x1762, // 0.091346 
                    0x1276, // 0.072115 
                    0x04ec, // 0.019231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koh
            case 0x00686f6b:
            {
                const  data_chars   = "aioetu";
                const data_weights = [
                    0x9c9d, // 0.611765 
                    0x3030, // 0.188235 
                    0x1818, // 0.094118 
                    0x1515, // 0.082353 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koi
            case 0x00696f6b:
            {
                const  data_chars   = "nswzktcgdybmrapjfio";
                const data_weights = [
                    0x2d6b, // 0.177419 
                    0x2b5b, // 0.169355 
                    0x2319, // 0.137097 
                    0x1ef8, // 0.120968 
                    0x18c6, // 0.096774 
                    0x14a5, // 0.080645 
                    0x0e74, // 0.056452 
                    0x0a53, // 0.040323 
                    0x0632, // 0.024194 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koj
            case 0x006a6f6b:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xe134, // 0.879699 
                    0x0d79, // 0.052632 
                    0x0b8d, // 0.045113 
                    0x05c6, // 0.022556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kok
            case 0x006b6f6b:
            {
                const  data_chars   = "uaoieyk";
                const data_weights = [
                    0xa584, // 0.646552 
                    0x27b9, // 0.155172 
                    0x1847, // 0.094828 
                    0x09ee, // 0.038793 
                    0x069f, // 0.025862 
                    0x0584, // 0.021552 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kom
            case 0x006d6f6b:
            {
                const  data_chars   = "aoieuybpm";
                const data_weights = [
                    0x9909, // 0.597796 
                    0x228e, // 0.134986 
                    0x1c36, // 0.110193 
                    0x1256, // 0.071625 
                    0x0e1b, // 0.055096 
                    0x0387, // 0.013774 
                    0x021e, // 0.008264 
                    0x0169, // 0.005510 
                    0x00b5, // 0.002755 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kon
            case 0x006e6f6b:
            {
                const  data_chars   = "oaebisnydpzujgktmc";
                const data_weights = [
                    0x5b3b, // 0.356364 
                    0x37db, // 0.218182 
                    0x1746, // 0.090909 
                    0x0b2c, // 0.043636 
                    0x094f, // 0.036364 
                    0x0861, // 0.032727 
                    0x0773, // 0.029091 
                    0x0684, // 0.025455 
                    0x0684, // 0.025455 
                    0x0596, // 0.021818 
                    0x0596, // 0.021818 
                    0x0596, // 0.021818 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x02cb, // 0.010909 
                    0x01dd, // 0.007273 
                    0x00ee, // 0.003636 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koo
            case 0x006f6f6b:
            {
                const  data_chars   = "krtcdnbejg";
                const data_weights = [
                    0x2c86, // 0.173913 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kop
            case 0x00706f6b:
            {
                const  data_chars   = "pioue";
                const data_weights = [
                    0xc3c4, // 0.764706 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kor
            case 0x00726f6b:
            {
                const  data_chars   = "oieayu";
                const data_weights = [
                    0x97d0, // 0.593023 
                    0x29ad, // 0.162791 
                    0x1c47, // 0.110465 
                    0x1653, // 0.087209 
                    0x0771, // 0.029070 
                    0x0477, // 0.017442 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kos
            case 0x00736f6b:
            {
                const  data_chars   = "haueosi";
                const data_weights = [
                    0x9c14, // 0.609687 
                    0x2993, // 0.162393 
                    0x169c, // 0.088319 
                    0x146c, // 0.079772 
                    0x0ddc, // 0.054131 
                    0x00bb, // 0.002849 
                    0x00bb, // 0.002849 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kot
            case 0x00746f6b:
            {
                const  data_chars   = "aoset";
                const data_weights = [
                    0x61d2, // 0.382114 
                    0x5021, // 0.313008 
                    0x361d, // 0.211382 
                    0x11b1, // 0.069106 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kou
            case 0x00756f6b:
            {
                const  data_chars   = "krsctmgndebjhz";
                const data_weights = [
                    0x29ad, // 0.162791 
                    0x29ad, // 0.162791 
                    0x23b9, // 0.139535 
                    0x1dc4, // 0.116279 
                    0x17d0, // 0.093023 
                    0x0ee2, // 0.058140 
                    0x0ee2, // 0.058140 
                    0x0be8, // 0.046512 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kow
            case 0x00776f6b:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koy
            case 0x00796f6b:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xca00, // 0.789062 
                    0x2400, // 0.140625 
                    0x1200, // 0.070312 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // koz
            case 0x007a6f6b:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x4a00, // 0.289062 
                    0x1600, // 0.085938 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kra
            case 0x0061726b:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ksa
            case 0x0061736b:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ksh
            case 0x0068736b:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kti
            case 0x0069746b:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kua
            case 0x0061756b:
            {
                const  data_chars   = "nisckmtg";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kub
            case 0x0062756b:
            {
                const  data_chars   = "oauie";
                const data_weights = [
                    0x8f55, // 0.559896 
                    0x2600, // 0.148438 
                    0x1d55, // 0.114583 
                    0x1a00, // 0.101562 
                    0x1355, // 0.075521 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuc
            case 0x0063756b:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfef1, // 0.995868 
                    0x010f, // 0.004132 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kud
            case 0x0064756b:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x9dde, // 0.616667 
                    0x4ccd, // 0.300000 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kue
            case 0x0065756b:
            {
                const  data_chars   = "nimcktdpafs";
                const data_weights = [
                    0x98b4, // 0.596491 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuf
            case 0x0066756b:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kug
            case 0x0067756b:
            {
                const  data_chars   = "auoiey";
                const data_weights = [
                    0x5a1d, // 0.352000 
                    0x2f1b, // 0.184000 
                    0x2d0e, // 0.176000 
                    0x24dd, // 0.144000 
                    0x1cac, // 0.112000 
                    0x0831, // 0.032000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuh
            case 0x0068756b:
            {
                const  data_chars   = "aoiey";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x53c8, // 0.327273 
                    0x253d, // 0.145455 
                    0x0df7, // 0.054545 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kui
            case 0x0069756b:
            {
                const  data_chars   = "nkcszbmdghrou";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x17a1, // 0.092308 
                    0x17a1, // 0.092308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuj
            case 0x006a756b:
            {
                const  data_chars   = "iouay";
                const data_weights = [
                    0x9d68, // 0.614865 
                    0x359f, // 0.209459 
                    0x2298, // 0.135135 
                    0x08a6, // 0.033784 
                    0x01bb, // 0.006757 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuk
            case 0x006b756b:
            {
                const  data_chars   = "aioueskyr";
                const data_weights = [
                    0x5264, // 0.321839 
                    0x3dcb, // 0.241379 
                    0x2641, // 0.149425 
                    0x234f, // 0.137931 
                    0x1499, // 0.080460 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kul
            case 0x006c756b:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kum
            case 0x006d756b:
            {
                const  data_chars   = "aioeuyb";
                const data_weights = [
                    0xa148, // 0.630000 
                    0x28f6, // 0.160000 
                    0x20a4, // 0.127500 
                    0x0eb8, // 0.057500 
                    0x051f, // 0.020000 
                    0x00a4, // 0.002500 
                    0x00a4, // 0.002500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kun
            case 0x006e756b:
            {
                const  data_chars   = "ioaenubrgjmstd";
                const data_weights = [
                    0x5450, // 0.329341 
                    0x4fb6, // 0.311377 
                    0x2c75, // 0.173653 
                    0x0f54, // 0.059880 
                    0x0abb, // 0.041916 
                    0x086e, // 0.032934 
                    0x0499, // 0.017964 
                    0x024d, // 0.008982 
                    0x0188, // 0.005988 
                    0x0188, // 0.005988 
                    0x00c4, // 0.002994 
                    0x00c4, // 0.002994 
                    0x00c4, // 0.002994 
                    0x00c4, // 0.002994 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuo
            case 0x006f756b:
            {
                const  data_chars   = "knjsmidrbcz";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x3333, // 0.200000 
                    0x2492, // 0.142857 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kup
            case 0x0070756b:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kur
            case 0x0072756b:
            {
                const  data_chars   = "aoiueyh";
                const data_weights = [
                    0x6fb7, // 0.436381 
                    0x4c7d, // 0.298775 
                    0x2528, // 0.145146 
                    0x0f71, // 0.060320 
                    0x0adc, // 0.042413 
                    0x03dc, // 0.015080 
                    0x007c, // 0.001885 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kus
            case 0x0073756b:
            {
                const  data_chars   = "haueosiy";
                const data_weights = [
                    0x74df, // 0.456522 
                    0x4946, // 0.286232 
                    0x23b6, // 0.139493 
                    0x13f1, // 0.077899 
                    0x0859, // 0.032609 
                    0x00ed, // 0.003623 
                    0x0077, // 0.001812 
                    0x0077, // 0.001812 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kut
            case 0x0074756b:
            {
                const  data_chars   = "asoetci";
                const data_weights = [
                    0x6830, // 0.406977 
                    0x3a0c, // 0.226744 
                    0x3418, // 0.203488 
                    0x1c47, // 0.110465 
                    0x0771, // 0.029070 
                    0x0477, // 0.017442 
                    0x017d, // 0.005814 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuu
            case 0x0075756b:
            {
                const  data_chars   = "rnckbj";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuw
            case 0x0077756b:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xfd28, // 0.988889 
                    0x02d8, // 0.011111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuy
            case 0x0079756b:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xa81f, // 0.656716 
                    0x4899, // 0.283582 
                    0x0f49, // 0.059701 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kuz
            case 0x007a756b:
            {
                const  data_chars   = "ueao";
                const data_weights = [
                    0x7c1f, // 0.484848 
                    0x3e10, // 0.242424 
                    0x345d, // 0.204545 
                    0x1174, // 0.068182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kwa
            case 0x0061776b:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kwo
            case 0x006f776b:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kya
            case 0x0061796b:
            {
                const  data_chars   = "kbnrs";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kyl
            case 0x006c796b:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kyo
            case 0x006f796b:
            {
                const  data_chars   = "kusnrmezgtdijhbcwoy";
                const data_weights = [
                    0x2df3, // 0.179487 
                    0x2a03, // 0.164103 
                    0x13b1, // 0.076923 
                    0x1111, // 0.066667 
                    0x0fc1, // 0.061538 
                    0x0e71, // 0.056410 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0931, // 0.035897 
                    0x0540, // 0.020513 
                    0x0540, // 0.020513 
                    0x0540, // 0.020513 
                    0x0540, // 0.020513 
                    0x03f0, // 0.015385 
                    0x02a0, // 0.010256 
                    0x0150, // 0.005128 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // kyu
            case 0x0075796b:
            {
                const  data_chars   = "ushkjtbrdnmyczoeagi";
                const data_weights = [
                    0x3127, // 0.192000 
                    0x2d0e, // 0.176000 
                    0x1893, // 0.096000 
                    0x126f, // 0.072000 
                    0x1062, // 0.064000 
                    0x0e56, // 0.056000 
                    0x0e56, // 0.056000 
                    0x0c4a, // 0.048000 
                    0x0a3d, // 0.040000 
                    0x0831, // 0.032000 
                    0x0831, // 0.032000 
                    0x0831, // 0.032000 
                    0x0831, // 0.032000 
                    0x0625, // 0.024000 
                    0x0419, // 0.016000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // k
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'l':
        {
            switch ( trigram_u32 )
            {
            // lac
            case 0x0063616c:
            {
                const  data_chars   = "ek";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lag
            case 0x0067616c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lai
            case 0x0069616c:
            {
                const  data_chars   = "nst";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lan
            case 0x006e616c:
            {
                const  data_chars   = "dcet";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lar
            case 0x0072616c:
            {
                const  data_chars   = "iy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // las
            case 0x0073616c:
            {
                const  data_chars   = "skt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lat
            case 0x0074616c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lay
            case 0x0079616c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // laz
            case 0x007a616c:
            {
                const  data_chars   = "az";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lba
            case 0x0061626c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lbi
            case 0x0069626c:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lca
            case 0x0061636c:
            {
                const  data_chars   = "sb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lci
            case 0x0069636c:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lde
            case 0x0065646c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ldi
            case 0x0069646c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lea
            case 0x0061656c:
            {
                const  data_chars   = "rb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lec
            case 0x0063656c:
            {
                const  data_chars   = "oh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lee
            case 0x0065656c:
            {
                const  data_chars   = "pb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // leg
            case 0x0067656c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lei
            case 0x0069656c:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lem
            case 0x006d656c:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // len
            case 0x006e656c:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ler
            case 0x0072656c:
            {
                const  data_chars   = "ys";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lex
            case 0x0078656c:
            {
                const  data_chars   = "sc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lfu
            case 0x0075666c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lga
            case 0x0061676c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lge
            case 0x0065676c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lic
            case 0x0063696c:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lid
            case 0x0064696c:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lig
            case 0x0067696c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lim
            case 0x006d696c:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lin
            case 0x006e696c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lio
            case 0x006f696c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lip
            case 0x0070696c:
            {
                const  data_chars   = "aop";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lis
            case 0x0073696c:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lit
            case 0x0074696c:
            {
                const  data_chars   = "aehoy";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // liv
            case 0x0076696c:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lla
            case 0x00616c6c:
            {
                const  data_chars   = "grs";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lle
            case 0x00656c6c:
            {
                const  data_chars   = "rygns";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lli
            case 0x00696c6c:
            {
                const  data_chars   = "go";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lln
            case 0x006e6c6c:
            {
                return 'e';
            }
            break;

            // lly
            case 0x00796c6c:
            {
                const  data_chars   = "wm";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lmo
            case 0x006f6d6c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lne
            case 0x00656e6c:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lob
            case 0x00626f6c:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // log
            case 0x00676f6c:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lop
            case 0x00706f6c:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lor
            case 0x00726f6c:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // los
            case 0x00736f6c:
            {
                const  data_chars   = "os";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lov
            case 0x00766f6c:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // low
            case 0x00776f6c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lpa
            case 0x0061706c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lph
            case 0x0068706c:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lpi
            case 0x0069706c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lse
            case 0x0065736c:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lst
            case 0x0074736c:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lte
            case 0x0065746c:
            {
                const  data_chars   = "rn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lto
            case 0x006f746c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ltu
            case 0x0075746c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lue
            case 0x0065756c:
            {
                const  data_chars   = "wa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // luf
            case 0x0066756c:
            {
                const  data_chars   = "fa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lux
            case 0x0078756c:
            {
                return 'e';
            }
            break;

            // lvi
            case 0x0069766c:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lwa
            case 0x0061776c:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lym
            case 0x006d796c:
            {
                return 'p';
            }
            break;

            // lyo
            case 0x006f796c:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lyp
            case 0x0070796c:
            {
                const  data_chars   = "lr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // lyw
            case 0x0077796c:
            {
                return 'o';
            }
            break;

            // lza
            case 0x00617a6c:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // l
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'm':
        {
            switch ( trigram_u32 )
            {
            // maa
            case 0x0061616d:
            {
                const  data_chars   = "cgrksimnoty";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mab
            case 0x0062616d:
            {
                const  data_chars   = "aueioy";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x3b7a, // 0.232323 
                    0x0a58, // 0.040404 
                    0x0a58, // 0.040404 
                    0x052c, // 0.020202 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mac
            case 0x0063616d:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mad
            case 0x0064616d:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xa812, // 0.656522 
                    0x37a7, // 0.217391 
                    0x2047, // 0.126087 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mae
            case 0x0065616d:
            {
                const  data_chars   = "dkbnmghtszcyjiorufw";
                const data_weights = [
                    0x2666, // 0.150000 
                    0x1b06, // 0.105556 
                    0x1b06, // 0.105556 
                    0x199a, // 0.100000 
                    0x16c1, // 0.088889 
                    0x16c1, // 0.088889 
                    0x127d, // 0.072222 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0b61, // 0.044444 
                    0x09f5, // 0.038889 
                    0x071c, // 0.027778 
                    0x05b0, // 0.022222 
                    0x0444, // 0.016667 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x016c, // 0.005556 
                    0x016c, // 0.005556 
                    0x016c, // 0.005556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // maf
            case 0x0066616d:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mag
            case 0x0067616d:
            {
                const  data_chars   = "aouie";
                const data_weights = [
                    0x8ae5, // 0.542553 
                    0x2cf0, // 0.175532 
                    0x282c, // 0.156915 
                    0x1883, // 0.095745 
                    0x077d, // 0.029255 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mah
            case 0x0068616d:
            {
                const  data_chars   = "aioc";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x4c5a, // 0.298246 
                    0x47dc, // 0.280702 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mai
            case 0x0069616d:
            {
                const  data_chars   = "zstkcnbdmgorhyaipfw";
                const data_weights = [
                    0x1f59, // 0.122449 
                    0x1d9b, // 0.115646 
                    0x1d9b, // 0.115646 
                    0x1bdd, // 0.108844 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x16a4, // 0.088435 
                    0x116a, // 0.068027 
                    0x08b5, // 0.034014 
                    0x08b5, // 0.034014 
                    0x06f7, // 0.027211 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // maj
            case 0x006a616d:
            {
                const  data_chars   = "iuoae";
                const data_weights = [
                    0x9697, // 0.588235 
                    0x4141, // 0.254902 
                    0x1e1e, // 0.117647 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mak
            case 0x006b616d:
            {
                const  data_chars   = "iuaoeky";
                const data_weights = [
                    0x6ebe, // 0.432584 
                    0x375f, // 0.216292 
                    0x3256, // 0.196629 
                    0x19e3, // 0.101124 
                    0x0731, // 0.028090 
                    0x05c1, // 0.022472 
                    0x00b8, // 0.002809 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mam
            case 0x006d616d:
            {
                const  data_chars   = "aiuoebtmy";
                const data_weights = [
                    0x77e3, // 0.468310 
                    0x2fc6, // 0.186620 
                    0x1ea6, // 0.119718 
                    0x1bf2, // 0.109155 
                    0x1770, // 0.091549 
                    0x039b, // 0.014085 
                    0x00e7, // 0.003521 
                    0x00e7, // 0.003521 
                    0x00e7, // 0.003521 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // man
            case 0x006e616d:
            {
                const  data_chars   = "oaeidbgjnztcsumypkrhfw";
                const data_weights = [
                    0x60ae, // 0.377649 
                    0x3cac, // 0.236994 
                    0x0bd7, // 0.046243 
                    0x0ada, // 0.042389 
                    0x09dd, // 0.038536 
                    0x08e1, // 0.034682 
                    0x07e4, // 0.030829 
                    0x07e4, // 0.030829 
                    0x06e8, // 0.026975 
                    0x05eb, // 0.023121 
                    0x056d, // 0.021195 
                    0x04ef, // 0.019268 
                    0x0470, // 0.017341 
                    0x02f6, // 0.011561 
                    0x02f6, // 0.011561 
                    0x02f6, // 0.011561 
                    0x017b, // 0.005780 
                    0x00fd, // 0.003854 
                    0x00fd, // 0.003854 
                    0x007e, // 0.001927 
                    0x007e, // 0.001927 
                    0x007e, // 0.001927 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mao
            case 0x006f616d:
            {
                const  data_chars   = "knidmrtgj";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // map
            case 0x0070616d:
            {
                const  data_chars   = "pl";
                const data_weights = [
                    0xf7be, // 0.967742 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mar
            case 0x0072616d:
            {
                const  data_chars   = "uieayokr";
                const data_weights = [
                    0x9b7f, // 0.607407 
                    0x54b4, // 0.330864 
                    0x050f, // 0.019753 
                    0x0329, // 0.012346 
                    0x0287, // 0.009877 
                    0x01e5, // 0.007407 
                    0x01e5, // 0.007407 
                    0x0144, // 0.004938 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mas
            case 0x0073616d:
            {
                const  data_chars   = "ahueost";
                const data_weights = [
                    0x53cd, // 0.327345 
                    0x4a9a, // 0.291417 
                    0x4a9a, // 0.291417 
                    0x10dd, // 0.065868 
                    0x028e, // 0.009980 
                    0x028e, // 0.009980 
                    0x0106, // 0.003992 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mat
            case 0x0074616d:
            {
                const  data_chars   = "saoetuc";
                const data_weights = [
                    0xa026, // 0.625581 
                    0x3fb4, // 0.248837 
                    0x130d, // 0.074419 
                    0x093a, // 0.036047 
                    0x02fa, // 0.011628 
                    0x0098, // 0.002326 
                    0x004c, // 0.001163 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mau
            case 0x0075616d:
            {
                const  data_chars   = "rsctej";
                const data_weights = [
                    0x9436, // 0.578947 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // maw
            case 0x0077616d:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // may
            case 0x0079616d:
            {
                const  data_chars   = "aoue";
                const data_weights = [
                    0x9f96, // 0.623377 
                    0x3532, // 0.207792 
                    0x27e5, // 0.155844 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // maz
            case 0x007a616d:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x7d55, // 0.489583 
                    0x5000, // 0.312500 
                    0x1d55, // 0.114583 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mba
            case 0x0061626d:
            {
                const  data_chars   = "srncgy";
                const data_weights = [
                    0x64d9, // 0.393939 
                    0x45d1, // 0.272727 
                    0x364e, // 0.212121 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mbe
            case 0x0065626d:
            {
                const  data_chars   = "tchimr";
                const data_weights = [
                    0xcaab, // 0.791667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mbi
            case 0x0069626d:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mbo
            case 0x006f626d:
            {
                const  data_chars   = "nkmrocdi";
                const data_weights = [
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mbr
            case 0x0072626d:
            {
                const  data_chars   = "ag";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mbu
            case 0x0075626d:
            {
                const  data_chars   = "ijmrtc";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mch
            case 0x0068636d:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mea
            case 0x0061656d:
            {
                const  data_chars   = "rckn";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // meb
            case 0x0062656d:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mec
            case 0x0063656d:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // med
            case 0x0064656d:
            {
                const  data_chars   = "aoei";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mee
            case 0x0065656d:
            {
                const  data_chars   = "kjr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mef
            case 0x0066656d:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // meg
            case 0x0067656d:
            {
                const  data_chars   = "auio";
                const data_weights = [
                    0x9891, // 0.595960 
                    0x3b7a, // 0.232323 
                    0x1c72, // 0.111111 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // meh
            case 0x0068656d:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mei
            case 0x0069656d:
            {
                const  data_chars   = "kscjntrdwmbgehyzi";
                const data_weights = [
                    0x323e, // 0.196262 
                    0x2648, // 0.149533 
                    0x23e3, // 0.140187 
                    0x1588, // 0.084112 
                    0x1324, // 0.074766 
                    0x10bf, // 0.065421 
                    0x0e5b, // 0.056075 
                    0x0bf6, // 0.046729 
                    0x0992, // 0.037383 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                    0x04c9, // 0.018692 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mej
            case 0x006a656d:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0xf287, // 0.947368 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mek
            case 0x006b656d:
            {
                const  data_chars   = "iauok";
                const data_weights = [
                    0x5050, // 0.313726 
                    0x4b4b, // 0.294118 
                    0x3737, // 0.215686 
                    0x2828, // 0.156863 
                    0x0505, // 0.019608 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mel
            case 0x006c656d:
            {
                const  data_chars   = "ob";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mem
            case 0x006d656d:
            {
                const  data_chars   = "auoeib";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // men
            case 0x006e656d:
            {
                const  data_chars   = "oatdkuinsjmghby";
                const data_weights = [
                    0x7e39, // 0.493056 
                    0x371c, // 0.215278 
                    0x138e, // 0.076389 
                    0x0c72, // 0.048611 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // meo
            case 0x006f656d:
            {
                const  data_chars   = "tkc";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mep
            case 0x0070656d:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mer
            case 0x0072656d:
            {
                const  data_chars   = "uiacosel";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x3da1, // 0.240741 
                    0x25ed, // 0.148148 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mes
            case 0x0073656d:
            {
                const  data_chars   = "haeuos";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x1800, // 0.093750 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // met
            case 0x0074656d:
            {
                const  data_chars   = "aosetr";
                const data_weights = [
                    0x61bf, // 0.381818 
                    0x4a79, // 0.290909 
                    0x253d, // 0.145455 
                    0x1bed, // 0.109091 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // meu
            case 0x0075656d:
            {
                const  data_chars   = "rct";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mew
            case 0x0077656d:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mey
            case 0x0079656d:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xe9bd, // 0.913043 
                    0x1643, // 0.086957 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mez
            case 0x007a656d:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x5800, // 0.343750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mia
            case 0x0061696d:
            {
                const  data_chars   = "ksriogtcnmwdzj";
                const data_weights = [
                    0x3cf4, // 0.238095 
                    0x2db7, // 0.178571 
                    0x2186, // 0.130952 
                    0x2186, // 0.130952 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mib
            case 0x0062696d:
            {
                const  data_chars   = "auieoy";
                const data_weights = [
                    0x7d28, // 0.488889 
                    0x27d2, // 0.155556 
                    0x27d2, // 0.155556 
                    0x2222, // 0.133333 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mic
            case 0x0063696d:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0xff0b, // 0.996269 
                    0x00f5, // 0.003731 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mid
            case 0x0064696d:
            {
                const  data_chars   = "aoedhltu";
                const data_weights = [
                    0x8b10, // 0.543210 
                    0x5ed1, // 0.370370 
                    0x0e39, // 0.055556 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mie
            case 0x0065696d:
            {
                const  data_chars   = "rgkmzbdniclj";
                const data_weights = [
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mif
            case 0x0066696d:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mig
            case 0x0067696d:
            {
                const  data_chars   = "aoiuye";
                const data_weights = [
                    0x9dc0, // 0.616216 
                    0x2daa, // 0.178378 
                    0x1fd4, // 0.124324 
                    0x109b, // 0.064865 
                    0x02c4, // 0.010811 
                    0x0162, // 0.005405 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mih
            case 0x0068696d:
            {
                const  data_chars   = "aoiey";
                const data_weights = [
                    0x756e, // 0.458716 
                    0x4675, // 0.275229 
                    0x3d10, // 0.238532 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mii
            case 0x0069696d:
            {
                const  data_chars   = "skcmnztwridbgoej";
                const data_weights = [
                    0x3111, // 0.191667 
                    0x2000, // 0.125000 
                    0x199a, // 0.100000 
                    0x1555, // 0.083333 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mij
            case 0x006a696d:
            {
                const  data_chars   = "iuoay";
                const data_weights = [
                    0xa41a, // 0.641026 
                    0x2df3, // 0.179487 
                    0x20d2, // 0.128205 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mik
            case 0x006b696d:
            {
                const  data_chars   = "aouikye";
                const data_weights = [
                    0x72f0, // 0.448980 
                    0x343f, // 0.204082 
                    0x302e, // 0.188209 
                    0x1e30, // 0.117914 
                    0x04a5, // 0.018141 
                    0x02e7, // 0.011338 
                    0x02e7, // 0.011338 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mil
            case 0x006c696d:
            {
                const  data_chars   = "eikty";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mim
            case 0x006d696d:
            {
                const  data_chars   = "aiuoey";
                const data_weights = [
                    0x810a, // 0.504065 
                    0x393c, // 0.223577 
                    0x1d23, // 0.113821 
                    0x1a04, // 0.101626 
                    0x0a68, // 0.040650 
                    0x042a, // 0.016260 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // min
            case 0x006e696d:
            {
                const  data_chars   = "aoeiuygksnhbtmj";
                const data_weights = [
                    0xafa7, // 0.686147 
                    0x2a7b, // 0.165945 
                    0x19dc, // 0.101010 
                    0x06d6, // 0.026696 
                    0x0237, // 0.008658 
                    0x008e, // 0.002165 
                    0x008e, // 0.002165 
                    0x005f, // 0.001443 
                    0x005f, // 0.001443 
                    0x002f, // 0.000722 
                    0x002f, // 0.000722 
                    0x002f, // 0.000722 
                    0x002f, // 0.000722 
                    0x002f, // 0.000722 
                    0x002f, // 0.000722 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mio
            case 0x006f696d:
            {
                const  data_chars   = "ktmnsgizbdyrcaojh";
                const data_weights = [
                    0x30f1, // 0.191176 
                    0x21e2, // 0.132353 
                    0x1878, // 0.095588 
                    0x1878, // 0.095588 
                    0x1878, // 0.095588 
                    0x1697, // 0.088235 
                    0x10f1, // 0.066176 
                    0x0d2d, // 0.051471 
                    0x0b4b, // 0.044118 
                    0x0969, // 0.036765 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mip
            case 0x0070696d:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mir
            case 0x0072696d:
            {
                const  data_chars   = "aouiye";
                const data_weights = [
                    0x46cf, // 0.276596 
                    0x3678, // 0.212766 
                    0x2b93, // 0.170213 
                    0x20ae, // 0.127660 
                    0x1b3c, // 0.106383 
                    0x1b3c, // 0.106383 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mis
            case 0x0073696d:
            {
                const  data_chars   = "ahueost";
                const data_weights = [
                    0x59d3, // 0.350877 
                    0x5369, // 0.325815 
                    0x1f70, // 0.122807 
                    0x19aa, // 0.100251 
                    0x17bd, // 0.092732 
                    0x0149, // 0.005013 
                    0x00a4, // 0.002506 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mit
            case 0x0074696d:
            {
                const  data_chars   = "saoeti";
                const data_weights = [
                    0x7970, // 0.474359 
                    0x4c95, // 0.299145 
                    0x2d67, // 0.177350 
                    0x0af1, // 0.042735 
                    0x0118, // 0.004274 
                    0x008c, // 0.002137 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // miu
            case 0x0075696d:
            {
                const  data_chars   = "rctsemwknobd";
                const data_weights = [
                    0x3cbf, // 0.237288 
                    0x2fbb, // 0.186441 
                    0x1e5f, // 0.118644 
                    0x15b2, // 0.084746 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // miw
            case 0x0077696d:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // miy
            case 0x0079696d:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd3b3, // 0.826955 
                    0x20cc, // 0.128120 
                    0x0b80, // 0.044925 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // miz
            case 0x007a696d:
            {
                const  data_chars   = "uaoey";
                const data_weights = [
                    0xcbc8, // 0.796020 
                    0x1abf, // 0.104478 
                    0x16ed, // 0.089552 
                    0x01e9, // 0.007463 
                    0x00a3, // 0.002488 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mma
            case 0x00616d6d:
            {
                const  data_chars   = "ctikenb";
                const data_weights = [
                    0xc87b, // 0.783132 
                    0x18ad, // 0.096386 
                    0x0c56, // 0.048193 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mme
            case 0x00656d6d:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mmi
            case 0x00696d6d:
            {
                const  data_chars   = "nycu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mmo
            case 0x006f6d6d:
            {
                const  data_chars   = "kns";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mmu
            case 0x00756d6d:
            {
                const  data_chars   = "rk";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mmy
            case 0x00796d6d:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moa
            case 0x00616f6d:
            {
                const  data_chars   = "krswiomnbyzj";
                const data_weights = [
                    0x3b14, // 0.230769 
                    0x3483, // 0.205128 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mob
            case 0x00626f6d:
            {
                const  data_chars   = "aueioy";
                const data_weights = [
                    0x6186, // 0.380952 
                    0x4f3d, // 0.309524 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moc
            case 0x00636f6d:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mod
            case 0x00646f6d:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x98d6, // 0.597015 
                    0x4c6b, // 0.298507 
                    0x1abf, // 0.104478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moe
            case 0x00656f6d:
            {
                const  data_chars   = "krdgzcmtbins";
                const data_weights = [
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mof
            case 0x00666f6d:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mog
            case 0x00676f6d:
            {
                const  data_chars   = "aiouye";
                const data_weights = [
                    0x814b, // 0.505050 
                    0x3e10, // 0.242424 
                    0x2434, // 0.141414 
                    0x1746, // 0.090909 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moh
            case 0x00686f6d:
            {
                const  data_chars   = "aoiey";
                const data_weights = [
                    0x5c47, // 0.360465 
                    0x4a6b, // 0.290698 
                    0x4771, // 0.279070 
                    0x0ee2, // 0.058140 
                    0x02fa, // 0.011628 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moi
            case 0x00696f6d:
            {
                const  data_chars   = "ksmcnwrtdizgbua";
                const data_weights = [
                    0x299a, // 0.162500 
                    0x2333, // 0.137500 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1666, // 0.087500 
                    0x1666, // 0.087500 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moj
            case 0x006a6f6d:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xb26d, // 0.696970 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mok
            case 0x006b6f6d:
            {
                const  data_chars   = "auoieky";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5183, // 0.318408 
                    0x380a, // 0.218905 
                    0x1abf, // 0.104478 
                    0x028c, // 0.009950 
                    0x028c, // 0.009950 
                    0x0146, // 0.004975 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mol
            case 0x006c6f6d:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mom
            case 0x006d6f6d:
            {
                const  data_chars   = "oiaeuybm";
                const data_weights = [
                    0x5988, // 0.349727 
                    0x48be, // 0.284153 
                    0x368f, // 0.213115 
                    0x1230, // 0.071038 
                    0x0f63, // 0.060109 
                    0x02cc, // 0.010929 
                    0x0166, // 0.005464 
                    0x0166, // 0.005464 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mon
            case 0x006e6f6d:
            {
                const  data_chars   = "oaijdtezubcknsgpmyh";
                const data_weights = [
                    0x63dd, // 0.390093 
                    0x27a1, // 0.154799 
                    0x17c7, // 0.092879 
                    0x0cae, // 0.049536 
                    0x0a4e, // 0.040248 
                    0x0a4e, // 0.040248 
                    0x0983, // 0.037152 
                    0x0722, // 0.027864 
                    0x0657, // 0.024768 
                    0x058c, // 0.021672 
                    0x058c, // 0.021672 
                    0x04c1, // 0.018576 
                    0x04c1, // 0.018576 
                    0x03f6, // 0.015480 
                    0x03f6, // 0.015480 
                    0x032c, // 0.012384 
                    0x0261, // 0.009288 
                    0x0196, // 0.006192 
                    0x00cb, // 0.003096 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moo
            case 0x006f6f6d:
            {
                const  data_chars   = "ktgnzmridsbyac";
                const data_weights = [
                    0x3777, // 0.216667 
                    0x2222, // 0.133333 
                    0x1dde, // 0.116667 
                    0x1555, // 0.083333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mop
            case 0x00706f6d:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mor
            case 0x00726f6d:
            {
                const  data_chars   = "ioauye";
                const data_weights = [
                    0xda0e, // 0.851770 
                    0x1a0e, // 0.101770 
                    0x0488, // 0.017699 
                    0x0366, // 0.013274 
                    0x0244, // 0.008850 
                    0x01b3, // 0.006637 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mos
            case 0x00736f6d:
            {
                const  data_chars   = "haeuo";
                const data_weights = [
                    0x73e4, // 0.452703 
                    0x3ad0, // 0.229730 
                    0x2453, // 0.141892 
                    0x2298, // 0.135135 
                    0x0a61, // 0.040541 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mot
            case 0x00746f6d:
            {
                const  data_chars   = "oasetich";
                const data_weights = [
                    0xc3b8, // 0.764526 
                    0x1845, // 0.094801 
                    0x1139, // 0.067278 
                    0x0d4f, // 0.051988 
                    0x044e, // 0.016820 
                    0x0064, // 0.001529 
                    0x0064, // 0.001529 
                    0x0064, // 0.001529 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mou
            case 0x00756f6d:
            {
                const  data_chars   = "scrtnkwdgjmbzfo";
                const data_weights = [
                    0x428f, // 0.260000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mow
            case 0x00776f6d:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moy
            case 0x00796f6d:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x96cb, // 0.589041 
                    0x3b9e, // 0.232877 
                    0x2d97, // 0.178082 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // moz
            case 0x007a6f6d:
            {
                const  data_chars   = "uaeo";
                const data_weights = [
                    0x7000, // 0.437500 
                    0x7000, // 0.437500 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpa
            case 0x0061706d:
            {
                const  data_chars   = "ckms";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpe
            case 0x0065706d:
            {
                const  data_chars   = "ir";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mph
            case 0x0068706d:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpi
            case 0x0069706d:
            {
                const  data_chars   = "rc";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpl
            case 0x006c706d:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpo
            case 0x006f706d:
            {
                const  data_chars   = "scgjk";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpt
            case 0x0074706d:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mpu
            case 0x0075706d:
            {
                const  data_chars   = "dkrs";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mro
            case 0x006f726d:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mts
            case 0x0073746d:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mua
            case 0x0061756d:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mub
            case 0x0062756d:
            {
                const  data_chars   = "eio";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muc
            case 0x0063756d:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mud
            case 0x0064756d:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mue
            case 0x0065756d:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mug
            case 0x0067756d:
            {
                const  data_chars   = "iuae";
                const data_weights = [
                    0xeaab, // 0.916667 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muh
            case 0x0068756d:
            {
                const  data_chars   = "iy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mui
            case 0x0069756d:
            {
                const  data_chars   = "kwnsdertug";
                const data_weights = [
                    0x4aab, // 0.291667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muj
            case 0x006a756d:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muk
            case 0x006b756d:
            {
                const  data_chars   = "aouiey";
                const data_weights = [
                    0x8da9, // 0.553360 
                    0x3ab0, // 0.229249 
                    0x1e5b, // 0.118577 
                    0x1031, // 0.063241 
                    0x0715, // 0.027668 
                    0x0206, // 0.007905 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mum
            case 0x006d756d:
            {
                const  data_chars   = "aeio";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mun
            case 0x006e756d:
            {
                const  data_chars   = "eaoiz";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x29cc, // 0.163265 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muo
            case 0x006f756d:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mup
            case 0x0070756d:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mur
            case 0x0072756d:
            {
                const  data_chars   = "aoeiuym";
                const data_weights = [
                    0x9b04, // 0.605528 
                    0x46c1, // 0.276382 
                    0x0d82, // 0.052764 
                    0x0d82, // 0.052764 
                    0x0149, // 0.005025 
                    0x0149, // 0.005025 
                    0x00a5, // 0.002513 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mus
            case 0x0073756d:
            {
                const  data_chars   = "haueo";
                const data_weights = [
                    0x851f, // 0.520000 
                    0x4f5c, // 0.310000 
                    0x147b, // 0.080000 
                    0x0ccd, // 0.050000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mut
            case 0x0074756d:
            {
                const  data_chars   = "aseot";
                const data_weights = [
                    0x8be8, // 0.546512 
                    0x6536, // 0.395349 
                    0x08ee, // 0.034884 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muu
            case 0x0075756d:
            {
                const  data_chars   = "dr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muw
            case 0x0077756d:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muy
            case 0x0079756d:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // muz
            case 0x007a756d:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mya
            case 0x0061796d:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // myk
            case 0x006b796d:
            {
                return 'y';
            }
            break;

            // myo
            case 0x006f796d:
            {
                const  data_chars   = "jkgsdhrouizctnabfe";
                const data_weights = [
                    0x4345, // 0.262774 
                    0x21a3, // 0.131387 
                    0x1de6, // 0.116788 
                    0x12b0, // 0.072993 
                    0x10d1, // 0.065693 
                    0x0b36, // 0.043796 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0958, // 0.036496 
                    0x0779, // 0.029197 
                    0x0779, // 0.029197 
                    0x059b, // 0.021898 
                    0x03bd, // 0.014599 
                    0x03bd, // 0.014599 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mys
            case 0x0073796d:
            {
                const  data_chars   = "ti";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // myu
            case 0x0075796d:
            {
                const  data_chars   = "jnu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // mza
            case 0x00617a6d:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // m
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'n':
        {
            switch ( trigram_u32 )
            {
            // naa
            case 0x0061616e:
            {
                const  data_chars   = "krcs";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nab
            case 0x0062616e:
            {
                const  data_chars   = "eauio";
                const data_weights = [
                    0x7483, // 0.455128 
                    0x5d8a, // 0.365385 
                    0x1be6, // 0.108974 
                    0x09d9, // 0.038462 
                    0x0835, // 0.032051 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nac
            case 0x0063616e:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nad
            case 0x0064616e:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xb817, // 0.719101 
                    0x2b25, // 0.168539 
                    0x1cc4, // 0.112360 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nae
            case 0x0065616e:
            {
                const  data_chars   = "bnsfmhizgtwc";
                const data_weights = [
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // naf
            case 0x0066616e:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nag
            case 0x0067616e:
            {
                const  data_chars   = "aiouewy";
                const data_weights = [
                    0xacae, // 0.674534 
                    0x2a9d, // 0.166460 
                    0x1694, // 0.088199 
                    0x0cb8, // 0.049689 
                    0x04c5, // 0.018634 
                    0x0051, // 0.001242 
                    0x0051, // 0.001242 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nah
            case 0x0068616e:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0xac86, // 0.673913 
                    0x2c86, // 0.173913 
                    0x26f5, // 0.152174 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nai
            case 0x0069616e:
            {
                const  data_chars   = "dszckgtnbmrhjyiwuefp";
                const data_weights = [
                    0x2a68, // 0.165644 
                    0x1f69, // 0.122699 
                    0x1dd7, // 0.116564 
                    0x1c45, // 0.110429 
                    0x12d9, // 0.073620 
                    0x1147, // 0.067485 
                    0x0e23, // 0.055215 
                    0x0c90, // 0.049080 
                    0x0c90, // 0.049080 
                    0x0c90, // 0.049080 
                    0x07da, // 0.030675 
                    0x0648, // 0.024540 
                    0x0648, // 0.024540 
                    0x04b6, // 0.018405 
                    0x0324, // 0.012270 
                    0x0192, // 0.006135 
                    0x0192, // 0.006135 
                    0x0192, // 0.006135 
                    0x0192, // 0.006135 
                    0x0192, // 0.006135 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // naj
            case 0x006a616e:
            {
                const  data_chars   = "iouya";
                const data_weights = [
                    0x9555, // 0.583333 
                    0x4aab, // 0.291667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nak
            case 0x006b616e:
            {
                const  data_chars   = "auoie";
                const data_weights = [
                    0xe68d, // 0.900585 
                    0x0a0d, // 0.039265 
                    0x08c5, // 0.034252 
                    0x0634, // 0.024227 
                    0x006e, // 0.001671 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nam
            case 0x006d616e:
            {
                const  data_chars   = "iaeoubmpy";
                const data_weights = [
                    0xdeec, // 0.870787 
                    0x0f57, // 0.059925 
                    0x08de, // 0.034644 
                    0x0398, // 0.014045 
                    0x02e0, // 0.011236 
                    0x0133, // 0.004682 
                    0x00b8, // 0.002809 
                    0x003d, // 0.000936 
                    0x003d, // 0.000936 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nan
            case 0x006e616e:
            {
                const  data_chars   = "aoikbdtgsjcpzruemnywf";
                const data_weights = [
                    0x4c6e, // 0.298551 
                    0x33f1, // 0.202899 
                    0x11cf, // 0.069565 
                    0x0ed7, // 0.057971 
                    0x0d5b, // 0.052174 
                    0x0c9d, // 0.049275 
                    0x0a63, // 0.040580 
                    0x09a5, // 0.037681 
                    0x09a5, // 0.037681 
                    0x05f0, // 0.023188 
                    0x0532, // 0.020290 
                    0x0474, // 0.017391 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x02f8, // 0.011594 
                    0x02f8, // 0.011594 
                    0x02f8, // 0.011594 
                    0x023a, // 0.008696 
                    0x00be, // 0.002899 
                    0x00be, // 0.002899 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nao
            case 0x006f616e:
            {
                const  data_chars   = "ksmthrnyiegjcuzbf";
                const data_weights = [
                    0x4f0f, // 0.308824 
                    0x2969, // 0.161765 
                    0x1697, // 0.088235 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nap
            case 0x0070616e:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nar
            case 0x0072616e:
            {
                const  data_chars   = "iuaeoyd";
                const data_weights = [
                    0x6dd9, // 0.429091 
                    0x3e5f, // 0.243636 
                    0x3e5f, // 0.243636 
                    0x0ee5, // 0.058182 
                    0x04a8, // 0.018182 
                    0x00ee, // 0.003636 
                    0x00ee, // 0.003636 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nas
            case 0x0073616e:
            {
                const  data_chars   = "haeuop";
                const data_weights = [
                    0x9181, // 0.568376 
                    0x359b, // 0.209402 
                    0x1a42, // 0.102564 
                    0x192a, // 0.098291 
                    0x0460, // 0.017094 
                    0x0118, // 0.004274 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nat
            case 0x0074616e:
            {
                const  data_chars   = "soaetic";
                const data_weights = [
                    0x61f3, // 0.382609 
                    0x5b45, // 0.356522 
                    0x3333, // 0.200000 
                    0x07cb, // 0.030435 
                    0x0474, // 0.017391 
                    0x023a, // 0.008696 
                    0x011d, // 0.004348 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nau
            case 0x0075616e:
            {
                const  data_chars   = "srkcemn";
                const data_weights = [
                    0x7878, // 0.470588 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // naw
            case 0x0077616e:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nay
            case 0x0079616e:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xc30c, // 0.761905 
                    0x34d3, // 0.206349 
                    0x0821, // 0.031746 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // naz
            case 0x007a616e:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x75e5, // 0.460526 
                    0x650d, // 0.394737 
                    0x1af3, // 0.105263 
                    0x0a1b, // 0.039474 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nba
            case 0x0061626e:
            {
                const  data_chars   = "rnsiytkcmgbdoua";
                const data_weights = [
                    0x4f09, // 0.308725 
                    0x36fb, // 0.214765 
                    0x2af4, // 0.167785 
                    0x112e, // 0.067114 
                    0x0f77, // 0.060403 
                    0x0dbf, // 0.053691 
                    0x0897, // 0.033557 
                    0x0528, // 0.020134 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nbe
            case 0x0065626e:
            {
                const  data_chars   = "ticnukjlhoearz";
                const data_weights = [
                    0xd660, // 0.837398 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x042a, // 0.016260 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nbi
            case 0x0069626e:
            {
                const  data_chars   = "rnc";
                const data_weights = [
                    0xb333, // 0.700000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nbo
            case 0x006f626e:
            {
                const  data_chars   = "nkrcuhmsgjwtd";
                const data_weights = [
                    0x4874, // 0.283019 
                    0x26a4, // 0.150943 
                    0x1cfb, // 0.113208 
                    0x1352, // 0.075472 
                    0x1352, // 0.075472 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nbu
            case 0x0075626e:
            {
                const  data_chars   = "tncmdkrzshiy";
                const data_weights = [
                    0x3a84, // 0.228571 
                    0x3333, // 0.200000 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nby
            case 0x0079626e:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nce
            case 0x0065636e:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nch
            case 0x0068636e:
            {
                const  data_chars   = "oiuae";
                const data_weights = [
                    0xa962, // 0.661654 
                    0x4268, // 0.259398 
                    0x0a96, // 0.041353 
                    0x08a9, // 0.033835 
                    0x00f6, // 0.003759 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nci
            case 0x0069636e:
            {
                const  data_chars   = "ns";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ncl
            case 0x006c636e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nco
            case 0x006f636e:
            {
                const  data_chars   = "re";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ncr
            case 0x0072636e:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nct
            case 0x0074636e:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nda
            case 0x0061646e:
            {
                const  data_chars   = "incgtkbsrwhoazy";
                const data_weights = [
                    0x7ae1, // 0.480000 
                    0x2ed0, // 0.182857 
                    0x118e, // 0.068571 
                    0x1017, // 0.062857 
                    0x0ea1, // 0.057143 
                    0x08c7, // 0.034286 
                    0x0750, // 0.028571 
                    0x05da, // 0.022857 
                    0x05da, // 0.022857 
                    0x02ed, // 0.011429 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nde
            case 0x0065646e:
            {
                const  data_chars   = "nskmrbc";
                const data_weights = [
                    0xd134, // 0.817204 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ndo
            case 0x006f646e:
            {
                const  data_chars   = "rjmkncubhigyazdo";
                const data_weights = [
                    0x4211, // 0.258065 
                    0x294a, // 0.161290 
                    0x268a, // 0.150538 
                    0x1e48, // 0.118280 
                    0x0dc3, // 0.053763 
                    0x0dc3, // 0.053763 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ndr
            case 0x0072646e:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ndu
            case 0x0075646e:
            {
                const  data_chars   = "ch";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nea
            case 0x0061656e:
            {
                const  data_chars   = "gnbci";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // neb
            case 0x0062656e:
            {
                const  data_chars   = "eauio";
                const data_weights = [
                    0x7555, // 0.458333 
                    0x4aab, // 0.291667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nec
            case 0x0063656e:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ned
            case 0x0064656e:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xdd68, // 0.864865 
                    0x1bad, // 0.108108 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nee
            case 0x0065656e:
            {
                const  data_chars   = "srzn";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nef
            case 0x0066656e:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // neg
            case 0x0067656e:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x9310, // 0.574468 
                    0x2e4c, // 0.180851 
                    0x28da, // 0.159574 
                    0x1057, // 0.063830 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // neh
            case 0x0068656e:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x6c9b, // 0.424242 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nei
            case 0x0069656e:
            {
                const  data_chars   = "csrmbn";
                const data_weights = [
                    0x7943, // 0.473684 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nej
            case 0x006a656e:
            {
                const  data_chars   = "ioy";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nek
            case 0x006b656e:
            {
                const  data_chars   = "oaiuky";
                const data_weights = [
                    0x6b2a, // 0.418605 
                    0x388f, // 0.220930 
                    0x329b, // 0.197674 
                    0x1aca, // 0.104651 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nem
            case 0x006d656e:
            {
                const  data_chars   = "aouiebm";
                const data_weights = [
                    0x6c2b, // 0.422535 
                    0x4482, // 0.267606 
                    0x27a9, // 0.154930 
                    0x193d, // 0.098592 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nen
            case 0x006e656e:
            {
                const  data_chars   = "oagiktjducnmbehsr";
                const data_weights = [
                    0x5e72, // 0.368932 
                    0x1dd3, // 0.116505 
                    0x13e2, // 0.077670 
                    0x13e2, // 0.077670 
                    0x0eea, // 0.058252 
                    0x0eea, // 0.058252 
                    0x0c6d, // 0.048544 
                    0x09f1, // 0.038835 
                    0x09f1, // 0.038835 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // neo
            case 0x006f656e:
            {
                const  data_chars   = "kmrb";
                const data_weights = [
                    0xc4ec, // 0.769231 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nep
            case 0x0070656e:
            {
                const  data_chars   = "pao";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ner
            case 0x0072656e:
            {
                const  data_chars   = "uiaeog";
                const data_weights = [
                    0x589e, // 0.346154 
                    0x4ec5, // 0.307692 
                    0x313b, // 0.192308 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nes
            case 0x0073656e:
            {
                const  data_chars   = "ahueos";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // net
            case 0x0074656e:
            {
                const  data_chars   = "osate";
                const data_weights = [
                    0x53c8, // 0.327273 
                    0x4a79, // 0.290909 
                    0x3c82, // 0.236364 
                    0x2095, // 0.127273 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // neu
            case 0x0075656e:
            {
                const  data_chars   = "srcpm";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // new
            case 0x0077656e:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nex
            case 0x0078656e:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ney
            case 0x0079656e:
            {
                const  data_chars   = "aoul";
                const data_weights = [
                    0xbc3c, // 0.735294 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nez
            case 0x007a656e:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x6e8c, // 0.431818 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nfu
            case 0x0075666e:
            {
                const  data_chars   = "jktrmn";
                const data_weights = [
                    0x599a, // 0.350000 
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nga
            case 0x0061676e:
            {
                const  data_chars   = "nwiktmorsecyphugfdz";
                const data_weights = [
                    0x240e, // 0.140845 
                    0x2241, // 0.133803 
                    0x2241, // 0.133803 
                    0x2241, // 0.133803 
                    0x103a, // 0.063380 
                    0x103a, // 0.063380 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0ad1, // 0.042254 
                    0x0904, // 0.035211 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0569, // 0.021127 
                    0x0569, // 0.021127 
                    0x039b, // 0.014085 
                    0x01ce, // 0.007042 
                    0x01ce, // 0.007042 
                    0x01ce, // 0.007042 
                    0x01ce, // 0.007042 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngd
            case 0x0064676e:
            {
                return 'o';
            }
            break;

            // nge
            case 0x0065676e:
            {
                const  data_chars   = "ntijdkpmr";
                const data_weights = [
                    0x989e, // 0.596154 
                    0x2c4f, // 0.173077 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngi
            case 0x0069676e:
            {
                const  data_chars   = "rnswgj";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngl
            case 0x006c676e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngo
            case 0x006f676e:
            {
                const  data_chars   = "kcsndmjrthuzflio";
                const data_weights = [
                    0x438e, // 0.263889 
                    0x238e, // 0.138889 
                    0x18e4, // 0.097222 
                    0x1555, // 0.083333 
                    0x11c7, // 0.069444 
                    0x11c7, // 0.069444 
                    0x11c7, // 0.069444 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngt
            case 0x0074676e:
            {
                return 'o';
            }
            break;

            // ngu
            case 0x0075676e:
            {
                const  data_chars   = "cmnrsdghjkabyt";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x3249, // 0.196429 
                    0x2000, // 0.125000 
                    0x1b6e, // 0.107143 
                    0x16db, // 0.089286 
                    0x0db7, // 0.053571 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngw
            case 0x0077676e:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ngy
            case 0x0079676e:
            {
                const  data_chars   = "otu";
                const data_weights = [
                    0xeeef, // 0.933333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nha
            case 0x0061686e:
            {
                const  data_chars   = "mrnsctiy";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x3e10, // 0.242424 
                    0x26ca, // 0.151515 
                    0x26ca, // 0.151515 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nhe
            case 0x0065686e:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nhi
            case 0x0069686e:
            {
                const  data_chars   = "grksdtym";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nho
            case 0x006f686e:
            {
                const  data_chars   = "ksrdc";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nia
            case 0x0061696e:
            {
                const  data_chars   = "iguknt";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nib
            case 0x0062696e:
            {
                const  data_chars   = "aueio";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nic
            case 0x0063696e:
            {
                const  data_chars   = "hac";
                const data_weights = [
                    0xfafb, // 0.980392 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nid
            case 0x0064696e:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nie
            case 0x0065696e:
            {
                const  data_chars   = "mk";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nif
            case 0x0066696e:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nig
            case 0x0067696e:
            {
                const  data_chars   = "aoiue";
                const data_weights = [
                    0x7800, // 0.468750 
                    0x4d55, // 0.302083 
                    0x1aab, // 0.104167 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nih
            case 0x0068696e:
            {
                const  data_chars   = "oai";
                const data_weights = [
                    0xae14, // 0.680000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nii
            case 0x0069696e:
            {
                const  data_chars   = "ktshzndgybjmwocr";
                const data_weights = [
                    0x2121, // 0.129412 
                    0x1e1e, // 0.117647 
                    0x1b1b, // 0.105882 
                    0x1818, // 0.094118 
                    0x1818, // 0.094118 
                    0x1515, // 0.082353 
                    0x1212, // 0.070588 
                    0x0f0f, // 0.058824 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0606, // 0.023529 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nij
            case 0x006a696e:
            {
                const  data_chars   = "uio";
                const data_weights = [
                    0x78e4, // 0.472222 
                    0x4e39, // 0.305556 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nik
            case 0x006b696e:
            {
                const  data_chars   = "auoikey";
                const data_weights = [
                    0x4814, // 0.281553 
                    0x36ae, // 0.213592 
                    0x2a41, // 0.165049 
                    0x2050, // 0.126214 
                    0x2050, // 0.126214 
                    0x1166, // 0.067961 
                    0x04f9, // 0.019417 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nim
            case 0x006d696e:
            {
                const  data_chars   = "aioebcu";
                const data_weights = [
                    0xb5ad, // 0.709677 
                    0x294a, // 0.161290 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nin
            case 0x006e696e:
            {
                const  data_chars   = "oagizkjncuetsd";
                const data_weights = [
                    0x7657, // 0.462264 
                    0x290e, // 0.160377 
                    0x1cfb, // 0.113208 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x073f, // 0.028302 
                    0x073f, // 0.028302 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nio
            case 0x006f696e:
            {
                const  data_chars   = "inzbdjkrcgms";
                const data_weights = [
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nip
            case 0x0070696e:
            {
                const  data_chars   = "pe";
                const data_weights = [
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nir
            case 0x0072696e:
            {
                const  data_chars   = "eiaouy";
                const data_weights = [
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2aab, // 0.166667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nis
            case 0x0073696e:
            {
                const  data_chars   = "hsaeuo";
                const data_weights = [
                    0xf19b, // 0.943765 
                    0x0497, // 0.017930 
                    0x042c, // 0.016300 
                    0x03c1, // 0.014670 
                    0x010b, // 0.004075 
                    0x00d6, // 0.003260 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nit
            case 0x0074696e:
            {
                const  data_chars   = "atosecy";
                const data_weights = [
                    0x9333, // 0.575000 
                    0x3000, // 0.187500 
                    0x1666, // 0.087500 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // niu
            case 0x0075696e:
            {
                const  data_chars   = "spmbcnr";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // niv
            case 0x0076696e:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // niw
            case 0x0077696e:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // niy
            case 0x0079696e:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xc3c4, // 0.764706 
                    0x34b5, // 0.205882 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // niz
            case 0x007a696e:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nja
            case 0x00616a6e:
            {
                const  data_chars   = "kmnypdgi";
                const data_weights = [
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nji
            case 0x00696a6e:
            {
                const  data_chars   = "nmcrtkgydasijoubh";
                const data_weights = [
                    0x5b27, // 0.356061 
                    0x2e8c, // 0.181818 
                    0x24d9, // 0.143939 
                    0x1555, // 0.083333 
                    0x1174, // 0.068182 
                    0x09b2, // 0.037879 
                    0x07c2, // 0.030303 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // njj
            case 0x006a6a6e:
            {
                return 'i';
            }
            break;

            // njo
            case 0x006f6a6e:
            {
                const  data_chars   = "ujmgcnhkdywfbos";
                const data_weights = [
                    0x28a3, // 0.158730 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1c72, // 0.111111 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1041, // 0.063492 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nju
            case 0x00756a6e:
            {
                const  data_chars   = "kngusdyicmroaht";
                const data_weights = [
                    0x69bd, // 0.413043 
                    0x26f5, // 0.152174 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // njy
            case 0x00796a6e:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nka
            case 0x00616b6e:
            {
                const  data_chars   = "niwkmtsdjrcepyz";
                const data_weights = [
                    0x41a4, // 0.256410 
                    0x313b, // 0.192308 
                    0x25be, // 0.147436 
                    0x2276, // 0.134615 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x09d9, // 0.038462 
                    0x0835, // 0.032051 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x01a4, // 0.006410 
                    0x01a4, // 0.006410 
                    0x01a4, // 0.006410 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nke
            case 0x00656b6e:
            {
                const  data_chars   = "intspakobcuwefgym";
                const data_weights = [
                    0x3939, // 0.223529 
                    0x3636, // 0.211765 
                    0x2727, // 0.152941 
                    0x1818, // 0.094118 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nki
            case 0x00696b6e:
            {
                const  data_chars   = "tcnsyrbdkmw";
                const data_weights = [
                    0x3b89, // 0.232558 
                    0x3595, // 0.209302 
                    0x2fa1, // 0.186047 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nko
            case 0x006f6b6e:
            {
                const  data_chars   = "jutskcdmrngbyieahzwp";
                const data_weights = [
                    0x2000, // 0.125000 
                    0x1777, // 0.091667 
                    0x1777, // 0.091667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1333, // 0.075000 
                    0x1111, // 0.066667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0889, // 0.033333 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nku
            case 0x00756b6e:
            {
                const  data_chars   = "rsmbntckg";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nky
            case 0x00796b6e:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0xae14, // 0.680000 
                    0x51ec, // 0.320000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nla
            case 0x00616c6e:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nma
            case 0x00616d6e:
            {
                const  data_chars   = "cetrinykdshufgbmw";
                const data_weights = [
                    0x6f97, // 0.435897 
                    0x3093, // 0.189744 
                    0x1f82, // 0.123077 
                    0x0e71, // 0.056410 
                    0x0bd1, // 0.046154 
                    0x0a81, // 0.041026 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x02a0, // 0.010256 
                    0x02a0, // 0.010256 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nmc
            case 0x00636d6e:
            {
                return 'h';
            }
            break;

            // nme
            case 0x00656d6e:
            {
                const  data_chars   = "incm";
                const data_weights = [
                    0xbe2c, // 0.742857 
                    0x3333, // 0.200000 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nmi
            case 0x00696d6e:
            {
                const  data_chars   = "nyzdsck";
                const data_weights = [
                    0x6b5b, // 0.419355 
                    0x39ce, // 0.225806 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nmo
            case 0x006f6d6e:
            {
                const  data_chars   = "nrkisebj";
                const data_weights = [
                    0x650d, // 0.394737 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nmu
            case 0x00756d6e:
            {
                const  data_chars   = "rtjks";
                const data_weights = [
                    0xc30c, // 0.761905 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nmy
            case 0x00796d6e:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nna
            case 0x00616e6e:
            {
                const  data_chars   = "inkgrmswbjptyz";
                const data_weights = [
                    0x6529, // 0.395161 
                    0x273a, // 0.153226 
                    0x18c6, // 0.096774 
                    0x1295, // 0.072581 
                    0x1295, // 0.072581 
                    0x0e74, // 0.056452 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                    0x0211, // 0.008065 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nnd
            case 0x00646e6e:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nne
            case 0x00656e6e:
            {
                const  data_chars   = "nbstrapumkclzxy";
                const data_weights = [
                    0x52d3, // 0.323529 
                    0x2969, // 0.161765 
                    0x21e2, // 0.132353 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nni
            case 0x00696e6e:
            {
                const  data_chars   = "scnkjehgtw";
                const data_weights = [
                    0x4c41, // 0.297872 
                    0x3678, // 0.212766 
                    0x2b93, // 0.170213 
                    0x20ae, // 0.127660 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nnn
            case 0x006e6e6e:
            {
                const  data_chars   = "oea";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nno
            case 0x006f6e6e:
            {
                const  data_chars   = "snmkhudjzcybrgiwftao";
                const data_weights = [
                    0x46bd, // 0.276316 
                    0x2000, // 0.125000 
                    0x1af3, // 0.105263 
                    0x1943, // 0.098684 
                    0x15e5, // 0.085526 
                    0x0d79, // 0.052632 
                    0x0bca, // 0.046053 
                    0x086c, // 0.032895 
                    0x086c, // 0.032895 
                    0x06bd, // 0.026316 
                    0x050d, // 0.019737 
                    0x050d, // 0.019737 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nns
            case 0x00736e6e:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nnu
            case 0x00756e6e:
            {
                const  data_chars   = "mpski";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nny
            case 0x00796e6e:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noa
            case 0x00616f6e:
            {
                const  data_chars   = "simrckn";
                const data_weights = [
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nob
            case 0x00626f6e:
            {
                const  data_chars   = "ueoail";
                const data_weights = [
                    0x60f4, // 0.378723 
                    0x3105, // 0.191489 
                    0x3105, // 0.191489 
                    0x2dc1, // 0.178723 
                    0x0e29, // 0.055319 
                    0x0117, // 0.004255 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noc
            case 0x00636f6e:
            {
                const  data_chars   = "he";
                const data_weights = [
                    0xfe22, // 0.992701 
                    0x01de, // 0.007299 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nod
            case 0x00646f6e:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0xcb87, // 0.795031 
                    0x2164, // 0.130435 
                    0x117e, // 0.068323 
                    0x0197, // 0.006211 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noe
            case 0x00656f6e:
            {
                const  data_chars   = "cmndkhurz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nof
            case 0x00666f6e:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nog
            case 0x00676f6e:
            {
                const  data_chars   = "aouiey";
                const data_weights = [
                    0x7891, // 0.470968 
                    0x2fe6, // 0.187097 
                    0x2456, // 0.141935 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x01a7, // 0.006452 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noh
            case 0x00686f6e:
            {
                const  data_chars   = "aieog";
                const data_weights = [
                    0xc0ca, // 0.753086 
                    0x284c, // 0.157407 
                    0x0ca4, // 0.049383 
                    0x08b1, // 0.033951 
                    0x0195, // 0.006173 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noi
            case 0x00696f6e:
            {
                const  data_chars   = "ckrsnewdmbo";
                const data_weights = [
                    0x4116, // 0.254237 
                    0x3868, // 0.220339 
                    0x2b64, // 0.169492 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noj
            case 0x006a6f6e:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xa34f, // 0.637931 
                    0x53dd, // 0.327586 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nok
            case 0x006b6f6e:
            {
                const  data_chars   = "iauoeky";
                const data_weights = [
                    0x4ebc, // 0.307560 
                    0x3ee6, // 0.245704 
                    0x3bd2, // 0.233677 
                    0x2f81, // 0.185567 
                    0x04d7, // 0.018900 
                    0x01c2, // 0.006873 
                    0x0071, // 0.001718 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nol
            case 0x006c6f6e:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nom
            case 0x006d6f6e:
            {
                const  data_chars   = "aioeuym";
                const data_weights = [
                    0x5bc8, // 0.358527 
                    0x48ee, // 0.284884 
                    0x329b, // 0.197674 
                    0x19cc, // 0.100775 
                    0x0ce6, // 0.050388 
                    0x017d, // 0.005814 
                    0x007f, // 0.001938 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // non
            case 0x006e6f6e:
            {
                const  data_chars   = "oaiebjdmnzspyu";
                const data_weights = [
                    0x70a4, // 0.440000 
                    0x34e8, // 0.206667 
                    0x1b4f, // 0.106667 
                    0x0f5c, // 0.060000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x06d4, // 0.026667 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noo
            case 0x006f6f6e:
            {
                const  data_chars   = "kmtcgzn";
                const data_weights = [
                    0x7287, // 0.447368 
                    0x2f28, // 0.184211 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nop
            case 0x00706f6e:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nor
            case 0x00726f6e:
            {
                const  data_chars   = "ioatueyf";
                const data_weights = [
                    0xc409, // 0.765766 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                    0x049d, // 0.018018 
                    0x049d, // 0.018018 
                    0x049d, // 0.018018 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nos
            case 0x00736f6e:
            {
                const  data_chars   = "aheuo";
                const data_weights = [
                    0x809f, // 0.502431 
                    0x4970, // 0.286872 
                    0x1d75, // 0.115073 
                    0x1316, // 0.074554 
                    0x0565, // 0.021070 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // not
            case 0x00746f6e:
            {
                const  data_chars   = "asoet";
                const data_weights = [
                    0x7a9c, // 0.478947 
                    0x44b7, // 0.268421 
                    0x2f28, // 0.184211 
                    0x0ed2, // 0.057895 
                    0x02b2, // 0.010526 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nou
            case 0x00756f6e:
            {
                const  data_chars   = "recsmgjtdyzi";
                const data_weights = [
                    0x8765, // 0.528889 
                    0x3456, // 0.204444 
                    0x2b3c, // 0.168889 
                    0x06d4, // 0.026667 
                    0x05b0, // 0.022222 
                    0x036a, // 0.013333 
                    0x0247, // 0.008889 
                    0x0247, // 0.008889 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nov
            case 0x00766f6e:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // now
            case 0x00776f6e:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noy
            case 0x00796f6e:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xd929, // 0.848276 
                    0x234f, // 0.137931 
                    0x0388, // 0.013793 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // noz
            case 0x007a6f6e:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x6817, // 0.406593 
                    0x5195, // 0.318681 
                    0x40b4, // 0.252747 
                    0x05a0, // 0.021978 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npa
            case 0x0061706e:
            {
                const  data_chars   = "ciknmslr";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npe
            case 0x0065706e:
            {
                const  data_chars   = "ikrt";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npi
            case 0x0069706e:
            {
                const  data_chars   = "rtnaim";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npo
            case 0x006f706e:
            {
                const  data_chars   = "rjuscznkpbdi";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npu
            case 0x0075706e:
            {
                const  data_chars   = "krzijntu";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // npy
            case 0x0079706e:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nra
            case 0x0061726e:
            {
                const  data_chars   = "kind";
                const data_weights = [
                    0x9bd3, // 0.608696 
                    0x42c8, // 0.260870 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nre
            case 0x0065726e:
            {
                const  data_chars   = "int";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nri
            case 0x0069726e:
            {
                const  data_chars   = "nkgtocfmzvy";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nro
            case 0x006f726e:
            {
                const  data_chars   = "kju";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nru
            case 0x0075726e:
            {
                const  data_chars   = "ikmrs";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nry
            case 0x0079726e:
            {
                const  data_chars   = "uoa";
                const data_weights = [
                    0x871c, // 0.527778 
                    0x638e, // 0.388889 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsa
            case 0x0061736e:
            {
                const  data_chars   = "wkintrgsyap";
                const data_weights = [
                    0x4e0c, // 0.304878 
                    0x3b51, // 0.231707 
                    0x3513, // 0.207317 
                    0x18fa, // 0.097561 
                    0x0f9c, // 0.060976 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsc
            case 0x0063736e:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nse
            case 0x0065736e:
            {
                const  data_chars   = "nitkrcm";
                const data_weights = [
                    0x7ed9, // 0.495495 
                    0x4e6a, // 0.306306 
                    0x195f, // 0.099099 
                    0x1273, // 0.072072 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsh
            case 0x0068736e:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0x71a0, // 0.443850 
                    0x4b4b, // 0.294118 
                    0x3405, // 0.203209 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsi
            case 0x0069736e:
            {
                const  data_chars   = "od";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsk
            case 0x006b736e:
            {
                const  data_chars   = "ye";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsm
            case 0x006d736e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nso
            case 0x006f736e:
            {
                const  data_chars   = "nukjmd";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nst
            case 0x0074736e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsu
            case 0x0075736e:
            {
                const  data_chars   = "ikgtelruyns";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nsy
            case 0x0079736e:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nta
            case 0x0061746e:
            {
                const  data_chars   = "kinrtmldghwcjzba";
                const data_weights = [
                    0x3e63, // 0.243697 
                    0x317b, // 0.193277 
                    0x28e0, // 0.159664 
                    0x28e0, // 0.159664 
                    0x0f0f, // 0.058824 
                    0x0ac2, // 0.042017 
                    0x089b, // 0.033613 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nte
            case 0x0065746e:
            {
                const  data_chars   = "nirtkmsl";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x283b, // 0.157143 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nth
            case 0x0068746e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nti
            case 0x0069746e:
            {
                const  data_chars   = "nakq";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ntl
            case 0x006c746e:
            {
                return 'e';
            }
            break;

            // nto
            case 0x006f746e:
            {
                const  data_chars   = "kmynustgrdcbez";
                const data_weights = [
                    0x414e, // 0.255102 
                    0x2492, // 0.142857 
                    0x1a1f, // 0.102041 
                    0x1a1f, // 0.102041 
                    0x1a1f, // 0.102041 
                    0x0fac, // 0.061224 
                    0x0d10, // 0.051020 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ntr
            case 0x0072746e:
            {
                const  data_chars   = "ay";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nts
            case 0x0073746e:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ntu
            case 0x0075746e:
            {
                const  data_chars   = "rh";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ntz
            case 0x007a746e:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nub
            case 0x0062756e:
            {
                const  data_chars   = "oaui";
                const data_weights = [
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuc
            case 0x0063756e:
            {
                const  data_chars   = "hl";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nud
            case 0x0064756e:
            {
                const  data_chars   = "aode";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nue
            case 0x0065756e:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuf
            case 0x0066756e:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nug
            case 0x0067756e:
            {
                const  data_chars   = "aiu";
                const data_weights = [
                    0x7ae1, // 0.480000 
                    0x6666, // 0.400000 
                    0x1eb8, // 0.120000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuh
            case 0x0068756e:
            {
                const  data_chars   = "oai";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nui
            case 0x0069756e:
            {
                const  data_chars   = "dbs";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuj
            case 0x006a756e:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuk
            case 0x006b756e:
            {
                const  data_chars   = "aiueko";
                const data_weights = [
                    0x685f, // 0.407692 
                    0x646e, // 0.392308 
                    0x2372, // 0.138462 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // num
            case 0x006d756e:
            {
                const  data_chars   = "aoez";
                const data_weights = [
                    0xf6f3, // 0.964646 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x014b, // 0.005051 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nun
            case 0x006e756e:
            {
                const  data_chars   = "oabtukp";
                const data_weights = [
                    0xd46d, // 0.829787 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuo
            case 0x006f756e:
            {
                const  data_chars   = "nrtz";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nup
            case 0x0070756e:
            {
                const  data_chars   = "up";
                const data_weights = [
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nur
            case 0x0072756e:
            {
                const  data_chars   = "uaeio";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x4aab, // 0.291667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nus
            case 0x0073756e:
            {
                const  data_chars   = "hau";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nut
            case 0x0074756e:
            {
                const  data_chars   = "asct";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuu
            case 0x0075756e:
            {
                const  data_chars   = "sr";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuw
            case 0x0077756e:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuy
            case 0x0079756e:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nuz
            case 0x007a756e:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nve
            case 0x0065766e:
            {
                const  data_chars   = "rh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nvi
            case 0x0069766e:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nwa
            case 0x0061776e:
            {
                const  data_chars   = "rkcfmn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nwi
            case 0x0069776e:
            {
                const  data_chars   = "in";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nwo
            case 0x006f776e:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nya
            case 0x0061796e:
            {
                const  data_chars   = "mncsrkbhozjpdt";
                const data_weights = [
                    0x7b60, // 0.481928 
                    0x1bc2, // 0.108434 
                    0x1bc2, // 0.108434 
                    0x1282, // 0.072289 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nyo
            case 0x006f796e:
            {
                const  data_chars   = "srtkuihjdabymon";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nyt
            case 0x0074796e:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nyu
            case 0x0075796e:
            {
                const  data_chars   = "dugknzcsrybmtpiafoj";
                const data_weights = [
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nza
            case 0x00617a6e:
            {
                const  data_chars   = "wkinebtcmsdrh";
                const data_weights = [
                    0x3c8a, // 0.236486 
                    0x3ad0, // 0.229730 
                    0x3915, // 0.222973 
                    0x3915, // 0.222973 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                    0x01bb, // 0.006757 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nze
            case 0x00657a6e:
            {
                const  data_chars   = "nigjmot";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x1f08, // 0.121212 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nzo
            case 0x006f7a6e:
            {
                const  data_chars   = "kjguemiw";
                const data_weights = [
                    0x8f5c, // 0.560000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // nzu
            case 0x00757a6e:
            {
                const  data_chars   = "kirshtmuyd";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // n
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'o':
        {
            switch ( trigram_u32 )
            {
            // oab
            case 0x0062616f:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oac
            case 0x0063616f:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oad
            case 0x0064616f:
            {
                const  data_chars   = "acos";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oag
            case 0x0067616f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oai
            case 0x0069616f:
            {
                const  data_chars   = "krdmnhbc";
                const data_weights = [
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oaj
            case 0x006a616f:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oak
            case 0x006b616f:
            {
                const  data_chars   = "aiesuw";
                const data_weights = [
                    0x9111, // 0.566667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oam
            case 0x006d616f:
            {
                const  data_chars   = "iae";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x5000, // 0.312500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oan
            case 0x006e616f:
            {
                const  data_chars   = "azijbsc";
                const data_weights = [
                    0x7333, // 0.450000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oao
            case 0x006f616f:
            {
                const  data_chars   = "tikmn";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oar
            case 0x0072616f:
            {
                const  data_chars   = "aei";
                const data_weights = [
                    0xd37a, // 0.826087 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oas
            case 0x0073616f:
            {
                const  data_chars   = "ahou";
                const data_weights = [
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oat
            case 0x0074616f:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oaw
            case 0x0077616f:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oay
            case 0x0079616f:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oaz
            case 0x007a616f:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oba
            case 0x0061626f:
            {
                const  data_chars   = "rstnymcbikdgezjalow";
                const data_weights = [
                    0x4f4e, // 0.309783 
                    0x2a6f, // 0.165761 
                    0x1e9c, // 0.119565 
                    0x1e9c, // 0.119565 
                    0x1164, // 0.067935 
                    0x090b, // 0.035326 
                    0x07a7, // 0.029891 
                    0x06f5, // 0.027174 
                    0x0643, // 0.024457 
                    0x0643, // 0.024457 
                    0x04df, // 0.019022 
                    0x04df, // 0.019022 
                    0x02c8, // 0.010870 
                    0x0216, // 0.008152 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x00b2, // 0.002717 
                    0x00b2, // 0.002717 
                    0x00b2, // 0.002717 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obb
            case 0x0062626f:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obe
            case 0x0065626f:
            {
                const  data_chars   = "tcniorksdhymlbzgj";
                const data_weights = [
                    0x9e41, // 0.618182 
                    0x129e, // 0.072727 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obi
            case 0x0069626f:
            {
                const  data_chars   = "rtksihnymgodazwjebcu";
                const data_weights = [
                    0x459d, // 0.271930 
                    0x23ee, // 0.140351 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x0b3a, // 0.043860 
                    0x0b3a, // 0.043860 
                    0x0b3a, // 0.043860 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x06bd, // 0.026316 
                    0x047e, // 0.017544 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obj
            case 0x006a626f:
            {
                return 'e';
            }
            break;

            // obl
            case 0x006c626f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obo
            case 0x006f626f:
            {
                const  data_chars   = "rksentdcjbugm";
                const data_weights = [
                    0x8b3a, // 0.543860 
                    0x1d31, // 0.114035 
                    0x18b4, // 0.096491 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obs
            case 0x0073626f:
            {
                const  data_chars   = "et";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // obu
            case 0x0075626f:
            {
                const  data_chars   = "ksntcdgihymzreauoj";
                const data_weights = [
                    0x33b4, // 0.201970 
                    0x299e, // 0.162562 
                    0x25d5, // 0.147783 
                    0x2492, // 0.142857 
                    0x1bbe, // 0.108374 
                    0x0a17, // 0.039409 
                    0x0791, // 0.029557 
                    0x0791, // 0.029557 
                    0x064e, // 0.024631 
                    0x050b, // 0.019704 
                    0x050b, // 0.019704 
                    0x03c9, // 0.014778 
                    0x03c9, // 0.014778 
                    0x03c9, // 0.014778 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0143, // 0.004926 
                    0x0143, // 0.004926 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oby
            case 0x0079626f:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // occ
            case 0x0063636f:
            {
                const  data_chars   = "hu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oce
            case 0x0065636f:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // och
            case 0x0068636f:
            {
                const  data_chars   = "oiau";
                const data_weights = [
                    0x9899, // 0.596083 
                    0x5d10, // 0.363525 
                    0x05a4, // 0.022032 
                    0x04b3, // 0.018360 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oci
            case 0x0069636f:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ock
            case 0x006b636f:
            {
                return 's';
            }
            break;

            // oco
            case 0x006f636f:
            {
                const  data_chars   = "mr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oda
            case 0x0061646f:
            {
                const  data_chars   = "inkctsgwybhrojmapeuz";
                const data_weights = [
                    0x79cc, // 0.475771 
                    0x2537, // 0.145374 
                    0x1c32, // 0.110132 
                    0x10eb, // 0.066079 
                    0x0fca, // 0.061674 
                    0x07e5, // 0.030837 
                    0x0483, // 0.017621 
                    0x03f2, // 0.015419 
                    0x0362, // 0.013216 
                    0x0362, // 0.013216 
                    0x02d2, // 0.011013 
                    0x0241, // 0.008811 
                    0x0241, // 0.008811 
                    0x01b1, // 0.006608 
                    0x0121, // 0.004405 
                    0x0090, // 0.002203 
                    0x0090, // 0.002203 
                    0x0090, // 0.002203 
                    0x0090, // 0.002203 
                    0x0090, // 0.002203 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ode
            case 0x0065646f:
            {
                const  data_chars   = "nrskgoyltacdjmw";
                const data_weights = [
                    0x61e2, // 0.382353 
                    0x2d2d, // 0.176471 
                    0x25a6, // 0.147059 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // odi
            case 0x0069646f:
            {
                const  data_chars   = "sn";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // odo
            case 0x006f646f:
            {
                const  data_chars   = "rmkngsjciutybehwdxz";
                const data_weights = [
                    0x6d62, // 0.427273 
                    0x253d, // 0.145455 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0df7, // 0.054545 
                    0x0ba3, // 0.045455 
                    0x0a79, // 0.040909 
                    0x06fb, // 0.027273 
                    0x05d1, // 0.022727 
                    0x04a8, // 0.018182 
                    0x037e, // 0.013636 
                    0x037e, // 0.013636 
                    0x037e, // 0.013636 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x012a, // 0.004545 
                    0x012a, // 0.004545 
                    0x012a, // 0.004545 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // odr
            case 0x0072646f:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // odu
            case 0x0075646f:
            {
                const  data_chars   = "csty";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oeb
            case 0x0062656f:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oec
            case 0x0063656f:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oed
            case 0x0064656f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oeg
            case 0x0067656f:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oeh
            case 0x0068656f:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oei
            case 0x0069656f:
            {
                const  data_chars   = "cdmnfhk";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oej
            case 0x006a656f:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oek
            case 0x006b656f:
            {
                const  data_chars   = "ioaue";
                const data_weights = [
                    0x7000, // 0.437500 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oem
            case 0x006d656f:
            {
                const  data_chars   = "aoui";
                const data_weights = [
                    0xa1af, // 0.631579 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oen
            case 0x006e656f:
            {
                const  data_chars   = "ojmbdsaenhkzcgip";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oeo
            case 0x006f656f:
            {
                const  data_chars   = "cb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oer
            case 0x0072656f:
            {
                const  data_chars   = "uae";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oes
            case 0x0073656f:
            {
                const  data_chars   = "ahu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oet
            case 0x0074656f:
            {
                const  data_chars   = "oaes";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oeu
            case 0x0075656f:
            {
                const  data_chars   = "rsc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oez
            case 0x007a656f:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // off
            case 0x0066666f:
            {
                return 'i';
            }
            break;

            // ofi
            case 0x0069666f:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ofu
            case 0x0075666f:
            {
                const  data_chars   = "ktnrjsmedgbiycp";
                const data_weights = [
                    0x5829, // 0.344371 
                    0x254c, // 0.145695 
                    0x254c, // 0.145695 
                    0x21e8, // 0.132450 
                    0x0bde, // 0.046358 
                    0x0a2c, // 0.039735 
                    0x0a2c, // 0.039735 
                    0x087a, // 0.033113 
                    0x06c8, // 0.026490 
                    0x0364, // 0.013245 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oga
            case 0x0061676f:
            {
                const  data_chars   = "wnsmktyriohbdeugcjz";
                const data_weights = [
                    0x51a0, // 0.318841 
                    0x1c72, // 0.111111 
                    0x1acc, // 0.104670 
                    0x1570, // 0.083736 
                    0x11ba, // 0.069243 
                    0x10e7, // 0.066023 
                    0x0c5e, // 0.048309 
                    0x09e5, // 0.038647 
                    0x09e5, // 0.038647 
                    0x097b, // 0.037037 
                    0x07d5, // 0.030596 
                    0x041f, // 0.016103 
                    0x03b6, // 0.014493 
                    0x01a6, // 0.006441 
                    0x01a6, // 0.006441 
                    0x00d3, // 0.003221 
                    0x00d3, // 0.003221 
                    0x006a, // 0.001610 
                    0x006a, // 0.001610 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oge
            case 0x0065676f:
            {
                const  data_chars   = "ntsciryhkmzjd";
                const data_weights = [
                    0x8421, // 0.516129 
                    0x1ce7, // 0.112903 
                    0x14a5, // 0.080645 
                    0x0c63, // 0.048387 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ogi
            case 0x0069676f:
            {
                const  data_chars   = "nsmrtdkhgowzcjyfbui";
                const data_weights = [
                    0x33f8, // 0.203008 
                    0x1cdf, // 0.112782 
                    0x1906, // 0.097744 
                    0x1906, // 0.097744 
                    0x1719, // 0.090226 
                    0x1340, // 0.075188 
                    0x0d79, // 0.052632 
                    0x09a0, // 0.037594 
                    0x07b3, // 0.030075 
                    0x07b3, // 0.030075 
                    0x07b3, // 0.030075 
                    0x07b3, // 0.030075 
                    0x05c6, // 0.022556 
                    0x05c6, // 0.022556 
                    0x05c6, // 0.022556 
                    0x03da, // 0.015038 
                    0x03da, // 0.015038 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ogo
            case 0x006f676f:
            {
                const  data_chars   = "smecrtyndkuhjbzg";
                const data_weights = [
                    0x2993, // 0.162393 
                    0x1ea2, // 0.119658 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x15e1, // 0.085470 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x1181, // 0.068376 
                    0x0d21, // 0.051282 
                    0x0af1, // 0.042735 
                    0x08c1, // 0.034188 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ogu
            case 0x0075676f:
            {
                const  data_chars   = "rcsnmktawi";
                const data_weights = [
                    0x4fe3, // 0.312057 
                    0x4e12, // 0.304965 
                    0x1ede, // 0.120567 
                    0x1ede, // 0.120567 
                    0x1057, // 0.063830 
                    0x0914, // 0.035461 
                    0x0572, // 0.021277 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ogy
            case 0x0079676f:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oha
            case 0x0061686f:
            {
                const  data_chars   = "rmntsckiyzgejbdhp";
                const data_weights = [
                    0x6a95, // 0.416335 
                    0x3487, // 0.205179 
                    0x1d94, // 0.115538 
                    0x1361, // 0.075697 
                    0x0f4c, // 0.059761 
                    0x061f, // 0.023904 
                    0x059c, // 0.021912 
                    0x0497, // 0.017928 
                    0x0392, // 0.013944 
                    0x0392, // 0.013944 
                    0x0392, // 0.013944 
                    0x0188, // 0.005976 
                    0x0105, // 0.003984 
                    0x0105, // 0.003984 
                    0x0105, // 0.003984 
                    0x0083, // 0.001992 
                    0x0083, // 0.001992 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohe
            case 0x0065686f:
            {
                const  data_chars   = "ijntdbrk";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohg
            case 0x0067686f:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohi
            case 0x0069686f:
            {
                const  data_chars   = "rgksntdmyjbea";
                const data_weights = [
                    0x7582, // 0.459016 
                    0x3ef3, // 0.245902 
                    0x1230, // 0.071038 
                    0x0b31, // 0.043716 
                    0x09cb, // 0.038251 
                    0x09cb, // 0.038251 
                    0x09cb, // 0.038251 
                    0x06ff, // 0.027322 
                    0x0432, // 0.016393 
                    0x0166, // 0.005464 
                    0x0166, // 0.005464 
                    0x0166, // 0.005464 
                    0x0166, // 0.005464 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohk
            case 0x006b686f:
            {
                return 'a';
            }
            break;

            // ohm
            case 0x006d686f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohn
            case 0x006e686f:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oho
            case 0x006f686f:
            {
                const  data_chars   = "rnksjgmtbzyud";
                const data_weights = [
                    0x5050, // 0.313726 
                    0x34b5, // 0.205882 
                    0x34b5, // 0.205882 
                    0x1414, // 0.078431 
                    0x1192, // 0.068627 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0505, // 0.019608 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohs
            case 0x0073686f:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oht
            case 0x0074686f:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohu
            case 0x0075686f:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ohy
            case 0x0079686f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oia
            case 0x0061696f:
            {
                const  data_chars   = "wncg";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oib
            case 0x0062696f:
            {
                const  data_chars   = "uaieo";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oic
            case 0x0063696f:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfc7e, // 0.986301 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oid
            case 0x0064696f:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x711e, // 0.441860 
                    0x6b2a, // 0.418605 
                    0x23b9, // 0.139535 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oie
            case 0x0065696f:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oif
            case 0x0066696f:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oig
            case 0x0067696f:
            {
                const  data_chars   = "aui";
                const data_weights = [
                    0xbca2, // 0.736842 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oih
            case 0x0068696f:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oii
            case 0x0069696f:
            {
                const  data_chars   = "dcnrz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oij
            case 0x006a696f:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oik
            case 0x006b696f:
            {
                const  data_chars   = "eauio";
                const data_weights = [
                    0x75ef, // 0.460674 
                    0x47e9, // 0.280899 
                    0x2284, // 0.134831 
                    0x1423, // 0.078652 
                    0x0b81, // 0.044944 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oil
            case 0x006c696f:
            {
                const  data_chars   = "el";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oim
            case 0x006d696f:
            {
                const  data_chars   = "auie";
                const data_weights = [
                    0xd794, // 0.842105 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oin
            case 0x006e696f:
            {
                const  data_chars   = "oaemtucinz";
                const data_weights = [
                    0x76fc, // 0.464789 
                    0x3d4c, // 0.239437 
                    0x15a2, // 0.084507 
                    0x1207, // 0.070423 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oio
            case 0x006f696f:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oip
            case 0x0070696f:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oir
            case 0x0072696f:
            {
                const  data_chars   = "ieaou";
                const data_weights = [
                    0x83e1, // 0.515152 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ois
            case 0x0073696f:
            {
                const  data_chars   = "hoeau";
                const data_weights = [
                    0xc925, // 0.785714 
                    0x2000, // 0.125000 
                    0x0b6e, // 0.044643 
                    0x0925, // 0.035714 
                    0x0249, // 0.008929 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oit
            case 0x0074696f:
            {
                const  data_chars   = "aosec";
                const data_weights = [
                    0x7d06, // 0.488372 
                    0x417d, // 0.255814 
                    0x29ad, // 0.162791 
                    0x11dc, // 0.069767 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oiu
            case 0x0075696f:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oiw
            case 0x0077696f:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oiy
            case 0x0079696f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oiz
            case 0x007a696f:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xf2df, // 0.948718 
                    0x0d21, // 0.051282 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oja
            case 0x00616a6f:
            {
                const  data_chars   = "mkgnrbh";
                const data_weights = [
                    0x4ec5, // 0.307692 
                    0x44ec, // 0.269231 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oje
            case 0x00656a6f:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oji
            case 0x00696a6f:
            {
                const  data_chars   = "mnrcgkyiszbtduehj";
                const data_weights = [
                    0x5465, // 0.329670 
                    0x32a3, // 0.197802 
                    0x2762, // 0.153846 
                    0x1681, // 0.087912 
                    0x0b41, // 0.043956 
                    0x0b41, // 0.043956 
                    0x0b41, // 0.043956 
                    0x0690, // 0.025641 
                    0x04b0, // 0.018315 
                    0x03c0, // 0.014652 
                    0x01e0, // 0.007326 
                    0x01e0, // 0.007326 
                    0x01e0, // 0.007326 
                    0x01e0, // 0.007326 
                    0x00f0, // 0.003663 
                    0x00f0, // 0.003663 
                    0x00f0, // 0.003663 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ojo
            case 0x006f6a6f:
            {
                const  data_chars   = "mcnjkdgheizru";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2ccd, // 0.175000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oju
            case 0x00756a6f:
            {
                const  data_chars   = "ksngtrbihdjaem";
                const data_weights = [
                    0x5000, // 0.312500 
                    0x2800, // 0.156250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oka
            case 0x00616b6f:
            {
                const  data_chars   = "wmnictksrzdgbyjheapfu";
                const data_weights = [
                    0x3c1e, // 0.234829 
                    0x25d3, // 0.147757 
                    0x1d62, // 0.114776 
                    0x149a, // 0.080475 
                    0x1139, // 0.067282 
                    0x0f33, // 0.059367 
                    0x0dd9, // 0.054090 
                    0x0acf, // 0.042216 
                    0x0975, // 0.036939 
                    0x076e, // 0.029024 
                    0x076e, // 0.029024 
                    0x0567, // 0.021108 
                    0x0511, // 0.019789 
                    0x04ba, // 0.018470 
                    0x040e, // 0.015831 
                    0x030a, // 0.011873 
                    0x01b0, // 0.006596 
                    0x0103, // 0.003958 
                    0x0103, // 0.003958 
                    0x0056, // 0.001319 
                    0x0056, // 0.001319 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oke
            case 0x00656b6f:
            {
                const  data_chars   = "nitzrmgsbuyjekhc";
                const data_weights = [
                    0x58d1, // 0.346939 
                    0x3978, // 0.224490 
                    0x0fac, // 0.061224 
                    0x0d10, // 0.051020 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // okh
            case 0x00686b6f:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oki
            case 0x00696b6f:
            {
                const  data_chars   = "ntdmcbzsgywrkhiajueop";
                const data_weights = [
                    0x2dcf, // 0.178947 
                    0x2918, // 0.160526 
                    0x18ed, // 0.097368 
                    0x163b, // 0.086842 
                    0x0ed2, // 0.057895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0ac7, // 0.042105 
                    0x0ac7, // 0.042105 
                    0x0ac7, // 0.042105 
                    0x0769, // 0.028947 
                    0x0610, // 0.023684 
                    0x0564, // 0.021053 
                    0x040b, // 0.015789 
                    0x040b, // 0.015789 
                    0x02b2, // 0.010526 
                    0x0205, // 0.007895 
                    0x0159, // 0.005263 
                    0x00ac, // 0.002632 
                    0x00ac, // 0.002632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // okk
            case 0x006b6b6f:
            {
                const  data_chars   = "aoeuiy";
                const data_weights = [
                    0x4b6e, // 0.294643 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x1925, // 0.098214 
                    0x1492, // 0.080357 
                    0x06db, // 0.026786 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oko
            case 0x006f6b6f:
            {
                const  data_chars   = "rsnmtbgdjkciyehzpuaofw";
                const data_weights = [
                    0x220a, // 0.132959 
                    0x1db9, // 0.116105 
                    0x1703, // 0.089888 
                    0x1593, // 0.084270 
                    0x1518, // 0.082397 
                    0x1423, // 0.078652 
                    0x0de7, // 0.054307 
                    0x0bfc, // 0.046816 
                    0x0b81, // 0.044944 
                    0x0b81, // 0.044944 
                    0x091c, // 0.035581 
                    0x0826, // 0.031835 
                    0x0826, // 0.031835 
                    0x063b, // 0.024345 
                    0x063b, // 0.024345 
                    0x0546, // 0.020599 
                    0x0451, // 0.016854 
                    0x03d6, // 0.014981 
                    0x035b, // 0.013109 
                    0x01eb, // 0.007491 
                    0x007b, // 0.001873 
                    0x007b, // 0.001873 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oku
            case 0x00756b6f:
            {
                const  data_chars   = "rsbcnmtjgdyhkizeoawfup";
                const data_weights = [
                    0x2982, // 0.162133 
                    0x24c5, // 0.143634 
                    0x1d40, // 0.114255 
                    0x19a1, // 0.100109 
                    0x12f1, // 0.073993 
                    0x12aa, // 0.072905 
                    0x0c42, // 0.047878 
                    0x0b24, // 0.043526 
                    0x0a4f, // 0.040261 
                    0x07cd, // 0.030468 
                    0x0668, // 0.025027 
                    0x05da, // 0.022851 
                    0x05da, // 0.022851 
                    0x054b, // 0.020675 
                    0x04bc, // 0.018498 
                    0x0475, // 0.017410 
                    0x02c9, // 0.010881 
                    0x0282, // 0.009793 
                    0x023a, // 0.008705 
                    0x01f3, // 0.007617 
                    0x0165, // 0.005441 
                    0x0047, // 0.001088 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oky
            case 0x00796b6f:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ola
            case 0x00616c6f:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // old
            case 0x00646c6f:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ole
            case 0x00656c6f:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oli
            case 0x00696c6f:
            {
                const  data_chars   = "dtvcn";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oll
            case 0x006c6c6f:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // olo
            case 0x006f6c6f:
            {
                const  data_chars   = "gb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // olt
            case 0x00746c6f:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // olv
            case 0x00766c6f:
            {
                return 'i';
            }
            break;

            // oly
            case 0x00796c6f:
            {
                const  data_chars   = "mop";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oma
            case 0x00616d6f:
            {
                const  data_chars   = "crtnekgismpbdzyowauhj";
                const data_weights = [
                    0x5427, // 0.328713 
                    0x25c4, // 0.147525 
                    0x1de9, // 0.116832 
                    0x168f, // 0.088119 
                    0x160d, // 0.086139 
                    0x0c6b, // 0.048515 
                    0x0ae6, // 0.042574 
                    0x089e, // 0.033663 
                    0x081c, // 0.031683 
                    0x05d4, // 0.022772 
                    0x0490, // 0.017822 
                    0x038c, // 0.013861 
                    0x0207, // 0.007921 
                    0x0144, // 0.004950 
                    0x0082, // 0.001980 
                    0x0082, // 0.001980 
                    0x0041, // 0.000990 
                    0x0041, // 0.000990 
                    0x0041, // 0.000990 
                    0x0041, // 0.000990 
                    0x0041, // 0.000990 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omb
            case 0x00626d6f:
            {
                const  data_chars   = "aeiu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ome
            case 0x00656d6f:
            {
                const  data_chars   = "ngicdrkymtzsbjo";
                const data_weights = [
                    0x55eb, // 0.335616 
                    0x1dcf, // 0.116438 
                    0x150b, // 0.082192 
                    0x134a, // 0.075342 
                    0x1189, // 0.068493 
                    0x0fc8, // 0.061644 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x01c1, // 0.006849 
                    0x01c1, // 0.006849 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omi
            case 0x00696d6f:
            {
                const  data_chars   = "nyczstgkjmodhuabweir";
                const data_weights = [
                    0x3ea9, // 0.244770 
                    0x3d0e, // 0.238494 
                    0x156c, // 0.083682 
                    0x13d1, // 0.077406 
                    0x11ac, // 0.069038 
                    0x0ded, // 0.054393 
                    0x09a4, // 0.037657 
                    0x0892, // 0.033473 
                    0x06f6, // 0.027197 
                    0x05e4, // 0.023013 
                    0x055b, // 0.020921 
                    0x055b, // 0.020921 
                    0x04d2, // 0.018828 
                    0x02ae, // 0.010460 
                    0x02ae, // 0.010460 
                    0x0224, // 0.008368 
                    0x019b, // 0.006276 
                    0x019b, // 0.006276 
                    0x019b, // 0.006276 
                    0x0089, // 0.002092 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omm
            case 0x006d6d6f:
            {
                const  data_chars   = "auoyei";
                const data_weights = [
                    0xd61c, // 0.836364 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omo
            case 0x006f6d6f:
            {
                const  data_chars   = "rtngsidcykehzmbuojawf";
                const data_weights = [
                    0x3d9f, // 0.240700 
                    0x3804, // 0.218818 
                    0x210d, // 0.129103 
                    0x0d72, // 0.052516 
                    0x0ce2, // 0.050328 
                    0x0b34, // 0.043764 
                    0x0a15, // 0.039387 
                    0x0a15, // 0.039387 
                    0x0867, // 0.032823 
                    0x0748, // 0.028446 
                    0x050b, // 0.019694 
                    0x050b, // 0.019694 
                    0x047b, // 0.017505 
                    0x047b, // 0.017505 
                    0x035c, // 0.013129 
                    0x035c, // 0.013129 
                    0x02cd, // 0.010941 
                    0x01ae, // 0.006565 
                    0x008f, // 0.002188 
                    0x008f, // 0.002188 
                    0x008f, // 0.002188 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omp
            case 0x00706d6f:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omr
            case 0x00726d6f:
            {
                return 'o';
            }
            break;

            // omu
            case 0x00756d6f:
            {
                const  data_chars   = "rktsnigmo";
                const data_weights = [
                    0x8113, // 0.504202 
                    0x28e0, // 0.159664 
                    0x19d1, // 0.100840 
                    0x17aa, // 0.092437 
                    0x0ce8, // 0.050420 
                    0x0ac2, // 0.042017 
                    0x089b, // 0.033613 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // omy
            case 0x00796d6f:
            {
                const  data_chars   = "ok";
                const data_weights = [
                    0xf627, // 0.961538 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ona
            case 0x00616e6f:
            {
                const  data_chars   = "ikgnrmsbetdwhulczajo";
                const data_weights = [
                    0x409f, // 0.252427 
                    0x3432, // 0.203883 
                    0x25e7, // 0.148058 
                    0x15bf, // 0.084951 
                    0x12a4, // 0.072816 
                    0x0f89, // 0.060680 
                    0x0a90, // 0.041262 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x0459, // 0.016990 
                    0x0459, // 0.016990 
                    0x031b, // 0.012136 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x009f, // 0.002427 
                    0x009f, // 0.002427 
                    0x009f, // 0.002427 
                    0x009f, // 0.002427 
                    0x009f, // 0.002427 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onb
            case 0x00626e6f:
            {
                const  data_chars   = "eauio";
                const data_weights = [
                    0x64d9, // 0.393939 
                    0x4d93, // 0.303030 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onc
            case 0x00636e6f:
            {
                const  data_chars   = "hroe";
                const data_weights = [
                    0xec4f, // 0.923077 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ond
            case 0x00646e6f:
            {
                const  data_chars   = "aoesu";
                const data_weights = [
                    0x6a6d, // 0.415730 
                    0x64ad, // 0.393258 
                    0x2b25, // 0.168539 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // one
            case 0x00656e6f:
            {
                const  data_chars   = "gnscmzkdytbojirupawhe";
                const data_weights = [
                    0x2993, // 0.162393 
                    0x1ea2, // 0.119658 
                    0x1c72, // 0.111111 
                    0x1181, // 0.068376 
                    0x1181, // 0.068376 
                    0x1181, // 0.068376 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x08c1, // 0.034188 
                    0x08c1, // 0.034188 
                    0x08c1, // 0.034188 
                    0x0690, // 0.025641 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onf
            case 0x00666e6f:
            {
                return 'u';
            }
            break;

            // ong
            case 0x00676e6f:
            {
                const  data_chars   = "oaeiuy";
                const data_weights = [
                    0x6830, // 0.406977 
                    0x3b89, // 0.232558 
                    0x23b9, // 0.139535 
                    0x20bf, // 0.127907 
                    0x11dc, // 0.069767 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onh
            case 0x00686e6f:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oni
            case 0x00696e6f:
            {
                const  data_chars   = "snkgtiwymocdzerjfbha";
                const data_weights = [
                    0x625c, // 0.384211 
                    0x1c4b, // 0.110526 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0ed2, // 0.057895 
                    0x0ed2, // 0.057895 
                    0x0c20, // 0.047368 
                    0x096e, // 0.036842 
                    0x06bd, // 0.026316 
                    0x0564, // 0.021053 
                    0x0564, // 0.021053 
                    0x040b, // 0.015789 
                    0x040b, // 0.015789 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                    0x0159, // 0.005263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onj
            case 0x006a6e6f:
            {
                const  data_chars   = "iouayj";
                const data_weights = [
                    0x751b, // 0.457447 
                    0x546d, // 0.329787 
                    0x2621, // 0.148936 
                    0x0ae5, // 0.042553 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onk
            case 0x006b6e6f:
            {
                const  data_chars   = "aoueiy";
                const data_weights = [
                    0x4f0f, // 0.308824 
                    0x3c3c, // 0.235294 
                    0x30f1, // 0.191176 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onm
            case 0x006d6e6f:
            {
                const  data_chars   = "aouyeci";
                const data_weights = [
                    0xa38e, // 0.638889 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onn
            case 0x006e6e6f:
            {
                const  data_chars   = "eaoiynu";
                const data_weights = [
                    0x53a5, // 0.326733 
                    0x46f8, // 0.277228 
                    0x3a4c, // 0.227723 
                    0x1959, // 0.099010 
                    0x079b, // 0.029703 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ono
            case 0x006f6e6f:
            {
                const  data_chars   = "smkhgucbdiytneozjrawfpl";
                const data_weights = [
                    0x2466, // 0.142180 
                    0x2466, // 0.142180 
                    0x1f8c, // 0.123223 
                    0x17dc, // 0.093207 
                    0x1095, // 0.064771 
                    0x0e8f, // 0.056872 
                    0x0d59, // 0.052133 
                    0x0cf1, // 0.050553 
                    0x0a1c, // 0.039494 
                    0x094d, // 0.036335 
                    0x087e, // 0.033175 
                    0x087e, // 0.033175 
                    0x0679, // 0.025276 
                    0x0542, // 0.020537 
                    0x04da, // 0.018957 
                    0x0473, // 0.017378 
                    0x0473, // 0.017378 
                    0x03a4, // 0.014218 
                    0x019e, // 0.006319 
                    0x019e, // 0.006319 
                    0x00cf, // 0.003160 
                    0x0068, // 0.001580 
                    0x0068, // 0.001580 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onp
            case 0x00706e6f:
            {
                const  data_chars   = "oieauy";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onr
            case 0x00726e6f:
            {
                const  data_chars   = "auyio";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ons
            case 0x00736e6f:
            {
                const  data_chars   = "ehauoc";
                const data_weights = [
                    0x65d1, // 0.397727 
                    0x45d1, // 0.272727 
                    0x28ba, // 0.159091 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x02e9, // 0.011364 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ont
            case 0x00746e6f:
            {
                const  data_chars   = "aoesi";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x59d3, // 0.350877 
                    0x2cea, // 0.175439 
                    0x11f7, // 0.070175 
                    0x08fc, // 0.035088 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onu
            case 0x00756e6f:
            {
                const  data_chars   = "mkrptdn";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onw
            case 0x00776e6f:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ony
            case 0x00796e6f:
            {
                const  data_chars   = "auox";
                const data_weights = [
                    0xbb51, // 0.731707 
                    0x2bb5, // 0.170732 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // onz
            case 0x007a6e6f:
            {
                const  data_chars   = "aeou";
                const data_weights = [
                    0x8800, // 0.531250 
                    0x5000, // 0.312500 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooa
            case 0x00616f6f:
            {
                const  data_chars   = "cm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oob
            case 0x00626f6f:
            {
                const  data_chars   = "aiu";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooc
            case 0x00636f6f:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ood
            case 0x00646f6f:
            {
                const  data_chars   = "aoes";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooe
            case 0x00656f6f:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oog
            case 0x00676f6f:
            {
                const  data_chars   = "aieou";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooh
            case 0x00686f6f:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooi
            case 0x00696f6f:
            {
                const  data_chars   = "bdks";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooj
            case 0x006a6f6f:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ook
            case 0x006b6f6f:
            {
                const  data_chars   = "auieo";
                const data_weights = [
                    0xa492, // 0.642857 
                    0x20ea, // 0.128571 
                    0x20ea, // 0.128571 
                    0x0ea1, // 0.057143 
                    0x0af9, // 0.042857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oom
            case 0x006d6f6f:
            {
                const  data_chars   = "aoieu";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oon
            case 0x006e6f6f:
            {
                const  data_chars   = "ojbdaens";
                const data_weights = [
                    0x7943, // 0.473684 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oop
            case 0x00706f6f:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oor
            case 0x00726f6f:
            {
                const  data_chars   = "iua";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x5000, // 0.312500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oos
            case 0x00736f6f:
            {
                const  data_chars   = "heou";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oot
            case 0x00746f6f:
            {
                const  data_chars   = "oasbe";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x425f, // 0.259259 
                    0x38e4, // 0.222222 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oou
            case 0x00756f6f:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooy
            case 0x00796f6f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ooz
            case 0x007a6f6f:
            {
                const  data_chars   = "uae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opa
            case 0x0061706f:
            {
                const  data_chars   = "ln";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ope
            case 0x0065706f:
            {
                const  data_chars   = "knrpw";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oph
            case 0x0068706f:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opi
            case 0x0069706f:
            {
                const  data_chars   = "ram";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opl
            case 0x006c706f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opm
            case 0x006d706f:
            {
                return 'e';
            }
            break;

            // opo
            case 0x006f706f:
            {
                const  data_chars   = "nlr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opp
            case 0x0070706f:
            {
                const  data_chars   = "ueoayi";
                const data_weights = [
                    0x5bb4, // 0.358209 
                    0x503d, // 0.313433 
                    0x2a08, // 0.164179 
                    0x1abf, // 0.104478 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opr
            case 0x0072706f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // opu
            case 0x0075706f:
            {
                const  data_chars   = "tim";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ora
            case 0x0061726f:
            {
                const  data_chars   = "ikngrmschtpuwlyodbej";
                const data_weights = [
                    0x3d71, // 0.240000 
                    0x2b02, // 0.168000 
                    0x28f6, // 0.160000 
                    0x1062, // 0.064000 
                    0x0e56, // 0.056000 
                    0x0c4a, // 0.048000 
                    0x0831, // 0.032000 
                    0x0831, // 0.032000 
                    0x0625, // 0.024000 
                    0x0625, // 0.024000 
                    0x0625, // 0.024000 
                    0x0625, // 0.024000 
                    0x0625, // 0.024000 
                    0x0419, // 0.016000 
                    0x0419, // 0.016000 
                    0x0419, // 0.016000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                    0x020c, // 0.008000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orc
            case 0x0063726f:
            {
                const  data_chars   = "eh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ord
            case 0x0064726f:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ore
            case 0x0065726f:
            {
                const  data_chars   = "nritskmdagpecuz";
                const data_weights = [
                    0x46e4, // 0.276923 
                    0x1f82, // 0.123077 
                    0x1f82, // 0.123077 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0fc1, // 0.061538 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orf
            case 0x0066726f:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // org
            case 0x0067726f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ori
            case 0x0069726f:
            {
                const  data_chars   = "knmgtycsidhboazeuwfjr";
                const data_weights = [
                    0x23cf, // 0.139881 
                    0x20c3, // 0.127976 
                    0x16db, // 0.089286 
                    0x1555, // 0.083333 
                    0x136e, // 0.075893 
                    0x1186, // 0.068452 
                    0x10c3, // 0.065476 
                    0x0e18, // 0.055060 
                    0x0d55, // 0.052083 
                    0x0b6e, // 0.044643 
                    0x0986, // 0.037202 
                    0x0925, // 0.035714 
                    0x073d, // 0.028274 
                    0x0555, // 0.020833 
                    0x04f4, // 0.019345 
                    0x0431, // 0.016369 
                    0x030c, // 0.011905 
                    0x0249, // 0.008929 
                    0x01e8, // 0.007440 
                    0x01e8, // 0.007440 
                    0x0125, // 0.004464 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orl
            case 0x006c726f:
            {
                const  data_chars   = "da";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orm
            case 0x006d726f:
            {
                const  data_chars   = "ey";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oro
            case 0x006f726f:
            {
                const  data_chars   = "knsmbgitrdhycpuzofejw";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x228a, // 0.134921 
                    0x21dd, // 0.132275 
                    0x21dd, // 0.132275 
                    0x13a4, // 0.076720 
                    0x119c, // 0.068783 
                    0x0a29, // 0.039683 
                    0x06c6, // 0.026455 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x056b, // 0.021164 
                    0x056b, // 0.021164 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0363, // 0.013228 
                    0x02b6, // 0.010582 
                    0x02b6, // 0.010582 
                    0x015b, // 0.005291 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orp
            case 0x0070726f:
            {
                return 'i';
            }
            break;

            // orr
            case 0x0072726f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ort
            case 0x0074726f:
            {
                const  data_chars   = "hsau";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oru
            case 0x0075726f:
            {
                const  data_chars   = "bdimpsfnukt";
                const data_weights = [
                    0x4aab, // 0.291667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // orv
            case 0x0076726f:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ory
            case 0x0079726f:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0x9b47, // 0.606557 
                    0x6086, // 0.377049 
                    0x0432, // 0.016393 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osa
            case 0x0061736f:
            {
                const  data_chars   = "wktnbrgsmidpycfzuehj";
                const data_weights = [
                    0x71dd, // 0.444776 
                    0x3b39, // 0.231343 
                    0x1938, // 0.098507 
                    0x1257, // 0.071642 
                    0x05bb, // 0.022388 
                    0x0496, // 0.017910 
                    0x0496, // 0.017910 
                    0x0496, // 0.017910 
                    0x0496, // 0.017910 
                    0x0434, // 0.016418 
                    0x02ad, // 0.010448 
                    0x024b, // 0.008955 
                    0x01e9, // 0.007463 
                    0x00c4, // 0.002985 
                    0x00c4, // 0.002985 
                    0x00c4, // 0.002985 
                    0x00c4, // 0.002985 
                    0x0062, // 0.001493 
                    0x0062, // 0.001493 
                    0x0062, // 0.001493 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osc
            case 0x0063736f:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ose
            case 0x0065736f:
            {
                const  data_chars   = "nkimcgdtupybjrsh";
                const data_weights = [
                    0x55d4, // 0.335260 
                    0x2aea, // 0.167630 
                    0x2679, // 0.150289 
                    0x11c2, // 0.069364 
                    0x0ecc, // 0.057803 
                    0x0a5c, // 0.040462 
                    0x0a5c, // 0.040462 
                    0x0a5c, // 0.040462 
                    0x0470, // 0.017341 
                    0x0470, // 0.017341 
                    0x0470, // 0.017341 
                    0x02f6, // 0.011561 
                    0x02f6, // 0.011561 
                    0x02f6, // 0.011561 
                    0x017b, // 0.005780 
                    0x017b, // 0.005780 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osh
            case 0x0068736f:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xe189, // 0.880999 
                    0x1284, // 0.072321 
                    0x0712, // 0.027613 
                    0x04e2, // 0.019066 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osi
            case 0x0069736f:
            {
                const  data_chars   = "td";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osm
            case 0x006d736f:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oso
            case 0x006f736f:
            {
                const  data_chars   = "nkrybgmtziesdjuhwocp";
                const data_weights = [
                    0x319a, // 0.193750 
                    0x24cd, // 0.143750 
                    0x14cd, // 0.081250 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x0b33, // 0.043750 
                    0x0b33, // 0.043750 
                    0x0b33, // 0.043750 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x0800, // 0.031250 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x04cd, // 0.018750 
                    0x04cd, // 0.018750 
                    0x04cd, // 0.018750 
                    0x019a, // 0.006250 
                    0x019a, // 0.006250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osp
            case 0x0070736f:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oss
            case 0x0073736f:
            {
                const  data_chars   = "haoiue";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ost
            case 0x0074736f:
            {
                const  data_chars   = "eu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // osu
            case 0x0075736f:
            {
                const  data_chars   = "kgmientjdwzbrhcs";
                const data_weights = [
                    0x4963, // 0.286667 
                    0x2741, // 0.153333 
                    0x2222, // 0.133333 
                    0x206d, // 0.126667 
                    0x0da7, // 0.053333 
                    0x0bf2, // 0.046667 
                    0x0a3d, // 0.040000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x06d4, // 0.026667 
                    0x051f, // 0.020000 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                    0x01b5, // 0.006667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ota
            case 0x0061746f:
            {
                const  data_chars   = "nkirmtgcdbshowejzypfua";
                const data_weights = [
                    0x532c, // 0.324894 
                    0x34ee, // 0.206751 
                    0x1d2a, // 0.113924 
                    0x11d3, // 0.069620 
                    0x0f1f, // 0.059072 
                    0x0a43, // 0.040084 
                    0x0705, // 0.027426 
                    0x05f1, // 0.023207 
                    0x04dc, // 0.018987 
                    0x04dc, // 0.018987 
                    0x03c8, // 0.014768 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x02b3, // 0.010549 
                    0x0229, // 0.008439 
                    0x0229, // 0.008439 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x019f, // 0.006329 
                    0x0115, // 0.004219 
                    0x0115, // 0.004219 
                    0x008a, // 0.002110 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // otb
            case 0x0062746f:
            {
                return 'a';
            }
            break;

            // otc
            case 0x0063746f:
            {
                return 'h';
            }
            break;

            // ote
            case 0x0065746f:
            {
                const  data_chars   = "nimrgsctkhldbzyjaupew";
                const data_weights = [
                    0x41a4, // 0.256410 
                    0x2532, // 0.145299 
                    0x1c72, // 0.111111 
                    0x15e1, // 0.085470 
                    0x0f51, // 0.059829 
                    0x0af1, // 0.042735 
                    0x0af1, // 0.042735 
                    0x0af1, // 0.042735 
                    0x08c1, // 0.034188 
                    0x08c1, // 0.034188 
                    0x0690, // 0.025641 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oth
            case 0x0068746f:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oti
            case 0x0069746f:
            {
                const  data_chars   = "sv";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oto
            case 0x006f746f:
            {
                const  data_chars   = "mksngycrbhdituzjfwoape";
                const data_weights = [
                    0x235a, // 0.138088 
                    0x2105, // 0.128983 
                    0x1816, // 0.094082 
                    0x1497, // 0.080425 
                    0x0f26, // 0.059181 
                    0x0ec3, // 0.057663 
                    0x0e60, // 0.056146 
                    0x0d99, // 0.053111 
                    0x0d35, // 0.051593 
                    0x0c6e, // 0.048558 
                    0x0a7d, // 0.040971 
                    0x088c, // 0.033384 
                    0x07c5, // 0.030349 
                    0x0570, // 0.021244 
                    0x0446, // 0.016692 
                    0x0446, // 0.016692 
                    0x0446, // 0.016692 
                    0x03e2, // 0.015175 
                    0x03e2, // 0.015175 
                    0x02b8, // 0.010622 
                    0x01f1, // 0.007587 
                    0x01f1, // 0.007587 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ots
            case 0x0073746f:
            {
                const  data_chars   = "uk";
                const data_weights = [
                    0xff4b, // 0.997245 
                    0x00b5, // 0.002755 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ott
            case 0x0074746f:
            {
                const  data_chars   = "oaes";
                const data_weights = [
                    0x84be, // 0.518519 
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oua
            case 0x0061756f:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oub
            case 0x0062756f:
            {
                const  data_chars   = "iuoea";
                const data_weights = [
                    0x611a, // 0.379310 
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouc
            case 0x0063756f:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oud
            case 0x0064756f:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x589e, // 0.346154 
                    0x44ec, // 0.269231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oue
            case 0x0065756f:
            {
                const  data_chars   = "nmck";
                const data_weights = [
                    0x7000, // 0.437500 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouf
            case 0x0066756f:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oug
            case 0x0067756f:
            {
                const  data_chars   = "aoeuiyh";
                const data_weights = [
                    0x5333, // 0.325000 
                    0x399a, // 0.225000 
                    0x2666, // 0.150000 
                    0x2000, // 0.125000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouh
            case 0x0068756f:
            {
                const  data_chars   = "oiay";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oui
            case 0x0069756f:
            {
                const  data_chars   = "lnteik";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouj
            case 0x006a756f:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xadb7, // 0.678571 
                    0x4000, // 0.250000 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouk
            case 0x006b756f:
            {
                const  data_chars   = "aeioyu";
                const data_weights = [
                    0x5822, // 0.344262 
                    0x368f, // 0.213115 
                    0x25c5, // 0.147541 
                    0x25c5, // 0.147541 
                    0x192e, // 0.098361 
                    0x0c97, // 0.049180 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oum
            case 0x006d756f:
            {
                const  data_chars   = "iaoe";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x6000, // 0.375000 
                    0x2aab, // 0.166667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oun
            case 0x006e756f:
            {
                const  data_chars   = "tieboadcznkyp";
                const data_weights = [
                    0x2db7, // 0.178571 
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouo
            case 0x006f756f:
            {
                const  data_chars   = "nkuz";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // our
            case 0x0072756f:
            {
                const  data_chars   = "aoiyustev";
                const data_weights = [
                    0xd521, // 0.832536 
                    0x0b06, // 0.043062 
                    0x09cd, // 0.038278 
                    0x0759, // 0.028708 
                    0x03ad, // 0.014354 
                    0x03ad, // 0.014354 
                    0x03ad, // 0.014354 
                    0x0273, // 0.009569 
                    0x013a, // 0.004785 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ous
            case 0x0073756f:
            {
                const  data_chars   = "haueo";
                const data_weights = [
                    0x9800, // 0.593750 
                    0x2000, // 0.125000 
                    0x1d55, // 0.114583 
                    0x1800, // 0.093750 
                    0x12ab, // 0.072917 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // out
            case 0x0074756f:
            {
                const  data_chars   = "aesoh";
                const data_weights = [
                    0x4a1b, // 0.289474 
                    0x435e, // 0.263158 
                    0x3ca2, // 0.236842 
                    0x2f28, // 0.184211 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouw
            case 0x0077756f:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouy
            case 0x0079756f:
            {
                const  data_chars   = "aeou";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ouz
            case 0x007a756f:
            {
                const  data_chars   = "uoae";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ove
            case 0x0065766f:
            {
                const  data_chars   = "rh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ovi
            case 0x0069766f:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ovo
            case 0x006f766f:
            {
                const  data_chars   = "ti";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // owa
            case 0x0061776f:
            {
                const  data_chars   = "rktdscingmbzauj";
                const data_weights = [
                    0x3e7a, // 0.244048 
                    0x39e8, // 0.226190 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x10c3, // 0.065476 
                    0x0f3d, // 0.059524 
                    0x0db7, // 0.053571 
                    0x0c31, // 0.047619 
                    0x0925, // 0.035714 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x0186, // 0.005952 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // owe
            case 0x0065776f:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // own
            case 0x006e776f:
            {
                return 'e';
            }
            break;

            // oya
            case 0x0061796f:
            {
                const  data_chars   = "mstkngcdbuihzjwly";
                const data_weights = [
                    0x75ea, // 0.460606 
                    0x1c72, // 0.111111 
                    0x184f, // 0.094949 
                    0x0f84, // 0.060606 
                    0x0e7b, // 0.056566 
                    0x0cee, // 0.050505 
                    0x0a58, // 0.040404 
                    0x0a58, // 0.040404 
                    0x06b9, // 0.026263 
                    0x039f, // 0.014141 
                    0x039f, // 0.014141 
                    0x0296, // 0.010101 
                    0x0212, // 0.008081 
                    0x0109, // 0.004040 
                    0x0109, // 0.004040 
                    0x0084, // 0.002020 
                    0x0084, // 0.002020 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oyn
            case 0x006e796f:
            {
                return 'e';
            }
            break;

            // oyo
            case 0x006f796f:
            {
                const  data_chars   = "sktnhdmgrcubzfoiyjaew";
                const data_weights = [
                    0x3146, // 0.192469 
                    0x2022, // 0.125523 
                    0x1ac7, // 0.104603 
                    0x156c, // 0.083682 
                    0x1236, // 0.071130 
                    0x1236, // 0.071130 
                    0x0eff, // 0.058577 
                    0x0bc8, // 0.046025 
                    0x09a4, // 0.037657 
                    0x0892, // 0.033473 
                    0x077f, // 0.029289 
                    0x066d, // 0.025105 
                    0x066d, // 0.025105 
                    0x055b, // 0.020921 
                    0x055b, // 0.020921 
                    0x0337, // 0.012552 
                    0x0337, // 0.012552 
                    0x0337, // 0.012552 
                    0x0224, // 0.008368 
                    0x0112, // 0.004184 
                    0x0112, // 0.004184 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oyt
            case 0x0074796f:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oyu
            case 0x0075796f:
            {
                const  data_chars   = "kmbrnizcdgeujt";
                const data_weights = [
                    0x4f3d, // 0.309524 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oza
            case 0x00617a6f:
            {
                const  data_chars   = "kwnitsegrymb";
                const data_weights = [
                    0x5ee2, // 0.370629 
                    0x44ec, // 0.269231 
                    0x2cc1, // 0.174825 
                    0x0f37, // 0.059441 
                    0x0c88, // 0.048951 
                    0x0644, // 0.024476 
                    0x047a, // 0.017483 
                    0x02af, // 0.010490 
                    0x02af, // 0.010490 
                    0x01ca, // 0.006993 
                    0x00e5, // 0.003497 
                    0x00e5, // 0.003497 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // oze
            case 0x00657a6f:
            {
                const  data_chars   = "nkgicrt";
                const data_weights = [
                    0xc11f, // 0.754386 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ozo
            case 0x006f7a6f:
            {
                const  data_chars   = "nekrmiwczj";
                const data_weights = [
                    0x53dd, // 0.327586 
                    0x2c23, // 0.172414 
                    0x27b9, // 0.155172 
                    0x1ee6, // 0.120690 
                    0x1ee6, // 0.120690 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ozu
            case 0x00757a6f:
            {
                const  data_chars   = "kmrcneithgbdysu";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x1e51, // 0.118421 
                    0x1287, // 0.072368 
                    0x0bca, // 0.046053 
                    0x06bd, // 0.026316 
                    0x050d, // 0.019737 
                    0x050d, // 0.019737 
                    0x050d, // 0.019737 
                    0x035e, // 0.013158 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // o
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'p':
        {
            switch ( trigram_u32 )
            {
            // paa
            case 0x00616170:
            {
                const  data_chars   = "tk";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pac
            case 0x00636170:
            {
                const  data_chars   = "hie";
                const data_weights = [
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pai
            case 0x00696170:
            {
                const  data_chars   = "mndz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // paj
            case 0x006a6170:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pak
            case 0x006b6170:
            {
                const  data_chars   = "uki";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pal
            case 0x006c6170:
            {
                const  data_chars   = "am";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pam
            case 0x006d6170:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pan
            case 0x006e6170:
            {
                const  data_chars   = "kaeoimntb";
                const data_weights = [
                    0x8d79, // 0.552632 
                    0x2f28, // 0.184211 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pao
            case 0x006f6170:
            {
                const  data_chars   = "mb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pap
            case 0x00706170:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // par
            case 0x00726170:
            {
                const  data_chars   = "aituoq";
                const data_weights = [
                    0x642d, // 0.391304 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pas
            case 0x00736170:
            {
                const  data_chars   = "ouhse";
                const data_weights = [
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pat
            case 0x00746170:
            {
                const  data_chars   = "oshia";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pau
            case 0x00756170:
            {
                const  data_chars   = "sb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // paw
            case 0x00776170:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pea
            case 0x00616570:
            {
                const  data_chars   = "kr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pec
            case 0x00636570:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pee
            case 0x00656570:
            {
                const  data_chars   = "djps";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pei
            case 0x00696570:
            {
                const  data_chars   = "djntcp";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pej
            case 0x006a6570:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pek
            case 0x006b6570:
            {
                const  data_chars   = "eio";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pem
            case 0x006d6570:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pen
            case 0x006e6570:
            {
                const  data_chars   = "kaopsbciu";
                const data_weights = [
                    0x94a5, // 0.580645 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // peo
            case 0x006f6570:
            {
                const  data_chars   = "pb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pep
            case 0x00706570:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // per
            case 0x00726570:
            {
                const  data_chars   = "aeisu";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pes
            case 0x00736570:
            {
                const  data_chars   = "oaehu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pet
            case 0x00746570:
            {
                const  data_chars   = "ste";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // peu
            case 0x00756570:
            {
                const  data_chars   = "sr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pew
            case 0x00776570:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pey
            case 0x00796570:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pez
            case 0x007a6570:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // phe
            case 0x00656870:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // phi
            case 0x00696870:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pho
            case 0x006f6870:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pia
            case 0x00616970:
            {
                const  data_chars   = "ln";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pic
            case 0x00636970:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pid
            case 0x00646970:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pie
            case 0x00656970:
            {
                const  data_chars   = "nr";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pih
            case 0x00686970:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pii
            case 0x00696970:
            {
                const  data_chars   = "ds";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pik
            case 0x006b6970:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pil
            case 0x006c6970:
            {
                const  data_chars   = "od";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pim
            case 0x006d6970:
            {
                const  data_chars   = "am";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pin
            case 0x006e6970:
            {
                const  data_chars   = "agnek";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pip
            case 0x00706970:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pir
            case 0x00726970:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xa492, // 0.642857 
                    0x5b6e, // 0.357143 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pis
            case 0x00736970:
            {
                const  data_chars   = "stuceo";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pit
            case 0x00746970:
            {
                const  data_chars   = "asto";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // piu
            case 0x00756970:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // piy
            case 0x00796970:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // piz
            case 0x007a6970:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pla
            case 0x00616c70:
            {
                const  data_chars   = "ncisyz";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ple
            case 0x00656c70:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ply
            case 0x00796c70:
            {
                const  data_chars   = "wm";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pme
            case 0x00656d70:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pob
            case 0x00626f70:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poc
            case 0x00636f70:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pod
            case 0x00646f70:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pog
            case 0x00676f70:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poh
            case 0x00686f70:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poi
            case 0x00696f70:
            {
                const  data_chars   = "nd";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poj
            case 0x006a6f70:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pok
            case 0x006b6f70:
            {
                const  data_chars   = "uaeko";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pol
            case 0x006c6f70:
            {
                const  data_chars   = "yai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pom
            case 0x006d6f70:
            {
                const  data_chars   = "bmaei";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pon
            case 0x006e6f70:
            {
                const  data_chars   = "kspmtnoaybicrgduhewf";
                const data_weights = [
                    0x1bed, // 0.109091 
                    0x1bed, // 0.109091 
                    0x199a, // 0.100000 
                    0x14f2, // 0.081818 
                    0x14f2, // 0.081818 
                    0x129e, // 0.072727 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poo
            case 0x006f6f70:
            {
                const  data_chars   = "tl";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pop
            case 0x00706f70:
            {
                const  data_chars   = "or";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // por
            case 0x00726f70:
            {
                const  data_chars   = "otiuea";
                const data_weights = [
                    0xb08d, // 0.689655 
                    0x1a7c, // 0.103448 
                    0x1612, // 0.086207 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pos
            case 0x00736f70:
            {
                const  data_chars   = "huat";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pot
            case 0x00746f70:
            {
                const  data_chars   = "ots";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pou
            case 0x00756f70:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pow
            case 0x00776f70:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // poz
            case 0x007a6f70:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppa
            case 0x00617070:
            {
                const  data_chars   = "rnimtcosk";
                const data_weights = [
                    0x5847, // 0.344828 
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppe
            case 0x00657070:
            {
                const  data_chars   = "itznmrs";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppi
            case 0x00697070:
            {
                const  data_chars   = "nkrstz";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppo
            case 0x006f7070:
            {
                const  data_chars   = "rnmcsdiuzbhj";
                const data_weights = [
                    0x521d, // 0.320755 
                    0x4874, // 0.283019 
                    0x304d, // 0.188679 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppu
            case 0x00757070:
            {
                const  data_chars   = "snrbcpktudwi";
                const data_weights = [
                    0x4c1c, // 0.297297 
                    0x2983, // 0.162162 
                    0x2298, // 0.135135 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ppy
            case 0x00797070:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pre
            case 0x00657270:
            {
                const  data_chars   = "sfm";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pri
            case 0x00697270:
            {
                const  data_chars   = "nm";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pro
            case 0x006f7270:
            {
                const  data_chars   = "va";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // psu
            case 0x00757370:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pta
            case 0x00617470:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pti
            case 0x00697470:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pto
            case 0x006f7470:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pub
            case 0x00627570:
            {
                const  data_chars   = "eal";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puc
            case 0x00637570:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pud
            case 0x00647570:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pue
            case 0x00657570:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pui
            case 0x00697570:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puj
            case 0x006a7570:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puk
            case 0x006b7570:
            {
                const  data_chars   = "uaiko";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x3a2f, // 0.227273 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pul
            case 0x006c7570:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pum
            case 0x006d7570:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pun
            case 0x006e7570:
            {
                const  data_chars   = "anei";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pup
            case 0x00707570:
            {
                const  data_chars   = "eoa";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pur
            case 0x00727570:
            {
                const  data_chars   = "iaueo";
                const data_weights = [
                    0x8925, // 0.535714 
                    0x2492, // 0.142857 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pus
            case 0x00737570:
            {
                const  data_chars   = "haue";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // put
            case 0x00747570:
            {
                const  data_chars   = "oas";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puu
            case 0x00757570:
            {
                const  data_chars   = "nrsk";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puw
            case 0x00777570:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puy
            case 0x00797570:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // puz
            case 0x007a7570:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pya
            case 0x00617970:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pyo
            case 0x006f7970:
            {
                const  data_chars   = "ud";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // pyu
            case 0x00757970:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // p
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'q':
        {
            switch ( trigram_u32 )
            {
            // qin
            case 0x006e6971:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // qua
            case 0x00617571:
            {
                const  data_chars   = "rln";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // que
            case 0x00657571:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // qur
            case 0x00727571:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // q
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'r':
        {
            switch ( trigram_u32 )
            {
            // raa
            case 0x00616172:
            {
                const  data_chars   = "ck";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rab
            case 0x00626172:
            {
                const  data_chars   = "aieuoy";
                const data_weights = [
                    0x63f6, // 0.390476 
                    0x3333, // 0.200000 
                    0x30c3, // 0.190476 
                    0x2973, // 0.161905 
                    0x0c31, // 0.047619 
                    0x0270, // 0.009524 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rac
            case 0x00636172:
            {
                const  data_chars   = "he";
                const data_weights = [
                    0xfa95, // 0.978836 
                    0x056b, // 0.021164 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rad
            case 0x00646172:
            {
                const  data_chars   = "aoei";
                const data_weights = [
                    0xbf76, // 0.747899 
                    0x2f54, // 0.184874 
                    0x0ce8, // 0.050420 
                    0x044d, // 0.016807 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rae
            case 0x00656172:
            {
                const  data_chars   = "mb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // raf
            case 0x00666172:
            {
                const  data_chars   = "ut";
                const data_weights = [
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rag
            case 0x00676172:
            {
                const  data_chars   = "aioueg";
                const data_weights = [
                    0x7f51, // 0.497326 
                    0x4473, // 0.267380 
                    0x1cc0, // 0.112299 
                    0x15e7, // 0.085561 
                    0x0837, // 0.032086 
                    0x015e, // 0.005348 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rah
            case 0x00686172:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x9722, // 0.590361 
                    0x43db, // 0.265060 
                    0x1ed8, // 0.120482 
                    0x062b, // 0.024096 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rai
            case 0x00696172:
            {
                const  data_chars   = "scdktbgnjmzwhrylfoipu";
                const data_weights = [
                    0x3400, // 0.203125 
                    0x1800, // 0.093750 
                    0x16ab, // 0.088542 
                    0x16ab, // 0.088542 
                    0x12ab, // 0.072917 
                    0x1000, // 0.062500 
                    0x0d55, // 0.052083 
                    0x0d55, // 0.052083 
                    0x0d55, // 0.052083 
                    0x0d55, // 0.052083 
                    0x0aab, // 0.041667 
                    0x0800, // 0.031250 
                    0x06ab, // 0.026042 
                    0x0555, // 0.020833 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x02ab, // 0.010417 
                    0x0155, // 0.005208 
                    0x0155, // 0.005208 
                    0x0155, // 0.005208 
                    0x0155, // 0.005208 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // raj
            case 0x006a6172:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xd0d8, // 0.815789 
                    0x21af, // 0.131579 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rak
            case 0x006b6172:
            {
                const  data_chars   = "uaioke";
                const data_weights = [
                    0x5759, // 0.341207 
                    0x4ff5, // 0.312336 
                    0x35c1, // 0.209974 
                    0x1830, // 0.094488 
                    0x06b8, // 0.026247 
                    0x0408, // 0.015748 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ral
            case 0x006c6172:
            {
                const  data_chars   = "di";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ram
            case 0x006d6172:
            {
                const  data_chars   = "aioeubm";
                const data_weights = [
                    0xa03b, // 0.625899 
                    0x26ad, // 0.151079 
                    0x152e, // 0.082734 
                    0x126b, // 0.071942 
                    0x0ebc, // 0.057554 
                    0x01d7, // 0.007194 
                    0x00ec, // 0.003597 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ran
            case 0x006e6172:
            {
                const  data_chars   = "oadiuekbstcgzjnprv";
                const data_weights = [
                    0x6f89, // 0.435685 
                    0x20ee, // 0.128631 
                    0x164f, // 0.087137 
                    0x10ff, // 0.066390 
                    0x0dcf, // 0.053942 
                    0x0baf, // 0.045643 
                    0x0a9f, // 0.041494 
                    0x0770, // 0.029046 
                    0x0660, // 0.024896 
                    0x0440, // 0.016598 
                    0x0440, // 0.016598 
                    0x0330, // 0.012448 
                    0x0220, // 0.008299 
                    0x0220, // 0.008299 
                    0x0220, // 0.008299 
                    0x0220, // 0.008299 
                    0x0110, // 0.004149 
                    0x0110, // 0.004149 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rao
            case 0x006f6172:
            {
                const  data_chars   = "knmcgidhrtb";
                const data_weights = [
                    0x5e9c, // 0.369565 
                    0x26f5, // 0.152174 
                    0x2164, // 0.130435 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rap
            case 0x00706172:
            {
                const  data_chars   = "pueo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rar
            case 0x00726172:
            {
                const  data_chars   = "iueao";
                const data_weights = [
                    0x67c9, // 0.405405 
                    0x375a, // 0.216216 
                    0x306f, // 0.189189 
                    0x2983, // 0.162162 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ras
            case 0x00736172:
            {
                const  data_chars   = "haueosm";
                const data_weights = [
                    0x67f1, // 0.406015 
                    0x482e, // 0.281955 
                    0x2f28, // 0.184211 
                    0x1153, // 0.067669 
                    0x07b3, // 0.030075 
                    0x06bd, // 0.026316 
                    0x00f6, // 0.003759 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rat
            case 0x00746172:
            {
                const  data_chars   = "aosetikun";
                const data_weights = [
                    0x7f2d, // 0.496774 
                    0x3d1c, // 0.238710 
                    0x2c98, // 0.174194 
                    0x0b90, // 0.045161 
                    0x04f4, // 0.019355 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rau
            case 0x00756172:
            {
                const  data_chars   = "scntjrmoze";
                const data_weights = [
                    0x5307, // 0.324324 
                    0x306f, // 0.189189 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rav
            case 0x00766172:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // raw
            case 0x00776172:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ray
            case 0x00796172:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xe09b, // 0.877358 
                    0x1352, // 0.075472 
                    0x0c13, // 0.047170 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // raz
            case 0x007a6172:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x70f1, // 0.441176 
                    0x65a6, // 0.397059 
                    0x21e2, // 0.132353 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rba
            case 0x00616272:
            {
                const  data_chars   = "iny";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rbe
            case 0x00656272:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rbi
            case 0x00696272:
            {
                const  data_chars   = "ns";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rbo
            case 0x006f6272:
            {
                const  data_chars   = "run";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rch
            case 0x00686372:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rci
            case 0x00696372:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rco
            case 0x006f6372:
            {
                const  data_chars   = "ne";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rcu
            case 0x00756372:
            {
                const  data_chars   = "ir";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rde
            case 0x00656472:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rdi
            case 0x00696472:
            {
                const  data_chars   = "ev";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rdo
            case 0x006f6472:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rea
            case 0x00616572:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // reb
            case 0x00626572:
            {
                const  data_chars   = "euaioy";
                const data_weights = [
                    0x611a, // 0.379310 
                    0x469f, // 0.275862 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rec
            case 0x00636572:
            {
                const  data_chars   = "hitr";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // red
            case 0x00646572:
            {
                const  data_chars   = "eados";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ree
            case 0x00656572:
            {
                const  data_chars   = "ncdkst";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ref
            case 0x00666572:
            {
                const  data_chars   = "eru";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // reg
            case 0x00676572:
            {
                const  data_chars   = "aieu";
                const data_weights = [
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // reh
            case 0x00686572:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rei
            case 0x00696572:
            {
                const  data_chars   = "sznhmgtbjkwediupr";
                const data_weights = [
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rej
            case 0x006a6572:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rek
            case 0x006b6572:
            {
                const  data_chars   = "ioaeu";
                const data_weights = [
                    0x7507, // 0.457143 
                    0x41d4, // 0.257143 
                    0x3333, // 0.200000 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rem
            case 0x006d6572:
            {
                const  data_chars   = "aiobmu";
                const data_weights = [
                    0x79e8, // 0.476190 
                    0x30c3, // 0.190476 
                    0x30c3, // 0.190476 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ren
            case 0x006e6572:
            {
                const  data_chars   = "gojadtksrcizbpe";
                const data_weights = [
                    0x2424, // 0.141176 
                    0x2424, // 0.141176 
                    0x2121, // 0.129412 
                    0x1e1e, // 0.117647 
                    0x1b1b, // 0.105882 
                    0x1212, // 0.070588 
                    0x0c0c, // 0.047059 
                    0x0c0c, // 0.047059 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                    0x0303, // 0.011765 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // reo
            case 0x006f6572:
            {
                const  data_chars   = "nt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rep
            case 0x00706572:
            {
                const  data_chars   = "poeua";
                const data_weights = [
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rer
            case 0x00726572:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xee24, // 0.930233 
                    0x11dc, // 0.069767 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // res
            case 0x00736572:
            {
                const  data_chars   = "husaioept";
                const data_weights = [
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ret
            case 0x00746572:
            {
                const  data_chars   = "eaost";
                const data_weights = [
                    0x5000, // 0.312500 
                    0x4aab, // 0.291667 
                    0x2aab, // 0.166667 
                    0x2555, // 0.145833 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // reu
            case 0x00756572:
            {
                const  data_chars   = "ksr";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rew
            case 0x00776572:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rey
            case 0x00796572:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rez
            case 0x007a6572:
            {
                const  data_chars   = "aoue";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rfa
            case 0x00616672:
            {
                const  data_chars   = "lb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rfo
            case 0x006f6672:
            {
                const  data_chars   = "rg";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rga
            case 0x00616772:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rge
            case 0x00656772:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rgk
            case 0x006b6772:
            {
                return 'a';
            }
            break;

            // rha
            case 0x00616872:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rhi
            case 0x00696872:
            {
                const  data_chars   = "ln";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rho
            case 0x006f6872:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ria
            case 0x00616972:
            {
                const  data_chars   = "kgilrsjntue";
                const data_weights = [
                    0x5174, // 0.318182 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rib
            case 0x00626972:
            {
                const  data_chars   = "aeuio";
                const data_weights = [
                    0x7e6b, // 0.493827 
                    0x4f03, // 0.308642 
                    0x1f9b, // 0.123457 
                    0x0ca4, // 0.049383 
                    0x0652, // 0.024691 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ric
            case 0x00636972:
            {
                const  data_chars   = "hkot";
                const data_weights = [
                    0xf800, // 0.968750 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rid
            case 0x00646972:
            {
                const  data_chars   = "aoegi";
                const data_weights = [
                    0xa12f, // 0.629630 
                    0x3291, // 0.197531 
                    0x1f9b, // 0.123457 
                    0x097b, // 0.037037 
                    0x0329, // 0.012346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rie
            case 0x00656972:
            {
                const  data_chars   = "nmukdcsor";
                const data_weights = [
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rif
            case 0x00666972:
            {
                const  data_chars   = "ui";
                const data_weights = [
                    0xf45d, // 0.954545 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rig
            case 0x00676972:
            {
                const  data_chars   = "auoieh";
                const data_weights = [
                    0xae79, // 0.681529 
                    0x1bb8, // 0.108280 
                    0x1875, // 0.095541 
                    0x16d4, // 0.089172 
                    0x04e4, // 0.019108 
                    0x01a1, // 0.006369 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rih
            case 0x00686972:
            {
                const  data_chars   = "aiog";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x587e, // 0.345679 
                    0x1620, // 0.086420 
                    0x0329, // 0.012346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rii
            case 0x00696972:
            {
                const  data_chars   = "sckmwgzrjdbnoh";
                const data_weights = [
                    0x5e0a, // 0.367347 
                    0x1f59, // 0.122449 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rij
            case 0x006a6972:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rik
            case 0x006b6972:
            {
                const  data_chars   = "auioyekj";
                const data_weights = [
                    0x52cc, // 0.323432 
                    0x3974, // 0.224422 
                    0x3613, // 0.211221 
                    0x3101, // 0.191419 
                    0x05ea, // 0.023102 
                    0x0361, // 0.013201 
                    0x0289, // 0.009901 
                    0x00d8, // 0.003300 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rim
            case 0x006d6972:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x90cf, // 0.565657 
                    0x2d41, // 0.176768 
                    0x1f08, // 0.121212 
                    0x15fb, // 0.085859 
                    0x0cee, // 0.050505 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rin
            case 0x006e6972:
            {
                const  data_chars   = "oaikjdsgbucezntm";
                const data_weights = [
                    0x7a8a, // 0.478673 
                    0x232f, // 0.137441 
                    0x10fc, // 0.066351 
                    0x0d59, // 0.052133 
                    0x0c22, // 0.047393 
                    0x0aeb, // 0.042654 
                    0x09b5, // 0.037915 
                    0x09b5, // 0.037915 
                    0x0611, // 0.023697 
                    0x04da, // 0.018957 
                    0x04da, // 0.018957 
                    0x03a4, // 0.014218 
                    0x026d, // 0.009479 
                    0x0137, // 0.004739 
                    0x0137, // 0.004739 
                    0x0137, // 0.004739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rio
            case 0x006f6972:
            {
                const  data_chars   = "knmrdzijt";
                const data_weights = [
                    0x7b42, // 0.481481 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rip
            case 0x00706972:
            {
                const  data_chars   = "puahoe";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rir
            case 0x00726972:
            {
                const  data_chars   = "ueay";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ris
            case 0x00736972:
            {
                const  data_chars   = "ahueots";
                const data_weights = [
                    0x567d, // 0.337838 
                    0x54c2, // 0.331081 
                    0x322a, // 0.195946 
                    0x114c, // 0.067568 
                    0x08a6, // 0.033784 
                    0x0530, // 0.020270 
                    0x0376, // 0.013514 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rit
            case 0x00746972:
            {
                const  data_chars   = "asoetiyzc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x39dd, // 0.226027 
                    0x2d97, // 0.178082 
                    0x0a85, // 0.041096 
                    0x0543, // 0.020548 
                    0x0382, // 0.013699 
                    0x01c1, // 0.006849 
                    0x01c1, // 0.006849 
                    0x01c1, // 0.006849 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // riu
            case 0x00756972:
            {
                const  data_chars   = "srcmdtze";
                const data_weights = [
                    0x425f, // 0.259259 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // riv
            case 0x00766972:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // riw
            case 0x00776972:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // riy
            case 0x00796972:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xe3c4, // 0.889706 
                    0x0f0f, // 0.058824 
                    0x0d2d, // 0.051471 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // riz
            case 0x007a6972:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x7d96, // 0.490566 
                    0x5bc6, // 0.358491 
                    0x1827, // 0.094340 
                    0x0e7e, // 0.056604 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rke
            case 0x00656b72:
            {
                const  data_chars   = "ty";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rla
            case 0x00616c72:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rli
            case 0x00696c72:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rlt
            case 0x00746c72:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rma
            case 0x00616d72:
            {
                const  data_chars   = "lnr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rme
            case 0x00656d72:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rmi
            case 0x00696d72:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rmo
            case 0x006f6d72:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rmu
            case 0x00756d72:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rna
            case 0x00616e72:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rnm
            case 0x006d6e72:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rnt
            case 0x00746e72:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roa
            case 0x00616f72:
            {
                const  data_chars   = "dciko";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rob
            case 0x00626f72:
            {
                const  data_chars   = "eauoi";
                const data_weights = [
                    0x77e6, // 0.468354 
                    0x440d, // 0.265823 
                    0x1d2a, // 0.113924 
                    0x19ed, // 0.101266 
                    0x0cf6, // 0.050633 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roc
            case 0x00636f72:
            {
                const  data_chars   = "hok";
                const data_weights = [
                    0xecae, // 0.924528 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rod
            case 0x00646f72:
            {
                const  data_chars   = "aoeiu";
                const data_weights = [
                    0xa34f, // 0.637931 
                    0x469f, // 0.275862 
                    0x0d3e, // 0.051724 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roe
            case 0x00656f72:
            {
                const  data_chars   = "nkmt";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rof
            case 0x00666f72:
            {
                const  data_chars   = "ui";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rog
            case 0x00676f72:
            {
                const  data_chars   = "aiuoy";
                const data_weights = [
                    0xa32a, // 0.637363 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x10e1, // 0.065934 
                    0x02d0, // 0.010989 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roh
            case 0x00686f72:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roi
            case 0x00696f72:
            {
                const  data_chars   = "swzdtmcrhk";
                const data_weights = [
                    0x799a, // 0.475000 
                    0x3333, // 0.200000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roj
            case 0x006a6f72:
            {
                const  data_chars   = "iuo";
                const data_weights = [
                    0xde9c, // 0.869565 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rok
            case 0x006b6f72:
            {
                const  data_chars   = "uakoiey";
                const data_weights = [
                    0x8f30, // 0.559322 
                    0x3255, // 0.196610 
                    0x176e, // 0.091525 
                    0x13f6, // 0.077966 
                    0x0f9f, // 0.061017 
                    0x029a, // 0.010169 
                    0x00de, // 0.003390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rom
            case 0x006d6f72:
            {
                const  data_chars   = "aoiue";
                const data_weights = [
                    0x84a0, // 0.518072 
                    0x346f, // 0.204819 
                    0x29a3, // 0.162651 
                    0x1282, // 0.072289 
                    0x0acc, // 0.042169 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ron
            case 0x006e6f72:
            {
                const  data_chars   = "oaideunbjskm";
                const data_weights = [
                    0x58f3, // 0.347458 
                    0x4341, // 0.262712 
                    0x1c34, // 0.110169 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x0d04, // 0.050847 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x022b, // 0.008475 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roo
            case 0x006f6f72:
            {
                const  data_chars   = "kmnp";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rop
            case 0x00706f72:
            {
                const  data_chars   = "pioue";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ror
            case 0x00726f72:
            {
                const  data_chars   = "oaiuy";
                const data_weights = [
                    0xb000, // 0.687500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ros
            case 0x00736f72:
            {
                const  data_chars   = "haeuos";
                const data_weights = [
                    0x6c3e, // 0.422819 
                    0x44ba, // 0.268456 
                    0x2cac, // 0.174497 
                    0x180e, // 0.093960 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rot
            case 0x00746f72:
            {
                const  data_chars   = "aoseh";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x4d79, // 0.302632 
                    0x3943, // 0.223684 
                    0x1794, // 0.092105 
                    0x035e, // 0.013158 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rou
            case 0x00756f72:
            {
                const  data_chars   = "srctjgmdezpkn";
                const data_weights = [
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rov
            case 0x00766f72:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // row
            case 0x00776f72:
            {
                const  data_chars   = "an";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roy
            case 0x00796f72:
            {
                const  data_chars   = "aount";
                const data_weights = [
                    0xc60a, // 0.773585 
                    0x26a4, // 0.150943 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // roz
            case 0x007a6f72:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x9069, // 0.564103 
                    0x5555, // 0.333333 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rpi
            case 0x00697072:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rqu
            case 0x00757172:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rra
            case 0x00617272:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rre
            case 0x00657272:
            {
                const  data_chars   = "ot";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rri
            case 0x00697272:
            {
                const  data_chars   = "eos";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rro
            case 0x006f7272:
            {
                const  data_chars   = "aw";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rsa
            case 0x00617372:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rse
            case 0x00657372:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rsi
            case 0x00697372:
            {
                const  data_chars   = "dm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rso
            case 0x006f7372:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rsr
            case 0x00727372:
            {
                const  data_chars   = "tu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rta
            case 0x00617472:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rte
            case 0x00657472:
            {
                const  data_chars   = "rn";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rtf
            case 0x00667472:
            {
                return 'u';
            }
            break;

            // rth
            case 0x00687472:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rti
            case 0x00697472:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rtm
            case 0x006d7472:
            {
                return 'e';
            }
            break;

            // rtn
            case 0x006e7472:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rto
            case 0x006f7472:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rts
            case 0x00737472:
            {
                const  data_chars   = "ke";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rtu
            case 0x00757472:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rty
            case 0x00797472:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rua
            case 0x00617572:
            {
                const  data_chars   = "kcsy";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rub
            case 0x00627572:
            {
                const  data_chars   = "eauiob";
                const data_weights = [
                    0x8c31, // 0.547619 
                    0x3cf4, // 0.238095 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruc
            case 0x00637572:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rud
            case 0x00647572:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0xa83b, // 0.657143 
                    0x2be3, // 0.171429 
                    0x2be3, // 0.171429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rue
            case 0x00657572:
            {
                const  data_chars   = "cdri";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruf
            case 0x00667572:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xf0f1, // 0.941176 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rug
            case 0x00677572:
            {
                const  data_chars   = "aiuobe";
                const data_weights = [
                    0xa6db, // 0.651786 
                    0x3249, // 0.196429 
                    0x1249, // 0.071429 
                    0x1000, // 0.062500 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruh
            case 0x00687572:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x95db, // 0.585366 
                    0x512c, // 0.317073 
                    0x18fa, // 0.097561 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rui
            case 0x00697572:
            {
                const  data_chars   = "csznkdmwhxgbu";
                const data_weights = [
                    0x3c82, // 0.236364 
                    0x3333, // 0.200000 
                    0x2095, // 0.127273 
                    0x1bed, // 0.109091 
                    0x1746, // 0.090909 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruj
            case 0x006a7572:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruk
            case 0x006b7572:
            {
                const  data_chars   = "aouiye";
                const data_weights = [
                    0x6e00, // 0.429688 
                    0x3e00, // 0.242188 
                    0x2800, // 0.156250 
                    0x2600, // 0.148438 
                    0x0400, // 0.015625 
                    0x0200, // 0.007812 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rum
            case 0x006d7572:
            {
                const  data_chars   = "aioeuy";
                const data_weights = [
                    0x8c6f, // 0.548571 
                    0x4925, // 0.285714 
                    0x1017, // 0.062857 
                    0x0ea1, // 0.057143 
                    0x0a3d, // 0.040000 
                    0x0176, // 0.005714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // run
            case 0x006e7572:
            {
                const  data_chars   = "oaeibun";
                const data_weights = [
                    0x98b4, // 0.596491 
                    0x2cea, // 0.175439 
                    0x11f7, // 0.070175 
                    0x11f7, // 0.070175 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruo
            case 0x006f7572:
            {
                const  data_chars   = "kcmnbthr";
                const data_weights = [
                    0x6969, // 0.411765 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rup
            case 0x00707572:
            {
                const  data_chars   = "pue";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rur
            case 0x00727572:
            {
                const  data_chars   = "iauo";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rus
            case 0x00737572:
            {
                const  data_chars   = "haueot";
                const data_weights = [
                    0x75ad, // 0.459677 
                    0x4842, // 0.282258 
                    0x1ce7, // 0.112903 
                    0x1ad7, // 0.104839 
                    0x0842, // 0.032258 
                    0x0211, // 0.008065 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rut
            case 0x00747572:
            {
                const  data_chars   = "aose";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x5dde, // 0.366667 
                    0x1555, // 0.083333 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruu
            case 0x00757572:
            {
                const  data_chars   = "cmrsektnp";
                const data_weights = [
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruw
            case 0x00777572:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruy
            case 0x00797572:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd000, // 0.812500 
                    0x1aab, // 0.104167 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ruz
            case 0x007a7572:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rva
            case 0x00617672:
            {
                const  data_chars   = "lt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rvi
            case 0x00697672:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // rya
            case 0x00617972:
            {
                const  data_chars   = "knr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ryo
            case 0x006f7972:
            {
                const  data_chars   = "kusgcztmnydhijbar";
                const data_weights = [
                    0x5187, // 0.318471 
                    0x209d, // 0.127389 
                    0x1391, // 0.076433 
                    0x11f0, // 0.070064 
                    0x104e, // 0.063694 
                    0x0ead, // 0.057325 
                    0x0d0b, // 0.050955 
                    0x0b6a, // 0.044586 
                    0x0827, // 0.031847 
                    0x0686, // 0.025478 
                    0x0686, // 0.025478 
                    0x0686, // 0.025478 
                    0x04e4, // 0.019108 
                    0x04e4, // 0.019108 
                    0x04e4, // 0.019108 
                    0x0343, // 0.012739 
                    0x0343, // 0.012739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ryu
            case 0x00757972:
            {
                const  data_chars   = "gsjzmtukonhfdbcyiwa";
                const data_weights = [
                    0x34b5, // 0.205882 
                    0x1a5a, // 0.102941 
                    0x14b5, // 0.080882 
                    0x14b5, // 0.080882 
                    0x12d3, // 0.073529 
                    0x10f1, // 0.066176 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0d2d, // 0.051471 
                    0x0b4b, // 0.044118 
                    0x0969, // 0.036765 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x05a6, // 0.022059 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // r
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 's':
        {
            switch ( trigram_u32 )
            {
            // saa
            case 0x00616173:
            {
                const  data_chars   = "ktbc";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sab
            case 0x00626173:
            {
                const  data_chars   = "auieo";
                const data_weights = [
                    0x6c17, // 0.422222 
                    0x3bbc, // 0.233333 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x13e9, // 0.077778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sac
            case 0x00636173:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sad
            case 0x00646173:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xa9ad, // 0.662791 
                    0x4a6b, // 0.290698 
                    0x0be8, // 0.046512 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sae
            case 0x00656173:
            {
                const  data_chars   = "nkd";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // saf
            case 0x00666173:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sag
            case 0x00676173:
            {
                const  data_chars   = "aiouey";
                const data_weights = [
                    0x72e9, // 0.448864 
                    0x45d1, // 0.272727 
                    0x2746, // 0.153409 
                    0x1000, // 0.062500 
                    0x0d17, // 0.051136 
                    0x02e9, // 0.011364 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sah
            case 0x00686173:
            {
                const  data_chars   = "iaoe";
                const data_weights = [
                    0xbf26, // 0.746667 
                    0x3333, // 0.200000 
                    0x0a3d, // 0.040000 
                    0x036a, // 0.013333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sai
            case 0x00696173:
            {
                const  data_chars   = "ktdsgbwnchjmrzaoyife";
                const data_weights = [
                    0x23d7, // 0.140000 
                    0x1ae1, // 0.105000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x170a, // 0.090000 
                    0x170a, // 0.090000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0ccd, // 0.050000 
                    0x08f6, // 0.035000 
                    0x07ae, // 0.030000 
                    0x0666, // 0.025000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x03d7, // 0.015000 
                    0x03d7, // 0.015000 
                    0x03d7, // 0.015000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // saj
            case 0x006a6173:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0xf333, // 0.950000 
                    0x0ccd, // 0.050000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sak
            case 0x006b6173:
            {
                const  data_chars   = "iauoeky";
                const data_weights = [
                    0x5d3b, // 0.364177 
                    0x575d, // 0.341256 
                    0x3233, // 0.196095 
                    0x13c7, // 0.077250 
                    0x029c, // 0.010187 
                    0x01f5, // 0.007640 
                    0x00df, // 0.003396 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sal
            case 0x006c6173:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sam
            case 0x006d6173:
            {
                const  data_chars   = "auieobmp";
                const data_weights = [
                    0x60ef, // 0.378641 
                    0x31b5, // 0.194175 
                    0x2a41, // 0.165049 
                    0x179d, // 0.092233 
                    0x1166, // 0.067961 
                    0x0eea, // 0.058252 
                    0x08b3, // 0.033981 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // san
            case 0x006e6173:
            {
                const  data_chars   = "ongjabksdumytrczepihw";
                const data_weights = [
                    0x1aec, // 0.105159 
                    0x1862, // 0.095238 
                    0x175d, // 0.091270 
                    0x1659, // 0.087302 
                    0x15d7, // 0.085317 
                    0x12cb, // 0.073413 
                    0x11c7, // 0.069444 
                    0x1041, // 0.063492 
                    0x0b2d, // 0.043651 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0821, // 0.031746 
                    0x079e, // 0.029762 
                    0x079e, // 0.029762 
                    0x079e, // 0.029762 
                    0x071c, // 0.027778 
                    0x0596, // 0.021825 
                    0x0492, // 0.017857 
                    0x038e, // 0.013889 
                    0x028a, // 0.009921 
                    0x0082, // 0.001984 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sao
            case 0x006f6173:
            {
                const  data_chars   = "kmtr";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sap
            case 0x00706173:
            {
                const  data_chars   = "po";
                const data_weights = [
                    0xf3cf, // 0.952381 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sar
            case 0x00726173:
            {
                const  data_chars   = "uaioeyd";
                const data_weights = [
                    0x7c37, // 0.485207 
                    0x4bbd, // 0.295858 
                    0x1e4c, // 0.118343 
                    0x122d, // 0.071006 
                    0x048b, // 0.017751 
                    0x0184, // 0.005917 
                    0x0184, // 0.005917 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sas
            case 0x00736173:
            {
                const  data_chars   = "ahueoikst";
                const data_weights = [
                    0x77db, // 0.468182 
                    0x68ba, // 0.409091 
                    0x0a79, // 0.040909 
                    0x094f, // 0.036364 
                    0x06fb, // 0.027273 
                    0x012a, // 0.004545 
                    0x012a, // 0.004545 
                    0x012a, // 0.004545 
                    0x012a, // 0.004545 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sat
            case 0x00746173:
            {
                const  data_chars   = "ostaeuc";
                const data_weights = [
                    0xac9d, // 0.674267 
                    0x3489, // 0.205212 
                    0x0ad7, // 0.042345 
                    0x0a02, // 0.039088 
                    0x0857, // 0.032573 
                    0x00d5, // 0.003257 
                    0x00d5, // 0.003257 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sau
            case 0x00756173:
            {
                const  data_chars   = "rscn";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // saw
            case 0x00776173:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // say
            case 0x00796173:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xb0df, // 0.690909 
                    0x29e4, // 0.163636 
                    0x253d, // 0.145455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // saz
            case 0x007a6173:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x95db, // 0.585366 
                    0x576a, // 0.341463 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sca
            case 0x00616373:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sce
            case 0x00656373:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sch
            case 0x00686373:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sci
            case 0x00696373:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sco
            case 0x006f6373:
            {
                const  data_chars   = "pe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sea
            case 0x00616573:
            {
                const  data_chars   = "swbfmpv";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // seb
            case 0x00626573:
            {
                const  data_chars   = "aioue";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sec
            case 0x00636573:
            {
                const  data_chars   = "hu";
                const data_weights = [
                    0xf6db, // 0.964286 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sed
            case 0x00646573:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x9f23, // 0.621622 
                    0x4c1c, // 0.297297 
                    0x14c2, // 0.081081 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // see
            case 0x00656573:
            {
                const  data_chars   = "nt";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sef
            case 0x00666573:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // seg
            case 0x00676573:
            {
                const  data_chars   = "auioe";
                const data_weights = [
                    0x95db, // 0.585366 
                    0x2577, // 0.146341 
                    0x1f38, // 0.121951 
                    0x1f38, // 0.121951 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // seh
            case 0x00686573:
            {
                const  data_chars   = "iaeo";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sei
            case 0x00696573:
            {
                const  data_chars   = "kscrgtnzmbdjwhyieupfa";
                const data_weights = [
                    0x2b45, // 0.169014 
                    0x1cd8, // 0.112676 
                    0x133b, // 0.075117 
                    0x1207, // 0.070423 
                    0x10d4, // 0.065728 
                    0x0fa0, // 0.061033 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0c05, // 0.046948 
                    0x099d, // 0.037559 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x0267, // 0.009390 
                    0x0134, // 0.004695 
                    0x0134, // 0.004695 
                    0x0134, // 0.004695 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sej
            case 0x006a6573:
            {
                const  data_chars   = "iu";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sek
            case 0x006b6573:
            {
                const  data_chars   = "ikaou";
                const data_weights = [
                    0xde3e, // 0.868132 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x0871, // 0.032967 
                    0x05a0, // 0.021978 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sel
            case 0x006c6573:
            {
                const  data_chars   = "fb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sem
            case 0x006d6573:
            {
                const  data_chars   = "abieopum";
                const data_weights = [
                    0x56a5, // 0.338462 
                    0x3723, // 0.215385 
                    0x2b53, // 0.169231 
                    0x1f82, // 0.123077 
                    0x13b1, // 0.076923 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sen
            case 0x006e6573:
            {
                const  data_chars   = "obgjdnksztarcmpiheyfu";
                const data_weights = [
                    0x1c9a, // 0.111732 
                    0x1b2c, // 0.106145 
                    0x1b2c, // 0.106145 
                    0x16e2, // 0.089385 
                    0x162b, // 0.086592 
                    0x134f, // 0.075419 
                    0x1072, // 0.064246 
                    0x0d96, // 0.053073 
                    0x0cdf, // 0.050279 
                    0x0c28, // 0.047486 
                    0x0b71, // 0.044693 
                    0x0b71, // 0.044693 
                    0x07de, // 0.030726 
                    0x07de, // 0.030726 
                    0x05b8, // 0.022346 
                    0x02dc, // 0.011173 
                    0x0225, // 0.008380 
                    0x016e, // 0.005587 
                    0x016e, // 0.005587 
                    0x00b7, // 0.002793 
                    0x00b7, // 0.002793 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // seo
            case 0x006f6573:
            {
                const  data_chars   = "cgimt";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sep
            case 0x00706573:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ser
            case 0x00726573:
            {
                const  data_chars   = "iuaovy";
                const data_weights = [
                    0x759f, // 0.459459 
                    0x5307, // 0.324324 
                    0x2298, // 0.135135 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ses
            case 0x00736573:
            {
                const  data_chars   = "hseao";
                const data_weights = [
                    0x4dea, // 0.304348 
                    0x42c8, // 0.260870 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // set
            case 0x00746573:
            {
                const  data_chars   = "soatec";
                const data_weights = [
                    0x5fb3, // 0.373832 
                    0x47c7, // 0.280374 
                    0x34a3, // 0.205607 
                    0x17ed, // 0.093458 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // seu
            case 0x00756573:
            {
                const  data_chars   = "rsc";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sew
            case 0x00776573:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sey
            case 0x00796573:
            {
                const  data_chars   = "al";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sez
            case 0x007a6573:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sha
            case 0x00616873:
            {
                const  data_chars   = "kmrngsbcjitwdapyz";
                const data_weights = [
                    0x5f2e, // 0.371795 
                    0x20d2, // 0.128205 
                    0x1f2e, // 0.121795 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0835, // 0.032051 
                    0x0835, // 0.032051 
                    0x0835, // 0.032051 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x01a4, // 0.006410 
                    0x01a4, // 0.006410 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // she
            case 0x00656873:
            {
                const  data_chars   = "nlr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // shh
            case 0x00686873:
            {
                return 'i';
            }
            break;

            // shi
            case 0x00696873:
            {
                const  data_chars   = "mnkrtgbohdisczyawjfuep";
                const data_weights = [
                    0x3e73, // 0.243949 
                    0x2c5b, // 0.173269 
                    0x18f0, // 0.097411 
                    0x1862, // 0.095244 
                    0x0fa9, // 0.061168 
                    0x0b40, // 0.043949 
                    0x0b11, // 0.043227 
                    0x0a05, // 0.039133 
                    0x0691, // 0.025647 
                    0x0679, // 0.025286 
                    0x05fb, // 0.023359 
                    0x05ac, // 0.022155 
                    0x0516, // 0.019868 
                    0x04b7, // 0.018423 
                    0x0402, // 0.015653 
                    0x03ab, // 0.014329 
                    0x0325, // 0.012282 
                    0x01f1, // 0.007586 
                    0x01ba, // 0.006743 
                    0x01a2, // 0.006382 
                    0x00d5, // 0.003251 
                    0x006e, // 0.001686 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sho
            case 0x006f6873:
            {
                const  data_chars   = "ukjngbmrdzctsywhiepfao";
                const data_weights = [
                    0x20c3, // 0.127971 
                    0x1f5b, // 0.122486 
                    0x19be, // 0.100548 
                    0x1677, // 0.087751 
                    0x13a8, // 0.076782 
                    0x1241, // 0.071298 
                    0x1151, // 0.067642 
                    0x1061, // 0.063985 
                    0x0bb3, // 0.045704 
                    0x095c, // 0.036563 
                    0x086d, // 0.032907 
                    0x077d, // 0.029250 
                    0x0616, // 0.023766 
                    0x059e, // 0.021938 
                    0x059e, // 0.021938 
                    0x0526, // 0.020110 
                    0x0436, // 0.016453 
                    0x02cf, // 0.010969 
                    0x0257, // 0.009141 
                    0x01df, // 0.007313 
                    0x00f0, // 0.003656 
                    0x0078, // 0.001828 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // shu
            case 0x00756873:
            {
                const  data_chars   = "knubstmrdhpjgciyezoaf";
                const data_weights = [
                    0x4788, // 0.279412 
                    0x2d2d, // 0.176471 
                    0x18d9, // 0.097059 
                    0x1757, // 0.091176 
                    0x0fd0, // 0.061765 
                    0x0c0c, // 0.047059 
                    0x0909, // 0.035294 
                    0x0788, // 0.029412 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                    0x0545, // 0.020588 
                    0x0485, // 0.017647 
                    0x0485, // 0.017647 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x0303, // 0.011765 
                    0x0242, // 0.008824 
                    0x0242, // 0.008824 
                    0x0242, // 0.008824 
                    0x0242, // 0.008824 
                    0x00c1, // 0.002941 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // shw
            case 0x00776873:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sid
            case 0x00646973:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sig
            case 0x00676973:
            {
                const  data_chars   = "ahn";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sih
            case 0x00686973:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sik
            case 0x006b6973:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sim
            case 0x006d6973:
            {
                const  data_chars   = "am";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sin
            case 0x006e6973:
            {
                const  data_chars   = "gceos";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sio
            case 0x006f6973:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sir
            case 0x00726973:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sit
            case 0x00746973:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ske
            case 0x00656b73:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sko
            case 0x006f6b73:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sku
            case 0x00756b73:
            {
                const  data_chars   = "br";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sky
            case 0x00796b73:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sle
            case 0x00656c73:
            {
                const  data_chars   = "et";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sma
            case 0x00616d73:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sme
            case 0x00656d73:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // smi
            case 0x00696d73:
            {
                const  data_chars   = "als";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sna
            case 0x00616e73:
            {
                const  data_chars   = "im";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sne
            case 0x00656e73:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sni
            case 0x00696e73:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soa
            case 0x00616f73:
            {
                const  data_chars   = "ci";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sob
            case 0x00626f73:
            {
                const  data_chars   = "aeuio";
                const data_weights = [
                    0x5870, // 0.345455 
                    0x412a, // 0.254545 
                    0x3333, // 0.200000 
                    0x253d, // 0.145455 
                    0x0df7, // 0.054545 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soc
            case 0x00636f73:
            {
                const  data_chars   = "hci";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sod
            case 0x00646f73:
            {
                const  data_chars   = "eao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soe
            case 0x00656f73:
            {
                const  data_chars   = "cmndgsujzhki";
                const data_weights = [
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sof
            case 0x00666f73:
            {
                const  data_chars   = "uai";
                const data_weights = [
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sog
            case 0x00676f73:
            {
                const  data_chars   = "aoieuy";
                const data_weights = [
                    0x8f30, // 0.559322 
                    0x2b64, // 0.169492 
                    0x22b6, // 0.135593 
                    0x115b, // 0.067797 
                    0x0d04, // 0.050847 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soh
            case 0x00686f73:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soi
            case 0x00696f73:
            {
                const  data_chars   = "cbgmrdsw";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soj
            case 0x006a6f73:
            {
                const  data_chars   = "iauo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sok
            case 0x006b6f73:
            {
                const  data_chars   = "ouaikye";
                const data_weights = [
                    0x5f41, // 0.372093 
                    0x505f, // 0.313953 
                    0x3595, // 0.209302 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sol
            case 0x006c6f73:
            {
                const  data_chars   = "va";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // som
            case 0x006d6f73:
            {
                const  data_chars   = "aeiuop";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x5555, // 0.333333 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // son
            case 0x006e6f73:
            {
                const  data_chars   = "oeaidksybnumtgz";
                const data_weights = [
                    0x6d6f, // 0.427481 
                    0x407d, // 0.251908 
                    0x2715, // 0.152672 
                    0x07d1, // 0.030534 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soo
            case 0x006f6f73:
            {
                const  data_chars   = "kmrt";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sop
            case 0x00706f73:
            {
                const  data_chars   = "ruh";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sor
            case 0x00726f73:
            {
                const  data_chars   = "ieoaypu";
                const data_weights = [
                    0x63cc, // 0.389830 
                    0x2fbb, // 0.186441 
                    0x270d, // 0.152542 
                    0x270d, // 0.152542 
                    0x15b2, // 0.084746 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sos
            case 0x00736f73:
            {
                const  data_chars   = "haoue";
                const data_weights = [
                    0x82b9, // 0.510638 
                    0x2b93, // 0.170213 
                    0x2621, // 0.148936 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sot
            case 0x00746f73:
            {
                const  data_chars   = "osaet";
                const data_weights = [
                    0xa44c, // 0.641791 
                    0x31ac, // 0.194030 
                    0x16ed, // 0.089552 
                    0x0f49, // 0.059701 
                    0x03d2, // 0.014925 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sou
            case 0x00756f73:
            {
                const  data_chars   = "sdnmztgrjbeoki";
                const data_weights = [
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sow
            case 0x00776f73:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soy
            case 0x00796f73:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xf627, // 0.961538 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // soz
            case 0x007a6f73:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x5847, // 0.344828 
                    0x4f73, // 0.310345 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // spa
            case 0x00617073:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // spe
            case 0x00657073:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // spi
            case 0x00697073:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // spo
            case 0x006f7073:
            {
                const  data_chars   = "rb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // spr
            case 0x00727073:
            {
                const  data_chars   = "ie";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // squ
            case 0x00757173:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sru
            case 0x00757273:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ssa
            case 0x00617373:
            {
                const  data_chars   = "knimtdhgorbws";
                const data_weights = [
                    0x5794, // 0.342105 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sse
            case 0x00657373:
            {
                const  data_chars   = "nikjlot";
                const data_weights = [
                    0x78e4, // 0.472222 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ssh
            case 0x00687373:
            {
                const  data_chars   = "oiau";
                const data_weights = [
                    0x6103, // 0.378947 
                    0x5b9f, // 0.357895 
                    0x2308, // 0.136842 
                    0x2056, // 0.126316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ssi
            case 0x00697373:
            {
                const  data_chars   = "no";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sso
            case 0x006f7373:
            {
                const  data_chars   = "mckgjrtnb";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ssu
            case 0x00757373:
            {
                const  data_chars   = "rgio";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ssw
            case 0x00777373:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sta
            case 0x00617473:
            {
                const  data_chars   = "tynrdg";
                const data_weights = [
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ste
            case 0x00657473:
            {
                const  data_chars   = "mrlae";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sth
            case 0x00687473:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sti
            case 0x00697473:
            {
                const  data_chars   = "cnalt";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // stl
            case 0x006c7473:
            {
                return 'e';
            }
            break;

            // sto
            case 0x006f7473:
            {
                const  data_chars   = "ckmn";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // str
            case 0x00727473:
            {
                const  data_chars   = "iae";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // stu
            case 0x00757473:
            {
                const  data_chars   = "dky";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sty
            case 0x00797473:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sua
            case 0x00617573:
            {
                const  data_chars   = "ikmtcj";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sub
            case 0x00627573:
            {
                const  data_chars   = "aoeuijpsy";
                const data_weights = [
                    0x6878, // 0.408088 
                    0x50f1, // 0.316176 
                    0x2000, // 0.125000 
                    0x1e1e, // 0.117647 
                    0x04b5, // 0.018382 
                    0x00f1, // 0.003676 
                    0x00f1, // 0.003676 
                    0x00f1, // 0.003676 
                    0x00f1, // 0.003676 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suc
            case 0x00637573:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sud
            case 0x00647573:
            {
                const  data_chars   = "aoeuz";
                const data_weights = [
                    0xa1af, // 0.631579 
                    0x3d98, // 0.240602 
                    0x1719, // 0.090226 
                    0x05c6, // 0.022556 
                    0x03da, // 0.015038 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sue
            case 0x00657573:
            {
                const  data_chars   = "ntmdhkiygjzcs";
                const data_weights = [
                    0x3b9e, // 0.232877 
                    0x2312, // 0.136986 
                    0x1f90, // 0.123288 
                    0x188c, // 0.095890 
                    0x150b, // 0.082192 
                    0x150b, // 0.082192 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suf
            case 0x00667573:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sug
            case 0x00677573:
            {
                const  data_chars   = "aiuoey";
                const data_weights = [
                    0x736c, // 0.450867 
                    0x5163, // 0.317919 
                    0x182b, // 0.094412 
                    0x1144, // 0.067437 
                    0x1047, // 0.063584 
                    0x017b, // 0.005780 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suh
            case 0x00687573:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x8a0a, // 0.539216 
                    0x57d8, // 0.343137 
                    0x1e1e, // 0.117647 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sui
            case 0x00697573:
            {
                const  data_chars   = "stkcdgjmznrwheybfa";
                const data_weights = [
                    0x2c56, // 0.173184 
                    0x1b2c, // 0.106145 
                    0x1574, // 0.083799 
                    0x1406, // 0.078212 
                    0x1406, // 0.078212 
                    0x1298, // 0.072626 
                    0x0fbb, // 0.061453 
                    0x0fbb, // 0.061453 
                    0x0e4d, // 0.055866 
                    0x0e4d, // 0.055866 
                    0x0cdf, // 0.050279 
                    0x0727, // 0.027933 
                    0x0727, // 0.027933 
                    0x0727, // 0.027933 
                    0x044a, // 0.016760 
                    0x02dc, // 0.011173 
                    0x016e, // 0.005587 
                    0x016e, // 0.005587 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suj
            case 0x006a7573:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xf492, // 0.955357 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0249, // 0.008929 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suk
            case 0x006b7573:
            {
                const  data_chars   = "aiueoyk";
                const data_weights = [
                    0x5cbc, // 0.362251 
                    0x3c06, // 0.234467 
                    0x2b84, // 0.169988 
                    0x291e, // 0.160610 
                    0x0eb5, // 0.057444 
                    0x02b3, // 0.010551 
                    0x0133, // 0.004689 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sul
            case 0x006c7573:
            {
                const  data_chars   = "aef";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sum
            case 0x006d7573:
            {
                const  data_chars   = "iaoeuy";
                const data_weights = [
                    0x7a81, // 0.478528 
                    0x483f, // 0.282209 
                    0x2181, // 0.130879 
                    0x103b, // 0.063395 
                    0x0afe, // 0.042945 
                    0x0086, // 0.002045 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sun
            case 0x006e7573:
            {
                const  data_chars   = "aoeiudtrsbmynpjz";
                const data_weights = [
                    0x5e61, // 0.368675 
                    0x5e61, // 0.368675 
                    0x2d08, // 0.175904 
                    0x06c9, // 0.026506 
                    0x0451, // 0.016867 
                    0x01da, // 0.007229 
                    0x013c, // 0.004819 
                    0x013c, // 0.004819 
                    0x013c, // 0.004819 
                    0x013c, // 0.004819 
                    0x013c, // 0.004819 
                    0x009e, // 0.002410 
                    0x009e, // 0.002410 
                    0x009e, // 0.002410 
                    0x009e, // 0.002410 
                    0x009e, // 0.002410 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suo
            case 0x006f7573:
            {
                const  data_chars   = "kmdnjtgorh";
                const data_weights = [
                    0x57c5, // 0.342857 
                    0x3333, // 0.200000 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sup
            case 0x00707573:
            {
                const  data_chars   = "uoepia";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sur
            case 0x00727573:
            {
                const  data_chars   = "uaieoy";
                const data_weights = [
                    0x8621, // 0.523944 
                    0x3051, // 0.188732 
                    0x2ee0, // 0.183099 
                    0x0cfb, // 0.050704 
                    0x0c42, // 0.047887 
                    0x0171, // 0.005634 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sus
            case 0x00737573:
            {
                const  data_chars   = "haueo";
                const data_weights = [
                    0x7243, // 0.446328 
                    0x3fa3, // 0.248588 
                    0x1e5f, // 0.118644 
                    0x1ced, // 0.112994 
                    0x12cd, // 0.073446 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sut
            case 0x00747573:
            {
                const  data_chars   = "saoeti";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x4e99, // 0.307018 
                    0x423f, // 0.258772 
                    0x1436, // 0.078947 
                    0x047e, // 0.017544 
                    0x011f, // 0.004386 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suu
            case 0x00757573:
            {
                const  data_chars   = "rsjgkch";
                const data_weights = [
                    0xa41a, // 0.641026 
                    0x20d2, // 0.128205 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suw
            case 0x00777573:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suy
            case 0x00797573:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xb950, // 0.723881 
                    0x2fc3, // 0.186567 
                    0x16ed, // 0.089552 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // suz
            case 0x007a7573:
            {
                const  data_chars   = "uaoem";
                const data_weights = [
                    0x96f0, // 0.589595 
                    0x4b78, // 0.294798 
                    0x1047, // 0.063584 
                    0x0bd7, // 0.046243 
                    0x017b, // 0.005780 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // swa
            case 0x00617773:
            {
                const  data_chars   = "ya";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // swi
            case 0x00697773:
            {
                const  data_chars   = "tns";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sya
            case 0x00617973:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sym
            case 0x006d7973:
            {
                return 'p';
            }
            break;

            // syo
            case 0x006f7973:
            {
                const  data_chars   = "usy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // syr
            case 0x00727973:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // sys
            case 0x00737973:
            {
                const  data_chars   = "ti";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // syu
            case 0x00757973:
            {
                const  data_chars   = "kse";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // s
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 't':
        {
            switch ( trigram_u32 )
            {
            // taa
            case 0x00616174:
            {
                const  data_chars   = "skmnoirztydg";
                const data_weights = [
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tab
            case 0x00626174:
            {
                const  data_chars   = "aeiuyo";
                const data_weights = [
                    0x63be, // 0.389610 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x298f, // 0.162338 
                    0x0353, // 0.012987 
                    0x01aa, // 0.006494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tac
            case 0x00636174:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tad
            case 0x00646174:
            {
                const  data_chars   = "aoeiu";
                const data_weights = [
                    0xad5e, // 0.677215 
                    0x323a, // 0.196203 
                    0x19ed, // 0.101266 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tae
            case 0x00656174:
            {
                const  data_chars   = "rkemnbcgt";
                const data_weights = [
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // taf
            case 0x00666174:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tag
            case 0x00676174:
            {
                const  data_chars   = "aouie";
                const data_weights = [
                    0x723d, // 0.446237 
                    0x4792, // 0.279570 
                    0x2108, // 0.129032 
                    0x1e48, // 0.118280 
                    0x06e2, // 0.026882 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tah
            case 0x00686174:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0x7a0c, // 0.476744 
                    0x4771, // 0.279070 
                    0x3595, // 0.209302 
                    0x08ee, // 0.034884 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tai
            case 0x00696174:
            {
                const  data_chars   = "rsnkcdthymbizjwaoegpf";
                const data_weights = [
                    0x2ebb, // 0.182540 
                    0x2aab, // 0.166667 
                    0x1966, // 0.099206 
                    0x1555, // 0.083333 
                    0x0c31, // 0.047619 
                    0x0b2d, // 0.043651 
                    0x0b2d, // 0.043651 
                    0x0a29, // 0.039683 
                    0x0a29, // 0.039683 
                    0x0a29, // 0.039683 
                    0x0925, // 0.035714 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x071c, // 0.027778 
                    0x0514, // 0.019841 
                    0x0410, // 0.015873 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // taj
            case 0x006a6174:
            {
                const  data_chars   = "iuoa";
                const data_weights = [
                    0xd7c5, // 0.842857 
                    0x1d42, // 0.114286 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tak
            case 0x006b6174:
            {
                const  data_chars   = "aeiuokyd";
                const data_weights = [
                    0x8048, // 0.501099 
                    0x3874, // 0.220513 
                    0x2582, // 0.146520 
                    0x1531, // 0.082784 
                    0x09c1, // 0.038095 
                    0x0180, // 0.005861 
                    0x0120, // 0.004396 
                    0x0030, // 0.000733 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tal
            case 0x006c6174:
            {
                const  data_chars   = "yi";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tam
            case 0x006d6174:
            {
                const  data_chars   = "aioueb";
                const data_weights = [
                    0xa2ac, // 0.635438 
                    0x2b46, // 0.169043 
                    0x1240, // 0.071283 
                    0x10af, // 0.065173 
                    0x0d09, // 0.050917 
                    0x0216, // 0.008147 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tan
            case 0x006e6174:
            {
                const  data_chars   = "ioaendbujkgmstzcyp";
                const data_weights = [
                    0x6186, // 0.380952 
                    0x3900, // 0.222651 
                    0x2bd2, // 0.171171 
                    0x0d82, // 0.052767 
                    0x0794, // 0.029601 
                    0x0643, // 0.024453 
                    0x0546, // 0.020592 
                    0x04f1, // 0.019305 
                    0x0448, // 0.016731 
                    0x02f7, // 0.011583 
                    0x02f7, // 0.011583 
                    0x01a6, // 0.006435 
                    0x01a6, // 0.006435 
                    0x01a6, // 0.006435 
                    0x0151, // 0.005148 
                    0x0151, // 0.005148 
                    0x0151, // 0.005148 
                    0x00fd, // 0.003861 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tao
            case 0x006f6174:
            {
                const  data_chars   = "kmncgrtjsyidz";
                const data_weights = [
                    0x3777, // 0.216667 
                    0x2666, // 0.150000 
                    0x1dde, // 0.116667 
                    0x199a, // 0.100000 
                    0x1555, // 0.083333 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tap
            case 0x00706174:
            {
                const  data_chars   = "pei";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tar
            case 0x00726174:
            {
                const  data_chars   = "ioauey";
                const data_weights = [
                    0x4e70, // 0.306397 
                    0x3e10, // 0.242424 
                    0x38e4, // 0.222222 
                    0x2f68, // 0.185185 
                    0x097b, // 0.037037 
                    0x01b9, // 0.006734 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tas
            case 0x00736174:
            {
                const  data_chars   = "haueos";
                const data_weights = [
                    0x93e2, // 0.577670 
                    0x2686, // 0.150485 
                    0x1f11, // 0.121359 
                    0x1c95, // 0.111650 
                    0x08b3, // 0.033981 
                    0x013e, // 0.004854 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tat
            case 0x00746174:
            {
                const  data_chars   = "esaotinu";
                const data_weights = [
                    0x6758, // 0.403694 
                    0x5fea, // 0.374670 
                    0x23cd, // 0.139842 
                    0x0f89, // 0.060686 
                    0x0207, // 0.007916 
                    0x0207, // 0.007916 
                    0x00ad, // 0.002639 
                    0x00ad, // 0.002639 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tau
            case 0x00756174:
            {
                const  data_chars   = "rscekngtwm";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x31c7, // 0.194444 
                    0x238e, // 0.138889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // taw
            case 0x00776174:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tay
            case 0x00796174:
            {
                const  data_chars   = "aous";
                const data_weights = [
                    0xbb2f, // 0.731183 
                    0x318c, // 0.193548 
                    0x1084, // 0.064516 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // taz
            case 0x007a6174:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x8b4b, // 0.544118 
                    0x4f0f, // 0.308824 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tba
            case 0x00616274:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tch
            case 0x00686374:
            {
                const  data_chars   = "oiauye";
                const data_weights = [
                    0x70c3, // 0.440476 
                    0x4618, // 0.273810 
                    0x2186, // 0.130952 
                    0x2186, // 0.130952 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tea
            case 0x00616574:
            {
                const  data_chars   = "rnsudi";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // teb
            case 0x00626574:
            {
                const  data_chars   = "aiueo";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tec
            case 0x00636574:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ted
            case 0x00646574:
            {
                const  data_chars   = "oaeiz";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tee
            case 0x00656574:
            {
                const  data_chars   = "blmnp";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tef
            case 0x00666574:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // teg
            case 0x00676574:
            {
                const  data_chars   = "aoui";
                const data_weights = [
                    0xa1f6, // 0.632653 
                    0x29cc, // 0.163265 
                    0x29cc, // 0.163265 
                    0x0a73, // 0.040816 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // teh
            case 0x00686574:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tei
            case 0x00696574:
            {
                const  data_chars   = "skjimzrwycnaedgt";
                const data_weights = [
                    0x47dc, // 0.280702 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x11f7, // 0.070175 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tej
            case 0x006a6574:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tek
            case 0x006b6574:
            {
                const  data_chars   = "iuako";
                const data_weights = [
                    0x7361, // 0.450704 
                    0x39b1, // 0.225352 
                    0x2b45, // 0.169014 
                    0x1cd8, // 0.112676 
                    0x0ad1, // 0.042254 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tel
            case 0x006c6574:
            {
                const  data_chars   = "le";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tem
            case 0x006d6574:
            {
                const  data_chars   = "amiobpus";
                const data_weights = [
                    0x7000, // 0.437500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1c00, // 0.109375 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0400, // 0.015625 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ten
            case 0x006e6574:
            {
                const  data_chars   = "jgomsnkbarpycdtizuewh";
                const data_weights = [
                    0x25a6, // 0.147059 
                    0x21e2, // 0.132353 
                    0x20f1, // 0.128676 
                    0x13c4, // 0.077206 
                    0x10f1, // 0.066176 
                    0x10f1, // 0.066176 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0c3c, // 0.047794 
                    0x0788, // 0.029412 
                    0x05a6, // 0.022059 
                    0x04b5, // 0.018382 
                    0x04b5, // 0.018382 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x02d3, // 0.011029 
                    0x01e2, // 0.007353 
                    0x00f1, // 0.003676 
                    0x00f1, // 0.003676 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // teo
            case 0x006f6574:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tep
            case 0x00706574:
            {
                const  data_chars   = "pu";
                const data_weights = [
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ter
            case 0x00726574:
            {
                const  data_chars   = "aueinsmobrcf";
                const data_weights = [
                    0x9fac, // 0.623711 
                    0x40a9, // 0.252577 
                    0x093d, // 0.036082 
                    0x0699, // 0.025773 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tes
            case 0x00736574:
            {
                const  data_chars   = "haust";
                const data_weights = [
                    0xb0c3, // 0.690476 
                    0x2aab, // 0.166667 
                    0x1862, // 0.095238 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tet
            case 0x00746574:
            {
                const  data_chars   = "seato";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x11c7, // 0.069444 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // teu
            case 0x00756574:
            {
                const  data_chars   = "scr";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tew
            case 0x00776574:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tex
            case 0x00786574:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tey
            case 0x00796574:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tez
            case 0x007a6574:
            {
                const  data_chars   = "uai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tfu
            case 0x00756674:
            {
                const  data_chars   = "kl";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tha
            case 0x00616874:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // the
            case 0x00656874:
            {
                const  data_chars   = "ral";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // thi
            case 0x00696874:
            {
                const  data_chars   = "so";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tho
            case 0x006f6874:
            {
                const  data_chars   = "dlu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // thr
            case 0x00726874:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tia
            case 0x00616974:
            {
                const  data_chars   = "nlmr";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tib
            case 0x00626974:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tic
            case 0x00636974:
            {
                const  data_chars   = "ls";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tik
            case 0x006b6974:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // til
            case 0x006c6974:
            {
                const  data_chars   = "le";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tim
            case 0x006d6974:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tin
            case 0x006e6974:
            {
                const  data_chars   = "ega";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tio
            case 0x006f6974:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tiq
            case 0x00716974:
            {
                return 'u';
            }
            break;

            // tir
            case 0x00726974:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tis
            case 0x00736974:
            {
                const  data_chars   = "st";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tit
            case 0x00746974:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tiv
            case 0x00766974:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tiz
            case 0x007a6974:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tka
            case 0x00616b74:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tle
            case 0x00656c74:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tme
            case 0x00656d74:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tna
            case 0x00616e74:
            {
                const  data_chars   = "mi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tne
            case 0x00656e74:
            {
                const  data_chars   = "gry";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toa
            case 0x00616f74:
            {
                const  data_chars   = "sinrkowzc";
                const data_weights = [
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tob
            case 0x00626f74:
            {
                const  data_chars   = "aiueoy";
                const data_weights = [
                    0x4faf, // 0.311258 
                    0x406d, // 0.251656 
                    0x37f2, // 0.218543 
                    0x254c, // 0.145695 
                    0x10f4, // 0.066225 
                    0x01b2, // 0.006623 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toc
            case 0x00636f74:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tod
            case 0x00646f74:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x896e, // 0.536842 
                    0x58ed, // 0.347368 
                    0x1da4, // 0.115789 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toe
            case 0x00656f74:
            {
                const  data_chars   = "inbgm";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tof
            case 0x00666f74:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tog
            case 0x00676f74:
            {
                const  data_chars   = "aeouiy";
                const data_weights = [
                    0x867b, // 0.525316 
                    0x2882, // 0.158228 
                    0x23a5, // 0.139241 
                    0x16af, // 0.088608 
                    0x1510, // 0.082278 
                    0x019f, // 0.006329 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toh
            case 0x00686f74:
            {
                const  data_chars   = "aioey";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toi
            case 0x00696f74:
            {
                const  data_chars   = "sncymktdbrzaegwl";
                const data_weights = [
                    0x33e4, // 0.202703 
                    0x2298, // 0.135135 
                    0x1f23, // 0.121622 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x114c, // 0.067568 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toj
            case 0x006a6f74:
            {
                const  data_chars   = "ioue";
                const data_weights = [
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x05b0, // 0.022222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tok
            case 0x006b6f74:
            {
                const  data_chars   = "uoaieky";
                const data_weights = [
                    0x5e75, // 0.368973 
                    0x3b09, // 0.230608 
                    0x27b7, // 0.155136 
                    0x22e2, // 0.136268 
                    0x10a3, // 0.064990 
                    0x05e7, // 0.023061 
                    0x055e, // 0.020964 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tom
            case 0x006d6f74:
            {
                const  data_chars   = "iaoeuybms";
                const data_weights = [
                    0x5603, // 0.335984 
                    0x4d5c, // 0.302187 
                    0x3901, // 0.222664 
                    0x14de, // 0.081511 
                    0x0a2e, // 0.039761 
                    0x0209, // 0.007952 
                    0x0187, // 0.005964 
                    0x0082, // 0.001988 
                    0x0082, // 0.001988 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ton
            case 0x006e6f74:
            {
                const  data_chars   = "oabiednygckutsj";
                const data_weights = [
                    0x7757, // 0.466165 
                    0x2b4f, // 0.169173 
                    0x1623, // 0.086466 
                    0x0f66, // 0.060150 
                    0x0e70, // 0.056391 
                    0x0c83, // 0.048872 
                    0x05c6, // 0.022556 
                    0x04d0, // 0.018797 
                    0x04d0, // 0.018797 
                    0x03da, // 0.015038 
                    0x02e3, // 0.011278 
                    0x02e3, // 0.011278 
                    0x01ed, // 0.007519 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // too
            case 0x006f6f74:
            {
                const  data_chars   = "krnibcmsth";
                const data_weights = [
                    0x4ec5, // 0.307692 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // top
            case 0x00706f74:
            {
                const  data_chars   = "pieu";
                const data_weights = [
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tor
            case 0x00726f74:
            {
                const  data_chars   = "ioaueyrv";
                const data_weights = [
                    0xb4d6, // 0.706395 
                    0x1c47, // 0.110465 
                    0x194d, // 0.098837 
                    0x0a6b, // 0.040698 
                    0x05f4, // 0.023256 
                    0x03b9, // 0.014535 
                    0x00bf, // 0.002907 
                    0x00bf, // 0.002907 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tos
            case 0x00736f74:
            {
                const  data_chars   = "haeuos";
                const data_weights = [
                    0xad53, // 0.677043 
                    0x2bd4, // 0.171206 
                    0x14eb, // 0.081712 
                    0x0bf4, // 0.046693 
                    0x02fd, // 0.011673 
                    0x02fd, // 0.011673 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tot
            case 0x00746f74:
            {
                const  data_chars   = "saoeti";
                const data_weights = [
                    0x638e, // 0.388889 
                    0x3e94, // 0.244444 
                    0x2d83, // 0.177778 
                    0x16c1, // 0.088889 
                    0x16c1, // 0.088889 
                    0x02d8, // 0.011111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tou
            case 0x00756f74:
            {
                const  data_chars   = "rstgnjchfemzkab";
                const data_weights = [
                    0x42f4, // 0.261538 
                    0x2b53, // 0.169231 
                    0x1f82, // 0.123077 
                    0x17a1, // 0.092308 
                    0x0fc1, // 0.061538 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tow
            case 0x00776f74:
            {
                const  data_chars   = "an";
                const data_weights = [
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toy
            case 0x00796f74:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0xb0e9, // 0.691057 
                    0x48d8, // 0.284553 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // toz
            case 0x007a6f74:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x9192, // 0.568627 
                    0x5a5a, // 0.352941 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tra
            case 0x00617274:
            {
                const  data_chars   = "ilnpvz";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tre
            case 0x00657274:
            {
                const  data_chars   = "en";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tri
            case 0x00697274:
            {
                const  data_chars   = "nacptx";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tro
            case 0x006f7274:
            {
                const  data_chars   = "up";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tru
            case 0x00757274:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tse
            case 0x00657374:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tsh
            case 0x00687374:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tsi
            case 0x00697374:
            {
                const  data_chars   = "md";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tsk
            case 0x006b7374:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tsr
            case 0x00727374:
            {
                return 'u';
            }
            break;

            // tsu
            case 0x00757374:
            {
                const  data_chars   = "krmngbtscydzijheouwaf";
                const data_weights = [
                    0x322b, // 0.195973 
                    0x192c, // 0.098322 
                    0x1916, // 0.097987 
                    0x1656, // 0.087248 
                    0x12fc, // 0.074161 
                    0x12fc, // 0.074161 
                    0x0c75, // 0.048658 
                    0x0b6d, // 0.044631 
                    0x0ae9, // 0.042617 
                    0x0947, // 0.036242 
                    0x0779, // 0.029195 
                    0x0763, // 0.028859 
                    0x06f5, // 0.027181 
                    0x06f5, // 0.027181 
                    0x0687, // 0.025503 
                    0x048e, // 0.017785 
                    0x03de, // 0.015101 
                    0x032e, // 0.012416 
                    0x027e, // 0.009732 
                    0x0176, // 0.005705 
                    0x0058, // 0.001342 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tta
            case 0x00617474:
            {
                const  data_chars   = "rinkmbydctojzgsupx";
                const data_weights = [
                    0x2d2d, // 0.176471 
                    0x2969, // 0.161765 
                    0x1a5a, // 0.102941 
                    0x1a5a, // 0.102941 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tte
            case 0x00657474:
            {
                const  data_chars   = "niktrmbcu";
                const data_weights = [
                    0x4a53, // 0.290323 
                    0x318c, // 0.193548 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tto
            case 0x006f7474:
            {
                const  data_chars   = "mrknswgiuytjbpz";
                const data_weights = [
                    0x343f, // 0.204082 
                    0x2f05, // 0.183673 
                    0x29cc, // 0.163265 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tts
            case 0x00737474:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ttz
            case 0x007a7474:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tua
            case 0x00617574:
            {
                const  data_chars   = "rc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tud
            case 0x00647574:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tug
            case 0x00677574:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tuh
            case 0x00687574:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tui
            case 0x00697574:
            {
                const  data_chars   = "ba";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tuk
            case 0x006b7574:
            {
                const  data_chars   = "aiu";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tur
            case 0x00727574:
            {
                const  data_chars   = "eikryab";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tus
            case 0x00737574:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tut
            case 0x00747574:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tuy
            case 0x00797574:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tuz
            case 0x007a7574:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // twe
            case 0x00657774:
            {
                const  data_chars   = "ne";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tya
            case 0x00617974:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tyl
            case 0x006c7974:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tyr
            case 0x00727974:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tzo
            case 0x006f7a74:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // tzu
            case 0x00757a74:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // t
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'u':
        {
            switch ( trigram_u32 )
            {
            // uac
            case 0x00636175:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uad
            case 0x00646175:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uag
            case 0x00676175:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uai
            case 0x00696175:
            {
                const  data_chars   = "cks";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uaj
            case 0x006a6175:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uak
            case 0x006b6175:
            {
                const  data_chars   = "ioue";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ual
            case 0x006c6175:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uam
            case 0x006d6175:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uan
            case 0x006e6175:
            {
                const  data_chars   = "gjie";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uar
            case 0x00726175:
            {
                const  data_chars   = "aiuet";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uas
            case 0x00736175:
            {
                const  data_chars   = "oahu";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uat
            case 0x00746175:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uau
            case 0x00756175:
            {
                const  data_chars   = "tb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uaw
            case 0x00776175:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uay
            case 0x00796175:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uba
            case 0x00616275:
            {
                const  data_chars   = "rsnktimygceufwbdo";
                const data_weights = [
                    0x4f7d, // 0.310502 
                    0x2568, // 0.146119 
                    0x21e6, // 0.132420 
                    0x1761, // 0.091324 
                    0x1189, // 0.068493 
                    0x0f32, // 0.059361 
                    0x0bb1, // 0.045662 
                    0x0a85, // 0.041096 
                    0x082f, // 0.031963 
                    0x05d8, // 0.022831 
                    0x04ad, // 0.018265 
                    0x0257, // 0.009132 
                    0x012b, // 0.004566 
                    0x012b, // 0.004566 
                    0x012b, // 0.004566 
                    0x012b, // 0.004566 
                    0x012b, // 0.004566 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubb
            case 0x00626275:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ube
            case 0x00656275:
            {
                const  data_chars   = "tsrnickmowyu";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2362, // 0.138211 
                    0x0a68, // 0.040650 
                    0x0a68, // 0.040650 
                    0x063e, // 0.024390 
                    0x042a, // 0.016260 
                    0x042a, // 0.016260 
                    0x042a, // 0.016260 
                    0x042a, // 0.016260 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubi
            case 0x00696275:
            {
                const  data_chars   = "nkscjrmwitd";
                const data_weights = [
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubj
            case 0x006a6275:
            {
                return 'e';
            }
            break;

            // ubl
            case 0x006c6275:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubo
            case 0x006f6275:
            {
                const  data_chars   = "ncmsiktguyrdhjfezao";
                const data_weights = [
                    0x2000, // 0.125000 
                    0x1e00, // 0.117188 
                    0x1800, // 0.093750 
                    0x1600, // 0.085938 
                    0x1600, // 0.085938 
                    0x1600, // 0.085938 
                    0x1400, // 0.078125 
                    0x1200, // 0.070312 
                    0x0e00, // 0.054688 
                    0x0e00, // 0.054688 
                    0x0c00, // 0.046875 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubp
            case 0x00706275:
            {
                return 'r';
            }
            break;

            // ubs
            case 0x00736275:
            {
                const  data_chars   = "te";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ubu
            case 0x00756275:
            {
                const  data_chars   = "nsrtkcygdim";
                const data_weights = [
                    0x4dce, // 0.303922 
                    0x2323, // 0.137255 
                    0x20a1, // 0.127451 
                    0x20a1, // 0.127451 
                    0x1b9c, // 0.107843 
                    0x1697, // 0.088235 
                    0x0a0a, // 0.039216 
                    0x0788, // 0.029412 
                    0x0505, // 0.019608 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uby
            case 0x00796275:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ucc
            case 0x00636375:
            {
                const  data_chars   = "hu";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uch
            case 0x00686375:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xcd32, // 0.801538 
                    0x2a24, // 0.164615 
                    0x0680, // 0.025385 
                    0x022b, // 0.008462 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uci
            case 0x00696375:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ucl
            case 0x006c6375:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uct
            case 0x00746375:
            {
                const  data_chars   = "oi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uda
            case 0x00616475:
            {
                const  data_chars   = "intrkcgsbhydmujo";
                const data_weights = [
                    0x55c1, // 0.334975 
                    0x4419, // 0.266010 
                    0x142d, // 0.078818 
                    0x11a8, // 0.068966 
                    0x0f22, // 0.059113 
                    0x0c9c, // 0.049261 
                    0x08d4, // 0.034483 
                    0x0791, // 0.029557 
                    0x03c9, // 0.014778 
                    0x03c9, // 0.014778 
                    0x03c9, // 0.014778 
                    0x0286, // 0.009852 
                    0x0286, // 0.009852 
                    0x0143, // 0.004926 
                    0x0143, // 0.004926 
                    0x0143, // 0.004926 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // udd
            case 0x00646475:
            {
                const  data_chars   = "ih";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ude
            case 0x00656475:
            {
                const  data_chars   = "nsrkmtdz";
                const data_weights = [
                    0x74df, // 0.456522 
                    0x4859, // 0.282609 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // udi
            case 0x00696475:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // udo
            case 0x006f6475:
            {
                const  data_chars   = "mrnukcgjsyhizdft";
                const data_weights = [
                    0x2bf6, // 0.171717 
                    0x2960, // 0.161616 
                    0x2434, // 0.141414 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0cee, // 0.050505 
                    0x0a58, // 0.040404 
                    0x0a58, // 0.040404 
                    0x0a58, // 0.040404 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // udu
            case 0x00756475:
            {
                const  data_chars   = "kr";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // udz
            case 0x007a6475:
            {
                return 'u';
            }
            break;

            // uea
            case 0x00616575:
            {
                const  data_chars   = "bcgk";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ueb
            case 0x00626575:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uec
            case 0x00636575:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ued
            case 0x00646575:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x45d1, // 0.272727 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uee
            case 0x00656575:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uef
            case 0x00666575:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ueg
            case 0x00676575:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ueh
            case 0x00686575:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0x7777, // 0.466667 
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uei
            case 0x00696575:
            {
                const  data_chars   = "msckl";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uej
            case 0x006a6575:
            {
                const  data_chars   = "oai";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uek
            case 0x006b6575:
            {
                const  data_chars   = "iao";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uem
            case 0x006d6575:
            {
                const  data_chars   = "aoiumb";
                const data_weights = [
                    0x8348, // 0.512821 
                    0x3483, // 0.205128 
                    0x2762, // 0.153846 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uen
            case 0x006e6575:
            {
                const  data_chars   = "oacmdnkibzshrgpj";
                const data_weights = [
                    0x78e4, // 0.472222 
                    0x18e4, // 0.097222 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uep
            case 0x00706575:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uer
            case 0x00726575:
            {
                const  data_chars   = "ucio";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ues
            case 0x00736575:
            {
                const  data_chars   = "uhate";
                const data_weights = [
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uet
            case 0x00746575:
            {
                const  data_chars   = "asot";
                const data_weights = [
                    0x86bd, // 0.526316 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ueu
            case 0x00756575:
            {
                const  data_chars   = "ck";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uew
            case 0x00776575:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uey
            case 0x00796575:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uez
            case 0x007a6575:
            {
                const  data_chars   = "uao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ufa
            case 0x00616675:
            {
                const  data_chars   = "bs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ufu
            case 0x00756675:
            {
                const  data_chars   = "tnrkcmdgjeis";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uga
            case 0x00616775:
            {
                const  data_chars   = "wmnstkoriyhudbcegfzj";
                const data_weights = [
                    0x2e7e, // 0.181614 
                    0x1cb3, // 0.112108 
                    0x18ae, // 0.096413 
                    0x1384, // 0.076233 
                    0x1384, // 0.076233 
                    0x11cb, // 0.069507 
                    0x11cb, // 0.069507 
                    0x0d34, // 0.051570 
                    0x0ca1, // 0.049327 
                    0x0c0e, // 0.047085 
                    0x0ae8, // 0.042601 
                    0x0776, // 0.029148 
                    0x0776, // 0.029148 
                    0x0498, // 0.017937 
                    0x0405, // 0.015695 
                    0x0372, // 0.013453 
                    0x02df, // 0.011211 
                    0x01b9, // 0.006726 
                    0x0093, // 0.002242 
                    0x0093, // 0.002242 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ugb
            case 0x00626775:
            {
                return 'y';
            }
            break;

            // uge
            case 0x00656775:
            {
                const  data_chars   = "ntdmksicgjo";
                const data_weights = [
                    0x713b, // 0.442308 
                    0x2276, // 0.134615 
                    0x189e, // 0.096154 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ugi
            case 0x00696775:
            {
                const  data_chars   = "nsytmdghkzcroujbie";
                const data_weights = [
                    0x4250, // 0.259036 
                    0x1a38, // 0.102410 
                    0x1722, // 0.090361 
                    0x1597, // 0.084337 
                    0x140c, // 0.078313 
                    0x0f6c, // 0.060241 
                    0x0de1, // 0.054217 
                    0x0de1, // 0.054217 
                    0x0de1, // 0.054217 
                    0x0941, // 0.036145 
                    0x07b6, // 0.030120 
                    0x062b, // 0.024096 
                    0x04a0, // 0.018072 
                    0x04a0, // 0.018072 
                    0x04a0, // 0.018072 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ugo
            case 0x006f6775:
            {
                const  data_chars   = "snkmyeurzidhtgojcbp";
                const data_weights = [
                    0x2932, // 0.160920 
                    0x234f, // 0.137931 
                    0x178a, // 0.091954 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x0eb6, // 0.057471 
                    0x0eb6, // 0.057471 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ugu
            case 0x00756775:
            {
                const  data_chars   = "crinmtsedzyhw";
                const data_weights = [
                    0x44d1, // 0.268817 
                    0x39ce, // 0.225806 
                    0x268a, // 0.150538 
                    0x1b87, // 0.107527 
                    0x1606, // 0.086022 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ugy
            case 0x00796775:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uha
            case 0x00616875:
            {
                const  data_chars   = "rmstcnkdeagi";
                const data_weights = [
                    0x7287, // 0.447368 
                    0x286c, // 0.157895 
                    0x1ca2, // 0.111842 
                    0x15e5, // 0.085526 
                    0x0d79, // 0.052632 
                    0x0bca, // 0.046053 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uhe
            case 0x00656875:
            {
                const  data_chars   = "inbr";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uhg
            case 0x00676875:
            {
                const  data_chars   = "as";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uhi
            case 0x00696875:
            {
                const  data_chars   = "rgksntdom";
                const data_weights = [
                    0x3f2b, // 0.246753 
                    0x3532, // 0.207792 
                    0x2b39, // 0.168831 
                    0x213f, // 0.129870 
                    0x1746, // 0.090909 
                    0x10a0, // 0.064935 
                    0x10a0, // 0.064935 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uho
            case 0x006f6875:
            {
                const  data_chars   = "kjunrdmszc";
                const data_weights = [
                    0x3216, // 0.195652 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uhy
            case 0x00796875:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uia
            case 0x00616975:
            {
                const  data_chars   = "cb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uib
            case 0x00626975:
            {
                const  data_chars   = "auei";
                const data_weights = [
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uic
            case 0x00636975:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0xfb2b, // 0.981132 
                    0x04d5, // 0.018868 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uid
            case 0x00646975:
            {
                const  data_chars   = "oea";
                const data_weights = [
                    0x9ee6, // 0.620690 
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uie
            case 0x00656975:
            {
                const  data_chars   = "nimtbk";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uif
            case 0x00666975:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uig
            case 0x00676975:
            {
                const  data_chars   = "aoeui";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uih
            case 0x00686975:
            {
                const  data_chars   = "aeio";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uii
            case 0x00696975:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uij
            case 0x006a6975:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xd89e, // 0.846154 
                    0x2762, // 0.153846 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uik
            case 0x006b6975:
            {
                const  data_chars   = "aeoiku";
                const data_weights = [
                    0x7064, // 0.439024 
                    0x512c, // 0.317073 
                    0x1f38, // 0.121951 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uil
            case 0x006c6975:
            {
                const  data_chars   = "dl";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uim
            case 0x006d6975:
            {
                const  data_chars   = "aeiou";
                const data_weights = [
                    0x7943, // 0.473684 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uin
            case 0x006e6975:
            {
                const  data_chars   = "oakbeumscdi";
                const data_weights = [
                    0x4e39, // 0.305556 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uio
            case 0x006f6975:
            {
                const  data_chars   = "rj";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uir
            case 0x00726975:
            {
                const  data_chars   = "oiyaue";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uis
            case 0x00736975:
            {
                const  data_chars   = "huseao";
                const data_weights = [
                    0xa71c, // 0.652778 
                    0x2000, // 0.125000 
                    0x18e4, // 0.097222 
                    0x0e39, // 0.055556 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uit
            case 0x00746975:
            {
                const  data_chars   = "eaoct";
                const data_weights = [
                    0x851f, // 0.520000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uiu
            case 0x00756975:
            {
                const  data_chars   = "rcn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uiw
            case 0x00776975:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uix
            case 0x00786975:
            {
                return 'a';
            }
            break;

            // uiy
            case 0x00796975:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uiz
            case 0x007a6975:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x6f4e, // 0.434783 
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uja
            case 0x00616a75:
            {
                const  data_chars   = "knybg";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uji
            case 0x00696a75:
            {
                const  data_chars   = "nmkrsgtiywcohdezbjfu";
                const data_weights = [
                    0x2cbd, // 0.174757 
                    0x2a41, // 0.165049 
                    0x1807, // 0.093851 
                    0x165e, // 0.087379 
                    0x158a, // 0.084142 
                    0x13e2, // 0.077670 
                    0x1166, // 0.067961 
                    0x0c6d, // 0.048544 
                    0x091d, // 0.035599 
                    0x0849, // 0.032362 
                    0x0775, // 0.029126 
                    0x05cd, // 0.022654 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x0424, // 0.016181 
                    0x027c, // 0.009709 
                    0x01a8, // 0.006472 
                    0x00d4, // 0.003236 
                    0x00d4, // 0.003236 
                    0x00d4, // 0.003236 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ujk
            case 0x006b6a75:
            {
                return 'u';
            }
            break;

            // ujo
            case 0x006f6a75:
            {
                const  data_chars   = "umgynchkdij";
                const data_weights = [
                    0x4bda, // 0.296296 
                    0x38e4, // 0.222222 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uju
            case 0x00756a75:
            {
                const  data_chars   = "knmryatuzdg";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ujy
            case 0x00796a75:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uka
            case 0x00616b75:
            {
                const  data_chars   = "iwmnsrekdtcygzhbujoap";
                const data_weights = [
                    0x3259, // 0.196676 
                    0x21af, // 0.131579 
                    0x1987, // 0.099723 
                    0x18d2, // 0.096953 
                    0x1380, // 0.076177 
                    0x0d1e, // 0.051247 
                    0x0b59, // 0.044321 
                    0x0aa3, // 0.041551 
                    0x0a48, // 0.040166 
                    0x08dd, // 0.034626 
                    0x0828, // 0.031856 
                    0x0828, // 0.031856 
                    0x06bd, // 0.026316 
                    0x0607, // 0.023546 
                    0x0607, // 0.023546 
                    0x049c, // 0.018006 
                    0x0331, // 0.012465 
                    0x027b, // 0.009695 
                    0x0110, // 0.004155 
                    0x0110, // 0.004155 
                    0x005b, // 0.001385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uke
            case 0x00656b75:
            {
                const  data_chars   = "ntrimdsgcyhkbzjafpo";
                const data_weights = [
                    0x3061, // 0.188976 
                    0x264d, // 0.149606 
                    0x2245, // 0.133858 
                    0x162c, // 0.086614 
                    0x1428, // 0.078740 
                    0x1224, // 0.070866 
                    0x0e1c, // 0.055118 
                    0x0a14, // 0.039370 
                    0x0810, // 0.031496 
                    0x0810, // 0.031496 
                    0x060c, // 0.023622 
                    0x060c, // 0.023622 
                    0x060c, // 0.023622 
                    0x0408, // 0.015748 
                    0x0408, // 0.015748 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uki
            case 0x00696b75:
            {
                const  data_chars   = "nmsdtycgahkzbojruife";
                const data_weights = [
                    0x1ef0, // 0.120846 
                    0x1986, // 0.099698 
                    0x1734, // 0.090634 
                    0x1734, // 0.090634 
                    0x166e, // 0.087613 
                    0x1356, // 0.075529 
                    0x1290, // 0.072508 
                    0x0f78, // 0.060423 
                    0x0d26, // 0.051360 
                    0x0ad4, // 0.042296 
                    0x0ad4, // 0.042296 
                    0x0a0e, // 0.039275 
                    0x0a0e, // 0.039275 
                    0x056a, // 0.021148 
                    0x056a, // 0.021148 
                    0x04a4, // 0.018127 
                    0x0252, // 0.009063 
                    0x0252, // 0.009063 
                    0x018c, // 0.006042 
                    0x00c6, // 0.003021 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ukk
            case 0x006b6b75:
            {
                const  data_chars   = "ouaeiy";
                const data_weights = [
                    0x364e, // 0.212121 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x0f84, // 0.060606 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uko
            case 0x006f6b75:
            {
                const  data_chars   = "smkugbzjdtcnieoyrhp";
                const data_weights = [
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1555, // 0.083333 
                    0x1365, // 0.075758 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0d93, // 0.053030 
                    0x0d93, // 0.053030 
                    0x0ba3, // 0.045455 
                    0x09b2, // 0.037879 
                    0x09b2, // 0.037879 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ukr
            case 0x00726b75:
            {
                return 'a';
            }
            break;

            // uks
            case 0x00736b75:
            {
                const  data_chars   = "ah";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uku
            case 0x00756b75:
            {
                const  data_chars   = "rsmncdjibtegozyhkwua";
                const data_weights = [
                    0x3cdd, // 0.237750 
                    0x1dbc, // 0.116152 
                    0x198e, // 0.099819 
                    0x15d6, // 0.085299 
                    0x0f55, // 0.059891 
                    0x0df0, // 0.054446 
                    0x0d02, // 0.050817 
                    0x0b27, // 0.043557 
                    0x0ab0, // 0.041742 
                    0x085d, // 0.032668 
                    0x076f, // 0.029038 
                    0x076f, // 0.029038 
                    0x06f8, // 0.027223 
                    0x051c, // 0.019964 
                    0x051c, // 0.019964 
                    0x04a5, // 0.018149 
                    0x02ca, // 0.010889 
                    0x0253, // 0.009074 
                    0x0253, // 0.009074 
                    0x0165, // 0.005445 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uky
            case 0x00796b75:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0xb5e5, // 0.710526 
                    0x4a1b, // 0.289474 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ula
            case 0x00616c75:
            {
                const  data_chars   = "tc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ulf
            case 0x00666c75:
            {
                return 'u';
            }
            break;

            // ulg
            case 0x00676c75:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uls
            case 0x00736c75:
            {
                const  data_chars   = "et";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ult
            case 0x00746c75:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uma
            case 0x00616d75:
            {
                const  data_chars   = "cngtemskirdzbyohjupawf";
                const data_weights = [
                    0x357e, // 0.208955 
                    0x23a9, // 0.139303 
                    0x14cd, // 0.081260 
                    0x11d5, // 0.069652 
                    0x1022, // 0.063018 
                    0x0e03, // 0.054726 
                    0x0d96, // 0.053068 
                    0x0d96, // 0.053068 
                    0x0d96, // 0.053068 
                    0x0cbc, // 0.049751 
                    0x0b76, // 0.044776 
                    0x0738, // 0.028192 
                    0x05f2, // 0.023217 
                    0x04ac, // 0.018242 
                    0x03d2, // 0.014925 
                    0x0365, // 0.013267 
                    0x028c, // 0.009950 
                    0x021f, // 0.008292 
                    0x01b3, // 0.006633 
                    0x00d9, // 0.003317 
                    0x006d, // 0.001658 
                    0x006d, // 0.001658 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umb
            case 0x00626d75:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ume
            case 0x00656d75:
            {
                const  data_chars   = "ngdiktrszbmyjhcwuoa";
                const data_weights = [
                    0x3f13, // 0.246377 
                    0x1f89, // 0.123188 
                    0x1468, // 0.079710 
                    0x1468, // 0.079710 
                    0x128d, // 0.072464 
                    0x10b2, // 0.065217 
                    0x0ed7, // 0.057971 
                    0x0ed7, // 0.057971 
                    0x0cfc, // 0.050725 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umi
            case 0x00696d75:
            {
                const  data_chars   = "ngcyzdthkmsboarueifjw";
                const data_weights = [
                    0x31ac, // 0.194030 
                    0x1dee, // 0.116915 
                    0x1d4b, // 0.114428 
                    0x1979, // 0.099502 
                    0x1461, // 0.079602 
                    0x0ea6, // 0.057214 
                    0x0d60, // 0.052239 
                    0x0d60, // 0.052239 
                    0x0d60, // 0.052239 
                    0x0b76, // 0.044776 
                    0x0ad3, // 0.042289 
                    0x05bb, // 0.022388 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x032f, // 0.012438 
                    0x028c, // 0.009950 
                    0x01e9, // 0.007463 
                    0x0146, // 0.004975 
                    0x00a3, // 0.002488 
                    0x00a3, // 0.002488 
                    0x00a3, // 0.002488 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umm
            case 0x006d6d75:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umo
            case 0x006f6d75:
            {
                const  data_chars   = "trnckidgmjshzuyb";
                const data_weights = [
                    0x5307, // 0.324324 
                    0x3ce3, // 0.237838 
                    0x2298, // 0.135135 
                    0x0b12, // 0.043243 
                    0x0b12, // 0.043243 
                    0x0b12, // 0.043243 
                    0x09b0, // 0.037838 
                    0x084d, // 0.032432 
                    0x06eb, // 0.027027 
                    0x0589, // 0.021622 
                    0x0427, // 0.016216 
                    0x02c4, // 0.010811 
                    0x02c4, // 0.010811 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umu
            case 0x00756d75:
            {
                const  data_chars   = "rgsknitu";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umy
            case 0x00796d75:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // umz
            case 0x007a6d75:
            {
                return 'a';
            }
            break;

            // una
            case 0x00616e75:
            {
                const  data_chars   = "igkmnstbrdoyhzcuwjea";
                const data_weights = [
                    0x3276, // 0.197115 
                    0x2b14, // 0.168269 
                    0x2000, // 0.125000 
                    0x1276, // 0.072115 
                    0x11d9, // 0.069712 
                    0x1000, // 0.062500 
                    0x0f62, // 0.060096 
                    0x0a76, // 0.040865 
                    0x093b, // 0.036058 
                    0x093b, // 0.036058 
                    0x06c5, // 0.026442 
                    0x0627, // 0.024038 
                    0x058a, // 0.021635 
                    0x044f, // 0.016827 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x01d9, // 0.007212 
                    0x013b, // 0.004808 
                    0x009e, // 0.002404 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unb
            case 0x00626e75:
            {
                const  data_chars   = "eoai";
                const data_weights = [
                    0xca1b, // 0.789474 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unc
            case 0x00636e75:
            {
                const  data_chars   = "ht";
                const data_weights = [
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // und
            case 0x00646e75:
            {
                const  data_chars   = "oaer";
                const data_weights = [
                    0x5e51, // 0.368421 
                    0x5e51, // 0.368421 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // une
            case 0x00656e75:
            {
                const  data_chars   = "nmghcktosiyzbdrajfup";
                const data_weights = [
                    0x2de7, // 0.179310 
                    0x2513, // 0.144828 
                    0x18b8, // 0.096552 
                    0x1530, // 0.082759 
                    0x136c, // 0.075862 
                    0x0fe4, // 0.062069 
                    0x0e20, // 0.055172 
                    0x0e20, // 0.055172 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x0710, // 0.027586 
                    0x0388, // 0.013793 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ung
            case 0x00676e75:
            {
                const  data_chars   = "aoeiuy";
                const data_weights = [
                    0x590b, // 0.347826 
                    0x4dea, // 0.304348 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unh
            case 0x00686e75:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uni
            case 0x00696e75:
            {
                const  data_chars   = "snkctmgjyhibwzouvfadr";
                const data_weights = [
                    0x3771, // 0.216561 
                    0x1d5a, // 0.114650 
                    0x1bb8, // 0.108280 
                    0x11f0, // 0.070064 
                    0x11f0, // 0.070064 
                    0x11f0, // 0.070064 
                    0x104e, // 0.063694 
                    0x0d0b, // 0.050955 
                    0x0b6a, // 0.044586 
                    0x0686, // 0.025478 
                    0x0686, // 0.025478 
                    0x0686, // 0.025478 
                    0x04e4, // 0.019108 
                    0x04e4, // 0.019108 
                    0x04e4, // 0.019108 
                    0x04e4, // 0.019108 
                    0x0343, // 0.012739 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unj
            case 0x006a6e75:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0xf0f1, // 0.941176 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unk
            case 0x006b6e75:
            {
                const  data_chars   = "aouyie";
                const data_weights = [
                    0x5333, // 0.325000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x199a, // 0.100000 
                    0x1333, // 0.075000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unm
            case 0x006d6e75:
            {
                const  data_chars   = "aeioy";
                const data_weights = [
                    0x8788, // 0.529412 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unn
            case 0x006e6e75:
            {
                const  data_chars   = "aoeiuy";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x2df3, // 0.179487 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uno
            case 0x006f6e75:
            {
                const  data_chars   = "ksmhubytdcogrnziewjp";
                const data_weights = [
                    0x2e4c, // 0.180851 
                    0x277d, // 0.154255 
                    0x2000, // 0.125000 
                    0x146d, // 0.079787 
                    0x0fa9, // 0.061170 
                    0x0efb, // 0.058511 
                    0x0cf0, // 0.050532 
                    0x0b93, // 0.045213 
                    0x0ae5, // 0.042553 
                    0x0a36, // 0.039894 
                    0x082c, // 0.031915 
                    0x077d, // 0.029255 
                    0x0621, // 0.023936 
                    0x04c4, // 0.018617 
                    0x04c4, // 0.018617 
                    0x0367, // 0.013298 
                    0x02b9, // 0.010638 
                    0x020b, // 0.007979 
                    0x015d, // 0.005319 
                    0x00ae, // 0.002660 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unp
            case 0x00706e75:
            {
                const  data_chars   = "eao";
                const data_weights = [
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unr
            case 0x00726e75:
            {
                const  data_chars   = "eyioa";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uns
            case 0x00736e75:
            {
                const  data_chars   = "hueako";
                const data_weights = [
                    0x6aab, // 0.416667 
                    0x3555, // 0.208333 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unt
            case 0x00746e75:
            {
                const  data_chars   = "oaers";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x425f, // 0.259259 
                    0x425f, // 0.259259 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unu
            case 0x00756e75:
            {
                const  data_chars   = "mgkr";
                const data_weights = [
                    0x8925, // 0.535714 
                    0x5b6e, // 0.357143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unw
            case 0x00776e75:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uny
            case 0x00796e75:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xbbbc, // 0.733333 
                    0x4444, // 0.266667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // unz
            case 0x007a6e75:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uob
            case 0x00626f75:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoc
            case 0x00636f75:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uod
            case 0x00646f75:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uog
            case 0x00676f75:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoh
            case 0x00686f75:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoi
            case 0x00696f75:
            {
                const  data_chars   = "ckn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoj
            case 0x006a6f75:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uok
            case 0x006b6f75:
            {
                const  data_chars   = "aoiuy";
                const data_weights = [
                    0xb88f, // 0.720930 
                    0x1dc4, // 0.116279 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uom
            case 0x006d6f75:
            {
                const  data_chars   = "aiou";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x45d1, // 0.272727 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uon
            case 0x006e6f75:
            {
                const  data_chars   = "ouajbis";
                const data_weights = [
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoo
            case 0x006f6f75:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uop
            case 0x00706f75:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uor
            case 0x00726f75:
            {
                const  data_chars   = "ioue";
                const data_weights = [
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uos
            case 0x00736f75:
            {
                const  data_chars   = "houae";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uot
            case 0x00746f75:
            {
                const  data_chars   = "os";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uou
            case 0x00756f75:
            {
                const  data_chars   = "ym";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uoz
            case 0x007a6f75:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upa
            case 0x00617075:
            {
                const  data_chars   = "mnruk";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upe
            case 0x00657075:
            {
                const  data_chars   = "nir";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upi
            case 0x00697075:
            {
                const  data_chars   = "id";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upo
            case 0x006f7075:
            {
                const  data_chars   = "rtno";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upp
            case 0x00707075:
            {
                const  data_chars   = "uaoe";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x3cf4, // 0.238095 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // upu
            case 0x00757075:
            {
                const  data_chars   = "rknpsu";
                const data_weights = [
                    0xba2f, // 0.727273 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ura
            case 0x00617275:
            {
                const  data_chars   = "mknscgyditbzhjouwrfpel";
                const data_weights = [
                    0x1d3f, // 0.114247 
                    0x1ce7, // 0.112903 
                    0x1b2f, // 0.106183 
                    0x1a27, // 0.102151 
                    0x1766, // 0.091398 
                    0x16b6, // 0.088710 
                    0x0dc3, // 0.053763 
                    0x0d13, // 0.051075 
                    0x0c63, // 0.048387 
                    0x0c0b, // 0.047043 
                    0x09fa, // 0.038978 
                    0x089a, // 0.033602 
                    0x06e2, // 0.026882 
                    0x04d1, // 0.018817 
                    0x0479, // 0.017473 
                    0x0319, // 0.012097 
                    0x02c1, // 0.010753 
                    0x0269, // 0.009409 
                    0x0211, // 0.008065 
                    0x0160, // 0.005376 
                    0x0058, // 0.001344 
                    0x0058, // 0.001344 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urb
            case 0x00627275:
            {
                const  data_chars   = "ai";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urc
            case 0x00637275:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ure
            case 0x00657275:
            {
                const  data_chars   = "ntrsibgpdkcmzhjeya";
                const data_weights = [
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1777, // 0.091667 
                    0x1777, // 0.091667 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0aab, // 0.041667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urh
            case 0x00687275:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uri
            case 0x00697275:
            {
                const  data_chars   = "nksgthymzbdcwiajpreofu";
                const data_weights = [
                    0x1eb8, // 0.120000 
                    0x1cdc, // 0.112727 
                    0x1aff, // 0.105455 
                    0x1922, // 0.098182 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                    0x10c2, // 0.065455 
                    0x0b2c, // 0.043636 
                    0x094f, // 0.036364 
                    0x0773, // 0.029091 
                    0x0773, // 0.029091 
                    0x0596, // 0.021818 
                    0x0596, // 0.021818 
                    0x0596, // 0.021818 
                    0x03b9, // 0.014545 
                    0x03b9, // 0.014545 
                    0x02cb, // 0.010909 
                    0x02cb, // 0.010909 
                    0x02cb, // 0.010909 
                    0x01dd, // 0.007273 
                    0x01dd, // 0.007273 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urk
            case 0x006b7275:
            {
                return 'e';
            }
            break;

            // urm
            case 0x006d7275:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uro
            case 0x006f7275:
            {
                const  data_chars   = "kmsgbdntizhycujaorefwp";
                const data_weights = [
                    0x25f4, // 0.148248 
                    0x206e, // 0.126685 
                    0x1b9a, // 0.107817 
                    0x16c5, // 0.088949 
                    0x1090, // 0.064690 
                    0x1090, // 0.064690 
                    0x0fdf, // 0.061995 
                    0x0e7e, // 0.056604 
                    0x0c6c, // 0.048518 
                    0x0bbb, // 0.045822 
                    0x09a9, // 0.037736 
                    0x08f8, // 0.035040 
                    0x08f8, // 0.035040 
                    0x0636, // 0.024259 
                    0x0424, // 0.016173 
                    0x02c3, // 0.010782 
                    0x0212, // 0.008086 
                    0x0212, // 0.008086 
                    0x00b1, // 0.002695 
                    0x00b1, // 0.002695 
                    0x00b1, // 0.002695 
                    0x00b1, // 0.002695 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urr
            case 0x00727275:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urs
            case 0x00737275:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urt
            case 0x00747275:
            {
                const  data_chars   = "ny";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uru
            case 0x00757275:
            {
                const  data_chars   = "msgkintybhdejurzwaofcp";
                const data_weights = [
                    0x3042, // 0.188506 
                    0x289b, // 0.158621 
                    0x22b9, // 0.135632 
                    0x18b8, // 0.096552 
                    0x15c6, // 0.085057 
                    0x0d89, // 0.052874 
                    0x0b2e, // 0.043678 
                    0x0b2e, // 0.043678 
                    0x0a98, // 0.041379 
                    0x096b, // 0.036782 
                    0x04b5, // 0.018391 
                    0x04b5, // 0.018391 
                    0x041f, // 0.016092 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x025b, // 0.009195 
                    0x025b, // 0.009195 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x012d, // 0.004598 
                    0x0097, // 0.002299 
                    0x0097, // 0.002299 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // urv
            case 0x00767275:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ury
            case 0x00797275:
            {
                const  data_chars   = "ou";
                const data_weights = [
                    0x85d1, // 0.522727 
                    0x7a2f, // 0.477273 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // usa
            case 0x00617375:
            {
                const  data_chars   = "nkwtgsimbrdzcyeuojhap";
                const data_weights = [
                    0x34fe, // 0.206997 
                    0x2d87, // 0.177843 
                    0x2b4a, // 0.169096 
                    0x11ea, // 0.069971 
                    0x0eed, // 0.058309 
                    0x0e2e, // 0.055394 
                    0x0d6f, // 0.052478 
                    0x0cb0, // 0.049563 
                    0x0777, // 0.029155 
                    0x06b8, // 0.026239 
                    0x05f9, // 0.023324 
                    0x0539, // 0.020408 
                    0x047a, // 0.017493 
                    0x02fc, // 0.011662 
                    0x023d, // 0.008746 
                    0x017e, // 0.005831 
                    0x017e, // 0.005831 
                    0x00bf, // 0.002915 
                    0x00bf, // 0.002915 
                    0x00bf, // 0.002915 
                    0x00bf, // 0.002915 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // use
            case 0x00657375:
            {
                const  data_chars   = "nikdtmesgrpzcyho";
                const data_weights = [
                    0x689a, // 0.408602 
                    0x4211, // 0.258065 
                    0x0dc3, // 0.053763 
                    0x0b03, // 0.043011 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ush
            case 0x00687375:
            {
                const  data_chars   = "ioua";
                const data_weights = [
                    0xd5f0, // 0.835700 
                    0x1337, // 0.075051 
                    0x0fd6, // 0.061866 
                    0x0703, // 0.027383 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // usi
            case 0x00697375:
            {
                const  data_chars   = "kn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // usn
            case 0x006e7375:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uso
            case 0x006f7375:
            {
                const  data_chars   = "kngrubzdthm";
                const data_weights = [
                    0x3595, // 0.209302 
                    0x23b9, // 0.139535 
                    0x17d0, // 0.093023 
                    0x17d0, // 0.093023 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uss
            case 0x00737375:
            {
                const  data_chars   = "ehaou";
                const data_weights = [
                    0x5000, // 0.312500 
                    0x5000, // 0.312500 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ust
            case 0x00747375:
            {
                const  data_chars   = "roy";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // usu
            case 0x00757375:
            {
                const  data_chars   = "kignbmrtydjseuhcoz";
                const data_weights = [
                    0x4444, // 0.266667 
                    0x1e32, // 0.117949 
                    0x1e32, // 0.117949 
                    0x18f2, // 0.097436 
                    0x18f2, // 0.097436 
                    0x1651, // 0.087179 
                    0x0a81, // 0.041026 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x0540, // 0.020513 
                    0x0540, // 0.020513 
                    0x0540, // 0.020513 
                    0x03f0, // 0.015385 
                    0x02a0, // 0.010256 
                    0x02a0, // 0.010256 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // usy
            case 0x00797375:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uta
            case 0x00617475:
            {
                const  data_chars   = "mnktigrbcsdjwezouhpayf";
                const data_weights = [
                    0x28ba, // 0.159091 
                    0x2624, // 0.148990 
                    0x1e62, // 0.118687 
                    0x1b27, // 0.106061 
                    0x14b0, // 0.080808 
                    0x1365, // 0.075758 
                    0x1174, // 0.068182 
                    0x0a58, // 0.040404 
                    0x0867, // 0.032828 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x052c, // 0.020202 
                    0x03e1, // 0.015152 
                    0x033b, // 0.012626 
                    0x033b, // 0.012626 
                    0x033b, // 0.012626 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x01f0, // 0.007576 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                    0x00a5, // 0.002525 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // utc
            case 0x00637475:
            {
                return 'h';
            }
            break;

            // ute
            case 0x00657475:
            {
                const  data_chars   = "nkirmtbhj";
                const data_weights = [
                    0x5098, // 0.314815 
                    0x3da1, // 0.240741 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uti
            case 0x00697475:
            {
                const  data_chars   = "bv";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uto
            case 0x006f7475:
            {
                const  data_chars   = "rmknsbgupczojiyhtafwd";
                const data_weights = [
                    0x3764, // 0.216374 
                    0x2fe8, // 0.187135 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1675, // 0.087719 
                    0x0d79, // 0.052632 
                    0x0a7b, // 0.040936 
                    0x0a7b, // 0.040936 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x017f, // 0.005848 
                    0x017f, // 0.005848 
                    0x017f, // 0.005848 
                    0x017f, // 0.005848 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uts
            case 0x00737475:
            {
                const  data_chars   = "ue";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // utt
            case 0x00747475:
            {
                const  data_chars   = "aose";
                const data_weights = [
                    0x642d, // 0.391304 
                    0x4dea, // 0.304348 
                    0x42c8, // 0.260870 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uub
            case 0x00627575:
            {
                const  data_chars   = "iue";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuc
            case 0x00637575:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uud
            case 0x00647575:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uue
            case 0x00657575:
            {
                const  data_chars   = "ma";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuf
            case 0x00667575:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uug
            case 0x00677575:
            {
                const  data_chars   = "aiy";
                const data_weights = [
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuh
            case 0x00687575:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uui
            case 0x00697575:
            {
                const  data_chars   = "cn";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuj
            case 0x006a7575:
            {
                const  data_chars   = "iou";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuk
            case 0x006b7575:
            {
                const  data_chars   = "aioyeu";
                const data_weights = [
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uum
            case 0x006d7575:
            {
                const  data_chars   = "iouae";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uun
            case 0x006e7575:
            {
                const  data_chars   = "naiyekt";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuo
            case 0x006f7575:
            {
                const  data_chars   = "ub";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uup
            case 0x00707575:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uur
            case 0x00727575:
            {
                const  data_chars   = "ayiueo";
                const data_weights = [
                    0xc235, // 0.758621 
                    0x1612, // 0.086207 
                    0x1612, // 0.086207 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uus
            case 0x00737575:
            {
                const  data_chars   = "heu";
                const data_weights = [
                    0xda13, // 0.851852 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uut
            case 0x00747575:
            {
                const  data_chars   = "sao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuy
            case 0x00797575:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uuz
            case 0x007a7575:
            {
                const  data_chars   = "eu";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uwa
            case 0x00617775:
            {
                const  data_chars   = "nrkmtsdgbzyehjioufc";
                const data_weights = [
                    0x35d3, // 0.210256 
                    0x18f2, // 0.097436 
                    0x17a1, // 0.092308 
                    0x1261, // 0.071795 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0fc1, // 0.061538 
                    0x0e71, // 0.056410 
                    0x0d21, // 0.051282 
                    0x0931, // 0.035897 
                    0x0931, // 0.035897 
                    0x07e0, // 0.030769 
                    0x0690, // 0.025641 
                    0x02a0, // 0.010256 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                    0x0150, // 0.005128 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uwo
            case 0x006f7775:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uya
            case 0x00617975:
            {
                const  data_chars   = "mskncgtzdhor";
                const data_weights = [
                    0x90e1, // 0.565934 
                    0x205a, // 0.126374 
                    0x1681, // 0.087912 
                    0x0e11, // 0.054945 
                    0x0b41, // 0.043956 
                    0x09d9, // 0.038462 
                    0x0708, // 0.027473 
                    0x0438, // 0.016484 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x0168, // 0.005495 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uye
            case 0x00657975:
            {
                const  data_chars   = "dhmn";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uyo
            case 0x006f7975:
            {
                const  data_chars   = "snukcdirbhm";
                const data_weights = [
                    0x5400, // 0.328125 
                    0x4800, // 0.281250 
                    0x2400, // 0.140625 
                    0x1400, // 0.078125 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uyu
            case 0x00757975:
            {
                const  data_chars   = "knmgbhirtsy";
                const data_weights = [
                    0x78e4, // 0.472222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uza
            case 0x00617a75:
            {
                const  data_chars   = "wknitse";
                const data_weights = [
                    0x6444, // 0.391667 
                    0x6000, // 0.375000 
                    0x1bbc, // 0.108333 
                    0x1111, // 0.066667 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uze
            case 0x00657a75:
            {
                const  data_chars   = "niock";
                const data_weights = [
                    0xe85f, // 0.907692 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uzm
            case 0x006d7a75:
            {
                return 'i';
            }
            break;

            // uzo
            case 0x006f7a75:
            {
                const  data_chars   = "nukgewhj";
                const data_weights = [
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // uzu
            case 0x00757a75:
            {
                const  data_chars   = "rkmhgnswytiufceo";
                const data_weights = [
                    0x4867, // 0.282828 
                    0x3e10, // 0.242424 
                    0x257f, // 0.146465 
                    0x0f84, // 0.060606 
                    0x0e39, // 0.055556 
                    0x0cee, // 0.050505 
                    0x090d, // 0.035354 
                    0x0677, // 0.025253 
                    0x0677, // 0.025253 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // u
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'v':
        {
            switch ( trigram_u32 )
            {
            // val
            case 0x006c6176:
            {
                const  data_chars   = "vdl";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // van
            case 0x006e6176:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vat
            case 0x00746176:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // veh
            case 0x00686576:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vel
            case 0x006c6576:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ven
            case 0x006e6576:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ver
            case 0x00726576:
            {
                const  data_chars   = "shbgnt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ves
            case 0x00736576:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // via
            case 0x00616976:
            {
                const  data_chars   = "ib";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vic
            case 0x00636976:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vie
            case 0x00656976:
            {
                const  data_chars   = "wt";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vil
            case 0x006c6976:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vin
            case 0x006e6976:
            {
                const  data_chars   = "ct";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vis
            case 0x00736976:
            {
                const  data_chars   = "it";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vit
            case 0x00746976:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // voi
            case 0x00696f76:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // vot
            case 0x00746f76:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // v
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'w':
        {
            switch ( trigram_u32 )
            {
            // waa
            case 0x00616177:
            {
                const  data_chars   = "ceikpt";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wab
            case 0x00626177:
            {
                const  data_chars   = "aeuiob";
                const data_weights = [
                    0x9162, // 0.567901 
                    0x2f68, // 0.185185 
                    0x22c4, // 0.135802 
                    0x1620, // 0.086420 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wac
            case 0x00636177:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wad
            case 0x00646177:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0xbe5c, // 0.743590 
                    0x3b14, // 0.230769 
                    0x0690, // 0.025641 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wae
            case 0x00656177:
            {
                const  data_chars   = "krs";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // waf
            case 0x00666177:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wag
            case 0x00676177:
            {
                const  data_chars   = "uaioe";
                const data_weights = [
                    0x5689, // 0.338028 
                    0x52ee, // 0.323944 
                    0x2977, // 0.161972 
                    0x2977, // 0.161972 
                    0x039b, // 0.014085 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wah
            case 0x00686177:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x5870, // 0.345455 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wai
            case 0x00696177:
            {
                const  data_chars   = "cnsdtgmrzfhkoybiw";
                const data_weights = [
                    0x2aab, // 0.166667 
                    0x271c, // 0.152778 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x11c7, // 0.069444 
                    0x11c7, // 0.069444 
                    0x11c7, // 0.069444 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // waj
            case 0x006a6177:
            {
                const  data_chars   = "ioue";
                const data_weights = [
                    0xdcdd, // 0.862745 
                    0x1414, // 0.078431 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wak
            case 0x006b6177:
            {
                const  data_chars   = "aiueok";
                const data_weights = [
                    0x5dba, // 0.366120 
                    0x56bb, // 0.338798 
                    0x22f9, // 0.136612 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0b31, // 0.043716 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wam
            case 0x006d6177:
            {
                const  data_chars   = "aiueo";
                const data_weights = [
                    0x8190, // 0.506098 
                    0x2577, // 0.146341 
                    0x20c8, // 0.128049 
                    0x1f38, // 0.121951 
                    0x18fa, // 0.097561 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wan
            case 0x006e6177:
            {
                const  data_chars   = "oaieucgdbmnyp";
                const data_weights = [
                    0x79f8, // 0.476440 
                    0x36f4, // 0.214660 
                    0x2ae4, // 0.167539 
                    0x1015, // 0.062827 
                    0x055c, // 0.020942 
                    0x02ae, // 0.010471 
                    0x02ae, // 0.010471 
                    0x02ae, // 0.010471 
                    0x0157, // 0.005236 
                    0x0157, // 0.005236 
                    0x0157, // 0.005236 
                    0x0157, // 0.005236 
                    0x0157, // 0.005236 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wao
            case 0x006f6177:
            {
                const  data_chars   = "ktnisbd";
                const data_weights = [
                    0x6bca, // 0.421053 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // war
            case 0x00726177:
            {
                const  data_chars   = "aiueoy";
                const data_weights = [
                    0xb12e, // 0.692105 
                    0x3692, // 0.213158 
                    0x0c20, // 0.047368 
                    0x0ac7, // 0.042105 
                    0x00ac, // 0.002632 
                    0x00ac, // 0.002632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // was
            case 0x00736177:
            {
                const  data_chars   = "haeuosk";
                const data_weights = [
                    0x7527, // 0.457627 
                    0x456c, // 0.271186 
                    0x24e2, // 0.144068 
                    0x149c, // 0.080508 
                    0x0798, // 0.029661 
                    0x0341, // 0.012712 
                    0x0116, // 0.004237 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wat
            case 0x00746177:
            {
                const  data_chars   = "aeost";
                const data_weights = [
                    0xbe55, // 0.743478 
                    0x1cf0, // 0.113043 
                    0x12ec, // 0.073913 
                    0x0d5b, // 0.052174 
                    0x0474, // 0.017391 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wau
            case 0x00756177:
            {
                const  data_chars   = "crsb";
                const data_weights = [
                    0xbbbc, // 0.733333 
                    0x2aab, // 0.166667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wav
            case 0x00766177:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // waw
            case 0x00776177:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // way
            case 0x00796177:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xe555, // 0.895833 
                    0x1555, // 0.083333 
                    0x0555, // 0.020833 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // waz
            case 0x007a6177:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x70f1, // 0.441176 
                    0x65a6, // 0.397059 
                    0x1e1e, // 0.117647 
                    0x0b4b, // 0.044118 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wci
            case 0x00696377:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wda
            case 0x00616477:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wee
            case 0x00656577:
            {
                const  data_chars   = "kb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wel
            case 0x006c6577:
            {
                const  data_chars   = "lb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wen
            case 0x006e6577:
            {
                const  data_chars   = "anst";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wes
            case 0x00736577:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wet
            case 0x00746577:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wgu
            case 0x00756777:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wha
            case 0x00616877:
            {
                const  data_chars   = "ra";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // whi
            case 0x00696877:
            {
                const  data_chars   = "st";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wii
            case 0x00696977:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // win
            case 0x006e6977:
            {
                const  data_chars   = "gd";
                const data_weights = [
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wis
            case 0x00736977:
            {
                const  data_chars   = "su";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wit
            case 0x00746977:
            {
                const  data_chars   = "ca";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // woa
            case 0x00616f77:
            {
                const  data_chars   = "db";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wod
            case 0x00646f77:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // woo
            case 0x006f6f77:
            {
                const  data_chars   = "da";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wor
            case 0x00726f77:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wot
            case 0x00746f77:
            {
                const  data_chars   = "sao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // wur
            case 0x00727577:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // w
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'x':
        {
            switch ( trigram_u32 )
            {
            // xaw
            case 0x00776178:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xce
            case 0x00656378:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xec
            case 0x00636578:
            {
                const  data_chars   = "uh";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xer
            case 0x00726578:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xia
            case 0x00616978:
            {
                const  data_chars   = "ob";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xpr
            case 0x00727078:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xst
            case 0x00747378:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // xti
            case 0x00697478:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // x
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'y':
        {
            switch ( trigram_u32 )
            {
            // yaa
            case 0x00616179:
            {
                const  data_chars   = "ecjkm";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yab
            case 0x00626179:
            {
                const  data_chars   = "uaeioy";
                const data_weights = [
                    0x66e1, // 0.401869 
                    0x5aea, // 0.355140 
                    0x28ac, // 0.158879 
                    0x0bf6, // 0.046729 
                    0x072d, // 0.028037 
                    0x0264, // 0.009346 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yac
            case 0x00636179:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yad
            case 0x00646179:
            {
                const  data_chars   = "oae";
                const data_weights = [
                    0x98fa, // 0.597561 
                    0x5da9, // 0.365854 
                    0x095e, // 0.036585 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yae
            case 0x00656179:
            {
                const  data_chars   = "smkndibhjzy";
                const data_weights = [
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yaf
            case 0x00666179:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yag
            case 0x00676179:
            {
                const  data_chars   = "aiuoye";
                const data_weights = [
                    0x6484, // 0.392638 
                    0x451b, // 0.269939 
                    0x2f1e, // 0.184049 
                    0x1c45, // 0.110429 
                    0x0648, // 0.024540 
                    0x04b6, // 0.018405 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yah
            case 0x00686179:
            {
                const  data_chars   = "aioe";
                const data_weights = [
                    0xb249, // 0.696429 
                    0x3249, // 0.196429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yai
            case 0x00696179:
            {
                const  data_chars   = "rstzcngkm";
                const data_weights = [
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yaj
            case 0x006a6179:
            {
                const  data_chars   = "iuoa";
                const data_weights = [
                    0xc57c, // 0.771429 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0750, // 0.028571 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yak
            case 0x006b6179:
            {
                const  data_chars   = "uiaoeky";
                const data_weights = [
                    0x6d06, // 0.425868 
                    0x25f5, // 0.148265 
                    0x2457, // 0.141956 
                    0x1de1, // 0.116719 
                    0x15ce, // 0.085174 
                    0x1027, // 0.063091 
                    0x04d8, // 0.018927 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yam
            case 0x006d6179:
            {
                const  data_chars   = "aiuoeb";
                const data_weights = [
                    0xf2da, // 0.948643 
                    0x04e2, // 0.019076 
                    0x0331, // 0.012472 
                    0x02d1, // 0.011005 
                    0x0181, // 0.005869 
                    0x00c0, // 0.002935 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yan
            case 0x006e6179:
            {
                const  data_chars   = "aoiebusmkpc";
                const data_weights = [
                    0x884d, // 0.532423 
                    0x5bbe, // 0.358362 
                    0x07dd, // 0.030717 
                    0x06fd, // 0.027304 
                    0x045e, // 0.017065 
                    0x029f, // 0.010239 
                    0x01bf, // 0.006826 
                    0x01bf, // 0.006826 
                    0x00e0, // 0.003413 
                    0x00e0, // 0.003413 
                    0x00e0, // 0.003413 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yao
            case 0x006f6179:
            {
                const  data_chars   = "rknmtdijyh";
                const data_weights = [
                    0x36db, // 0.214286 
                    0x2db7, // 0.178571 
                    0x2db7, // 0.178571 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yap
            case 0x00706179:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yar
            case 0x00726179:
            {
                const  data_chars   = "iauodye";
                const data_weights = [
                    0x7d63, // 0.489796 
                    0x43eb, // 0.265306 
                    0x1f59, // 0.122449 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yas
            case 0x00736179:
            {
                const  data_chars   = "huaeos";
                const data_weights = [
                    0x86e9, // 0.526998 
                    0x5905, // 0.347732 
                    0x161e, // 0.086393 
                    0x07be, // 0.030238 
                    0x01a9, // 0.006479 
                    0x008e, // 0.002160 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yat
            case 0x00746179:
            {
                const  data_chars   = "soat";
                const data_weights = [
                    0x9204, // 0.570370 
                    0x37f1, // 0.218519 
                    0x2d83, // 0.177778 
                    0x0889, // 0.033333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yau
            case 0x00756179:
            {
                const  data_chars   = "rscntmb";
                const data_weights = [
                    0x47ae, // 0.280000 
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yaw
            case 0x00776179:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yay
            case 0x00796179:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x745d, // 0.454545 
                    0x0ba3, // 0.045455 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yaz
            case 0x007a6179:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x9883, // 0.595745 
                    0x415d, // 0.255319 
                    0x20ae, // 0.127660 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ydr
            case 0x00726479:
            {
                const  data_chars   = "oe";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yed
            case 0x00646579:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yeh
            case 0x00686579:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yem
            case 0x006d6579:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yen
            case 0x006e6579:
            {
                const  data_chars   = "eo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yet
            case 0x00746579:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yin
            case 0x006e6979:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yky
            case 0x00796b79:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yla
            case 0x00616c79:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yle
            case 0x00656c79:
            {
                const  data_chars   = "sa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yli
            case 0x00696c79:
            {
                const  data_chars   = "nc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ymp
            case 0x00706d79:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yne
            case 0x00656e79:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoa
            case 0x00616f79:
            {
                const  data_chars   = "kncb";
                const data_weights = [
                    0x7627, // 0.461538 
                    0x6276, // 0.384615 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yob
            case 0x00626f79:
            {
                const  data_chars   = "aueio";
                const data_weights = [
                    0x53c8, // 0.327273 
                    0x3c82, // 0.236364 
                    0x3333, // 0.200000 
                    0x2e8c, // 0.181818 
                    0x0df7, // 0.054545 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoc
            case 0x00636f79:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yod
            case 0x00646f79:
            {
                const  data_chars   = "aoe";
                const data_weights = [
                    0x8168, // 0.505495 
                    0x6ae7, // 0.417582 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoe
            case 0x00656f79:
            {
                const  data_chars   = "inck";
                const data_weights = [
                    0x8889, // 0.533333 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yof
            case 0x00666f79:
            {
                const  data_chars   = "uf";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yog
            case 0x00676f79:
            {
                const  data_chars   = "aoiuey";
                const data_weights = [
                    0x8699, // 0.525773 
                    0x3cb3, // 0.237113 
                    0x24f3, // 0.144330 
                    0x0d32, // 0.051546 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoh
            case 0x00686f79:
            {
                const  data_chars   = "aoie";
                const data_weights = [
                    0x6e58, // 0.431034 
                    0x4235, // 0.258621 
                    0x3dcb, // 0.241379 
                    0x11a8, // 0.068966 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoi
            case 0x00696f79:
            {
                const  data_chars   = "nckdmgtwzysi";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x2ccd, // 0.175000 
                    0x2ccd, // 0.175000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoj
            case 0x006a6f79:
            {
                const  data_chars   = "ioau";
                const data_weights = [
                    0xbe10, // 0.742424 
                    0x26ca, // 0.151515 
                    0x1365, // 0.075758 
                    0x07c2, // 0.030303 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yok
            case 0x006b6f79:
            {
                const  data_chars   = "ouaeiky";
                const data_weights = [
                    0x8458, // 0.516971 
                    0x38d1, // 0.221932 
                    0x2418, // 0.140992 
                    0x10b6, // 0.065274 
                    0x075a, // 0.028721 
                    0x0559, // 0.020888 
                    0x0156, // 0.005222 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yom
            case 0x006d6f79:
            {
                const  data_chars   = "aioeub";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x3844, // 0.219780 
                    0x3844, // 0.219780 
                    0x13b1, // 0.076923 
                    0x0b41, // 0.043956 
                    0x02d0, // 0.010989 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yon
            case 0x006e6f79:
            {
                const  data_chars   = "eaojibncksgtdumy";
                const data_weights = [
                    0x3d38, // 0.239130 
                    0x34df, // 0.206522 
                    0x34df, // 0.206522 
                    0x14df, // 0.081522 
                    0x0f4e, // 0.059783 
                    0x0c86, // 0.048913 
                    0x09bd, // 0.038043 
                    0x06f5, // 0.027174 
                    0x042d, // 0.016304 
                    0x042d, // 0.016304 
                    0x042d, // 0.016304 
                    0x042d, // 0.016304 
                    0x02c8, // 0.010870 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoo
            case 0x006f6f79:
            {
                const  data_chars   = "kndgj";
                const data_weights = [
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yop
            case 0x00706f79:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yor
            case 0x00726f79:
            {
                const  data_chars   = "ioayeu";
                const data_weights = [
                    0x684c, // 0.407407 
                    0x57b4, // 0.342593 
                    0x25ed, // 0.148148 
                    0x0bda, // 0.046296 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yos
            case 0x00736f79:
            {
                const  data_chars   = "heauois";
                const data_weights = [
                    0xcd93, // 0.803030 
                    0x10a0, // 0.064935 
                    0x10a0, // 0.064935 
                    0x0b15, // 0.043290 
                    0x04fd, // 0.019481 
                    0x008e, // 0.002165 
                    0x008e, // 0.002165 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yot
            case 0x00746f79:
            {
                const  data_chars   = "saoet";
                const data_weights = [
                    0x6370, // 0.388430 
                    0x54a1, // 0.330579 
                    0x2833, // 0.157025 
                    0x1963, // 0.099174 
                    0x0659, // 0.024793 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // you
            case 0x00756f79:
            {
                const  data_chars   = "krsbcjngtidofzwmh";
                const data_weights = [
                    0x2932, // 0.160920 
                    0x205e, // 0.126437 
                    0x205e, // 0.126437 
                    0x1a7c, // 0.103448 
                    0x1499, // 0.080460 
                    0x1499, // 0.080460 
                    0x0eb6, // 0.057471 
                    0x0eb6, // 0.057471 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yow
            case 0x00776f79:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoy
            case 0x00796f79:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x638e, // 0.388889 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yoz
            case 0x007a6f79:
            {
                const  data_chars   = "aueo";
                const data_weights = [
                    0x6e8c, // 0.431818 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1d17, // 0.113636 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ypl
            case 0x006c7079:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ypr
            case 0x00727079:
            {
                const  data_chars   = "ei";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yri
            case 0x00697279:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yro
            case 0x006f7279:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ysi
            case 0x00697379:
            {
                const  data_chars   = "dg";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yst
            case 0x00747379:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yte
            case 0x00657479:
            {
                const  data_chars   = "la";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yto
            case 0x006f7479:
            {
                const  data_chars   = "an";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yua
            case 0x00617579:
            {
                const  data_chars   = "insr";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yub
            case 0x00627579:
            {
                const  data_chars   = "aiueo";
                const data_weights = [
                    0x5050, // 0.313726 
                    0x3c3c, // 0.235294 
                    0x3737, // 0.215686 
                    0x3232, // 0.196078 
                    0x0a0a, // 0.039216 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuc
            case 0x00637579:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yud
            case 0x00647579:
            {
                const  data_chars   = "aoeu";
                const data_weights = [
                    0x77d4, // 0.468085 
                    0x5726, // 0.340426 
                    0x2b93, // 0.170213 
                    0x0572, // 0.021277 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yue
            case 0x00657579:
            {
                const  data_chars   = "nd";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuf
            case 0x00667579:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yug
            case 0x00677579:
            {
                const  data_chars   = "aeuoiy";
                const data_weights = [
                    0x84fd, // 0.519481 
                    0x2b39, // 0.168831 
                    0x213f, // 0.129870 
                    0x13f3, // 0.077922 
                    0x10a0, // 0.064935 
                    0x09f9, // 0.038961 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuh
            case 0x00687579:
            {
                const  data_chars   = "oaie";
                const data_weights = [
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3bbc, // 0.233333 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yui
            case 0x00697579:
            {
                const  data_chars   = "ncgkswm";
                const data_weights = [
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuj
            case 0x006a7579:
            {
                const  data_chars   = "iouay";
                const data_weights = [
                    0x9000, // 0.562500 
                    0x4800, // 0.281250 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuk
            case 0x006b7579:
            {
                const  data_chars   = "iauoyek";
                const data_weights = [
                    0x9cf4, // 0.613095 
                    0x30c3, // 0.190476 
                    0x13cf, // 0.077381 
                    0x1249, // 0.071429 
                    0x079e, // 0.029762 
                    0x030c, // 0.011905 
                    0x0186, // 0.005952 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yum
            case 0x006d7579:
            {
                const  data_chars   = "ieoau";
                const data_weights = [
                    0x6319, // 0.387097 
                    0x39ce, // 0.225806 
                    0x2c0b, // 0.172043 
                    0x268a, // 0.150538 
                    0x1084, // 0.064516 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yun
            case 0x006e7579:
            {
                const  data_chars   = "oaiyubh";
                const data_weights = [
                    0xbce5, // 0.737864 
                    0x1dd3, // 0.116505 
                    0x13e2, // 0.077670 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuo
            case 0x006f7579:
            {
                const  data_chars   = "kmrstznu";
                const data_weights = [
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yup
            case 0x00707579:
            {
                const  data_chars   = "pa";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yur
            case 0x00727579:
            {
                const  data_chars   = "iauoye";
                const data_weights = [
                    0x6000, // 0.375000 
                    0x4492, // 0.267857 
                    0x4492, // 0.267857 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yus
            case 0x00737579:
            {
                const  data_chars   = "heauo";
                const data_weights = [
                    0x6ece, // 0.432836 
                    0x31ac, // 0.194030 
                    0x2a08, // 0.164179 
                    0x2635, // 0.149254 
                    0x0f49, // 0.059701 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yut
            case 0x00747579:
            {
                const  data_chars   = "aoest";
                const data_weights = [
                    0x8b21, // 0.543478 
                    0x42c8, // 0.260870 
                    0x1bd3, // 0.108696 
                    0x10b2, // 0.065217 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuu
            case 0x00757579:
            {
                const  data_chars   = "gkrjsnmbyid";
                const data_weights = [
                    0x2f05, // 0.183673 
                    0x2492, // 0.142857 
                    0x1f59, // 0.122449 
                    0x1f59, // 0.122449 
                    0x1a1f, // 0.102041 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuw
            case 0x00777579:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuy
            case 0x00797579:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xd555, // 0.833333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // yuz
            case 0x007a7579:
            {
                const  data_chars   = "auoe";
                const data_weights = [
                    0x677d, // 0.404255 
                    0x5c99, // 0.361702 
                    0x2621, // 0.148936 
                    0x15ca, // 0.085106 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // ywo
            case 0x006f7779:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // y
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'z':
        {
            switch ( trigram_u32 )
            {
            // zaa
            case 0x0061617a:
            {
                const  data_chars   = "znt";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zab
            case 0x0062617a:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zac
            case 0x0063617a:
            {
                const  data_chars   = "ha";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zad
            case 0x0064617a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zae
            case 0x0065617a:
            {
                const  data_chars   = "mgs";
                const data_weights = [
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zaf
            case 0x0066617a:
            {
                const  data_chars   = "uo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zag
            case 0x0067617a:
            {
                const  data_chars   = "ayi";
                const data_weights = [
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zah
            case 0x0068617a:
            {
                const  data_chars   = "ac";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zai
            case 0x0069617a:
            {
                const  data_chars   = "kmscfngjdrthay";
                const data_weights = [
                    0x5111, // 0.316667 
                    0x3777, // 0.216667 
                    0x1555, // 0.083333 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zak
            case 0x006b617a:
            {
                const  data_chars   = "iaoue";
                const data_weights = [
                    0x9afd, // 0.605428 
                    0x44f2, // 0.269311 
                    0x14d8, // 0.081420 
                    0x0a28, // 0.039666 
                    0x0112, // 0.004175 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zam
            case 0x006d617a:
            {
                const  data_chars   = "aiueop";
                const data_weights = [
                    0x9af3, // 0.605263 
                    0x35e5, // 0.210526 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zan
            case 0x006e617a:
            {
                const  data_chars   = "egascjtokndpiubhrm";
                const data_weights = [
                    0x2323, // 0.137255 
                    0x1e1e, // 0.117647 
                    0x1919, // 0.098039 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zao
            case 0x006f617a:
            {
                const  data_chars   = "cmr";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zar
            case 0x0072617a:
            {
                const  data_chars   = "iuaeo";
                const data_weights = [
                    0x47ae, // 0.280000 
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x0a3d, // 0.040000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zas
            case 0x0073617a:
            {
                const  data_chars   = "hauso";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zat
            case 0x0074617a:
            {
                const  data_chars   = "osea";
                const data_weights = [
                    0xf0b7, // 0.940298 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zaw
            case 0x0077617a:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zay
            case 0x0079617a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zaz
            case 0x007a617a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zea
            case 0x0061657a:
            {
                const  data_chars   = "lb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zec
            case 0x0063657a:
            {
                const  data_chars   = "hi";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zed
            case 0x0064657a:
            {
                const  data_chars   = "ad";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zeg
            case 0x0067657a:
            {
                const  data_chars   = "au";
                const data_weights = [
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zeh
            case 0x0068657a:
            {
                const  data_chars   = "aio";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zei
            case 0x0069657a:
            {
                const  data_chars   = "mkcdt";
                const data_weights = [
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zej
            case 0x006a657a:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zek
            case 0x006b657a:
            {
                const  data_chars   = "iuako";
                const data_weights = [
                    0xc235, // 0.758621 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zem
            case 0x006d657a:
            {
                const  data_chars   = "abiy";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zen
            case 0x006e657a:
            {
                const  data_chars   = "jtikodgmsnbahyrzcpef";
                const data_weights = [
                    0x2129, // 0.129534 
                    0x1bdb, // 0.108808 
                    0x168d, // 0.088083 
                    0x1539, // 0.082902 
                    0x1292, // 0.072539 
                    0x0feb, // 0.062176 
                    0x0feb, // 0.062176 
                    0x0e97, // 0.056995 
                    0x0d44, // 0.051813 
                    0x0bf0, // 0.046632 
                    0x0bf0, // 0.046632 
                    0x07f5, // 0.031088 
                    0x07f5, // 0.031088 
                    0x07f5, // 0.031088 
                    0x06a2, // 0.025907 
                    0x054e, // 0.020725 
                    0x054e, // 0.020725 
                    0x03fb, // 0.015544 
                    0x02a7, // 0.010363 
                    0x0154, // 0.005181 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zeo
            case 0x006f657a:
            {
                const  data_chars   = "nb";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zer
            case 0x0072657a:
            {
                const  data_chars   = "oau";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zes
            case 0x0073657a:
            {
                const  data_chars   = "ta";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zet
            case 0x0074657a:
            {
                const  data_chars   = "otas";
                const data_weights = [
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zey
            case 0x0079657a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zez
            case 0x007a657a:
            {
                const  data_chars   = "ea";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zfo
            case 0x006f667a:
            {
                const  data_chars   = "rg";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zha
            case 0x0061687a:
            {
                const  data_chars   = "oa";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zhe
            case 0x0065687a:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zik
            case 0x006b697a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zmi
            case 0x00696d7a:
            {
                const  data_chars   = "ga";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoa
            case 0x00616f7a:
            {
                const  data_chars   = "sw";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zob
            case 0x00626f7a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoc
            case 0x00636f7a:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zod
            case 0x00646f7a:
            {
                const  data_chars   = "aeo";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoe
            case 0x00656f7a:
            {
                const  data_chars   = "cmord";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zog
            case 0x00676f7a:
            {
                const  data_chars   = "auo";
                const data_weights = [
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoh
            case 0x00686f7a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoi
            case 0x00696f7a:
            {
                const  data_chars   = "na";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoj
            case 0x006a6f7a:
            {
                const  data_chars   = "io";
                const data_weights = [
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zok
            case 0x006b6f7a:
            {
                const  data_chars   = "uiao";
                const data_weights = [
                    0xb1c7, // 0.694444 
                    0x238e, // 0.138889 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zom
            case 0x006d6f7a:
            {
                const  data_chars   = "ieaou";
                const data_weights = [
                    0x50d8, // 0.315789 
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zon
            case 0x006e6f7a:
            {
                const  data_chars   = "oeaju";
                const data_weights = [
                    0xde0a, // 0.867347 
                    0x1783, // 0.091837 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zor
            case 0x00726f7a:
            {
                const  data_chars   = "aeio";
                const data_weights = [
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zos
            case 0x00736f7a:
            {
                const  data_chars   = "heo";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zot
            case 0x00746f7a:
            {
                const  data_chars   = "ab";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zou
            case 0x00756f7a:
            {
                const  data_chars   = "ka";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zow
            case 0x00776f7a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoy
            case 0x00796f7a:
            {
                const  data_chars   = "an";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zoz
            case 0x007a6f7a:
            {
                const  data_chars   = "oua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zua
            case 0x0061757a:
            {
                const  data_chars   = "rk";
                const data_weights = [
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zub
            case 0x0062757a:
            {
                const  data_chars   = "aeou";
                const data_weights = [
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuc
            case 0x0063757a:
            {
                const  data_chars   = "hc";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zud
            case 0x0064757a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zue
            case 0x0065757a:
            {
                const  data_chars   = "cdm";
                const data_weights = [
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuf
            case 0x0066757a:
            {
                const  data_chars   = "ua";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zug
            case 0x0067757a:
            {
                const  data_chars   = "auoi";
                const data_weights = [
                    0xc859, // 0.782609 
                    0x1bd3, // 0.108696 
                    0x1643, // 0.086957 
                    0x0591, // 0.021739 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuh
            case 0x0068757a:
            {
                const  data_chars   = "aoi";
                const data_weights = [
                    0xa8da, // 0.659574 
                    0x2b93, // 0.170213 
                    0x2b93, // 0.170213 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zui
            case 0x0069757a:
            {
                const  data_chars   = "rstbojudeghk";
                const data_weights = [
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuj
            case 0x006a757a:
            {
                const  data_chars   = "ia";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuk
            case 0x006b757a:
            {
                const  data_chars   = "aiuoeky";
                const data_weights = [
                    0xa121, // 0.629412 
                    0x2dee, // 0.179412 
                    0x1b1b, // 0.105882 
                    0x0b4b, // 0.044118 
                    0x0848, // 0.032353 
                    0x0182, // 0.005882 
                    0x00c1, // 0.002941 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zum
            case 0x006d757a:
            {
                const  data_chars   = "iaeou";
                const data_weights = [
                    0x8c5d, // 0.548287 
                    0x3f01, // 0.246106 
                    0x1b1e, // 0.105919 
                    0x1588, // 0.084112 
                    0x03fd, // 0.015576 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zun
            case 0x006e757a:
            {
                const  data_chars   = "oauiegm";
                const data_weights = [
                    0xa42d, // 0.641304 
                    0x3d38, // 0.239130 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuo
            case 0x006f757a:
            {
                const  data_chars   = "kcs";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zur
            case 0x0072757a:
            {
                const  data_chars   = "aueioy";
                const data_weights = [
                    0x6407, // 0.390728 
                    0x5829, // 0.344371 
                    0x1e84, // 0.119205 
                    0x1e84, // 0.119205 
                    0x0364, // 0.013245 
                    0x0364, // 0.013245 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zus
            case 0x0073757a:
            {
                const  data_chars   = "haue";
                const data_weights = [
                    0x7dac, // 0.490909 
                    0x745d, // 0.454545 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zut
            case 0x0074757a:
            {
                const  data_chars   = "saot";
                const data_weights = [
                    0x7712, // 0.465116 
                    0x5f41, // 0.372093 
                    0x23b9, // 0.139535 
                    0x05f4, // 0.023256 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuu
            case 0x0075757a:
            {
                const  data_chars   = "rszm";
                const data_weights = [
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuw
            case 0x0077757a:
            {
                const  data_chars   = "ao";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuy
            case 0x0079757a:
            {
                const  data_chars   = "aou";
                const data_weights = [
                    0xb555, // 0.708333 
                    0x4000, // 0.250000 
                    0x0aab, // 0.041667 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            // zuz
            case 0x007a757a:
            {
                const  data_chars   = "ae";
                const data_weights = [
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                ];
                return decision_fn( data_chars, data_weights, data_chars.length, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // z
        break;

    }
    return 0;
} // SelectNextLetter()


const E_TRIGRAM_ROOTS = 1854;
const G_TRIGRAM_ROOTS = 
    "aadaaiaakaanaaoaaraatabaabeabiaboabuabyaccaceachactadaadeadiadoaebaedaegaehaeiaekaemaenaeoaeraesaetaezafuagaageagiagoagu" +
    "ahaaheahiahoaiaaibaicaidaieaigaihaiiaijaikaimainaioaipairaisaitaiuaiyaizajaajiajoajuakaakeakiakkakoakualaaliallalpamaamb" +
    "ameamiammamoampamuanaanbancandaneanganhanianjankanmannanoanpanransantanuanyanzaobaogaohaoiaokaomaonaoraosaotaoyaozapaape" +
    "apiapoappapuaraardareariarmaroartaruaryasaaseashasiaskasmasoassastasuataateatiatoatsattatuaueaukaumaunausautawaayaayoayu" +
    "azaazeazoazubaababbacbadbagbahbaibajbakbambanbaobarbasbatbaubazbeabedbegbehbeibekbelbembenbeoberbesbetbibbidbigbihbiibij" +
    "bikbimbinbiobirbisbitbiubizboabodboebogbohboibojbokbombonbooborbosbotboubozbribuabudbugbuibujbukbumbunburbusbutbuubuybuz" +
    "byobyucamcapcarcchcerchachechichochucitconcopcorcredabdaddaedagdahdaidakdamdandaodardasdatdaudaydeadebdegdeidekdemdendeo" +
    "derdesdetdeydiedisdoadobdocdoddogdohdoidojdokdomdondordosdotdoudoydozdukeageakeameareaseatebaebeebieboebuechecoedaedeedi" +
    "edoeekeeneesefuegaegiegoeguehaehiehoeiaeibeideieeigeiheiieijeikeimeineipeireiseiteiyeizejiejoekaekeekiekkekoekueleeliell" +
    "emaembemeemiemmemoempemuenaenbendeneengenhenienjenkenmennenoenpenrensentenuenyenzeokeoneoreotepaepeepiepoepperaerbercere" +
    "ergerierneroerrerseruesaeseeshesoessestesuetaeteetoetteureusewaeyaeyoeyuezaezoezufasfinforfrefubfudfuefugfuifujfukfumfun" +
    "furfusfutfuufuyfuzgaagabgadgaegaggahgaigajgakgamgangaogargasgatgaugaygazgebgedgehgeigekgemgengeogergesgetgeygezgiagibgig" +
    "gihgijgikgimgingiogirgisgitgiugizglogobgodgoegoggohgoigojgokgomgongoogorgosgotgougoygozgraguagudgueguigumgungurgusgutguz" +
    "gyogyuhaahabhadhaehaghaihakhamhanhaohapharhashathayhazheahebhegheihekhenherheshethiahibhidhiehighihhiihijhikhilhimhinhio" +
    "hiphirhishithiuhiwhiyhizhoahobhodhoghohhoihojhokholhomhonhoohorhoshothouhoyhozhuahubhudhuehughuhhuihujhukhumhunhuohuphur" +
    "hushuthuuhuzhyahyohyuiabiagiaiiakiamianiaoiariasiatibaibeibiiboibuibyicaichidaideidoiebiegieiiekiemienieriesietieuifuiga" +
    "igeigiigoiguihaiheihiihoihyiiaiibiidiigiihiiiiijiikiimiiniiriisiitiiyiizijiijoijuikaikeikiikkikoikuikyillimaimbimeimiimm" +
    "imoimpimuinainbincindineinginhiniinjinkinminninoinpinrinsintinuinyinziobiodiogiohioiiokiomionioriosiotiozipaipiipoippipu" +
    "iraireiriiroiruiryisaisciseishisoissistisuitaiteitoittiubiudiueiukiumiuniuoiuriusiutiwaiyaiyoiyuizaizeizoizujakjamjanjas" +
    "jiajibjiejigjihjiijijjikjimjinjiojirjisjitjiyjizjobjoejogjohjojjokjomjonjoojorjosjotjoujoyjozjuajubjugjuijukjumjunjurjus" +
    "jutjuujuzjyojyukaakabkadkaekagkahkaikajkakkamkankaokapkarkaskatkaukaykazkeakebkedkeekegkehkeikejkekkemkenkeokepkerkesket" +
    "keukeykezkiakibkidkiekigkihkiikijkikkimkinkiokipkirkiskitkiukiykizkkakkekkikkokkukkykoakobkodkoekogkohkoikojkokkomkonkoo" +
    "kopkorkoskotkoukoykozkuakubkudkuekugkuhkuikujkukkumkunkuokurkuskutkuukuykuzkyakyokyulailanlasliplitllallemaamabmadmaemag" +
    "mahmaimajmakmammanmaomarmasmatmaumaymazmbambembombumeamebmedmeemegmehmeimekmemmenmeomermesmetmeumezmiamibmidmiemigmihmii" +
    "mijmikmilmimminmiomirmismitmiumiymizmmammimmomoamobmodmoemogmohmoimojmokmommonmoomormosmotmoumoymozmpampompumubmugmuimuk" +
    "mummunmurmusmutmyomyunaanabnadnaenagnahnainajnaknamnannaonarnasnatnaunaynaznbanbenbinbonbunchndandendoneanebnedneenegneh" +
    "neinejneknemnenneonepnernesnetneuneyneznfungangengingongungynhanhinhonianibnicnidnignihniinijniknimninnionirnisnitniuniy" +
    "niznjanjinjonjunkankenkinkonkunmanmenminmonmunnannenninnnnnonnunnynoanobnodnoenognohnoinojnoknomnonnoonornosnotnounoynoz" +
    "npanpenpinponpunranrenrinronrunrynsansenshnsonsuntantentintonubnudnugnuhnuinuknumnunnuonurnusnutnwanyanyonyunzanzenzonzu" +
    "oaboadoaioakoamoanoaooaroasobaobeobioboobuobyochodaodeodooduoeboegoehoeioekoemoenoeroesoetoeuofuogaogeogiogooguohaoheohi" +
    "ohooiaoiboidoigoihoiioikoimoinoiroisoitojaojiojoojuokaokeokiokkokookuokyoliolyomaombomeomiommomoomuonaonboncondoneongonh" +
    "onionjonkonmonnonoonponronsontonuonyonzooboodoogooiookoomoonooroosootoozopeopiopooppopuoraoreorioroortoruoryosaoseoshoso" +
    "ossosuotaoteotoottouboudoueougouhouioujoukoumounouoourousoutouyouzowaoyaoyooyuozaozeozoozupacpaipakpanparpaspatpeepeipek" +
    "penperpespetpikpinpispitplapokpolpomponporpospotppappeppippoppuprepubpukpunpuppurpusputpuuquarabradragrahrairajrakramran" +
    "raoraprarrasratraurayrazrbarborebrecredreerefregrehreirekremrenrepresretreureyrezriaribricridrierigrihriirijrikrimrinrio" +
    "riprirrisritriuriyrizrmaroarobrocrodroerogrohroirojrokromronrooroprorrosrotrouroyrozrriruarubrudruerugruhruirujrukrumrun" +
    "ruoruprurrusrutruuruyruzryaryoryusaasabsadsaesagsahsaisaksamsansaosarsassatsausaysazschseasebsedsegsehseiseksemsenseoser" +
    "sessetseushasheshishoshusigsinsitsmisobsocsodsoesofsogsoisojsoksomsonsoosopsorsossotsousozssassesshssossustastestistostr" +
    "stusuasubsudsuesugsuhsuisujsuksulsumsunsuosupsursussutsuusuysuzswisyosyutaatabtadtaetagtahtaitajtaktamtantaotaptartastat" +
    "tautaytaztchteatebtedteetegtehteitektemtentertestetteutezthethotiatintnetoatobtodtoetogtohtoitojtoktomtontootoptortostot" +
    "toutoytoztratritsuttattettotukturuaiuakuanuaruasubaubeubiuboubuuchudaudeudoueaueguehueiuejuekuemuenueruesuetuezufuugauge" +
    "ugiugouguugyuhauheuhiuhouibuiduieuiguihuikuimuinuiruisuituiuuizujaujiujoujuukaukeukiukkukoukuumaumeumiumoumuunaunbundune" +
    "unguniunkunmunnunounpunrunsuntunuunzuoiuokuomuonuoruosupaupeupouppupuuraureuriurouruusauseushusoussustusuutauteutouttuub" +
    "uuduuguujuukuumuunuuruusuutuwauyauyeuyouyuuzauzeuzouzuvalverwaawabwadwaewagwahwaiwajwakwamwanwaowarwaswatwauwaywazwenwot" +
    "yaayabyadyaeyagyahyaiyajyakyamyanyaoyaryasyatyauyayyazyoayobyodyoeyogyohyoiyojyokyomyonyooyoryosyotyouyoyyozyuayubyudyug" +
    "yuhyuiyujyukyumyunyuoyuryusyutyuuyuyyuzzaazaezagzaizakzamzanzaozarzaszatzehzeizekzemzenzerzetzodzoezogzokzomzonzorzoszoz" +
    "zubzuezugzuhzuizukzumzunzuozurzuszutzuuzuy";

function BeginGeneration(input_user_random_u32) {
	const chosen_index = input_user_random_u32 % E_TRIGRAM_ROOTS;
	const startIndex = chosen_index * 3;
	return TrigramAssembler.fromRootChars( G_TRIGRAM_ROOTS.substring(startIndex, startIndex + 3) );
}
