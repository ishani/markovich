// generated by markovich:tablegen
// ishani.org 2021

namespace mk {
namespace scotland {

MKV_DISABLE_OPT
static char SelectNextLetter(
    const uint32_t          trigram_u32,
    const float             input_weight,
    const uint32_t          input_seed,
    BranchDecisionFunction  decision_fn )
{
    const char initial_letter = (char)( trigram_u32 & 0xff );
    switch (initial_letter)
    {
        // -- -- -- -- -- -- -- -- -- -- -- --
        case '-':
        {
            switch ( trigram_u32 )
            {
            // -a-
            case 0x002d612d:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ai
            case 0x0069612d:
            {
                MKV_DATA char  data_chars[3]   = "br";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ao
            case 0x006f612d:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ba
            case 0x0061622d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ch
            case 0x0068632d:
            {
                MKV_DATA char  data_chars[3]   = "l-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -cu
            case 0x0075632d:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -de
            case 0x0065642d:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -en
            case 0x006e652d:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -eo
            case 0x006f652d:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -fl
            case 0x006c662d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -go
            case 0x006f672d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ha
            case 0x0061682d:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -he
            case 0x0065682d:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -hi
            case 0x0069682d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -kn
            case 0x006e6b2d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -lu
            case 0x00756c2d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -mu
            case 0x00756d2d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -na
            case 0x00616e2d:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -on
            case 0x006e6f2d:
            {
                MKV_DATA char  data_chars[3]   = "-a";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -se
            case 0x0065732d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -si
            case 0x0069732d:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -so
            case 0x006f732d:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -st
            case 0x0074732d:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ta
            case 0x0061742d:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -th
            case 0x0068742d:
            {
                MKV_DATA char  data_chars[3]   = "e-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // -ye
            case 0x0065792d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // -
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'a':
        {
            switch ( trigram_u32 )
            {
            // a-l
            case 0x006c2d61:
            {
                return 'u';
            }
            break;

            // a-m
            case 0x006d2d61:
            {
                return 'u';
            }
            break;

            // a-s
            case 0x00732d61:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aar
            case 0x00726161:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aas
            case 0x00736161:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aba
            case 0x00616261:
            {
                MKV_DATA char  data_chars[6]   = "yicno";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // abb
            case 0x00626261:
            {
                MKV_DATA char  data_chars[4]   = "eos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abe
            case 0x00656261:
            {
                MKV_DATA char  data_chars[5]   = "rgln";
                MKV_DATA uint16_t data_weights[4] = {
                    0xda13, // 0.851852 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // abh
            case 0x00686261:
            {
                MKV_DATA char  data_chars[4]   = "ais";
                MKV_DATA uint16_t data_weights[3] = {
                    0xec4f, // 0.923077 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abi
            case 0x00696261:
            {
                MKV_DATA char  data_chars[4]   = "snr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abo
            case 0x006f6261:
            {
                MKV_DATA char  data_chars[8]   = "sycdeit";
                MKV_DATA uint16_t data_weights[7] = {
                    0x999a, // 0.600000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // abr
            case 0x00726261:
            {
                MKV_DATA char  data_chars[6]   = "ouaie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // abs
            case 0x00736261:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abu
            case 0x00756261:
            {
                MKV_DATA char  data_chars[4]   = "snr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aby
            case 0x00796261:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aca
            case 0x00616361:
            {
                MKV_DATA char  data_chars[6]   = "rsidn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // acd
            case 0x00646361:
            {
                return 'u';
            }
            break;

            // ace
            case 0x00656361:
            {
                MKV_DATA char  data_chars[7]   = "trsdmn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ach
            case 0x00686361:
            {
                MKV_DATA char  data_chars[19]   = "aniyrudltmof-cegbk";
                MKV_DATA uint16_t data_weights[18] = {
                    0x59f2, // 0.351351 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x1273, // 0.072072 
                    0x0dd6, // 0.054054 
                    0x0b88, // 0.045045 
                    0x093a, // 0.036036 
                    0x093a, // 0.036036 
                    0x093a, // 0.036036 
                    0x093a, // 0.036036 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x049d, // 0.018018 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // ack
            case 0x006b6361:
            {
                MKV_DATA char  data_chars[17]   = "lhmsirwbtefdagnc";
                MKV_DATA uint16_t data_weights[16] = {
                    0x2323, // 0.137255 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1919, // 0.098039 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // acl
            case 0x006c6361:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // acm
            case 0x006d6361:
            {
                return 'e';
            }
            break;

            // acn
            case 0x006e6361:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aco
            case 0x006f6361:
            {
                MKV_DATA char  data_chars[4]   = "lri";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // acq
            case 0x00716361:
            {
                return 'u';
            }
            break;

            // acr
            case 0x00726361:
            {
                MKV_DATA char  data_chars[5]   = "aeoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // act
            case 0x00746361:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // acu
            case 0x00756361:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ad-
            case 0x002d6461:
            {
                return 'e';
            }
            break;

            // ada
            case 0x00616461:
            {
                MKV_DATA char  data_chars[9]   = "lribmncd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5359, // 0.325581 
                    0x4d65, // 0.302326 
                    0x17d0, // 0.093023 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // adb
            case 0x00626461:
            {
                MKV_DATA char  data_chars[5]   = "oeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adc
            case 0x00636461:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // add
            case 0x00646461:
            {
                MKV_DATA char  data_chars[6]   = "eiaoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5c29, // 0.360000 
                    0x51ec, // 0.320000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ade
            case 0x00656461:
            {
                MKV_DATA char  data_chars[7]   = "rnsalm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x999a, // 0.600000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // adf
            case 0x00666461:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adg
            case 0x00676461:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adh
            case 0x00686461:
            {
                MKV_DATA char  data_chars[4]   = "ali";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // adi
            case 0x00696461:
            {
                MKV_DATA char  data_chars[4]   = "cen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // adl
            case 0x006c6461:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adm
            case 0x006d6461:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adn
            case 0x006e6461:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ado
            case 0x006f6461:
            {
                MKV_DATA char  data_chars[4]   = "wue";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // adr
            case 0x00726461:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ads
            case 0x00736461:
            {
                MKV_DATA char  data_chars[5]   = "heim";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adu
            case 0x00756461:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adw
            case 0x00776461:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ady
            case 0x00796461:
            {
                MKV_DATA char  data_chars[5]   = "bwkn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adz
            case 0x007a6461:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aeb
            case 0x00626561:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aed
            case 0x00646561:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aef
            case 0x00666561:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aeg
            case 0x00676561:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aeh
            case 0x00686561:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aem
            case 0x006d6561:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aep
            case 0x00706561:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aes
            case 0x00736561:
            {
                MKV_DATA char  data_chars[4]   = "biw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aet
            case 0x00746561:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aev
            case 0x00766561:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aew
            case 0x00776561:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afa
            case 0x00616661:
            {
                MKV_DATA char  data_chars[4]   = "dlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // afe
            case 0x00656661:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aff
            case 0x00666661:
            {
                MKV_DATA char  data_chars[4]   = "alo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // afi
            case 0x00696661:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afo
            case 0x006f6661:
            {
                MKV_DATA char  data_chars[3]   = "ur";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afu
            case 0x00756661:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aga
            case 0x00616761:
            {
                MKV_DATA char  data_chars[9]   = "nstvilru";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // agd
            case 0x00646761:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // age
            case 0x00656761:
            {
                MKV_DATA char  data_chars[4]   = "hos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agg
            case 0x00676761:
            {
                MKV_DATA char  data_chars[6]   = "areis";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // agh
            case 0x00686761:
            {
                MKV_DATA char  data_chars[4]   = "ain";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agi
            case 0x00696761:
            {
                MKV_DATA char  data_chars[5]   = "elnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agl
            case 0x006c6761:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agm
            case 0x006d6761:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ago
            case 0x006f6761:
            {
                MKV_DATA char  data_chars[5]   = "ruiw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agr
            case 0x00726761:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agu
            case 0x00756761:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aha
            case 0x00616861:
            {
                MKV_DATA char  data_chars[8]   = "rnvbgim";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ahe
            case 0x00656861:
            {
                MKV_DATA char  data_chars[3]   = "gi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ahi
            case 0x00696861:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aho
            case 0x006f6861:
            {
                MKV_DATA char  data_chars[7]   = "imruyg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ahu
            case 0x00756861:
            {
                MKV_DATA char  data_chars[4]   = "aim";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aib
            case 0x00626961:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aic
            case 0x00636961:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aid
            case 0x00646961:
            {
                MKV_DATA char  data_chars[8]   = "hefswyb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x93b1, // 0.576923 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // aif
            case 0x00666961:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aig
            case 0x00676961:
            {
                MKV_DATA char  data_chars[16]   = "hesmilandrbgtvo";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4a34, // 0.289855 
                    0x28d0, // 0.159420 
                    0x19f9, // 0.101449 
                    0x19f9, // 0.101449 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ail
            case 0x006c6961:
            {
                MKV_DATA char  data_chars[12]   = "eloiathsuyf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x44ec, // 0.269231 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // aim
            case 0x006d6961:
            {
                MKV_DATA char  data_chars[5]   = "ehrb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ain
            case 0x006e6961:
            {
                MKV_DATA char  data_chars[9]   = "snetbhmz";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // air
            case 0x00726961:
            {
                MKV_DATA char  data_chars[16]   = "ndslimbtchygkof";
                MKV_DATA uint16_t data_weights[15] = {
                    0x5555, // 0.333333 
                    0x234f, // 0.137931 
                    0x1d6d, // 0.114943 
                    0x178a, // 0.091954 
                    0x1499, // 0.080460 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ais
            case 0x00736961:
            {
                MKV_DATA char  data_chars[7]   = "egiblt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ait
            case 0x00746961:
            {
                MKV_DATA char  data_chars[6]   = "hlnoe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aiv
            case 0x00766961:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akb
            case 0x00626b61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ake
            case 0x00656b61:
            {
                MKV_DATA char  data_chars[4]   = "imr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aki
            case 0x00696b61:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // akl
            case 0x006c6b61:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akn
            case 0x006e6b61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ala
            case 0x00616c61:
            {
                MKV_DATA char  data_chars[10]   = "ncsdvblgh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // alb
            case 0x00626c61:
            {
                MKV_DATA char  data_chars[5]   = "eluo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // alc
            case 0x00636c61:
            {
                MKV_DATA char  data_chars[5]   = "haou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ald
            case 0x00646c61:
            {
                MKV_DATA char  data_chars[12]   = "eoisabchrwy";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7555, // 0.458333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ale
            case 0x00656c61:
            {
                MKV_DATA char  data_chars[13]   = "mnaevxprblsy";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // alf
            case 0x00666c61:
            {
                MKV_DATA char  data_chars[6]   = "oirsw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // alg
            case 0x00676c61:
            {
                MKV_DATA char  data_chars[7]   = "aouier";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // alh
            case 0x00686c61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ali
            case 0x00696c61:
            {
                MKV_DATA char  data_chars[9]   = "nsfgvbma";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7555, // 0.458333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // alk
            case 0x006b6c61:
            {
                MKV_DATA char  data_chars[5]   = "eilb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // all
            case 0x006c6c61:
            {
                MKV_DATA char  data_chars[12]   = "aoiyestbghm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5492, // 0.330357 
                    0x3249, // 0.196429 
                    0x2db7, // 0.178571 
                    0x1925, // 0.098214 
                    0x1249, // 0.071429 
                    0x0b6e, // 0.044643 
                    0x0b6e, // 0.044643 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // alm
            case 0x006d6c61:
            {
                MKV_DATA char  data_chars[7]   = "aoeiuy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x34b5, // 0.205882 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aln
            case 0x006e6c61:
            {
                MKV_DATA char  data_chars[6]   = "aeiuw";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbbbc, // 0.733333 
                    0x2aab, // 0.166667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // alo
            case 0x006f6c61:
            {
                MKV_DATA char  data_chars[4]   = "ncr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // alp
            case 0x00706c61:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alq
            case 0x00716c61:
            {
                return 'u';
            }
            break;

            // alr
            case 0x00726c61:
            {
                MKV_DATA char  data_chars[6]   = "iyaeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // als
            case 0x00736c61:
            {
                MKV_DATA char  data_chars[9]   = "thwbeino";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // alt
            case 0x00746c61:
            {
                MKV_DATA char  data_chars[11]   = "onahsrbcei";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6bca, // 0.421053 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // alu
            case 0x00756c61:
            {
                MKV_DATA char  data_chars[4]   = "acm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // alv
            case 0x00766c61:
            {
                MKV_DATA char  data_chars[5]   = "iaer";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // alw
            case 0x00776c61:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aly
            case 0x00796c61:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ama
            case 0x00616d61:
            {
                MKV_DATA char  data_chars[9]   = "rsntughl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // amb
            case 0x00626d61:
            {
                MKV_DATA char  data_chars[6]   = "urdeh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ame
            case 0x00656d61:
            {
                MKV_DATA char  data_chars[5]   = "rslt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // amf
            case 0x00666d61:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amh
            case 0x00686d61:
            {
                MKV_DATA char  data_chars[6]   = "eluio";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ami
            case 0x00696d61:
            {
                MKV_DATA char  data_chars[6]   = "slner";
                MKV_DATA uint16_t data_weights[5] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aml
            case 0x006c6d61:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amm
            case 0x006d6d61:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // amn
            case 0x006e6d61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amo
            case 0x006f6d61:
            {
                MKV_DATA char  data_chars[6]   = "rndoq";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amp
            case 0x00706d61:
            {
                MKV_DATA char  data_chars[9]   = "tbhuefls";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ams
            case 0x00736d61:
            {
                MKV_DATA char  data_chars[9]   = "tdeabcil";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // amu
            case 0x00756d61:
            {
                MKV_DATA char  data_chars[5]   = "scle";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // amw
            case 0x00776d61:
            {
                return 'o';
            }
            break;

            // an-
            case 0x002d6e61:
            {
                MKV_DATA char  data_chars[4]   = "sae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ana
            case 0x00616e61:
            {
                MKV_DATA char  data_chars[14]   = "inrcvhlqgtmsu";
                MKV_DATA uint16_t data_weights[13] = {
                    0x364e, // 0.212121 
                    0x26ca, // 0.151515 
                    0x26ca, // 0.151515 
                    0x26ca, // 0.151515 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // anb
            case 0x00626e61:
            {
                MKV_DATA char  data_chars[6]   = "rauei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anc
            case 0x00636e61:
            {
                MKV_DATA char  data_chars[6]   = "ehrua";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // and
            case 0x00646e61:
            {
                MKV_DATA char  data_chars[17]   = "shreabwoyfnigvlt";
                MKV_DATA uint16_t data_weights[16] = {
                    0x41bb, // 0.256757 
                    0x260e, // 0.148649 
                    0x1f23, // 0.121622 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ane
            case 0x00656e61:
            {
                MKV_DATA char  data_chars[9]   = "alsfcnrt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // anf
            case 0x00666e61:
            {
                MKV_DATA char  data_chars[5]   = "fiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ang
            case 0x00676e61:
            {
                MKV_DATA char  data_chars[12]   = "aeuolhiswmb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // anh
            case 0x00686e61:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ani
            case 0x00696e61:
            {
                MKV_DATA char  data_chars[5]   = "secn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ank
            case 0x006b6e61:
            {
                MKV_DATA char  data_chars[8]   = "seifghn";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // anl
            case 0x006c6e61:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // anm
            case 0x006d6e61:
            {
                MKV_DATA char  data_chars[4]   = "oui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ann
            case 0x006e6e61:
            {
                MKV_DATA char  data_chars[9]   = "aoiedbsy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x599a, // 0.350000 
                    0x4ccd, // 0.300000 
                    0x2000, // 0.125000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ano
            case 0x006f6e61:
            {
                MKV_DATA char  data_chars[5]   = "cnrg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // anq
            case 0x00716e61:
            {
                return 'u';
            }
            break;

            // anr
            case 0x00726e61:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ans
            case 0x00736e61:
            {
                MKV_DATA char  data_chars[8]   = "thecbfi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ant
            case 0x00746e61:
            {
                MKV_DATA char  data_chars[10]   = "oarlyeisu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4dea, // 0.304348 
                    0x37a7, // 0.217391 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // anv
            case 0x00766e61:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anw
            case 0x00776e61:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anx
            case 0x00786e61:
            {
                return 'h';
            }
            break;

            // any
            case 0x00796e61:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anz
            case 0x007a6e61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aob
            case 0x00626f61:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aoc
            case 0x00636f61:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aoi
            case 0x00696f61:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aol
            case 0x006c6f61:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aon
            case 0x006e6f61:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aos
            case 0x00736f61:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apa
            case 0x00617061:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ape
            case 0x00657061:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aph
            case 0x00687061:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // api
            case 0x00697061:
            {
                MKV_DATA char  data_chars[3]   = "gl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apl
            case 0x006c7061:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apn
            case 0x006e7061:
            {
                return 'e';
            }
            break;

            // apo
            case 0x006f7061:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // app
            case 0x00707061:
            {
                MKV_DATA char  data_chars[4]   = "lei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // apr
            case 0x00727061:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apu
            case 0x00757061:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aqu
            case 0x00757161:
            {
                MKV_DATA char  data_chars[4]   = "oah";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ara
            case 0x00617261:
            {
                MKV_DATA char  data_chars[11]   = "cisbmvelny";
                MKV_DATA uint16_t data_weights[10] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // arb
            case 0x00627261:
            {
                MKV_DATA char  data_chars[8]   = "rheuioa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // arc
            case 0x00637261:
            {
                MKV_DATA char  data_chars[5]   = "halu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ard
            case 0x00647261:
            {
                MKV_DATA char  data_chars[22]   = "eiorsanvmlhgtcybpfukw";
                MKV_DATA uint16_t data_weights[21] = {
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x1181, // 0.068376 
                    0x1181, // 0.068376 
                    0x0f51, // 0.059829 
                    0x0f51, // 0.059829 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0af1, // 0.042735 
                    0x0af1, // 0.042735 
                    0x08c1, // 0.034188 
                    0x08c1, // 0.034188 
                    0x08c1, // 0.034188 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // are
            case 0x00657261:
            {
                MKV_DATA char  data_chars[8]   = "snltahm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // arf
            case 0x00667261:
            {
                MKV_DATA char  data_chars[5]   = "fisr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // arg
            case 0x00677261:
            {
                MKV_DATA char  data_chars[10]   = "iyaoeurns";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3a2f, // 0.227273 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // arh
            case 0x00687261:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ari
            case 0x00697261:
            {
                MKV_DATA char  data_chars[12]   = "esnovcgutld";
                MKV_DATA uint16_t data_weights[11] = {
                    0x36db, // 0.214286 
                    0x2db7, // 0.178571 
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // arj
            case 0x006a7261:
            {
                return 'o';
            }
            break;

            // ark
            case 0x006b7261:
            {
                MKV_DATA char  data_chars[10]   = "lshiefang";
                MKV_DATA uint16_t data_weights[9] = {
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // arl
            case 0x006c7261:
            {
                MKV_DATA char  data_chars[8]   = "eaiosyu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // arm
            case 0x006d7261:
            {
                MKV_DATA char  data_chars[7]   = "uaioyt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // arn
            case 0x006e7261:
            {
                MKV_DATA char  data_chars[19]   = "oaisebhltwc-dykmpq";
                MKV_DATA uint16_t data_weights[18] = {
                    0x2fbb, // 0.186441 
                    0x2fbb, // 0.186441 
                    0x1a09, // 0.101695 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // aro
            case 0x006f7261:
            {
                MKV_DATA char  data_chars[5]   = "nlcy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // arp
            case 0x00707261:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // arq
            case 0x00717261:
            {
                return 'u';
            }
            break;

            // arr
            case 0x00727261:
            {
                MKV_DATA char  data_chars[10]   = "ayoiehuwm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4bc1, // 0.295918 
                    0x414e, // 0.255102 
                    0x36db, // 0.214286 
                    0x21f6, // 0.132653 
                    0x0d10, // 0.051020 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ars
            case 0x00737261:
            {
                MKV_DATA char  data_chars[12]   = "atehildpkob";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // art
            case 0x00747261:
            {
                MKV_DATA char  data_chars[15]   = "hoeyilasnwmfrc";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4ccd, // 0.300000 
                    0x2492, // 0.142857 
                    0x199a, // 0.100000 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x1249, // 0.071429 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // aru
            case 0x00757261:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // arv
            case 0x00767261:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // arw
            case 0x00777261:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ary
            case 0x00797261:
            {
                MKV_DATA char  data_chars[12]   = "bptwchmnvks";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // arz
            case 0x007a7261:
            {
                return 'i';
            }
            break;

            // as-
            case 0x002d7361:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asa
            case 0x00617361:
            {
                MKV_DATA char  data_chars[7]   = "ignryc";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa492, // 0.642857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // asb
            case 0x00627361:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asc
            case 0x00637361:
            {
                MKV_DATA char  data_chars[4]   = "lor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asd
            case 0x00647361:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ase
            case 0x00657361:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asg
            case 0x00677361:
            {
                MKV_DATA char  data_chars[4]   = "oar";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ash
            case 0x00687361:
            {
                MKV_DATA char  data_chars[13]   = "aingemtkflvb";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // asi
            case 0x00697361:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ask
            case 0x006b7361:
            {
                MKV_DATA char  data_chars[6]   = "aieno";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // asl
            case 0x006c7361:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asn
            case 0x006e7361:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aso
            case 0x006f7361:
            {
                MKV_DATA char  data_chars[3]   = "un";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asp
            case 0x00707361:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ass
            case 0x00737361:
            {
                MKV_DATA char  data_chars[8]   = "iafoelw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ast
            case 0x00747361:
            {
                MKV_DATA char  data_chars[11]   = "laroeisfhw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x51ec, // 0.320000 
                    0x428f, // 0.260000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // asw
            case 0x00777361:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ata
            case 0x00617461:
            {
                MKV_DATA char  data_chars[4]   = "cgr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atb
            case 0x00627461:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atc
            case 0x00637461:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atd
            case 0x00647461:
            {
                return 'y';
            }
            break;

            // ate
            case 0x00657461:
            {
                MKV_DATA char  data_chars[6]   = "rshfl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // atf
            case 0x00667461:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ath
            case 0x00687461:
            {
                MKV_DATA char  data_chars[21]   = "eiacoykvrhbsplmftdgw";
                MKV_DATA uint16_t data_weights[20] = {
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                    0x1612, // 0.086207 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // ati
            case 0x00697461:
            {
                MKV_DATA char  data_chars[4]   = "onl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atl
            case 0x006c7461:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atm
            case 0x006d7461:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atn
            case 0x006e7461:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ato
            case 0x006f7461:
            {
                MKV_DATA char  data_chars[6]   = "nwubt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // atq
            case 0x00717461:
            {
                return 'u';
            }
            break;

            // atr
            case 0x00727461:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ats
            case 0x00737461:
            {
                MKV_DATA char  data_chars[6]   = "ehlot";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // att
            case 0x00747461:
            {
                MKV_DATA char  data_chars[8]   = "oeilars";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // atu
            case 0x00757461:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atw
            case 0x00777461:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aty
            case 0x00797461:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // auc
            case 0x00637561:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aud
            case 0x00647561:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aug
            case 0x00677561:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf45d, // 0.954545 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // auk
            case 0x006b7561:
            {
                MKV_DATA char  data_chars[3]   = "me";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aul
            case 0x006c7561:
            {
                MKV_DATA char  data_chars[8]   = "dtkasvy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9c72, // 0.611111 
                    0x31c7, // 0.194444 
                    0x1555, // 0.083333 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // aun
            case 0x006e7561:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aup
            case 0x00707561:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aur
            case 0x00727561:
            {
                MKV_DATA char  data_chars[5]   = "isae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aus
            case 0x00737561:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ava
            case 0x00617661:
            {
                MKV_DATA char  data_chars[8]   = "ilcdgny";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7000, // 0.437500 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ave
            case 0x00657661:
            {
                MKV_DATA char  data_chars[6]   = "nrlye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9612, // 0.586207 
                    0x469f, // 0.275862 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // avi
            case 0x00697661:
            {
                MKV_DATA char  data_chars[10]   = "eldnotcsr";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // avo
            case 0x006f7661:
            {
                MKV_DATA char  data_chars[6]   = "cerun";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // avu
            case 0x00757661:
            {
                return 'l';
            }
            break;

            // awb
            case 0x00627761:
            {
                MKV_DATA char  data_chars[4]   = "oru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awd
            case 0x00647761:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awe
            case 0x00657761:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awf
            case 0x00667761:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awh
            case 0x00687761:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awi
            case 0x00697761:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awl
            case 0x006c7761:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awm
            case 0x006d7761:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aws
            case 0x00737761:
            {
                MKV_DATA char  data_chars[4]   = "bht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awt
            case 0x00747761:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awy
            case 0x00797761:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axa
            case 0x00617861:
            {
                MKV_DATA char  data_chars[3]   = "yn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axd
            case 0x00647861:
            {
                return 'a';
            }
            break;

            // axf
            case 0x00667861:
            {
                return 'i';
            }
            break;

            // axi
            case 0x00697861:
            {
                MKV_DATA char  data_chars[3]   = "eg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axo
            case 0x006f7861:
            {
                return 'b';
            }
            break;

            // axt
            case 0x00747861:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axw
            case 0x00777861:
            {
                return 'e';
            }
            break;

            // ayb
            case 0x00627961:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aye
            case 0x00657961:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayf
            case 0x00667961:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayg
            case 0x00677961:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayh
            case 0x00687961:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayi
            case 0x00697961:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayl
            case 0x006c7961:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aym
            case 0x006d7961:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayn
            case 0x006e7961:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayp
            case 0x00707961:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayr
            case 0x00727961:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ays
            case 0x00737961:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayt
            case 0x00747961:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayv
            case 0x00767961:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayw
            case 0x00777961:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aze
            case 0x00657a61:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // azi
            case 0x00697a61:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // a
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'b':
        {
            switch ( trigram_u32 )
            {
            // baa
            case 0x00616162:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bab
            case 0x00626162:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bac
            case 0x00636162:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bad
            case 0x00646162:
            {
                MKV_DATA char  data_chars[11]   = "necadlrsbi";
                MKV_DATA uint16_t data_weights[10] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bag
            case 0x00676162:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bai
            case 0x00696162:
            {
                MKV_DATA char  data_chars[5]   = "lnrg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7000, // 0.437500 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bak
            case 0x006b6162:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bal
            case 0x006c6162:
            {
                MKV_DATA char  data_chars[20]   = "lnmgeicdbaktfvoshqr";
                MKV_DATA uint16_t data_weights[19] = {
                    0x32c7, // 0.198347 
                    0x2615, // 0.148760 
                    0x23f8, // 0.140496 
                    0x1b81, // 0.107438 
                    0x10ed, // 0.066116 
                    0x0ecf, // 0.057851 
                    0x0cb2, // 0.049587 
                    0x0876, // 0.033058 
                    0x0876, // 0.033058 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // ban
            case 0x006e6162:
            {
                MKV_DATA char  data_chars[8]   = "kntcfae";
                MKV_DATA uint16_t data_weights[7] = {
                    0xcf73, // 0.810345 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bao
            case 0x006f6162:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bar
            case 0x00726162:
            {
                MKV_DATA char  data_chars[16]   = "rnabtdglcmsoevh";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4758, // 0.278689 
                    0x29f8, // 0.163934 
                    0x14fc, // 0.081967 
                    0x14fc, // 0.081967 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // bas
            case 0x00736162:
            {
                MKV_DATA char  data_chars[3]   = "t-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bat
            case 0x00746162:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bau
            case 0x00756162:
            {
                MKV_DATA char  data_chars[3]   = "cg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bay
            case 0x00796162:
            {
                MKV_DATA char  data_chars[3]   = "hm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bba
            case 0x00616262:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbe
            case 0x00656262:
            {
                MKV_DATA char  data_chars[4]   = "ryt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bbi
            case 0x00696262:
            {
                MKV_DATA char  data_chars[3]   = "eg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbo
            case 0x006f6262:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bde
            case 0x00656462:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bea
            case 0x00616562:
            {
                MKV_DATA char  data_chars[10]   = "tncrqludg";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5e51, // 0.368421 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // bec
            case 0x00636562:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bed
            case 0x00646562:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bee
            case 0x00656562:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // beg
            case 0x00676562:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bei
            case 0x00696562:
            {
                MKV_DATA char  data_chars[5]   = "tcnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bel
            case 0x006c6562:
            {
                MKV_DATA char  data_chars[9]   = "lshfmnvt";
                MKV_DATA uint16_t data_weights[8] = {
                    0xaaab, // 0.666667 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bem
            case 0x006d6562:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ben
            case 0x006e6562:
            {
                MKV_DATA char  data_chars[9]   = "tghnsmvd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // beo
            case 0x006f6562:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ber
            case 0x00726562:
            {
                MKV_DATA char  data_chars[17]   = "rtcdnlwvsmafeoyu";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3da1, // 0.240741 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // bes
            case 0x00736562:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bet
            case 0x00746562:
            {
                MKV_DATA char  data_chars[4]   = "hst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bev
            case 0x00766562:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bew
            case 0x00776562:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bey
            case 0x00796562:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bfo
            case 0x006f6662:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bha
            case 0x00616862:
            {
                MKV_DATA char  data_chars[8]   = "iglsrtc";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x4e39, // 0.305556 
                    0x238e, // 0.138889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bhe
            case 0x00656862:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhi
            case 0x00696862:
            {
                MKV_DATA char  data_chars[3]   = "gl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhn
            case 0x006e6862:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhr
            case 0x00726862:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhs
            case 0x00736862:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bht
            case 0x00746862:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhu
            case 0x00756862:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bie
            case 0x00656962:
            {
                MKV_DATA char  data_chars[5]   = "sldh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // big
            case 0x00676962:
            {
                MKV_DATA char  data_chars[4]   = "ght";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bil
            case 0x006c6962:
            {
                MKV_DATA char  data_chars[3]   = "bs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bim
            case 0x006d6962:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bin
            case 0x006e6962:
            {
                MKV_DATA char  data_chars[6]   = "gnvzd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bir
            case 0x00726962:
            {
                MKV_DATA char  data_chars[9]   = "knscdlgi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bis
            case 0x00736962:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bix
            case 0x00786962:
            {
                return 't';
            }
            break;

            // bki
            case 0x00696b62:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bla
            case 0x00616c62:
            {
                MKV_DATA char  data_chars[9]   = "icnredst";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5b1e, // 0.355932 
                    0x5b1e, // 0.355932 
                    0x15b2, // 0.084746 
                    0x115b, // 0.067797 
                    0x115b, // 0.067797 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ble
            case 0x00656c62:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bli
            case 0x00696c62:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // blo
            case 0x006f6c62:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // blu
            case 0x00756c62:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bly
            case 0x00796c62:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bne
            case 0x00656e62:
            {
                MKV_DATA char  data_chars[3]   = "s-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boa
            case 0x00616f62:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boc
            case 0x00636f62:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bod
            case 0x00646f62:
            {
                MKV_DATA char  data_chars[4]   = "day";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bog
            case 0x00676f62:
            {
                MKV_DATA char  data_chars[11]   = "ahsreglmnt";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // boh
            case 0x00686f62:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boi
            case 0x00696f62:
            {
                MKV_DATA char  data_chars[5]   = "sgdr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bok
            case 0x006b6f62:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bol
            case 0x006c6f62:
            {
                MKV_DATA char  data_chars[5]   = "eltd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bon
            case 0x006e6f62:
            {
                MKV_DATA char  data_chars[6]   = "nachk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // boo
            case 0x006f6f62:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boq
            case 0x00716f62:
            {
                return 'u';
            }
            break;

            // bor
            case 0x00726f62:
            {
                MKV_DATA char  data_chars[9]   = "rgnevdts";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bos
            case 0x00736f62:
            {
                MKV_DATA char  data_chars[3]   = "tw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf627, // 0.961538 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bot
            case 0x00746f62:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bou
            case 0x00756f62:
            {
                MKV_DATA char  data_chars[4]   = "snr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bow
            case 0x00776f62:
            {
                MKV_DATA char  data_chars[9]   = "ehilmrsd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // boy
            case 0x00796f62:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bra
            case 0x00617262:
            {
                MKV_DATA char  data_chars[12]   = "ecnixgbktao";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7b6e, // 0.482143 
                    0x2492, // 0.142857 
                    0x2000, // 0.125000 
                    0x16db, // 0.089286 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bre
            case 0x00657262:
            {
                MKV_DATA char  data_chars[9]   = "caiwxnvt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bri
            case 0x00697262:
            {
                MKV_DATA char  data_chars[6]   = "dgnac";
                MKV_DATA uint16_t data_weights[5] = {
                    0xca1b, // 0.789474 
                    0x23ee, // 0.140351 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bro
            case 0x006f7262:
            {
                MKV_DATA char  data_chars[13]   = "acuowxydgenr";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2c23, // 0.172414 
                    0x2c23, // 0.172414 
                    0x27b9, // 0.155172 
                    0x27b9, // 0.155172 
                    0x27b9, // 0.155172 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // bru
            case 0x00757262:
            {
                MKV_DATA char  data_chars[7]   = "ancier";
                MKV_DATA uint16_t data_weights[6] = {
                    0x50d8, // 0.315789 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bry
            case 0x00797262:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsd
            case 0x00647362:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsh
            case 0x00687362:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsn
            case 0x006e7362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bso
            case 0x006f7362:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bst
            case 0x00747362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bua
            case 0x00617562:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buc
            case 0x00637562:
            {
                MKV_DATA char  data_chars[4]   = "khc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x599a, // 0.350000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bug
            case 0x00677562:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bui
            case 0x00697562:
            {
                MKV_DATA char  data_chars[4]   = "elr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bul
            case 0x006c7562:
            {
                MKV_DATA char  data_chars[4]   = "dgl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bun
            case 0x006e7562:
            {
                MKV_DATA char  data_chars[12]   = "aenokcglmrd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bur
            case 0x00727562:
            {
                MKV_DATA char  data_chars[8]   = "ngrdltw";
                MKV_DATA uint16_t data_weights[7] = {
                    0xac23, // 0.672414 
                    0x3b96, // 0.232759 
                    0x0f73, // 0.060345 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bus
            case 0x00737562:
            {
                MKV_DATA char  data_chars[9]   = "htbadkln";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // but
            case 0x00747562:
            {
                MKV_DATA char  data_chars[4]   = "het";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bux
            case 0x00787562:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byr
            case 0x00727962:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byt
            case 0x00747962:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // b
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'c':
        {
            switch ( trigram_u32 )
            {
            // cab
            case 0x00626163:
            {
                MKV_DATA char  data_chars[4]   = "rho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cad
            case 0x00646163:
            {
                MKV_DATA char  data_chars[8]   = "adbzegh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cai
            case 0x00696163:
            {
                MKV_DATA char  data_chars[8]   = "rgntmdl";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb000, // 0.687500 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cal
            case 0x006c6163:
            {
                MKV_DATA char  data_chars[12]   = "dlaipvnbgft";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5a5a, // 0.352941 
                    0x43c4, // 0.264706 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // cam
            case 0x006d6163:
            {
                MKV_DATA char  data_chars[10]   = "bpuaomels";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x34b5, // 0.205882 
                    0x25a6, // 0.147059 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // can
            case 0x006e6163:
            {
                MKV_DATA char  data_chars[8]   = "osntadi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cao
            case 0x006f6163:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cap
            case 0x00706163:
            {
                MKV_DATA char  data_chars[4]   = "lpu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // car
            case 0x00726163:
            {
                MKV_DATA char  data_chars[20]   = "nrdtsmlfiagbveyhozw";
                MKV_DATA uint16_t data_weights[19] = {
                    0x3333, // 0.200000 
                    0x305b, // 0.188889 
                    0x16c1, // 0.088889 
                    0x16c1, // 0.088889 
                    0x13e9, // 0.077778 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // cas
            case 0x00736163:
            {
                MKV_DATA char  data_chars[8]   = "tsadghk";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb555, // 0.708333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cat
            case 0x00746163:
            {
                MKV_DATA char  data_chars[10]   = "hfsntcarl";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // cau
            case 0x00756163:
            {
                MKV_DATA char  data_chars[5]   = "lsnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cav
            case 0x00766163:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // caw
            case 0x00776163:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cbr
            case 0x00726263:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cca
            case 0x00616363:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ccl
            case 0x006c6363:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cco
            case 0x006f6363:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cdu
            case 0x00756463:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cea
            case 0x00616563:
            {
                MKV_DATA char  data_chars[5]   = "ntrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ceb
            case 0x00626563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ced
            case 0x00646563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cef
            case 0x00666563:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ceh
            case 0x00686563:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cek
            case 0x006b6563:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cel
            case 0x006c6563:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cem
            case 0x006d6563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cen
            case 0x006e6563:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ceo
            case 0x006f6563:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cer
            case 0x00726563:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ces
            case 0x00736563:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cet
            case 0x00746563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cew
            case 0x00776563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ch-
            case 0x002d6863:
            {
                MKV_DATA char  data_chars[3]   = "bk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cha
            case 0x00616863:
            {
                MKV_DATA char  data_chars[15]   = "nrlpiteowvzbch";
                MKV_DATA uint16_t data_weights[14] = {
                    0x53ef, // 0.327869 
                    0x4758, // 0.278689 
                    0x192e, // 0.098361 
                    0x12e3, // 0.073770 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0a7e, // 0.040984 
                    0x0432, // 0.016393 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // chb
            case 0x00626863:
            {
                MKV_DATA char  data_chars[6]   = "rueao";
                MKV_DATA uint16_t data_weights[5] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // chc
            case 0x00636863:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chd
            case 0x00646863:
            {
                MKV_DATA char  data_chars[5]   = "arho";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // che
            case 0x00656863:
            {
                MKV_DATA char  data_chars[13]   = "nrlswaoyeimp";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7bdf, // 0.483871 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // chf
            case 0x00666863:
            {
                MKV_DATA char  data_chars[5]   = "oair";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chg
            case 0x00676863:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chh
            case 0x00686863:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chi
            case 0x00696863:
            {
                MKV_DATA char  data_chars[8]   = "nelrsta";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6464, // 0.392157 
                    0x4646, // 0.274510 
                    0x3232, // 0.196078 
                    0x1414, // 0.078431 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // chk
            case 0x006b6863:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chl
            case 0x006c6863:
            {
                MKV_DATA char  data_chars[6]   = "aeyiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // chm
            case 0x006d6863:
            {
                MKV_DATA char  data_chars[6]   = "oauie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8788, // 0.529412 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // chn
            case 0x006e6863:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd794, // 0.842105 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cho
            case 0x006f6863:
            {
                MKV_DATA char  data_chars[9]   = "rnilsacm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // chp
            case 0x00706863:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chr
            case 0x00726863:
            {
                MKV_DATA char  data_chars[7]   = "iaeyou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x47ae, // 0.280000 
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // chs
            case 0x00736863:
            {
                MKV_DATA char  data_chars[5]   = "ifkl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cht
            case 0x00746863:
            {
                MKV_DATA char  data_chars[7]   = "eoyura";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7a6f, // 0.478261 
                    0x37a7, // 0.217391 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // chu
            case 0x00756863:
            {
                MKV_DATA char  data_chars[5]   = "lirv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chw
            case 0x00776863:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chy
            case 0x00796863:
            {
                MKV_DATA char  data_chars[5]   = "elrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cil
            case 0x006c6963:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cin
            case 0x006e6963:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cir
            case 0x00726963:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ck-
            case 0x002d6b63:
            {
                return 'f';
            }
            break;

            // cka
            case 0x00616b63:
            {
                MKV_DATA char  data_chars[8]   = "nlrditv";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ckb
            case 0x00626b63:
            {
                MKV_DATA char  data_chars[5]   = "urao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ckc
            case 0x00636b63:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckd
            case 0x00646b63:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cke
            case 0x00656b63:
            {
                MKV_DATA char  data_chars[4]   = "nrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ckf
            case 0x00666b63:
            {
                MKV_DATA char  data_chars[5]   = "oiua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ckg
            case 0x00676b63:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckh
            case 0x00686b63:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5a5a, // 0.352941 
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cki
            case 0x00696b63:
            {
                MKV_DATA char  data_chars[4]   = "ent";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ckl
            case 0x006c6b63:
            {
                MKV_DATA char  data_chars[6]   = "eaiuy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7943, // 0.473684 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckm
            case 0x006d6b63:
            {
                MKV_DATA char  data_chars[5]   = "aeou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ckn
            case 0x006e6b63:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckp
            case 0x00706b63:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckr
            case 0x00726b63:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cks
            case 0x00736b63:
            {
                MKV_DATA char  data_chars[6]   = "tbhil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckt
            case 0x00746b63:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckw
            case 0x00776b63:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cla
            case 0x00616c63:
            {
                MKV_DATA char  data_chars[12]   = "ctdiyrsbgou";
                MKV_DATA uint16_t data_weights[11] = {
                    0x42c8, // 0.260870 
                    0x26f5, // 0.152174 
                    0x2164, // 0.130435 
                    0x1bd3, // 0.108696 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // cle
            case 0x00656c63:
            {
                MKV_DATA char  data_chars[14]   = "iturlaspgefdv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4835, // 0.282051 
                    0x2df3, // 0.179487 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // cli
            case 0x00696c63:
            {
                MKV_DATA char  data_chars[9]   = "fabenouv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // clo
            case 0x006f6c63:
            {
                MKV_DATA char  data_chars[9]   = "viulscdg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // clu
            case 0x00756c63:
            {
                MKV_DATA char  data_chars[5]   = "ndei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cly
            case 0x00796c63:
            {
                MKV_DATA char  data_chars[4]   = "dnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cme
            case 0x00656d63:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cne
            case 0x00656e63:
            {
                MKV_DATA char  data_chars[3]   = "i-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cni
            case 0x00696e63:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cno
            case 0x006f6e63:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coa
            case 0x00616f63:
            {
                MKV_DATA char  data_chars[4]   = "tls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cob
            case 0x00626f63:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coc
            case 0x00636f63:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coi
            case 0x00696f63:
            {
                MKV_DATA char  data_chars[4]   = "lgr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // col
            case 0x006c6f63:
            {
                MKV_DATA char  data_chars[11]   = "lmditpsbhv";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4444, // 0.266667 
                    0x3bbc, // 0.233333 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // com
            case 0x006d6f63:
            {
                MKV_DATA char  data_chars[6]   = "erbim";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // con
            case 0x006e6f63:
            {
                MKV_DATA char  data_chars[10]   = "nodistceq";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // coo
            case 0x006f6f63:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cop
            case 0x00706f63:
            {
                MKV_DATA char  data_chars[4]   = "sil";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cor
            case 0x00726f63:
            {
                MKV_DATA char  data_chars[14]   = "rnstaekgfimdp";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4835, // 0.282051 
                    0x2df3, // 0.179487 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // cos
            case 0x00736f63:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cot
            case 0x00746f63:
            {
                MKV_DATA char  data_chars[8]   = "tshlvwb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cou
            case 0x00756f63:
            {
                MKV_DATA char  data_chars[7]   = "lrsbgp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x86bd, // 0.526316 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // cov
            case 0x00766f63:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cow
            case 0x00776f63:
            {
                MKV_DATA char  data_chars[7]   = "dilsac";
                MKV_DATA uint16_t data_weights[6] = {
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // cox
            case 0x00786f63:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coy
            case 0x00796f63:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cqu
            case 0x00757163:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cra
            case 0x00617263:
            {
                MKV_DATA char  data_chars[17]   = "inwbpgtovefdymsr";
                MKV_DATA uint16_t data_weights[16] = {
                    0xaca7, // 0.674419 
                    0x0ee2, // 0.058140 
                    0x0ee2, // 0.058140 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // cre
            case 0x00657263:
            {
                MKV_DATA char  data_chars[8]   = "aeigpsc";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cri
            case 0x00697263:
            {
                MKV_DATA char  data_chars[6]   = "enmac";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cro
            case 0x006f7263:
            {
                MKV_DATA char  data_chars[14]   = "sfimowaynvgtc";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6f4e, // 0.434783 
                    0x2164, // 0.130435 
                    0x19f9, // 0.101449 
                    0x1643, // 0.086957 
                    0x128d, // 0.072464 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // cru
            case 0x00757263:
            {
                MKV_DATA char  data_chars[6]   = "ldima";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cti
            case 0x00697463:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cto
            case 0x006f7463:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cua
            case 0x00617563:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cuc
            case 0x00637563:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cud
            case 0x00647563:
            {
                MKV_DATA char  data_chars[3]   = "bd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cuf
            case 0x00667563:
            {
                return 'f';
            }
            break;

            // cui
            case 0x00697563:
            {
                MKV_DATA char  data_chars[5]   = "dkln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cul
            case 0x006c7563:
            {
                MKV_DATA char  data_chars[11]   = "ltrsbcdmkn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // cum
            case 0x006d7563:
            {
                MKV_DATA char  data_chars[7]   = "mlntbi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // cun
            case 0x006e7563:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cup
            case 0x00707563:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cur
            case 0x00727563:
            {
                MKV_DATA char  data_chars[4]   = "rsv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cus
            case 0x00737563:
            {
                MKV_DATA char  data_chars[3]   = "hb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cut
            case 0x00747563:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cyr
            case 0x00727963:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // c
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'd':
        {
            switch ( trigram_u32 )
            {
            // d-e
            case 0x00652d64:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dab
            case 0x00626164:
            {
                MKV_DATA char  data_chars[5]   = "ahri";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dac
            case 0x00636164:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dad
            case 0x00646164:
            {
                MKV_DATA char  data_chars[3]   = "h-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dai
            case 0x00696164:
            {
                MKV_DATA char  data_chars[5]   = "lgrn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dal
            case 0x006c6164:
            {
                MKV_DATA char  data_chars[20]   = "emglrcbshantifwqdkv";
                MKV_DATA uint16_t data_weights[19] = {
                    0x8985, // 0.537190 
                    0x1528, // 0.082645 
                    0x0a94, // 0.041322 
                    0x0a94, // 0.041322 
                    0x0a94, // 0.041322 
                    0x0876, // 0.033058 
                    0x0876, // 0.033058 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // dam
            case 0x006d6164:
            {
                MKV_DATA char  data_chars[5]   = "psbh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dan
            case 0x006e6164:
            {
                MKV_DATA char  data_chars[6]   = "eadns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dar
            case 0x00726164:
            {
                MKV_DATA char  data_chars[11]   = "rntyagkdvu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // dav
            case 0x00766164:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // daw
            case 0x00776164:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dba
            case 0x00616264:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbe
            case 0x00656264:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbi
            case 0x00696264:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbl
            case 0x006c6264:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbo
            case 0x006f6264:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbr
            case 0x00726264:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbu
            case 0x00756264:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dca
            case 0x00616364:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dch
            case 0x00686364:
            {
                MKV_DATA char  data_chars[5]   = "oruy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dcl
            case 0x006c6364:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dco
            case 0x006f6364:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dda
            case 0x00616464:
            {
                MKV_DATA char  data_chars[6]   = "cblmn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dde
            case 0x00656464:
            {
                MKV_DATA char  data_chars[4]   = "rnl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ddi
            case 0x00696464:
            {
                MKV_DATA char  data_chars[6]   = "necds";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ddl
            case 0x006c6464:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddo
            case 0x006f6464:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddr
            case 0x00726464:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dds
            case 0x00736464:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddy
            case 0x00796464:
            {
                MKV_DATA char  data_chars[3]   = "km";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dea
            case 0x00616564:
            {
                MKV_DATA char  data_chars[5]   = "nrsb";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc3c4, // 0.764706 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // deb
            case 0x00626564:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dec
            case 0x00636564:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ded
            case 0x00646564:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dee
            case 0x00656564:
            {
                MKV_DATA char  data_chars[4]   = "rnb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dek
            case 0x006b6564:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // del
            case 0x006c6564:
            {
                MKV_DATA char  data_chars[6]   = "losvn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dem
            case 0x006d6564:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // den
            case 0x006e6564:
            {
                MKV_DATA char  data_chars[13]   = "sndhebtoamkp";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5075, // 0.314286 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // deo
            case 0x006f6564:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dep
            case 0x00706564:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // der
            case 0x00726564:
            {
                MKV_DATA char  data_chars[15]   = "sbhlytmrcwnveg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x2be3, // 0.171429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // des
            case 0x00736564:
            {
                MKV_DATA char  data_chars[7]   = "tpswdk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // deu
            case 0x00756564:
            {
                MKV_DATA char  data_chars[3]   = "cg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dev
            case 0x00766564:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dew
            case 0x00776564:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfa
            case 0x00616664:
            {
                MKV_DATA char  data_chars[3]   = "uc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfe
            case 0x00656664:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfi
            case 0x00696664:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfo
            case 0x006f6664:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dga
            case 0x00616764:
            {
                MKV_DATA char  data_chars[4]   = "ryt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dge
            case 0x00656764:
            {
                MKV_DATA char  data_chars[9]   = "rtfnwbhl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // dgi
            case 0x00696764:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgo
            case 0x006f6764:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgr
            case 0x00726764:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dha
            case 0x00616864:
            {
                MKV_DATA char  data_chars[9]   = "lmvinsur";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3cf4, // 0.238095 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // dhe
            case 0x00656864:
            {
                MKV_DATA char  data_chars[4]   = "ais";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dhg
            case 0x00676864:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dhi
            case 0x00696864:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dhl
            case 0x006c6864:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dho
            case 0x006f6864:
            {
                MKV_DATA char  data_chars[5]   = "uprl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dht
            case 0x00746864:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dia
            case 0x00616964:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dic
            case 0x00636964:
            {
                MKV_DATA char  data_chars[5]   = "haek";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // did
            case 0x00646964:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // die
            case 0x00656964:
            {
                MKV_DATA char  data_chars[6]   = "shabw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dif
            case 0x00666964:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dig
            case 0x00676964:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dik
            case 0x006b6964:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dil
            case 0x006c6964:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dim
            case 0x006d6964:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // din
            case 0x006e6964:
            {
                MKV_DATA char  data_chars[12]   = "geniadbtvls";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5a5a, // 0.352941 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // dip
            case 0x00706964:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // diq
            case 0x00716964:
            {
                return 'u';
            }
            break;

            // dir
            case 0x00726964:
            {
                MKV_DATA char  data_chars[6]   = "aelnr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dis
            case 0x00736964:
            {
                MKV_DATA char  data_chars[4]   = "thc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // div
            case 0x00766964:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // djo
            case 0x006f6a64:
            {
                MKV_DATA char  data_chars[3]   = "hp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dke
            case 0x00656b64:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dla
            case 0x00616c64:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dle
            case 0x00656c64:
            {
                MKV_DATA char  data_chars[13]   = "smrbhfdqtwye";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // dli
            case 0x00696c64:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dlo
            case 0x006f6c64:
            {
                MKV_DATA char  data_chars[3]   = "ct";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dlu
            case 0x00756c64:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dma
            case 0x00616d64:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dme
            case 0x00656d64:
            {
                MKV_DATA char  data_chars[5]   = "nael";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dmh
            case 0x00686d64:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dmi
            case 0x00696d64:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dmo
            case 0x006f6d64:
            {
                MKV_DATA char  data_chars[5]   = "nslr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dmu
            case 0x00756d64:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dmy
            case 0x00796d64:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dna
            case 0x00616e64:
            {
                MKV_DATA char  data_chars[8]   = "gbsdfmt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dne
            case 0x00656e64:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dni
            case 0x00696e64:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dno
            case 0x006f6e64:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dob
            case 0x00626f64:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // doc
            case 0x00636f64:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // doe
            case 0x00656f64:
            {
                return 's';
            }
            break;

            // doi
            case 0x00696f64:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dol
            case 0x006c6f64:
            {
                MKV_DATA char  data_chars[3]   = "lp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // don
            case 0x006e6f64:
            {
                MKV_DATA char  data_chars[8]   = "anslbhi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // doo
            case 0x006f6f64:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dor
            case 0x00726f64:
            {
                MKV_DATA char  data_chars[5]   = "rena";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dou
            case 0x00756f64:
            {
                MKV_DATA char  data_chars[4]   = "nrg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9d8a, // 0.615385 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dov
            case 0x00766f64:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dow
            case 0x00776f64:
            {
                MKV_DATA char  data_chars[10]   = "insarbfhm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // doy
            case 0x00796f64:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpa
            case 0x00617064:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpe
            case 0x00657064:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpo
            case 0x006f7064:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dra
            case 0x00617264:
            {
                MKV_DATA char  data_chars[8]   = "cidfklm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dre
            case 0x00657264:
            {
                MKV_DATA char  data_chars[7]   = "nwuagm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dri
            case 0x00697264:
            {
                MKV_DATA char  data_chars[10]   = "emgdnpsac";
                MKV_DATA uint16_t data_weights[9] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // dro
            case 0x006f7264:
            {
                MKV_DATA char  data_chars[7]   = "nscmai";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dru
            case 0x00757264:
            {
                MKV_DATA char  data_chars[4]   = "mil";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe93f, // 0.911111 
                    0x1111, // 0.066667 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dry
            case 0x00797264:
            {
                MKV_DATA char  data_chars[7]   = "nbmdhl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dsa
            case 0x00617364:
            {
                MKV_DATA char  data_chars[3]   = "ry";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsc
            case 0x00637364:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dse
            case 0x00657364:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsh
            case 0x00687364:
            {
                MKV_DATA char  data_chars[5]   = "oiae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dsi
            case 0x00697364:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsk
            case 0x006b7364:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsl
            case 0x006c7364:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dsm
            case 0x006d7364:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dso
            case 0x006f7364:
            {
                MKV_DATA char  data_chars[3]   = "un";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dst
            case 0x00747364:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsv
            case 0x00767364:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsw
            case 0x00777364:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dta
            case 0x00617464:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dte
            case 0x00657464:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dto
            case 0x006f7464:
            {
                MKV_DATA char  data_chars[5]   = "wenr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dtu
            case 0x00757464:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dua
            case 0x00617564:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dub
            case 0x00627564:
            {
                MKV_DATA char  data_chars[4]   = "hbf";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // duc
            case 0x00637564:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dud
            case 0x00647564:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duf
            case 0x00667564:
            {
                return 'f';
            }
            break;

            // dui
            case 0x00697564:
            {
                MKV_DATA char  data_chars[4]   = "rse";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dul
            case 0x006c7564:
            {
                MKV_DATA char  data_chars[4]   = "lno";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dum
            case 0x006d7564:
            {
                MKV_DATA char  data_chars[5]   = "bfcg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dun
            case 0x006e7564:
            {
                MKV_DATA char  data_chars[19]   = "dbacntsiogkrumlefv";
                MKV_DATA uint16_t data_weights[18] = {
                    0x25ed, // 0.148148 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // dur
            case 0x00727564:
            {
                MKV_DATA char  data_chars[7]   = "nirhoy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dut
            case 0x00747564:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dva
            case 0x00617664:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dve
            case 0x00657664:
            {
                MKV_DATA char  data_chars[4]   = "rye";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dvi
            case 0x00697664:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dvo
            case 0x006f7664:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwa
            case 0x00617764:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwe
            case 0x00657764:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwh
            case 0x00687764:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwi
            case 0x00697764:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwo
            case 0x006f7764:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dy-
            case 0x002d7964:
            {
                MKV_DATA char  data_chars[3]   = "yd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyb
            case 0x00627964:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyc
            case 0x00637964:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyd
            case 0x00647964:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dye
            case 0x00657964:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyg
            case 0x00677964:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyh
            case 0x00687964:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyk
            case 0x006b7964:
            {
                MKV_DATA char  data_chars[4]   = "ein";
                MKV_DATA uint16_t data_weights[3] = {
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dym
            case 0x006d7964:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyn
            case 0x006e7964:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyo
            case 0x006f7964:
            {
                MKV_DATA char  data_chars[3]   = "ck";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyr
            case 0x00727964:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dys
            case 0x00737964:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyv
            case 0x00767964:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyw
            case 0x00777964:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dze
            case 0x00657a64:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dzo
            case 0x006f7a64:
            {
                return 'w';
            }
            break;

            } // switch _u32
        } // d
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'e':
        {
            switch ( trigram_u32 )
            {
            // e-h
            case 0x00682d65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // e-t
            case 0x00742d65:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eab
            case 0x00626165:
            {
                MKV_DATA char  data_chars[4]   = "hor";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eac
            case 0x00636165:
            {
                MKV_DATA char  data_chars[6]   = "halkr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ead
            case 0x00646165:
            {
                MKV_DATA char  data_chars[8]   = "aoshewb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x47ae, // 0.280000 
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // eaf
            case 0x00666165:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eag
            case 0x00676165:
            {
                MKV_DATA char  data_chars[5]   = "aloi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eak
            case 0x006b6165:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eal
            case 0x006c6165:
            {
                MKV_DATA char  data_chars[4]   = "ait";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eam
            case 0x006d6165:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ean
            case 0x006e6165:
            {
                MKV_DATA char  data_chars[10]   = "saniogbcf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // eap
            case 0x00706165:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eaq
            case 0x00716165:
            {
                return 'u';
            }
            break;

            // ear
            case 0x00726165:
            {
                MKV_DATA char  data_chars[11]   = "nrsyltgioq";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4fa5, // 0.311111 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x16c1, // 0.088889 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // eas
            case 0x00736165:
            {
                MKV_DATA char  data_chars[10]   = "tckoadihs";
                MKV_DATA uint16_t data_weights[9] = {
                    0x9746, // 0.590909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // eat
            case 0x00746165:
            {
                MKV_DATA char  data_chars[5]   = "hotl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb216, // 0.695652 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eau
            case 0x00756165:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eav
            case 0x00766165:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eaw
            case 0x00776165:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eba
            case 0x00616265:
            {
                MKV_DATA char  data_chars[5]   = "nytr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ebe
            case 0x00656265:
            {
                MKV_DATA char  data_chars[4]   = "rgi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ebi
            case 0x00696265:
            {
                MKV_DATA char  data_chars[3]   = "eg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebl
            case 0x006c6265:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebo
            case 0x006f6265:
            {
                MKV_DATA char  data_chars[5]   = "sgit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ebr
            case 0x00726265:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ebs
            case 0x00736265:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebu
            case 0x00756265:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eby
            case 0x00796265:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eca
            case 0x00616365:
            {
                MKV_DATA char  data_chars[4]   = "ris";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ecc
            case 0x00636365:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ech
            case 0x00686365:
            {
                MKV_DATA char  data_chars[7]   = "atuwim";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eck
            case 0x006b6365:
            {
                MKV_DATA char  data_chars[4]   = "fmr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ecl
            case 0x006c6365:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eco
            case 0x006f6365:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ecr
            case 0x00726365:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eda
            case 0x00616465:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edb
            case 0x00626465:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edd
            case 0x00646465:
            {
                MKV_DATA char  data_chars[7]   = "eliaor";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ede
            case 0x00656465:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edf
            case 0x00666465:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edg
            case 0x00676465:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edh
            case 0x00686465:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edi
            case 0x00696465:
            {
                MKV_DATA char  data_chars[5]   = "nekr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // edl
            case 0x006c6465:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edm
            case 0x006d6465:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edn
            case 0x006e6465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edo
            case 0x006f6465:
            {
                MKV_DATA char  data_chars[4]   = "nor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edp
            case 0x00706465:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edr
            case 0x00726465:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eds
            case 0x00736465:
            {
                MKV_DATA char  data_chars[4]   = "mcl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edu
            case 0x00756465:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edw
            case 0x00776465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edy
            case 0x00796465:
            {
                MKV_DATA char  data_chars[3]   = "k-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edz
            case 0x007a6465:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eea
            case 0x00616565:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eeb
            case 0x00626565:
            {
                MKV_DATA char  data_chars[5]   = "lora";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eec
            case 0x00636565:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eed
            case 0x00646565:
            {
                MKV_DATA char  data_chars[5]   = "sdhi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eeh
            case 0x00686565:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eek
            case 0x006b6565:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eel
            case 0x006c6565:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eem
            case 0x006d6565:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // een
            case 0x006e6565:
            {
                MKV_DATA char  data_chars[17]   = "slfhbiywdgrnemoz";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3a84, // 0.228571 
                    0x2492, // 0.142857 
                    0x1d42, // 0.114286 
                    0x1d42, // 0.114286 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // eep
            case 0x00706565:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eer
            case 0x00726565:
            {
                MKV_DATA char  data_chars[3]   = "im";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ees
            case 0x00736565:
            {
                MKV_DATA char  data_chars[6]   = "wehlt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eet
            case 0x00746565:
            {
                MKV_DATA char  data_chars[4]   = "ohi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // efa
            case 0x00616665:
            {
                MKV_DATA char  data_chars[4]   = "urc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // efe
            case 0x00656665:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eff
            case 0x00666665:
            {
                MKV_DATA char  data_chars[4]   = "ile";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // efi
            case 0x00696665:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efl
            case 0x006c6665:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efo
            case 0x006f6665:
            {
                MKV_DATA char  data_chars[4]   = "rlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // efs
            case 0x00736665:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ega
            case 0x00616765:
            {
                MKV_DATA char  data_chars[5]   = "inrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ege
            case 0x00656765:
            {
                MKV_DATA char  data_chars[3]   = "dr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egg
            case 0x00676765:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egh
            case 0x00686765:
            {
                MKV_DATA char  data_chars[3]   = "o-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egi
            case 0x00696765:
            {
                MKV_DATA char  data_chars[4]   = "lev";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // egl
            case 0x006c6765:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ego
            case 0x006f6765:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egr
            case 0x00726765:
            {
                MKV_DATA char  data_chars[4]   = "aeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eha
            case 0x00616865:
            {
                MKV_DATA char  data_chars[4]   = "luv";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ehe
            case 0x00656865:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ehi
            case 0x00696865:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xec4f, // 0.923077 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eho
            case 0x006f6865:
            {
                MKV_DATA char  data_chars[4]   = "upl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ehu
            case 0x00756865:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eib
            case 0x00626965:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eic
            case 0x00636965:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eif
            case 0x00666965:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eig
            case 0x00676965:
            {
                MKV_DATA char  data_chars[5]   = "helr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eik
            case 0x006b6965:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eil
            case 0x006c6965:
            {
                MKV_DATA char  data_chars[9]   = "sldeatho";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ein
            case 0x006e6965:
            {
                MKV_DATA char  data_chars[8]   = "naceiml";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // eir
            case 0x00726965:
            {
                MKV_DATA char  data_chars[4]   = "ice";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eis
            case 0x00736965:
            {
                MKV_DATA char  data_chars[9]   = "hilsgktd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eit
            case 0x00746965:
            {
                MKV_DATA char  data_chars[5]   = "hfoe";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd794, // 0.842105 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eiv
            case 0x00766965:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eiw
            case 0x00776965:
            {
                return 'i';
            }
            break;

            // ekh
            case 0x00686b65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eki
            case 0x00696b65:
            {
                MKV_DATA char  data_chars[4]   = "rlm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ekn
            case 0x006e6b65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // el-
            case 0x002d6c65:
            {
                return 'c';
            }
            break;

            // ela
            case 0x00616c65:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x89d9, // 0.538462 
                    0x7627, // 0.461538 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elb
            case 0x00626c65:
            {
                MKV_DATA char  data_chars[6]   = "ouyae";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eld
            case 0x00646c65:
            {
                MKV_DATA char  data_chars[9]   = "serhiaby";
                MKV_DATA uint16_t data_weights[8] = {
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ele
            case 0x00656c65:
            {
                MKV_DATA char  data_chars[4]   = "enr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elf
            case 0x00666c65:
            {
                MKV_DATA char  data_chars[4]   = "oah";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elg
            case 0x00676c65:
            {
                MKV_DATA char  data_chars[4]   = "iou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elh
            case 0x00686c65:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eli
            case 0x00696c65:
            {
                MKV_DATA char  data_chars[8]   = "xabdegv";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // elk
            case 0x006b6c65:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ell
            case 0x006c6c65:
            {
                MKV_DATA char  data_chars[13]   = "asioyebhdtwf";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3cf4, // 0.238095 
                    0x3cf4, // 0.238095 
                    0x2cb3, // 0.174603 
                    0x1c72, // 0.111111 
                    0x1041, // 0.063492 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // elm
            case 0x006d6c65:
            {
                MKV_DATA char  data_chars[4]   = "obs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eln
            case 0x006e6c65:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elo
            case 0x006f6c65:
            {
                MKV_DATA char  data_chars[5]   = "acnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // elp
            case 0x00706c65:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elr
            case 0x00726c65:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // els
            case 0x00736c65:
            {
                MKV_DATA char  data_chars[5]   = "toer";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // elt
            case 0x00746c65:
            {
                MKV_DATA char  data_chars[4]   = "oyn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elu
            case 0x00756c65:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elv
            case 0x00766c65:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elw
            case 0x00776c65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elz
            case 0x007a6c65:
            {
                return 'i';
            }
            break;

            // ema
            case 0x00616d65:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emb
            case 0x00626d65:
            {
                MKV_DATA char  data_chars[4]   = "lao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eme
            case 0x00656d65:
            {
                MKV_DATA char  data_chars[4]   = "nrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // emi
            case 0x00696d65:
            {
                MKV_DATA char  data_chars[5]   = "lnrm";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // emn
            case 0x006e6d65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emo
            case 0x006f6d65:
            {
                MKV_DATA char  data_chars[4]   = "run";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // emp
            case 0x00706d65:
            {
                MKV_DATA char  data_chars[5]   = "lhit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // emr
            case 0x00726d65:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ems
            case 0x00736d65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emu
            case 0x00756d65:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emy
            case 0x00796d65:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ena
            case 0x00616e65:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enb
            case 0x00626e65:
            {
                MKV_DATA char  data_chars[7]   = "aeruol";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // enc
            case 0x00636e65:
            {
                MKV_DATA char  data_chars[5]   = "aroe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // end
            case 0x00646e65:
            {
                MKV_DATA char  data_chars[10]   = "eaorysuim";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ene
            case 0x00656e65:
            {
                MKV_DATA char  data_chars[8]   = "snrtglo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // enf
            case 0x00666e65:
            {
                MKV_DATA char  data_chars[6]   = "oaire";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eng
            case 0x00676e65:
            {
                MKV_DATA char  data_chars[4]   = "aer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enh
            case 0x00686e65:
            {
                MKV_DATA char  data_chars[6]   = "oaeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eni
            case 0x00696e65:
            {
                MKV_DATA char  data_chars[9]   = "sncefglt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6969, // 0.411765 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // enk
            case 0x006b6e65:
            {
                MKV_DATA char  data_chars[4]   = "ine";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enl
            case 0x006c6e65:
            {
                MKV_DATA char  data_chars[6]   = "oeaiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // enm
            case 0x006d6e65:
            {
                MKV_DATA char  data_chars[4]   = "oau";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enn
            case 0x006e6e65:
            {
                MKV_DATA char  data_chars[6]   = "eyaio";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4a53, // 0.290323 
                    0x4a53, // 0.290323 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eno
            case 0x006f6e65:
            {
                MKV_DATA char  data_chars[5]   = "cgrv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // enp
            case 0x00706e65:
            {
                MKV_DATA char  data_chars[4]   = "aor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enr
            case 0x00726e65:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ens
            case 0x00736e65:
            {
                MKV_DATA char  data_chars[11]   = "tichfwblag";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3e10, // 0.242424 
                    0x2e8c, // 0.181818 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ent
            case 0x00746e65:
            {
                MKV_DATA char  data_chars[11]   = "rioaeyhslp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x39ce, // 0.225806 
                    0x318c, // 0.193548 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // enu
            case 0x00756e65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // env
            case 0x00766e65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enw
            case 0x00776e65:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enz
            case 0x007a6e65:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eob
            case 0x00626f65:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eoc
            case 0x00636f65:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eog
            case 0x00676f65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eoi
            case 0x00696f65:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eol
            case 0x006c6f65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eom
            case 0x006d6f65:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eon
            case 0x006e6f65:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eor
            case 0x00726f65:
            {
                MKV_DATA char  data_chars[8]   = "nogltai";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // eos
            case 0x00736f65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eou
            case 0x00756f65:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epa
            case 0x00617065:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epd
            case 0x00647065:
            {
                return 'o';
            }
            break;

            // eph
            case 0x00687065:
            {
                MKV_DATA char  data_chars[5]   = "iaeu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // epk
            case 0x006b7065:
            {
                return 'i';
            }
            break;

            // epo
            case 0x006f7065:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epp
            case 0x00707065:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epw
            case 0x00777065:
            {
                return 'o';
            }
            break;

            // equ
            case 0x00757165:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // era
            case 0x00617265:
            {
                MKV_DATA char  data_chars[10]   = "rilnsybvw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4dea, // 0.304348 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // erb
            case 0x00627265:
            {
                MKV_DATA char  data_chars[7]   = "uraeio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erc
            case 0x00637265:
            {
                MKV_DATA char  data_chars[8]   = "halrueo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x71c7, // 0.444444 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // erd
            case 0x00647265:
            {
                MKV_DATA char  data_chars[5]   = "aeor";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ere
            case 0x00657265:
            {
                MKV_DATA char  data_chars[6]   = "sdyfw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // erf
            case 0x00667265:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // erg
            case 0x00677265:
            {
                MKV_DATA char  data_chars[7]   = "uaoeli";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erh
            case 0x00687265:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eri
            case 0x00697265:
            {
                MKV_DATA char  data_chars[10]   = "ngdevblok";
                MKV_DATA uint16_t data_weights[9] = {
                    0x51ec, // 0.320000 
                    0x3d71, // 0.240000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // erk
            case 0x006b7265:
            {
                MKV_DATA char  data_chars[7]   = "iehlna";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erl
            case 0x006c7265:
            {
                MKV_DATA char  data_chars[7]   = "eaoiuy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erm
            case 0x006d7265:
            {
                MKV_DATA char  data_chars[6]   = "ioual";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ern
            case 0x006e7265:
            {
                MKV_DATA char  data_chars[7]   = "ieaohy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6319, // 0.387097 
                    0x5295, // 0.322581 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ero
            case 0x006f7265:
            {
                MKV_DATA char  data_chars[5]   = "nwam";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // erp
            case 0x00707265:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // erq
            case 0x00717265:
            {
                return 'u';
            }
            break;

            // err
            case 0x00727265:
            {
                MKV_DATA char  data_chars[6]   = "yaoie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8aab, // 0.541667 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x1aab, // 0.104167 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ers
            case 0x00737265:
            {
                MKV_DATA char  data_chars[12]   = "thialwobkny";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x1c72, // 0.111111 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ert
            case 0x00747265:
            {
                MKV_DATA char  data_chars[6]   = "oyhrs";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc190, // 0.756098 
                    0x1f38, // 0.121951 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eru
            case 0x00757265:
            {
                MKV_DATA char  data_chars[4]   = "grt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erv
            case 0x00767265:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // erw
            case 0x00777265:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ery
            case 0x00797265:
            {
                MKV_DATA char  data_chars[3]   = "t-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esa
            case 0x00617365:
            {
                MKV_DATA char  data_chars[3]   = "uy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esb
            case 0x00627365:
            {
                MKV_DATA char  data_chars[3]   = "ui";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esc
            case 0x00637365:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esd
            case 0x00647365:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ese
            case 0x00657365:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esf
            case 0x00667365:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esg
            case 0x00677365:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esh
            case 0x00687365:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6276, // 0.384615 
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esi
            case 0x00697365:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esk
            case 0x006b7365:
            {
                MKV_DATA char  data_chars[9]   = "uabdefgi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // esl
            case 0x006c7365:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esm
            case 0x006d7365:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esn
            case 0x006e7365:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eso
            case 0x006f7365:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esp
            case 0x00707365:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esr
            case 0x00727365:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ess
            case 0x00737365:
            {
                MKV_DATA char  data_chars[10]   = "iaehotfwl";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // est
            case 0x00747365:
            {
                MKV_DATA char  data_chars[14]   = "oearfihwsbqpm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6f97, // 0.435897 
                    0x313b, // 0.192308 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // esw
            case 0x00777365:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eta
            case 0x00617465:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ete
            case 0x00657465:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etf
            case 0x00667465:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eth
            case 0x00687465:
            {
                MKV_DATA char  data_chars[9]   = "eialmovy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9365, // 0.575758 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eti
            case 0x00697465:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etl
            case 0x006c7465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etn
            case 0x006e7465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eto
            case 0x006f7465:
            {
                MKV_DATA char  data_chars[7]   = "nwbfpu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x97b4, // 0.592593 
                    0x425f, // 0.259259 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // etr
            case 0x00727465:
            {
                MKV_DATA char  data_chars[4]   = "aie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ets
            case 0x00737465:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ett
            case 0x00747465:
            {
                MKV_DATA char  data_chars[8]   = "elirsya";
                MKV_DATA uint16_t data_weights[7] = {
                    0x70f1, // 0.441176 
                    0x34b5, // 0.205882 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // etu
            case 0x00757465:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // euc
            case 0x00637565:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eug
            case 0x00677565:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eum
            case 0x006d7565:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eup
            case 0x00707565:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eur
            case 0x00727565:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eva
            case 0x00617665:
            {
                MKV_DATA char  data_chars[5]   = "nlyc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eve
            case 0x00657665:
            {
                MKV_DATA char  data_chars[4]   = "nrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb000, // 0.687500 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // evi
            case 0x00697665:
            {
                MKV_DATA char  data_chars[4]   = "oeg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // evo
            case 0x006f7665:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // evu
            case 0x00757665:
            {
                return 'l';
            }
            break;

            // ewa
            case 0x00617765:
            {
                MKV_DATA char  data_chars[5]   = "ryln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ewb
            case 0x00627765:
            {
                MKV_DATA char  data_chars[5]   = "iaru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ewc
            case 0x00637765:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewe
            case 0x00657765:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewf
            case 0x00667765:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewg
            case 0x00677765:
            {
                return 'a';
            }
            break;

            // ewh
            case 0x00687765:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewi
            case 0x00697765:
            {
                MKV_DATA char  data_chars[4]   = "cns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewl
            case 0x006c7765:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewm
            case 0x006d7765:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewo
            case 0x006f7765:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewp
            case 0x00707765:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ews
            case 0x00737765:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewt
            case 0x00747765:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exa
            case 0x00617865:
            {
                return 'n';
            }
            break;

            // exn
            case 0x006e7865:
            {
                return 'a';
            }
            break;

            // eya
            case 0x00617965:
            {
                MKV_DATA char  data_chars[3]   = "ci";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyb
            case 0x00627965:
            {
                MKV_DATA char  data_chars[4]   = "aru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eyd
            case 0x00647965:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eye
            case 0x00657965:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyh
            case 0x00687965:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyk
            case 0x006b7965:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyl
            case 0x006c7965:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyn
            case 0x006e7965:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyr
            case 0x00727965:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eys
            case 0x00737965:
            {
                MKV_DATA char  data_chars[4]   = "dmt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eyw
            case 0x00777965:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // e
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'f':
        {
            switch ( trigram_u32 )
            {
            // fac
            case 0x00636166:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fai
            case 0x00696166:
            {
                MKV_DATA char  data_chars[5]   = "rcfl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fal
            case 0x006c6166:
            {
                MKV_DATA char  data_chars[7]   = "laknsd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // fan
            case 0x006e6166:
            {
                MKV_DATA char  data_chars[6]   = "msaek";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // far
            case 0x00726166:
            {
                MKV_DATA char  data_chars[9]   = "rmntygil";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // fas
            case 0x00736166:
            {
                MKV_DATA char  data_chars[6]   = "alnsk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // fat
            case 0x00746166:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fau
            case 0x00756166:
            {
                MKV_DATA char  data_chars[5]   = "lcgn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fbu
            case 0x00756266:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fea
            case 0x00616566:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fec
            case 0x00636566:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fee
            case 0x00656566:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fel
            case 0x006c6566:
            {
                MKV_DATA char  data_chars[3]   = "d-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fen
            case 0x006e6566:
            {
                MKV_DATA char  data_chars[4]   = "wdt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // feo
            case 0x006f6566:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fer
            case 0x00726566:
            {
                MKV_DATA char  data_chars[7]   = "nrgims";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6c4f, // 0.423077 
                    0x6276, // 0.384615 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // fes
            case 0x00736566:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fet
            case 0x00746566:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // feu
            case 0x00756566:
            {
                MKV_DATA char  data_chars[3]   = "gs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffa
            case 0x00616666:
            {
                MKV_DATA char  data_chars[4]   = "tnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ffb
            case 0x00626666:
            {
                return 'u';
            }
            break;

            // ffe
            case 0x00656666:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffi
            case 0x00696666:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffl
            case 0x006c6666:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffn
            case 0x006e6666:
            {
                return 'o';
            }
            break;

            // ffo
            case 0x006f6666:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffs
            case 0x00736666:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fft
            case 0x00746666:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffu
            case 0x00756666:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fha
            case 0x00616866:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fhi
            case 0x00696866:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fho
            case 0x006f6866:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fhu
            case 0x00756866:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fic
            case 0x00636966:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fid
            case 0x00646966:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fie
            case 0x00656966:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfce1, // 0.987805 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fif
            case 0x00666966:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fil
            case 0x006c6966:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fin
            case 0x006e6966:
            {
                MKV_DATA char  data_chars[10]   = "dntasgzlc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // fio
            case 0x006f6966:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fir
            case 0x00726966:
            {
                MKV_DATA char  data_chars[5]   = "trsh";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fis
            case 0x00736966:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fiu
            case 0x00756966:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fiv
            case 0x00766966:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fla
            case 0x00616c66:
            {
                MKV_DATA char  data_chars[4]   = "tds";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fle
            case 0x00656c66:
            {
                MKV_DATA char  data_chars[10]   = "meiycotud";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // flo
            case 0x006f6c66:
            {
                MKV_DATA char  data_chars[5]   = "drab";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // flu
            case 0x00756c66:
            {
                MKV_DATA char  data_chars[5]   = "cgks";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fno
            case 0x006f6e66:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foc
            case 0x00636f66:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fod
            case 0x00646f66:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fof
            case 0x00666f66:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fog
            case 0x00676f66:
            {
                MKV_DATA char  data_chars[4]   = "orw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // foi
            case 0x00696f66:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fol
            case 0x006c6f66:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foo
            case 0x006f6f66:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf4df, // 0.956522 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // for
            case 0x00726f66:
            {
                MKV_DATA char  data_chars[11]   = "dtgremsbfn";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb287, // 0.697368 
                    0x21af, // 0.131579 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fou
            case 0x00756f66:
            {
                MKV_DATA char  data_chars[4]   = "rnl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fow
            case 0x00776f66:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fox
            case 0x00786f66:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foy
            case 0x00796f66:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fra
            case 0x00617266:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fre
            case 0x00657266:
            {
                MKV_DATA char  data_chars[5]   = "euws";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fri
            case 0x00697266:
            {
                MKV_DATA char  data_chars[5]   = "aeso";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fro
            case 0x006f7266:
            {
                MKV_DATA char  data_chars[5]   = "bgnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fsh
            case 0x00687366:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fsi
            case 0x00697366:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fsk
            case 0x006b7366:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fso
            case 0x006f7366:
            {
                MKV_DATA char  data_chars[3]   = "uc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fst
            case 0x00747366:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fta
            case 0x00617466:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftf
            case 0x00667466:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftl
            case 0x006c7466:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftm
            case 0x006d7466:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftn
            case 0x006e7466:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fto
            case 0x006f7466:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fui
            case 0x00697566:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ful
            case 0x006c7566:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fun
            case 0x006e7566:
            {
                MKV_DATA char  data_chars[3]   = "za";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fur
            case 0x00727566:
            {
                MKV_DATA char  data_chars[5]   = "ilna";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fwa
            case 0x00617766:
            {
                MKV_DATA char  data_chars[3]   = "yd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyf
            case 0x00667966:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyv
            case 0x00767966:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // f
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'g':
        {
            switch ( trigram_u32 )
            {
            // gab
            case 0x00626167:
            {
                MKV_DATA char  data_chars[4]   = "hor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gac
            case 0x00636167:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gad
            case 0x00646167:
            {
                MKV_DATA char  data_chars[3]   = "h-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gaf
            case 0x00666167:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gai
            case 0x00696167:
            {
                MKV_DATA char  data_chars[4]   = "rgn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gal
            case 0x006c6167:
            {
                MKV_DATA char  data_chars[7]   = "lasdmt";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa762, // 0.653846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gan
            case 0x006e6167:
            {
                MKV_DATA char  data_chars[11]   = "slgndfmeav";
                MKV_DATA uint16_t data_weights[10] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gar
            case 0x00726167:
            {
                MKV_DATA char  data_chars[16]   = "trvdynieblmagfs";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4384, // 0.263736 
                    0x3b14, // 0.230769 
                    0x1952, // 0.098901 
                    0x1681, // 0.087912 
                    0x0e11, // 0.054945 
                    0x0b41, // 0.043956 
                    0x0b41, // 0.043956 
                    0x0871, // 0.032967 
                    0x0871, // 0.032967 
                    0x0871, // 0.032967 
                    0x05a0, // 0.021978 
                    0x05a0, // 0.021978 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // gas
            case 0x00736167:
            {
                MKV_DATA char  data_chars[4]   = "tkd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gat
            case 0x00746167:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe9bd, // 0.913043 
                    0x1643, // 0.086957 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gau
            case 0x00756167:
            {
                MKV_DATA char  data_chars[4]   = "ldr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gav
            case 0x00766167:
            {
                MKV_DATA char  data_chars[5]   = "iuae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gay
            case 0x00796167:
            {
                MKV_DATA char  data_chars[3]   = "fh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gba
            case 0x00616267:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbe
            case 0x00656267:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbo
            case 0x006f6267:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbu
            case 0x00756267:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gco
            case 0x006f6367:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gcr
            case 0x00726367:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gda
            case 0x00616467:
            {
                MKV_DATA char  data_chars[4]   = "lrm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gdo
            case 0x006f6467:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gea
            case 0x00616567:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xec4f, // 0.923077 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // geb
            case 0x00626567:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ged
            case 0x00646567:
            {
                MKV_DATA char  data_chars[4]   = "ida";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gef
            case 0x00666567:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // geh
            case 0x00686567:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gei
            case 0x00696567:
            {
                MKV_DATA char  data_chars[5]   = "rsln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gel
            case 0x006c6567:
            {
                MKV_DATA char  data_chars[5]   = "ldas";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gem
            case 0x006d6567:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gen
            case 0x006e6567:
            {
                MKV_DATA char  data_chars[7]   = "dtbens";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9d8a, // 0.615385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // geo
            case 0x006f6567:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gep
            case 0x00706567:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ger
            case 0x00726567:
            {
                MKV_DATA char  data_chars[10]   = "stnbgimwa";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ges
            case 0x00736567:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // get
            case 0x00746567:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gew
            case 0x00776567:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfi
            case 0x00696667:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfo
            case 0x006f6667:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gga
            case 0x00616767:
            {
                MKV_DATA char  data_chars[4]   = "ntr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gge
            case 0x00656767:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggi
            case 0x00696767:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggl
            case 0x006c6767:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggr
            case 0x00726767:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gh-
            case 0x002d6867:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gha
            case 0x00616867:
            {
                MKV_DATA char  data_chars[11]   = "lmsrivuedt";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4000, // 0.250000 
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ghb
            case 0x00626867:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghd
            case 0x00646867:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghe
            case 0x00656867:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghf
            case 0x00666867:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghh
            case 0x00686867:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghi
            case 0x00696867:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghl
            case 0x006c6867:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghn
            case 0x006e6867:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gho
            case 0x006f6867:
            {
                MKV_DATA char  data_chars[5]   = "rlpu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ghp
            case 0x00706867:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghr
            case 0x00726867:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghs
            case 0x00736867:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ght
            case 0x00746867:
            {
                MKV_DATA char  data_chars[9]   = "osylrabh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7333, // 0.450000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // gib
            case 0x00626967:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gie
            case 0x00656967:
            {
                MKV_DATA char  data_chars[7]   = "rblmhk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gif
            case 0x00666967:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gil
            case 0x006c6967:
            {
                MKV_DATA char  data_chars[7]   = "lmscpv";
                MKV_DATA uint16_t data_weights[6] = {
                    0xaaab, // 0.666667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gin
            case 0x006e6967:
            {
                MKV_DATA char  data_chars[4]   = "gir";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gio
            case 0x006f6967:
            {
                MKV_DATA char  data_chars[4]   = "gps";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gir
            case 0x00726967:
            {
                MKV_DATA char  data_chars[4]   = "tdl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gis
            case 0x00736967:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // giu
            case 0x00756967:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // giv
            case 0x00766967:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gke
            case 0x00656b67:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gla
            case 0x00616c67:
            {
                MKV_DATA char  data_chars[7]   = "scdinm";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb961, // 0.724138 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gle
            case 0x00656c67:
            {
                MKV_DATA char  data_chars[10]   = "nstdebiay";
                MKV_DATA uint16_t data_weights[9] = {
                    0xcb7d, // 0.794872 
                    0x1069, // 0.064103 
                    0x09d9, // 0.038462 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // gli
            case 0x00696c67:
            {
                MKV_DATA char  data_chars[4]   = "bns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // glo
            case 0x006f6c67:
            {
                MKV_DATA char  data_chars[5]   = "acmu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // glu
            case 0x00756c67:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gma
            case 0x00616d67:
            {
                MKV_DATA char  data_chars[3]   = "un";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmi
            case 0x00696d67:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmo
            case 0x006f6d67:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmu
            case 0x00756d67:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gna
            case 0x00616e67:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gne
            case 0x00656e67:
            {
                MKV_DATA char  data_chars[3]   = "tu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gni
            case 0x00696e67:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gnu
            case 0x00756e67:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goa
            case 0x00616f67:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gob
            case 0x00626f67:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goc
            case 0x00636f67:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gog
            case 0x00676f67:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goi
            case 0x00696f67:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gol
            case 0x006c6f67:
            {
                MKV_DATA char  data_chars[4]   = "dls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gom
            case 0x006d6f67:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gon
            case 0x006e6f67:
            {
                MKV_DATA char  data_chars[5]   = "aefi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // goo
            case 0x006f6f67:
            {
                MKV_DATA char  data_chars[3]   = "dk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gor
            case 0x00726f67:
            {
                MKV_DATA char  data_chars[10]   = "dtrmsgbei";
                MKV_DATA uint16_t data_weights[9] = {
                    0x51ec, // 0.320000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // gos
            case 0x00736f67:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // got
            case 0x00746f67:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gou
            case 0x00756f67:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gov
            case 0x00766f67:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gow
            case 0x00776f67:
            {
                MKV_DATA char  data_chars[6]   = "aknre";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // goy
            case 0x00796f67:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpa
            case 0x00617067:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpo
            case 0x006f7067:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gra
            case 0x00617267:
            {
                MKV_DATA char  data_chars[11]   = "nmiysbchvx";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6492, // 0.392857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gre
            case 0x00657267:
            {
                MKV_DATA char  data_chars[8]   = "eianoty";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb000, // 0.687500 
                    0x1aab, // 0.104167 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // gri
            case 0x00697267:
            {
                MKV_DATA char  data_chars[9]   = "mgaosndb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // gro
            case 0x006f7267:
            {
                MKV_DATA char  data_chars[9]   = "vbtacgrs";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // gru
            case 0x00757267:
            {
                MKV_DATA char  data_chars[7]   = "ntdiml";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gsb
            case 0x00627367:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsc
            case 0x00637367:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gse
            case 0x00657367:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsf
            case 0x00667367:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsh
            case 0x00687367:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gsi
            case 0x00697367:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsk
            case 0x006b7367:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsl
            case 0x006c7367:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsm
            case 0x006d7367:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gst
            case 0x00747367:
            {
                MKV_DATA char  data_chars[4]   = "oer";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gto
            case 0x006f7467:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdd17, // 0.863636 
                    0x22e9, // 0.136364 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gua
            case 0x00617567:
            {
                MKV_DATA char  data_chars[4]   = "ryl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gue
            case 0x00657567:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gui
            case 0x00697567:
            {
                MKV_DATA char  data_chars[4]   = "lst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gul
            case 0x006c7567:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gun
            case 0x006e7567:
            {
                MKV_DATA char  data_chars[6]   = "nelzd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gur
            case 0x00727567:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gus
            case 0x00737567:
            {
                MKV_DATA char  data_chars[5]   = "tels";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gut
            case 0x00747567:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gva
            case 0x00617667:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gvi
            case 0x00697667:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwa
            case 0x00617767:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwe
            case 0x00657767:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwi
            case 0x00697767:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyb
            case 0x00627967:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyl
            case 0x006c7967:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gym
            case 0x006d7967:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // g
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'h':
        {
            switch ( trigram_u32 )
            {
            // h-a
            case 0x00612d68:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // h-b
            case 0x00622d68:
            {
                return 'a';
            }
            break;

            // h-h
            case 0x00682d68:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // h-k
            case 0x006b2d68:
            {
                return 'n';
            }
            break;

            // hab
            case 0x00626168:
            {
                MKV_DATA char  data_chars[4]   = "hoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hac
            case 0x00636168:
            {
                MKV_DATA char  data_chars[4]   = "hkl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // had
            case 0x00646168:
            {
                MKV_DATA char  data_chars[5]   = "edah";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hae
            case 0x00656168:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hag
            case 0x00676168:
            {
                MKV_DATA char  data_chars[4]   = "hgo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hah
            case 0x00686168:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hai
            case 0x00696168:
            {
                MKV_DATA char  data_chars[9]   = "grlsndct";
                MKV_DATA uint16_t data_weights[8] = {
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x31c7, // 0.194444 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hal
            case 0x006c6168:
            {
                MKV_DATA char  data_chars[15]   = "lkdmiasrbofget";
                MKV_DATA uint16_t data_weights[14] = {
                    0xbf31, // 0.746835 
                    0x0cf6, // 0.050633 
                    0x09b9, // 0.037975 
                    0x067b, // 0.025316 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ham
            case 0x006d6168:
            {
                MKV_DATA char  data_chars[9]   = "aeislnhm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // han
            case 0x006e6168:
            {
                MKV_DATA char  data_chars[17]   = "atdnsk-bgewyhfci";
                MKV_DATA uint16_t data_weights[16] = {
                    0x27d2, // 0.155556 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x16c1, // 0.088889 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // hao
            case 0x006f6168:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hap
            case 0x00706168:
            {
                MKV_DATA char  data_chars[5]   = "ehlp";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // har
            case 0x00726168:
            {
                MKV_DATA char  data_chars[16]   = "trlednbsagkyovw";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x16db, // 0.089286 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // has
            case 0x00736168:
            {
                MKV_DATA char  data_chars[7]   = "dsitwa";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hat
            case 0x00746168:
            {
                MKV_DATA char  data_chars[5]   = "tahs";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hau
            case 0x00756168:
            {
                MKV_DATA char  data_chars[4]   = "gnp";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hav
            case 0x00766168:
            {
                MKV_DATA char  data_chars[4]   = "eau";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // haw
            case 0x00776168:
            {
                MKV_DATA char  data_chars[9]   = "stlbefhi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hay
            case 0x00796168:
            {
                MKV_DATA char  data_chars[6]   = "shftw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // haz
            case 0x007a6168:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hba
            case 0x00616268:
            {
                MKV_DATA char  data_chars[4]   = "rln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hbe
            case 0x00656268:
            {
                MKV_DATA char  data_chars[4]   = "rga";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hbo
            case 0x006f6268:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hbr
            case 0x00726268:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hbu
            case 0x00756268:
            {
                MKV_DATA char  data_chars[5]   = "rnsi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hca
            case 0x00616368:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hco
            case 0x006f6368:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hcr
            case 0x00726368:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hda
            case 0x00616468:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hde
            case 0x00656468:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdh
            case 0x00686468:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdi
            case 0x00696468:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdo
            case 0x006f6468:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdr
            case 0x00726468:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdy
            case 0x00796468:
            {
                MKV_DATA char  data_chars[3]   = "k-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // he-
            case 0x002d6568:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hea
            case 0x00616568:
            {
                MKV_DATA char  data_chars[9]   = "dtrsglnc";
                MKV_DATA uint16_t data_weights[8] = {
                    0xc925, // 0.785714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // heb
            case 0x00626568:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hec
            case 0x00636568:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hed
            case 0x00646568:
            {
                MKV_DATA char  data_chars[4]   = "dei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hee
            case 0x00656568:
            {
                MKV_DATA char  data_chars[4]   = "nsl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // heg
            case 0x00676568:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hei
            case 0x00696568:
            {
                MKV_DATA char  data_chars[7]   = "lgnstm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hel
            case 0x006c6568:
            {
                MKV_DATA char  data_chars[8]   = "selm-dv";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hen
            case 0x006e6568:
            {
                MKV_DATA char  data_chars[14]   = "dthbcsrzvlegi";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // heo
            case 0x006f6568:
            {
                MKV_DATA char  data_chars[3]   = "gi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hep
            case 0x00706568:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // her
            case 0x00726568:
            {
                MKV_DATA char  data_chars[16]   = "rimtslbofhnwqpg";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2555, // 0.145833 
                    0x2555, // 0.145833 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // hes
            case 0x00736568:
            {
                MKV_DATA char  data_chars[5]   = "talo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // het
            case 0x00746568:
            {
                MKV_DATA char  data_chars[4]   = "lrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // heu
            case 0x00756568:
            {
                MKV_DATA char  data_chars[3]   = "gc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hew
            case 0x00776568:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hey
            case 0x00796568:
            {
                MKV_DATA char  data_chars[4]   = "nsl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hfa
            case 0x00616668:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfi
            case 0x00696668:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfo
            case 0x006f6668:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfr
            case 0x00726668:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hga
            case 0x00616768:
            {
                MKV_DATA char  data_chars[5]   = "rint";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hge
            case 0x00656768:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgi
            case 0x00696768:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgl
            case 0x006c6768:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgo
            case 0x006f6768:
            {
                MKV_DATA char  data_chars[5]   = "wyir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hgr
            case 0x00726768:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hha
            case 0x00616868:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hhe
            case 0x00656868:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hhi
            case 0x00696868:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hho
            case 0x006f6868:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hia
            case 0x00616968:
            {
                MKV_DATA char  data_chars[4]   = "nrb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hic
            case 0x00636968:
            {
                MKV_DATA char  data_chars[4]   = "hou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hid
            case 0x00646968:
            {
                MKV_DATA char  data_chars[3]   = "dh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hie
            case 0x00656968:
            {
                MKV_DATA char  data_chars[7]   = "lsrbmn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9746, // 0.590909 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hif
            case 0x00666968:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hig
            case 0x00676968:
            {
                MKV_DATA char  data_chars[3]   = "hs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hil
            case 0x006c6968:
            {
                MKV_DATA char  data_chars[7]   = "ltioph";
                MKV_DATA uint16_t data_weights[6] = {
                    0xf5c3, // 0.960000 
                    0x03d7, // 0.015000 
                    0x028f, // 0.010000 
                    0x0148, // 0.005000 
                    0x0148, // 0.005000 
                    0x0148, // 0.005000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // him
            case 0x006d6968:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hin
            case 0x006e6968:
            {
                MKV_DATA char  data_chars[15]   = "nsdlaitergmhcv";
                MKV_DATA uint16_t data_weights[14] = {
                    0x2666, // 0.150000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x199a, // 0.100000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // hip
            case 0x00706968:
            {
                MKV_DATA char  data_chars[4]   = "lop";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hir
            case 0x00726968:
            {
                MKV_DATA char  data_chars[8]   = "ednslor";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa38e, // 0.638889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // his
            case 0x00736968:
            {
                MKV_DATA char  data_chars[5]   = "tskl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hit
            case 0x00746968:
            {
                MKV_DATA char  data_chars[11]   = "elshticrob";
                MKV_DATA uint16_t data_weights[10] = {
                    0xa6f5, // 0.652174 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hiv
            case 0x00766968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hke
            case 0x00656b68:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hki
            case 0x00696b68:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hla
            case 0x00616c68:
            {
                MKV_DATA char  data_chars[8]   = "icdnrws";
                MKV_DATA uint16_t data_weights[7] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hle
            case 0x00656c68:
            {
                MKV_DATA char  data_chars[6]   = "cvisy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hli
            case 0x00696c68:
            {
                MKV_DATA char  data_chars[4]   = "nce";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hlo
            case 0x006f6c68:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hlu
            case 0x00756c68:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hly
            case 0x00796c68:
            {
                MKV_DATA char  data_chars[3]   = "nv";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hma
            case 0x00616d68:
            {
                MKV_DATA char  data_chars[4]   = "bdr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hme
            case 0x00656d68:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hmi
            case 0x00696d68:
            {
                MKV_DATA char  data_chars[4]   = "glt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hmo
            case 0x006f6d68:
            {
                MKV_DATA char  data_chars[4]   = "rni";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hmu
            case 0x00756d68:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hna
            case 0x00616e68:
            {
                MKV_DATA char  data_chars[9]   = "chirsbgd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hne
            case 0x00656e68:
            {
                MKV_DATA char  data_chars[3]   = "sy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hni
            case 0x00696e68:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hno
            case 0x006f6e68:
            {
                MKV_DATA char  data_chars[4]   = "cit";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hns
            case 0x00736e68:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoa
            case 0x00616f68:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hob
            case 0x00626f68:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoc
            case 0x00636f68:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hod
            case 0x00646f68:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hog
            case 0x00676f68:
            {
                MKV_DATA char  data_chars[4]   = "agh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hoi
            case 0x00696f68:
            {
                MKV_DATA char  data_chars[4]   = "nrs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hol
            case 0x006c6f68:
            {
                MKV_DATA char  data_chars[7]   = "melyad";
                MKV_DATA uint16_t data_weights[6] = {
                    0x84be, // 0.518519 
                    0x3426, // 0.203704 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hom
            case 0x006d6f68:
            {
                MKV_DATA char  data_chars[4]   = "aes";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hon
            case 0x006e6f68:
            {
                MKV_DATA char  data_chars[5]   = "aeno";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hop
            case 0x00706f68:
            {
                MKV_DATA char  data_chars[5]   = "emtb";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdd17, // 0.863636 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hor
            case 0x00726f68:
            {
                MKV_DATA char  data_chars[12]   = "netyskamrwg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6e8c, // 0.431818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hos
            case 0x00736f68:
            {
                MKV_DATA char  data_chars[6]   = "tnweh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hot
            case 0x00746f68:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hou
            case 0x00756f68:
            {
                MKV_DATA char  data_chars[8]   = "slngrtb";
                MKV_DATA uint16_t data_weights[7] = {
                    0xd400, // 0.828125 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // how
            case 0x00776f68:
            {
                MKV_DATA char  data_chars[10]   = "fgnpbdemw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hpa
            case 0x00617068:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpe
            case 0x00657068:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpo
            case 0x006f7068:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpu
            case 0x00757068:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hqu
            case 0x00757168:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hra
            case 0x00617268:
            {
                MKV_DATA char  data_chars[8]   = "cgmnpst";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hre
            case 0x00657268:
            {
                MKV_DATA char  data_chars[8]   = "einwyag";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hri
            case 0x00697268:
            {
                MKV_DATA char  data_chars[8]   = "egnschm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hro
            case 0x006f7268:
            {
                MKV_DATA char  data_chars[5]   = "yans";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hru
            case 0x00757268:
            {
                MKV_DATA char  data_chars[4]   = "mta";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hry
            case 0x00797268:
            {
                MKV_DATA char  data_chars[3]   = "fs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsa
            case 0x00617368:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hse
            case 0x00657368:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsf
            case 0x00667368:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsh
            case 0x00687368:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsi
            case 0x00697368:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsk
            case 0x006b7368:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsl
            case 0x006c7368:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hst
            case 0x00747368:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsw
            case 0x00777368:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hta
            case 0x00617468:
            {
                MKV_DATA char  data_chars[5]   = "yelr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // htb
            case 0x00627468:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hte
            case 0x00657468:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hth
            case 0x00687468:
            {
                MKV_DATA char  data_chars[3]   = "i-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hti
            case 0x00697468:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htl
            case 0x006c7468:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hto
            case 0x006f7468:
            {
                MKV_DATA char  data_chars[5]   = "nwlt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // htr
            case 0x00727468:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hts
            case 0x00737468:
            {
                MKV_DATA char  data_chars[4]   = "rwh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // htu
            case 0x00757468:
            {
                MKV_DATA char  data_chars[3]   = "br";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hua
            case 0x00617568:
            {
                MKV_DATA char  data_chars[6]   = "grstd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hub
            case 0x00627568:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hug
            case 0x00677568:
            {
                MKV_DATA char  data_chars[3]   = "hg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hui
            case 0x00697568:
            {
                MKV_DATA char  data_chars[6]   = "lners";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hul
            case 0x006c7568:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hum
            case 0x006d7568:
            {
                MKV_DATA char  data_chars[4]   = "abe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hun
            case 0x006e7568:
            {
                MKV_DATA char  data_chars[4]   = "tgd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9d8a, // 0.615385 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hur
            case 0x00727568:
            {
                MKV_DATA char  data_chars[5]   = "lsci";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hus
            case 0x00737568:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hut
            case 0x00747568:
            {
                MKV_DATA char  data_chars[4]   = "clt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // huv
            case 0x00767568:
            {
                return 'o';
            }
            break;

            // hux
            case 0x00787568:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hve
            case 0x00657668:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hvi
            case 0x00697668:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwa
            case 0x00617768:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwe
            case 0x00657768:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwh
            case 0x00687768:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwi
            case 0x00697768:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwo
            case 0x006f7768:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hye
            case 0x00657968:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyl
            case 0x006c7968:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyn
            case 0x006e7968:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyr
            case 0x00727968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hys
            case 0x00737968:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyt
            case 0x00747968:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // h
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'i':
        {
            switch ( trigram_u32 )
            {
            // iab
            case 0x00626169:
            {
                MKV_DATA char  data_chars[4]   = "hoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iac
            case 0x00636169:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iad
            case 0x00646169:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iag
            case 0x00676169:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iai
            case 0x00696169:
            {
                MKV_DATA char  data_chars[4]   = "dsv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iam
            case 0x006d6169:
            {
                MKV_DATA char  data_chars[4]   = "swh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ian
            case 0x006e6169:
            {
                MKV_DATA char  data_chars[5]   = "asbl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // iar
            case 0x00726169:
            {
                MKV_DATA char  data_chars[5]   = "asmt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ias
            case 0x00736169:
            {
                MKV_DATA char  data_chars[3]   = "t-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iav
            case 0x00766169:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iba
            case 0x00616269:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibb
            case 0x00626269:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibe
            case 0x00656269:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibh
            case 0x00686269:
            {
                MKV_DATA char  data_chars[4]   = "ine";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ibi
            case 0x00696269:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibl
            case 0x006c6269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibo
            case 0x006f6269:
            {
                MKV_DATA char  data_chars[4]   = "sdn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ibr
            case 0x00726269:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibs
            case 0x00736269:
            {
                MKV_DATA char  data_chars[3]   = "hd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibu
            case 0x00756269:
            {
                MKV_DATA char  data_chars[5]   = "rins";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ica
            case 0x00616369:
            {
                MKV_DATA char  data_chars[4]   = "ruv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // icc
            case 0x00636369:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ice
            case 0x00656369:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ich
            case 0x00686369:
            {
                MKV_DATA char  data_chars[10]   = "eailotbrm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5174, // 0.318182 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ick
            case 0x006b6369:
            {
                MKV_DATA char  data_chars[9]   = "ehsln-ab";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // icl
            case 0x006c6369:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ico
            case 0x006f6369:
            {
                MKV_DATA char  data_chars[3]   = "un";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // icr
            case 0x00726369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ict
            case 0x00746369:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // icu
            case 0x00756369:
            {
                MKV_DATA char  data_chars[4]   = "dil";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ida
            case 0x00616469:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idb
            case 0x00626469:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idd
            case 0x00646469:
            {
                MKV_DATA char  data_chars[6]   = "lersy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ide
            case 0x00656469:
            {
                MKV_DATA char  data_chars[6]   = "nmsab";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // idf
            case 0x00666469:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idg
            case 0x00676469:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfafb, // 0.980392 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idh
            case 0x00686469:
            {
                MKV_DATA char  data_chars[5]   = "egit";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // idi
            case 0x00696469:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idl
            case 0x006c6469:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // idn
            case 0x006e6469:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ido
            case 0x006f6469:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idr
            case 0x00726469:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ids
            case 0x00736469:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idt
            case 0x00746469:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idw
            case 0x00776469:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iea
            case 0x00616569:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ieb
            case 0x00626569:
            {
                MKV_DATA char  data_chars[5]   = "arue";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // iec
            case 0x00636569:
            {
                MKV_DATA char  data_chars[4]   = "hrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ied
            case 0x00646569:
            {
                MKV_DATA char  data_chars[4]   = "aoy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ief
            case 0x00666569:
            {
                MKV_DATA char  data_chars[4]   = "fai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ieg
            case 0x00676569:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ieh
            case 0x00686569:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iek
            case 0x006b6569:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iel
            case 0x006c6569:
            {
                MKV_DATA char  data_chars[8]   = "dsaefil";
                MKV_DATA uint16_t data_weights[7] = {
                    0xe624, // 0.898990 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // iem
            case 0x006d6569:
            {
                MKV_DATA char  data_chars[5]   = "oeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ien
            case 0x006e6569:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ier
            case 0x00726569:
            {
                MKV_DATA char  data_chars[7]   = "sinoag";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ies
            case 0x00736569:
            {
                MKV_DATA char  data_chars[10]   = "tliosmbgh";
                MKV_DATA uint16_t data_weights[9] = {
                    0xa12f, // 0.629630 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // iet
            case 0x00746569:
            {
                MKV_DATA char  data_chars[4]   = "fhu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iev
            case 0x00766569:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iew
            case 0x00776569:
            {
                MKV_DATA char  data_chars[4]   = "efp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ife
            case 0x00656669:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iff
            case 0x00666669:
            {
                MKV_DATA char  data_chars[6]   = "eobln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ifi
            case 0x00696669:
            {
                MKV_DATA char  data_chars[4]   = "rel";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ifl
            case 0x006c6669:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifo
            case 0x006f6669:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ift
            case 0x00746669:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifu
            case 0x00756669:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iga
            case 0x00616769:
            {
                MKV_DATA char  data_chars[7]   = "rnsfil";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7627, // 0.461538 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // igb
            case 0x00626769:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igd
            case 0x00646769:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ige
            case 0x00656769:
            {
                MKV_DATA char  data_chars[5]   = "narl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7000, // 0.437500 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igg
            case 0x00676769:
            {
                MKV_DATA char  data_chars[5]   = "siae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igh
            case 0x00686769:
            {
                MKV_DATA char  data_chars[12]   = "tadeosbflin";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6492, // 0.392857 
                    0x2db7, // 0.178571 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // igi
            case 0x00696769:
            {
                MKV_DATA char  data_chars[5]   = "elns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igl
            case 0x006c6769:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // igm
            case 0x006d6769:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ign
            case 0x006e6769:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igo
            case 0x006f6769:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igr
            case 0x00726769:
            {
                MKV_DATA char  data_chars[5]   = "oaeu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igs
            case 0x00736769:
            {
                MKV_DATA char  data_chars[5]   = "thif";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igt
            case 0x00746769:
            {
                return 'o';
            }
            break;

            // igv
            case 0x00766769:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iha
            case 0x00616869:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ike
            case 0x00656b69:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iki
            case 0x00696b69:
            {
                MKV_DATA char  data_chars[4]   = "els";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikl
            case 0x006c6b69:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ikn
            case 0x006e6b69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ila
            case 0x00616c69:
            {
                MKV_DATA char  data_chars[5]   = "nwru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ilb
            case 0x00626c69:
            {
                MKV_DATA char  data_chars[7]   = "raesio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ilc
            case 0x00636c69:
            {
                MKV_DATA char  data_chars[4]   = "hor";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ild
            case 0x00646c69:
            {
                MKV_DATA char  data_chars[9]   = "ouaimryt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ile
            case 0x00656c69:
            {
                MKV_DATA char  data_chars[9]   = "srtehiab";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ilf
            case 0x00666c69:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilg
            case 0x00676c69:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilh
            case 0x00686c69:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ili
            case 0x00696c69:
            {
                MKV_DATA char  data_chars[4]   = "npc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilk
            case 0x006b6c69:
            {
                MKV_DATA char  data_chars[4]   = "eih";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ill
            case 0x006c6c69:
            {
                MKV_DATA char  data_chars[17]   = "esioayhbtfdpcwnm";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3ae7, // 0.230089 
                    0x31d7, // 0.194690 
                    0x2f93, // 0.185841 
                    0x1464, // 0.079646 
                    0x0fdc, // 0.061947 
                    0x0fdc, // 0.061947 
                    0x0b54, // 0.044248 
                    0x0910, // 0.035398 
                    0x0488, // 0.017699 
                    0x0488, // 0.017699 
                    0x0488, // 0.017699 
                    0x0488, // 0.017699 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ilm
            case 0x006d6c69:
            {
                MKV_DATA char  data_chars[6]   = "aoeui";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7555, // 0.458333 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // iln
            case 0x006e6c69:
            {
                MKV_DATA char  data_chars[9]   = "aisbcgqw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ilo
            case 0x006f6c69:
            {
                MKV_DATA char  data_chars[4]   = "rcv";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilp
            case 0x00706c69:
            {
                MKV_DATA char  data_chars[4]   = "has";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilq
            case 0x00716c69:
            {
                return 'u';
            }
            break;

            // ilr
            case 0x00726c69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ils
            case 0x00736c69:
            {
                MKV_DATA char  data_chars[7]   = "topybh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ilt
            case 0x00746c69:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ilu
            case 0x00756c69:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilv
            case 0x00766c69:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilw
            case 0x00776c69:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ily
            case 0x00796c69:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ima
            case 0x00616d69:
            {
                MKV_DATA char  data_chars[5]   = "cirv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // imb
            case 0x00626d69:
            {
                MKV_DATA char  data_chars[4]   = "ile";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ime
            case 0x00656d69:
            {
                MKV_DATA char  data_chars[6]   = "krshn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // imh
            case 0x00686d69:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imi
            case 0x00696d69:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imn
            case 0x006e6d69:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // imo
            case 0x006f6d69:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imr
            case 0x00726d69:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ims
            case 0x00736d69:
            {
                MKV_DATA char  data_chars[6]   = "dgtah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ina
            case 0x00616e69:
            {
                MKV_DATA char  data_chars[11]   = "nrcihmfvgt";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // inb
            case 0x00626e69:
            {
                MKV_DATA char  data_chars[6]   = "uroae";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // inc
            case 0x00636e69:
            {
                MKV_DATA char  data_chars[7]   = "halroe";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ind
            case 0x00646e69:
            {
                MKV_DATA char  data_chars[11]   = "oyahielrus";
                MKV_DATA uint16_t data_weights[10] = {
                    0x306f, // 0.189189 
                    0x306f, // 0.189189 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ine
            case 0x00656e69:
            {
                MKV_DATA char  data_chars[8]   = "sbmotwy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8889, // 0.533333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // inf
            case 0x00666e69:
            {
                MKV_DATA char  data_chars[4]   = "oal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ing
            case 0x00676e69:
            {
                MKV_DATA char  data_chars[17]   = "sthalrbowfemudck";
                MKV_DATA uint16_t data_weights[16] = {
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x1bd3, // 0.108696 
                    0x137a, // 0.076087 
                    0x10b2, // 0.065217 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // inh
            case 0x00686e69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ini
            case 0x00696e69:
            {
                MKV_DATA char  data_chars[9]   = "scaneqtd";
                MKV_DATA uint16_t data_weights[8] = {
                    0xb05b, // 0.688889 
                    0x16c1, // 0.088889 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ink
            case 0x006b6e69:
            {
                MKV_DATA char  data_chars[8]   = "lsntbei";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // inl
            case 0x006c6e69:
            {
                MKV_DATA char  data_chars[6]   = "oaeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9746, // 0.590909 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // inm
            case 0x006d6e69:
            {
                MKV_DATA char  data_chars[5]   = "ohuy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // inn
            case 0x006e6e69:
            {
                MKV_DATA char  data_chars[10]   = "eiaysfvbo";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5d8a, // 0.365385 
                    0x4ec5, // 0.307692 
                    0x1d8a, // 0.115385 
                    0x189e, // 0.096154 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ino
            case 0x006f6e69:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inq
            case 0x00716e69:
            {
                return 'u';
            }
            break;

            // inr
            case 0x00726e69:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ins
            case 0x00736e69:
            {
                MKV_DATA char  data_chars[11]   = "thibleacfr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // int
            case 0x00746e69:
            {
                MKV_DATA char  data_chars[10]   = "oriuaehlm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x67c9, // 0.405405 
                    0x306f, // 0.189189 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // inu
            case 0x00756e69:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inv
            case 0x00766e69:
            {
                MKV_DATA char  data_chars[4]   = "eiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf400, // 0.953125 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inw
            case 0x00776e69:
            {
                MKV_DATA char  data_chars[4]   = "aho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inz
            case 0x007a6e69:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iob
            case 0x00626f69:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ioc
            case 0x00636f69:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iog
            case 0x00676f69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iol
            case 0x006c6f69:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iom
            case 0x006d6f69:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ion
            case 0x006e6f69:
            {
                MKV_DATA char  data_chars[6]   = "anbef";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // iop
            case 0x00706f69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ios
            case 0x00736f69:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iot
            case 0x00746f69:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipa
            case 0x00617069:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipe
            case 0x00657069:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iph
            case 0x00687069:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipl
            case 0x006c7069:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipn
            case 0x006e7069:
            {
                return 'e';
            }
            break;

            // ipo
            case 0x006f7069:
            {
                MKV_DATA char  data_chars[4]   = "lco";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ipp
            case 0x00707069:
            {
                MKV_DATA char  data_chars[6]   = "eilof";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ips
            case 0x00737069:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iqu
            case 0x00757169:
            {
                MKV_DATA char  data_chars[4]   = "hoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ira
            case 0x00617269:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irb
            case 0x00627269:
            {
                MKV_DATA char  data_chars[6]   = "ueirh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // irc
            case 0x00637269:
            {
                MKV_DATA char  data_chars[4]   = "ehl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ird
            case 0x00647269:
            {
                MKV_DATA char  data_chars[9]   = "eraflpst";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ire
            case 0x00657269:
            {
                MKV_DATA char  data_chars[7]   = "abcdln";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // irf
            case 0x00667269:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irg
            case 0x00677269:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irh
            case 0x00687269:
            {
                MKV_DATA char  data_chars[4]   = "ieo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iri
            case 0x00697269:
            {
                MKV_DATA char  data_chars[6]   = "ndscv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // irk
            case 0x006b7269:
            {
                MKV_DATA char  data_chars[18]   = "castimhlepfbnwugo";
                MKV_DATA uint16_t data_weights[17] = {
                    0x20ae, // 0.127660 
                    0x1b3c, // 0.106383 
                    0x15ca, // 0.085106 
                    0x15ca, // 0.085106 
                    0x15ca, // 0.085106 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // irl
            case 0x006c7269:
            {
                MKV_DATA char  data_chars[6]   = "ioesa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // irm
            case 0x006d7269:
            {
                MKV_DATA char  data_chars[5]   = "ieoy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irn
            case 0x006e7269:
            {
                MKV_DATA char  data_chars[17]   = "isbeatkocpdghlmr";
                MKV_DATA uint16_t data_weights[16] = {
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // iro
            case 0x006f7269:
            {
                MKV_DATA char  data_chars[4]   = "nry";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // irr
            case 0x00727269:
            {
                MKV_DATA char  data_chars[5]   = "aeiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irs
            case 0x00737269:
            {
                MKV_DATA char  data_chars[6]   = "tehik";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // irt
            case 0x00747269:
            {
                MKV_DATA char  data_chars[5]   = "hola";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irv
            case 0x00767269:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irz
            case 0x007a7269:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isa
            case 0x00617369:
            {
                MKV_DATA char  data_chars[5]   = "ruib";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // isb
            case 0x00627369:
            {
                MKV_DATA char  data_chars[6]   = "aehiy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // isc
            case 0x00637369:
            {
                MKV_DATA char  data_chars[4]   = "aho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // isd
            case 0x00647369:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xddde, // 0.866667 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ise
            case 0x00657369:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isf
            case 0x00667369:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isg
            case 0x00677369:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ish
            case 0x00687369:
            {
                MKV_DATA char  data_chars[7]   = "aeoick";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // isi
            case 0x00697369:
            {
                MKV_DATA char  data_chars[5]   = "angr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // isk
            case 0x006b7369:
            {
                MKV_DATA char  data_chars[5]   = "eaiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // isl
            case 0x006c7369:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ism
            case 0x006d7369:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isn
            case 0x006e7369:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ist
            case 0x00747369:
            {
                MKV_DATA char  data_chars[7]   = "eoalhr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8904, // 0.535211 
                    0x5689, // 0.338028 
                    0x1207, // 0.070423 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // isw
            case 0x00777369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ita
            case 0x00617469:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itb
            case 0x00627469:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itc
            case 0x00637469:
            {
                MKV_DATA char  data_chars[4]   = "aho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ite
            case 0x00657469:
            {
                MKV_DATA char  data_chars[12]   = "chfrmslikab";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2800, // 0.156250 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // itf
            case 0x00667469:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itg
            case 0x00677469:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ith
            case 0x00687469:
            {
                MKV_DATA char  data_chars[12]   = "sineobtyagl";
                MKV_DATA uint16_t data_weights[11] = {
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // iti
            case 0x00697469:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itk
            case 0x006b7469:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itl
            case 0x006c7469:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // itm
            case 0x006d7469:
            {
                MKV_DATA char  data_chars[4]   = "uae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // itn
            case 0x006e7469:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ito
            case 0x006f7469:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itp
            case 0x00707469:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itr
            case 0x00727469:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // its
            case 0x00737469:
            {
                MKV_DATA char  data_chars[5]   = "loch";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // itt
            case 0x00747469:
            {
                MKV_DATA char  data_chars[8]   = "aleynou";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // iun
            case 0x006e7569:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iur
            case 0x00727569:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iut
            case 0x00747569:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iva
            case 0x00617669:
            {
                MKV_DATA char  data_chars[6]   = "gicln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ive
            case 0x00657669:
            {
                MKV_DATA char  data_chars[6]   = "gorst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ivi
            case 0x00697669:
            {
                MKV_DATA char  data_chars[5]   = "gcen";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ivo
            case 0x006f7669:
            {
                MKV_DATA char  data_chars[4]   = "ecx";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ivr
            case 0x00727669:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ivu
            case 0x00757669:
            {
                return 'l';
            }
            break;

            // iwi
            case 0x00697769:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixt
            case 0x00747869:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // i
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'j':
        {
            switch ( trigram_u32 )
            {
            // jac
            case 0x0063616a:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jam
            case 0x006d616a:
            {
                MKV_DATA char  data_chars[3]   = "pe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jan
            case 0x006e616a:
            {
                MKV_DATA char  data_chars[3]   = "e-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jav
            case 0x0076616a:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jea
            case 0x0061656a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jed
            case 0x0064656a:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jem
            case 0x006d656a:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jen
            case 0x006e656a:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jer
            case 0x0072656a:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // joh
            case 0x00686f6a:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jop
            case 0x00706f6a:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jor
            case 0x00726f6a:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jun
            case 0x006e756a:
            {
                MKV_DATA char  data_chars[3]   = "ci";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // j
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'k':
        {
            switch ( trigram_u32 )
            {
            // k-f
            case 0x00662d6b:
            {
                return 'l';
            }
            break;

            // kab
            case 0x0062616b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kad
            case 0x0064616b:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kai
            case 0x0069616b:
            {
                MKV_DATA char  data_chars[6]   = "mglrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kal
            case 0x006c616b:
            {
                MKV_DATA char  data_chars[5]   = "lena";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kam
            case 0x006d616b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kan
            case 0x006e616b:
            {
                MKV_DATA char  data_chars[3]   = "d-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kap
            case 0x0070616b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kar
            case 0x0072616b:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kat
            case 0x0074616b:
            {
                MKV_DATA char  data_chars[4]   = "eho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kav
            case 0x0076616b:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kba
            case 0x0061626b:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbe
            case 0x0065626b:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbo
            case 0x006f626b:
            {
                MKV_DATA char  data_chars[3]   = "gn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbr
            case 0x0072626b:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbu
            case 0x0075626b:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kca
            case 0x0061636b:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kcl
            case 0x006c636b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kco
            case 0x006f636b:
            {
                MKV_DATA char  data_chars[4]   = "wln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kcu
            case 0x0075636b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kda
            case 0x0061646b:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdo
            case 0x006f646b:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdy
            case 0x0079646b:
            {
                MKV_DATA char  data_chars[3]   = "k-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kea
            case 0x0061656b:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // keb
            case 0x0062656b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ked
            case 0x0064656b:
            {
                MKV_DATA char  data_chars[4]   = "lsh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kee
            case 0x0065656b:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // keg
            case 0x0067656b:
            {
                MKV_DATA char  data_chars[3]   = "gi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // keh
            case 0x0068656b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kei
            case 0x0069656b:
            {
                MKV_DATA char  data_chars[7]   = "ltsgnr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kel
            case 0x006c656b:
            {
                MKV_DATA char  data_chars[11]   = "lvtbdsfwmp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4f73, // 0.310345 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // kem
            case 0x006d656b:
            {
                MKV_DATA char  data_chars[4]   = "bny";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ken
            case 0x006e656b:
            {
                MKV_DATA char  data_chars[14]   = "ntdmsezobpikl";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4d93, // 0.303030 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // keo
            case 0x006f656b:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kep
            case 0x0070656b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ker
            case 0x0072656b:
            {
                MKV_DATA char  data_chars[10]   = "rstbgfnyc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4dea, // 0.304348 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // kes
            case 0x0073656b:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ket
            case 0x0074656b:
            {
                MKV_DATA char  data_chars[7]   = "thlsaf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // key
            case 0x0079656b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfa
            case 0x0061666b:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfi
            case 0x0069666b:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfo
            case 0x006f666b:
            {
                MKV_DATA char  data_chars[4]   = "rol";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kfu
            case 0x0075666b:
            {
                MKV_DATA char  data_chars[3]   = "ri";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kga
            case 0x0061676b:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kgl
            case 0x006c676b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kgr
            case 0x0072676b:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kgu
            case 0x0075676b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kha
            case 0x0061686b:
            {
                MKV_DATA char  data_chars[5]   = "lrvu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // khe
            case 0x0065686b:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // khi
            case 0x0069686b:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kho
            case 0x006f686b:
            {
                MKV_DATA char  data_chars[4]   = "lpu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kib
            case 0x0062696b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kid
            case 0x0064696b:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kie
            case 0x0065696b:
            {
                MKV_DATA char  data_chars[5]   = "slbr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kig
            case 0x0067696b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kil
            case 0x006c696b:
            {
                MKV_DATA char  data_chars[19]   = "mlcndbpkwstoaregfv";
                MKV_DATA uint16_t data_weights[18] = {
                    0x3c0d, // 0.234568 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x1620, // 0.086420 
                    0x1620, // 0.086420 
                    0x1620, // 0.086420 
                    0x097b, // 0.037037 
                    0x0652, // 0.024691 
                    0x0652, // 0.024691 
                    0x0652, // 0.024691 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // kim
            case 0x006d696b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kin
            case 0x006e696b:
            {
                MKV_DATA char  data_chars[16]   = "gnlctefbmirksdu";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4ac9, // 0.292135 
                    0x2284, // 0.134831 
                    0x1fa4, // 0.123596 
                    0x19e3, // 0.101124 
                    0x1423, // 0.078652 
                    0x0b81, // 0.044944 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x02e0, // 0.011236 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // kip
            case 0x0070696b:
            {
                MKV_DATA char  data_chars[3]   = "pn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kir
            case 0x0072696b:
            {
                MKV_DATA char  data_chars[9]   = "ktblnrzi";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd730, // 0.840580 
                    0x0ed7, // 0.057971 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // kis
            case 0x0073696b:
            {
                MKV_DATA char  data_chars[4]   = "cht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kit
            case 0x0074696b:
            {
                MKV_DATA char  data_chars[3]   = "ty";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kla
            case 0x00616c6b:
            {
                MKV_DATA char  data_chars[4]   = "nwt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kle
            case 0x00656c6b:
            {
                MKV_DATA char  data_chars[8]   = "trbhoya";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kli
            case 0x00696c6b:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // klu
            case 0x00756c6b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kma
            case 0x00616d6b:
            {
                MKV_DATA char  data_chars[4]   = "nri";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kme
            case 0x00656d6b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmi
            case 0x00696d6b:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmo
            case 0x006f6d6b:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmu
            case 0x00756d6b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kna
            case 0x00616e6b:
            {
                MKV_DATA char  data_chars[5]   = "rvip";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kne
            case 0x00656e6b:
            {
                MKV_DATA char  data_chars[6]   = "yseuw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kni
            case 0x00696e6b:
            {
                MKV_DATA char  data_chars[4]   = "gps";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kno
            case 0x006f6e6b:
            {
                MKV_DATA char  data_chars[5]   = "cwtx";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x5174, // 0.318182 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kom
            case 0x006d6f6b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kos
            case 0x00736f6b:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpa
            case 0x0061706b:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpo
            case 0x006f706b:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kre
            case 0x0065726b:
            {
                MKV_DATA char  data_chars[3]   = "vy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kri
            case 0x0069726b:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kro
            case 0x006f726b:
            {
                MKV_DATA char  data_chars[4]   = "cmn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ksb
            case 0x0062736b:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksh
            case 0x0068736b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksi
            case 0x0069736b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksl
            case 0x006c736b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksn
            case 0x006e736b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kst
            case 0x0074736b:
            {
                MKV_DATA char  data_chars[4]   = "oye";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ksw
            case 0x0077736b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kth
            case 0x0068746b:
            {
                MKV_DATA char  data_chars[3]   = "r-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kto
            case 0x006f746b:
            {
                MKV_DATA char  data_chars[5]   = "nwpu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kul
            case 0x006c756b:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kur
            case 0x0072756b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwa
            case 0x0061776b:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwi
            case 0x0069776b:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwo
            case 0x006f776b:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyl
            case 0x006c796b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyr
            case 0x0072796b:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // k
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'l':
        {
            switch ( trigram_u32 )
            {
            // l-c
            case 0x00632d6c:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lab
            case 0x0062616c:
            {
                MKV_DATA char  data_chars[6]   = "heoyr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lac
            case 0x0063616c:
            {
                MKV_DATA char  data_chars[6]   = "kheal";
                MKV_DATA uint16_t data_weights[5] = {
                    0x81f8, // 0.507692 
                    0x5a96, // 0.353846 
                    0x13b1, // 0.076923 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lad
            case 0x0064616c:
            {
                MKV_DATA char  data_chars[10]   = "dyaeiunrs";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4aab, // 0.291667 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lae
            case 0x0065616c:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // laf
            case 0x0066616c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lag
            case 0x0067616c:
            {
                MKV_DATA char  data_chars[6]   = "gaels";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lah
            case 0x0068616c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lai
            case 0x0069616c:
            {
                MKV_DATA char  data_chars[8]   = "rgdnsct";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8254, // 0.509091 
                    0x3333, // 0.200000 
                    0x1746, // 0.090909 
                    0x129e, // 0.072727 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lak
            case 0x006b616c:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lal
            case 0x006c616c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lam
            case 0x006d616c:
            {
                MKV_DATA char  data_chars[6]   = "biaul";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lan
            case 0x006e616c:
            {
                MKV_DATA char  data_chars[12]   = "dgtaeisbrol";
                MKV_DATA uint16_t data_weights[11] = {
                    0xa666, // 0.650000 
                    0x1bbc, // 0.108333 
                    0x0eef, // 0.058333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lao
            case 0x006f616c:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lap
            case 0x0070616c:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lar
            case 0x0072616c:
            {
                MKV_DATA char  data_chars[15]   = "gsibkeyaondmrt";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4d93, // 0.303030 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // las
            case 0x0073616c:
            {
                MKV_DATA char  data_chars[9]   = "shtanpgd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5075, // 0.314286 
                    0x41d4, // 0.257143 
                    0x3333, // 0.200000 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // lat
            case 0x0074616c:
            {
                MKV_DATA char  data_chars[7]   = "ehstou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5e51, // 0.368421 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lau
            case 0x0075616c:
            {
                MKV_DATA char  data_chars[5]   = "rcdl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lav
            case 0x0076616c:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // law
            case 0x0077616c:
            {
                MKV_DATA char  data_chars[6]   = "bhtem";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lax
            case 0x0078616c:
            {
                MKV_DATA char  data_chars[5]   = "oadf";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lay
            case 0x0079616c:
            {
                MKV_DATA char  data_chars[5]   = "ghlt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lba
            case 0x0061626c:
            {
                MKV_DATA char  data_chars[5]   = "ngir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lbe
            case 0x0065626c:
            {
                MKV_DATA char  data_chars[6]   = "grtan";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lbi
            case 0x0069626c:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lbl
            case 0x006c626c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lbo
            case 0x006f626c:
            {
                MKV_DATA char  data_chars[5]   = "suwk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lbr
            case 0x0072626c:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lbs
            case 0x0073626c:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lbu
            case 0x0075626c:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lca
            case 0x0061636c:
            {
                MKV_DATA char  data_chars[5]   = "bipt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lch
            case 0x0068636c:
            {
                MKV_DATA char  data_chars[7]   = "aroeil";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lco
            case 0x006f636c:
            {
                MKV_DATA char  data_chars[5]   = "nryl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lcr
            case 0x0072636c:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lcu
            case 0x0075636c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lda
            case 0x0061646c:
            {
                MKV_DATA char  data_chars[6]   = "cilnr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ldb
            case 0x0062646c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldc
            case 0x0063646c:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lde
            case 0x0065646c:
            {
                MKV_DATA char  data_chars[4]   = "rna";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9e7a, // 0.619048 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ldg
            case 0x0067646c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldh
            case 0x0068646c:
            {
                MKV_DATA char  data_chars[5]   = "aoei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldi
            case 0x0069646c:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldm
            case 0x006d646c:
            {
                MKV_DATA char  data_chars[5]   = "eiua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldo
            case 0x006f646c:
            {
                MKV_DATA char  data_chars[6]   = "ncovw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ldr
            case 0x0072646c:
            {
                MKV_DATA char  data_chars[5]   = "uiya";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lds
            case 0x0073646c:
            {
                MKV_DATA char  data_chars[6]   = "htwiv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ldt
            case 0x0074646c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldu
            case 0x0075646c:
            {
                MKV_DATA char  data_chars[4]   = "fin";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ldw
            case 0x0077646c:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldy
            case 0x0079646c:
            {
                MKV_DATA char  data_chars[3]   = "o-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lea
            case 0x0061656c:
            {
                MKV_DATA char  data_chars[11]   = "cndrtgskfl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // leb
            case 0x0062656c:
            {
                MKV_DATA char  data_chars[8]   = "reoalui";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lec
            case 0x0063656c:
            {
                MKV_DATA char  data_chars[4]   = "kar";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // led
            case 0x0064656c:
            {
                MKV_DATA char  data_chars[8]   = "ngyadfo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lee
            case 0x0065656c:
            {
                MKV_DATA char  data_chars[7]   = "stabdk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lef
            case 0x0066656c:
            {
                MKV_DATA char  data_chars[5]   = "iefl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // leg
            case 0x0067656c:
            {
                MKV_DATA char  data_chars[5]   = "ehia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // leh
            case 0x0068656c:
            {
                MKV_DATA char  data_chars[5]   = "ieoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lei
            case 0x0069656c:
            {
                MKV_DATA char  data_chars[7]   = "tsgbnr";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa492, // 0.642857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lel
            case 0x006c656c:
            {
                MKV_DATA char  data_chars[5]   = "ailo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lem
            case 0x006d656c:
            {
                MKV_DATA char  data_chars[9]   = "iouanprb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // len
            case 0x006e656c:
            {
                MKV_DATA char  data_chars[23]   = "bdstcmlefnrgzyuohkivpa";
                MKV_DATA uint16_t data_weights[22] = {
                    0x260e, // 0.148649 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x114c, // 0.067568 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 22, input_weight, input_seed );
            }
            break;

            // leo
            case 0x006f656c:
            {
                MKV_DATA char  data_chars[6]   = "rcinu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lep
            case 0x0070656c:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // leq
            case 0x0071656c:
            {
                return 'u';
            }
            break;

            // ler
            case 0x0072656c:
            {
                MKV_DATA char  data_chars[11]   = "hsimoknwab";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // les
            case 0x0073656c:
            {
                MKV_DATA char  data_chars[12]   = "tshmfkiplwb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5000, // 0.312500 
                    0x2800, // 0.156250 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // let
            case 0x0074656c:
            {
                MKV_DATA char  data_chars[8]   = "othenri";
                MKV_DATA uint16_t data_weights[7] = {
                    0x67c9, // 0.405405 
                    0x375a, // 0.216216 
                    0x2983, // 0.162162 
                    0x2298, // 0.135135 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // leu
            case 0x0075656c:
            {
                MKV_DATA char  data_chars[5]   = "cgmr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lev
            case 0x0076656c:
            {
                MKV_DATA char  data_chars[4]   = "eau";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lew
            case 0x0077656c:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lex
            case 0x0078656c:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ley
            case 0x0079656c:
            {
                MKV_DATA char  data_chars[6]   = "shlrb";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lfa
            case 0x0061666c:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfh
            case 0x0068666c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfi
            case 0x0069666c:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfo
            case 0x006f666c:
            {
                MKV_DATA char  data_chars[5]   = "roiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lfr
            case 0x0072666c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfs
            case 0x0073666c:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfw
            case 0x0077666c:
            {
                return 'a';
            }
            break;

            // lga
            case 0x0061676c:
            {
                MKV_DATA char  data_chars[3]   = "rv";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lge
            case 0x0065676c:
            {
                MKV_DATA char  data_chars[3]   = "dt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgi
            case 0x0069676c:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgl
            case 0x006c676c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgo
            case 0x006f676c:
            {
                MKV_DATA char  data_chars[5]   = "wnlr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lgr
            case 0x0072676c:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgu
            case 0x0075676c:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lha
            case 0x0061686c:
            {
                MKV_DATA char  data_chars[4]   = "lvn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lhe
            case 0x0065686c:
            {
                MKV_DATA char  data_chars[5]   = "auln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lhi
            case 0x0069686c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lho
            case 0x006f686c:
            {
                MKV_DATA char  data_chars[4]   = "uls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lia
            case 0x0061696c:
            {
                MKV_DATA char  data_chars[5]   = "mbis";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lib
            case 0x0062696c:
            {
                MKV_DATA char  data_chars[8]   = "uiboaeh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lic
            case 0x0063696c:
            {
                MKV_DATA char  data_chars[6]   = "hkeou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lid
            case 0x0064696c:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lie
            case 0x0065696c:
            {
                MKV_DATA char  data_chars[9]   = "smrtbchk";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // lif
            case 0x0066696c:
            {
                MKV_DATA char  data_chars[5]   = "fteo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lig
            case 0x0067696c:
            {
                MKV_DATA char  data_chars[7]   = "airgho";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lik
            case 0x006b696c:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lil
            case 0x006c696c:
            {
                MKV_DATA char  data_chars[4]   = "aly";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lim
            case 0x006d696c:
            {
                MKV_DATA char  data_chars[4]   = "eos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lin
            case 0x006e696c:
            {
                MKV_DATA char  data_chars[15]   = "gtenksidlcohwb";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x241a, // 0.141026 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // lio
            case 0x006f696c:
            {
                MKV_DATA char  data_chars[4]   = "nbt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lip
            case 0x0070696c:
            {
                MKV_DATA char  data_chars[4]   = "ohs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // liq
            case 0x0071696c:
            {
                return 'u';
            }
            break;

            // lis
            case 0x0073696c:
            {
                MKV_DATA char  data_chars[5]   = "thak";
                MKV_DATA uint16_t data_weights[4] = {
                    0xae8c, // 0.681818 
                    0x3a2f, // 0.227273 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lit
            case 0x0074696c:
            {
                MKV_DATA char  data_chars[5]   = "thoy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // liu
            case 0x0075696c:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // liv
            case 0x0076696c:
            {
                MKV_DATA char  data_chars[5]   = "oiae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lkb
            case 0x00626b6c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lke
            case 0x00656b6c:
            {
                MKV_DATA char  data_chars[7]   = "rintel";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lkh
            case 0x00686b6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lki
            case 0x00696b6c:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkl
            case 0x006c6b6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkm
            case 0x006d6b6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkn
            case 0x006e6b6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lla
            case 0x00616c6c:
            {
                MKV_DATA char  data_chars[15]   = "ncrtsibfdgvmhp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x60dd, // 0.378378 
                    0x2983, // 0.162162 
                    0x1f23, // 0.121622 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // llb
            case 0x00626c6c:
            {
                MKV_DATA char  data_chars[6]   = "areou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // llc
            case 0x00636c6c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lld
            case 0x00646c6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lle
            case 0x00656c6c:
            {
                MKV_DATA char  data_chars[10]   = "nrasigety";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6b5b, // 0.419355 
                    0x318c, // 0.193548 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // llf
            case 0x00666c6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llg
            case 0x00676c6c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llh
            case 0x00686c6c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lli
            case 0x00696c6c:
            {
                MKV_DATA char  data_chars[15]   = "necsagbvmolfkp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x520d, // 0.320513 
                    0x313b, // 0.192308 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // llm
            case 0x006d6c6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lln
            case 0x006e6c6c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llo
            case 0x006f6c6c:
            {
                MKV_DATA char  data_chars[12]   = "cwkmsangdhr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7d63, // 0.489796 
                    0x343f, // 0.204082 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // llp
            case 0x00706c6c:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llr
            case 0x00726c6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lls
            case 0x00736c6c:
            {
                MKV_DATA char  data_chars[10]   = "ihmqybfpw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // llt
            case 0x00746c6c:
            {
                MKV_DATA char  data_chars[5]   = "osai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // llw
            case 0x00776c6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lly
            case 0x00796c6c:
            {
                MKV_DATA char  data_chars[11]   = "mnblfgadec";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lma
            case 0x00616d6c:
            {
                MKV_DATA char  data_chars[11]   = "crlhniudgs";
                MKV_DATA uint16_t data_weights[10] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lmb
            case 0x00626d6c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lme
            case 0x00656d6c:
            {
                MKV_DATA char  data_chars[6]   = "nrlad";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lmh
            case 0x00686d6c:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmi
            case 0x00696d6c:
            {
                MKV_DATA char  data_chars[6]   = "sclnr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lmo
            case 0x006f6d6c:
            {
                MKV_DATA char  data_chars[6]   = "rnsul";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7333, // 0.450000 
                    0x6666, // 0.400000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lms
            case 0x00736d6c:
            {
                MKV_DATA char  data_chars[5]   = "ldgt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lmu
            case 0x00756d6c:
            {
                MKV_DATA char  data_chars[4]   = "inl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lmy
            case 0x00796d6c:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lna
            case 0x00616e6c:
            {
                MKV_DATA char  data_chars[14]   = "cbikhmgdpsvtf";
                MKV_DATA uint16_t data_weights[13] = {
                    0x318c, // 0.193548 
                    0x294a, // 0.161290 
                    0x2108, // 0.129032 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // lnb
            case 0x00626e6c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnc
            case 0x00636e6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lne
            case 0x00656e6c:
            {
                MKV_DATA char  data_chars[3]   = "si";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lng
            case 0x00676e6c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lni
            case 0x00696e6c:
            {
                MKV_DATA char  data_chars[4]   = "nes";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lnq
            case 0x00716e6c:
            {
                return 'u';
            }
            break;

            // lnu
            case 0x00756e6c:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnw
            case 0x00776e6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loa
            case 0x00616f6c:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeeef, // 0.933333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lob
            case 0x00626f6c:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loc
            case 0x00636f6c:
            {
                MKV_DATA char  data_chars[4]   = "hkr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdc72, // 0.861111 
                    0x1ed1, // 0.120370 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lod
            case 0x00646f6c:
            {
                MKV_DATA char  data_chars[6]   = "gadei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // log
            case 0x00676f6c:
            {
                MKV_DATA char  data_chars[4]   = "iag";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // loh
            case 0x00686f6c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loi
            case 0x00696f6c:
            {
                MKV_DATA char  data_chars[6]   = "cnstd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lok
            case 0x006b6f6c:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lol
            case 0x006c6f6c:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lom
            case 0x006d6f6c:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lon
            case 0x006e6f6c:
            {
                MKV_DATA char  data_chars[6]   = "gmebd";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbd38, // 0.739130 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // loo
            case 0x006f6f6c:
            {
                MKV_DATA char  data_chars[3]   = "fd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lop
            case 0x00706f6c:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lor
            case 0x00726f6c:
            {
                MKV_DATA char  data_chars[6]   = "atein";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // los
            case 0x00736f6c:
            {
                MKV_DATA char  data_chars[5]   = "sgeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lot
            case 0x00746f6c:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lou
            case 0x00756f6c:
            {
                MKV_DATA char  data_chars[5]   = "snpr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lov
            case 0x00766f6c:
            {
                MKV_DATA char  data_chars[4]   = "aeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // low
            case 0x00776f6c:
            {
                MKV_DATA char  data_chars[11]   = "ahfbostegn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lpa
            case 0x0061706c:
            {
                MKV_DATA char  data_chars[5]   = "yirt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lph
            case 0x0068706c:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpi
            case 0x0069706c:
            {
                MKV_DATA char  data_chars[3]   = "ct";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpo
            case 0x006f706c:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lps
            case 0x0073706c:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lqu
            case 0x0075716c:
            {
                MKV_DATA char  data_chars[4]   = "hoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lra
            case 0x0061726c:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lre
            case 0x0065726c:
            {
                MKV_DATA char  data_chars[5]   = "aegn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lri
            case 0x0069726c:
            {
                MKV_DATA char  data_chars[4]   = "gac";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lro
            case 0x006f726c:
            {
                MKV_DATA char  data_chars[3]   = "sy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lru
            case 0x0075726c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lry
            case 0x0079726c:
            {
                MKV_DATA char  data_chars[3]   = "m-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsa
            case 0x0061736c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsb
            case 0x0062736c:
            {
                MKV_DATA char  data_chars[4]   = "aru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lse
            case 0x0065736c:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsf
            case 0x0066736c:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsh
            case 0x0068736c:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lsi
            case 0x0069736c:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsm
            case 0x006d736c:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsn
            case 0x006e736c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lso
            case 0x006f736c:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsp
            case 0x0070736c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsq
            case 0x0071736c:
            {
                return 'u';
            }
            break;

            // lsr
            case 0x0072736c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lst
            case 0x0074736c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsw
            case 0x0077736c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsy
            case 0x0079736c:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lta
            case 0x0061746c:
            {
                MKV_DATA char  data_chars[5]   = "silr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ltb
            case 0x0062746c:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltc
            case 0x0063746c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lte
            case 0x0065746c:
            {
                MKV_DATA char  data_chars[4]   = "rna";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ltf
            case 0x0066746c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lth
            case 0x0068746c:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lti
            case 0x0069746c:
            {
                MKV_DATA char  data_chars[6]   = "blmpv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ltm
            case 0x006d746c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltn
            case 0x006e746c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lto
            case 0x006f746c:
            {
                MKV_DATA char  data_chars[7]   = "nwuqst";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb5ad, // 0.709677 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ltr
            case 0x0072746c:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lts
            case 0x0073746c:
            {
                MKV_DATA char  data_chars[3]   = "ik";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltv
            case 0x0076746c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lty
            case 0x0079746c:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lua
            case 0x0061756c:
            {
                MKV_DATA char  data_chars[6]   = "cgirs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lub
            case 0x0062756c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // luc
            case 0x0063756c:
            {
                MKV_DATA char  data_chars[4]   = "ehk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lud
            case 0x0064756c:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lue
            case 0x0065756c:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lug
            case 0x0067756c:
            {
                MKV_DATA char  data_chars[4]   = "agt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lui
            case 0x0069756c:
            {
                MKV_DATA char  data_chars[6]   = "btgns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // luk
            case 0x006b756c:
            {
                MKV_DATA char  data_chars[3]   = "em";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lum
            case 0x006d756c:
            {
                MKV_DATA char  data_chars[5]   = "psbl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lun
            case 0x006e756c:
            {
                MKV_DATA char  data_chars[8]   = "naedyic";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lus
            case 0x0073756c:
            {
                MKV_DATA char  data_chars[5]   = "shkt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lut
            case 0x0074756c:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lva
            case 0x0061766c:
            {
                MKV_DATA char  data_chars[6]   = "hndix";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lve
            case 0x0065766c:
            {
                MKV_DATA char  data_chars[5]   = "rdns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lvi
            case 0x0069766c:
            {
                MKV_DATA char  data_chars[6]   = "necls";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lvr
            case 0x0072766c:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwa
            case 0x0061776c:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwh
            case 0x0068776c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwi
            case 0x0069776c:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwo
            case 0x006f776c:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lya
            case 0x0061796c:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyb
            case 0x0062796c:
            {
                MKV_DATA char  data_chars[4]   = "asu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lyc
            case 0x0063796c:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyd
            case 0x0064796c:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lye
            case 0x0065796c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyf
            case 0x0066796c:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyg
            case 0x0067796c:
            {
                MKV_DATA char  data_chars[4]   = "aor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lyl
            case 0x006c796c:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lym
            case 0x006d796c:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyn
            case 0x006e796c:
            {
                MKV_DATA char  data_chars[6]   = "ecdnw";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa2e9, // 0.636364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lyr
            case 0x0072796c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyt
            case 0x0074796c:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyv
            case 0x0076796c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyw
            case 0x0077796c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lzi
            case 0x00697a6c:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // l
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'm':
        {
            switch ( trigram_u32 )
            {
            // maa
            case 0x0061616d:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mab
            case 0x0062616d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mac
            case 0x0063616d:
            {
                MKV_DATA char  data_chars[12]   = "hklqadeunmo";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // mad
            case 0x0064616d:
            {
                MKV_DATA char  data_chars[6]   = "daiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mag
            case 0x0067616d:
            {
                MKV_DATA char  data_chars[6]   = "idegh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mah
            case 0x0068616d:
            {
                MKV_DATA char  data_chars[4]   = "oau";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mai
            case 0x0069616d:
            {
                MKV_DATA char  data_chars[7]   = "nldrsg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x599a, // 0.350000 
                    0x4ccd, // 0.300000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mak
            case 0x006b616d:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mal
            case 0x006c616d:
            {
                MKV_DATA char  data_chars[6]   = "laciu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mam
            case 0x006d616d:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // man
            case 0x006e616d:
            {
                MKV_DATA char  data_chars[11]   = "nsgochyabi";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5174, // 0.318182 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // mar
            case 0x0072616d:
            {
                MKV_DATA char  data_chars[17]   = "yktnaircgbwvhlsj";
                MKV_DATA uint16_t data_weights[16] = {
                    0x313b, // 0.192308 
                    0x2276, // 0.134615 
                    0x1d8a, // 0.115385 
                    0x189e, // 0.096154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // mas
            case 0x0073616d:
            {
                MKV_DATA char  data_chars[8]   = "tadno-h";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mat
            case 0x0074616d:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mau
            case 0x0075616d:
            {
                MKV_DATA char  data_chars[5]   = "rdlc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mav
            case 0x0076616d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // max
            case 0x0078616d:
            {
                MKV_DATA char  data_chars[3]   = "wt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // may
            case 0x0079616d:
            {
                MKV_DATA char  data_chars[5]   = "bfnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mba
            case 0x0061626d:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbd
            case 0x0064626d:
            {
                return 'e';
            }
            break;

            // mbe
            case 0x0065626d:
            {
                MKV_DATA char  data_chars[3]   = "gr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbh
            case 0x0068626d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbi
            case 0x0069626d:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbl
            case 0x006c626d:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mbr
            case 0x0072626d:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mbu
            case 0x0075626d:
            {
                MKV_DATA char  data_chars[5]   = "srci";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mch
            case 0x0068636d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mcl
            case 0x006c636d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mcr
            case 0x0072636d:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdo
            case 0x006f646d:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mea
            case 0x0061656d:
            {
                MKV_DATA char  data_chars[7]   = "dlnvtr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // med
            case 0x0064656d:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mee
            case 0x0065656d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mef
            case 0x0066656d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // meh
            case 0x0068656d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mei
            case 0x0069656d:
            {
                MKV_DATA char  data_chars[4]   = "kgr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mek
            case 0x006b656d:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mel
            case 0x006c656d:
            {
                MKV_DATA char  data_chars[12]   = "vbdflygrzmo";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // mem
            case 0x006d656d:
            {
                MKV_DATA char  data_chars[4]   = "osu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // men
            case 0x006e656d:
            {
                MKV_DATA char  data_chars[9]   = "tynszdim";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // meo
            case 0x006f656d:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mer
            case 0x0072656d:
            {
                MKV_DATA char  data_chars[13]   = "ktscriafhlov";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // mes
            case 0x0073656d:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // met
            case 0x0074656d:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfe
            case 0x0065666d:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfi
            case 0x0069666d:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfo
            case 0x006f666d:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfr
            case 0x0072666d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mge
            case 0x0065676d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mgl
            case 0x006c676d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mgo
            case 0x006f676d:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mgu
            case 0x0075676d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mha
            case 0x0061686d:
            {
                MKV_DATA char  data_chars[4]   = "cnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mhe
            case 0x0065686d:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mhi
            case 0x0069686d:
            {
                MKV_DATA char  data_chars[6]   = "lcadg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mhl
            case 0x006c686d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mho
            case 0x006f686d:
            {
                MKV_DATA char  data_chars[5]   = "rpul";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mhu
            case 0x0075686d:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mia
            case 0x0061696d:
            {
                MKV_DATA char  data_chars[4]   = "blv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mic
            case 0x0063696d:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mid
            case 0x0064696d:
            {
                MKV_DATA char  data_chars[7]   = "dltbfg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8618, // 0.523810 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mie
            case 0x0065696d:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mig
            case 0x0067696d:
            {
                MKV_DATA char  data_chars[4]   = "dlv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mil
            case 0x006c696d:
            {
                MKV_DATA char  data_chars[9]   = "lnetkcmo";
                MKV_DATA uint16_t data_weights[8] = {
                    0xba2f, // 0.727273 
                    0x1a99, // 0.103896 
                    0x0d4c, // 0.051948 
                    0x0d4c, // 0.051948 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mim
            case 0x006d696d:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // min
            case 0x006e696d:
            {
                MKV_DATA char  data_chars[8]   = "gitedna";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5c29, // 0.360000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mir
            case 0x0072696d:
            {
                MKV_DATA char  data_chars[5]   = "imbe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mis
            case 0x0073696d:
            {
                MKV_DATA char  data_chars[6]   = "tdfgc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mit
            case 0x0074696d:
            {
                MKV_DATA char  data_chars[5]   = "hcat";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mla
            case 0x00616c6d:
            {
                MKV_DATA char  data_chars[4]   = "cns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mle
            case 0x00656c6d:
            {
                MKV_DATA char  data_chars[4]   = "dmw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mli
            case 0x00696c6d:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mlo
            case 0x006f6c6d:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mma
            case 0x00616d6d:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mme
            case 0x00656d6d:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmi
            case 0x00696d6d:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmo
            case 0x006f6d6d:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmu
            case 0x00756d6d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmy
            case 0x00796d6d:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mna
            case 0x00616e6d:
            {
                MKV_DATA char  data_chars[5]   = "gvyd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mne
            case 0x00656e6d:
            {
                MKV_DATA char  data_chars[3]   = "s-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mni
            case 0x00696e6d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mno
            case 0x006f6e6d:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moa
            case 0x00616f6d:
            {
                MKV_DATA char  data_chars[4]   = "tkr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // moc
            case 0x00636f6d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mod
            case 0x00646f6d:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mof
            case 0x00666f6d:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mog
            case 0x00676f6d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moi
            case 0x00696f6d:
            {
                MKV_DATA char  data_chars[3]   = "dc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mol
            case 0x006c6f6d:
            {
                MKV_DATA char  data_chars[5]   = "l-iu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mon
            case 0x006e6f6d:
            {
                MKV_DATA char  data_chars[15]   = "tdikeasycqbmrz";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3b14, // 0.230769 
                    0x2c4f, // 0.173077 
                    0x2276, // 0.134615 
                    0x1d8a, // 0.115385 
                    0x189e, // 0.096154 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // moo
            case 0x006f6f6d:
            {
                MKV_DATA char  data_chars[4]   = "rnd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // moq
            case 0x00716f6d:
            {
                return 'u';
            }
            break;

            // mor
            case 0x00726f6d:
            {
                MKV_DATA char  data_chars[9]   = "eatnydil";
                MKV_DATA uint16_t data_weights[8] = {
                    0xcfa5, // 0.811111 
                    0x13e9, // 0.077778 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mos
            case 0x00736f6d:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf1c7, // 0.944444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mot
            case 0x00746f6d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mou
            case 0x00756f6d:
            {
                MKV_DATA char  data_chars[6]   = "ntlrs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9746, // 0.590909 
                    0x3a2f, // 0.227273 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mow
            case 0x00776f6d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moy
            case 0x00796f6d:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpb
            case 0x0062706d:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpe
            case 0x0065706d:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpf
            case 0x0066706d:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mph
            case 0x0068706d:
            {
                MKV_DATA char  data_chars[5]   = "laei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpi
            case 0x0069706d:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpl
            case 0x006c706d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mps
            case 0x0073706d:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpt
            case 0x0074706d:
            {
                return 'o';
            }
            break;

            // mpu
            case 0x0075706d:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mra
            case 0x0061726d:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mre
            case 0x0065726d:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mri
            case 0x0069726d:
            {
                MKV_DATA char  data_chars[4]   = "deg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // msa
            case 0x0061736d:
            {
                MKV_DATA char  data_chars[4]   = "iyr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // msb
            case 0x0062736d:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msc
            case 0x0063736d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msd
            case 0x0064736d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mse
            case 0x0065736d:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msg
            case 0x0067736d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msh
            case 0x0068736d:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msi
            case 0x0069736d:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msl
            case 0x006c736d:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msm
            case 0x006d736d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mst
            case 0x0074736d:
            {
                MKV_DATA char  data_chars[4]   = "oeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mto
            case 0x006f746d:
            {
                MKV_DATA char  data_chars[3]   = "uw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mtr
            case 0x0072746d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mua
            case 0x0061756d:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // muc
            case 0x0063756d:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mue
            case 0x0065756d:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mug
            case 0x0067756d:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mui
            case 0x0069756d:
            {
                MKV_DATA char  data_chars[5]   = "redg";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe276, // 0.884615 
                    0x13b1, // 0.076923 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mul
            case 0x006c756d:
            {
                MKV_DATA char  data_chars[4]   = "lrb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mun
            case 0x006e756d:
            {
                MKV_DATA char  data_chars[7]   = "geilnd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mur
            case 0x0072756d:
            {
                MKV_DATA char  data_chars[6]   = "rtdei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mus
            case 0x0073756d:
            {
                MKV_DATA char  data_chars[7]   = "tsvakn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mut
            case 0x0074756d:
            {
                MKV_DATA char  data_chars[4]   = "hey";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mva
            case 0x0061766d:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwo
            case 0x006f776d:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myb
            case 0x0062796d:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myg
            case 0x0067796d:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myl
            case 0x006c796d:
            {
                MKV_DATA char  data_chars[5]   = "eilo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // myr
            case 0x0072796d:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mys
            case 0x0073796d:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // m
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'n':
        {
            switch ( trigram_u32 )
            {
            // n-a
            case 0x00612d6e:
            {
                MKV_DATA char  data_chars[3]   = "-i";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // n-e
            case 0x00652d6e:
            {
                MKV_DATA char  data_chars[3]   = "on";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // n-g
            case 0x00672d6e:
            {
                return 'o';
            }
            break;

            // n-s
            case 0x00732d6e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // n-t
            case 0x00742d6e:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nab
            case 0x0062616e:
            {
                MKV_DATA char  data_chars[8]   = "roaiuyh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nac
            case 0x0063616e:
            {
                MKV_DATA char  data_chars[10]   = "hrlakoenu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x77d4, // 0.468085 
                    0x3bea, // 0.234043 
                    0x1b3c, // 0.106383 
                    0x15ca, // 0.085106 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // nad
            case 0x0064616e:
            {
                MKV_DATA char  data_chars[6]   = "aireh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // naf
            case 0x0066616e:
            {
                MKV_DATA char  data_chars[5]   = "fiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nag
            case 0x0067616e:
            {
                MKV_DATA char  data_chars[8]   = "aorueim";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nah
            case 0x0068616e:
            {
                MKV_DATA char  data_chars[5]   = "auei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb000, // 0.687500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nai
            case 0x0069616e:
            {
                MKV_DATA char  data_chars[6]   = "nsrgc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x425f, // 0.259259 
                    0x425f, // 0.259259 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nak
            case 0x006b616e:
            {
                MKV_DATA char  data_chars[4]   = "ien";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nal
            case 0x006c616e:
            {
                MKV_DATA char  data_chars[8]   = "dyaelou";
                MKV_DATA uint16_t data_weights[7] = {
                    0x89d9, // 0.538462 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nam
            case 0x006d616e:
            {
                MKV_DATA char  data_chars[7]   = "ouaeip";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nan
            case 0x006e616e:
            {
                MKV_DATA char  data_chars[6]   = "scdeh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nap
            case 0x0070616e:
            {
                MKV_DATA char  data_chars[4]   = "aop";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // naq
            case 0x0071616e:
            {
                return 'u';
            }
            break;

            // nar
            case 0x0072616e:
            {
                MKV_DATA char  data_chars[7]   = "dkryas";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nas
            case 0x0073616e:
            {
                MKV_DATA char  data_chars[7]   = "htgkos";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nat
            case 0x0074616e:
            {
                MKV_DATA char  data_chars[6]   = "heuwy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nau
            case 0x0075616e:
            {
                MKV_DATA char  data_chars[3]   = "lg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nav
            case 0x0076616e:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // naw
            case 0x0077616e:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nba
            case 0x0061626e:
            {
                MKV_DATA char  data_chars[6]   = "nriac";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nbe
            case 0x0065626e:
            {
                MKV_DATA char  data_chars[7]   = "ragite";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nbi
            case 0x0069626e:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbl
            case 0x006c626e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbo
            case 0x006f626e:
            {
                MKV_DATA char  data_chars[7]   = "girswd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nbr
            case 0x0072626e:
            {
                MKV_DATA char  data_chars[6]   = "iaoey";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nbu
            case 0x0075626e:
            {
                MKV_DATA char  data_chars[6]   = "rcils";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nca
            case 0x0061636e:
            {
                MKV_DATA char  data_chars[7]   = "rinpdu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nce
            case 0x0065636e:
            {
                MKV_DATA char  data_chars[4]   = "fkl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nch
            case 0x0068636e:
            {
                MKV_DATA char  data_chars[11]   = "rbaometyin";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2c86, // 0.173913 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ncl
            case 0x006c636e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nco
            case 0x006f636e:
            {
                MKV_DATA char  data_chars[4]   = "rew";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ncr
            case 0x0072636e:
            {
                MKV_DATA char  data_chars[6]   = "oaieu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nct
            case 0x0074636e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ncu
            case 0x0075636e:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nda
            case 0x0061646e:
            {
                MKV_DATA char  data_chars[8]   = "lrvsybi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7943, // 0.473684 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ndb
            case 0x0062646e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nde
            case 0x0065646e:
            {
                MKV_DATA char  data_chars[8]   = "ranvelu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x851f, // 0.520000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ndf
            case 0x0066646e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndg
            case 0x0067646e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndh
            case 0x0068646e:
            {
                MKV_DATA char  data_chars[6]   = "oiuea";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ndi
            case 0x0069646e:
            {
                MKV_DATA char  data_chars[5]   = "esln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ndl
            case 0x006c646e:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndm
            case 0x006d646e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndn
            case 0x006e646e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndo
            case 0x006f646e:
            {
                MKV_DATA char  data_chars[8]   = "nrwciou";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ndr
            case 0x0072646e:
            {
                MKV_DATA char  data_chars[7]   = "aeiyou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nds
            case 0x0073646e:
            {
                MKV_DATA char  data_chars[6]   = "almot";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ndt
            case 0x0074646e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndu
            case 0x0075646e:
            {
                MKV_DATA char  data_chars[4]   = "fbc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndv
            case 0x0076646e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndw
            case 0x0077646e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndy
            case 0x0079646e:
            {
                MKV_DATA char  data_chars[9]   = "ghk-derv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ne-
            case 0x002d656e:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nea
            case 0x0061656e:
            {
                MKV_DATA char  data_chars[6]   = "nprst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // neb
            case 0x0062656e:
            {
                MKV_DATA char  data_chars[4]   = "roy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nec
            case 0x0063656e:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ned
            case 0x0064656e:
            {
                MKV_DATA char  data_chars[4]   = "dgy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nee
            case 0x0065656e:
            {
                MKV_DATA char  data_chars[3]   = "dp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nef
            case 0x0066656e:
            {
                MKV_DATA char  data_chars[4]   = "ifo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // neg
            case 0x0067656e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // neh
            case 0x0068656e:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nei
            case 0x0069656e:
            {
                MKV_DATA char  data_chars[3]   = "lg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nel
            case 0x006c656e:
            {
                MKV_DATA char  data_chars[4]   = "lgi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nem
            case 0x006d656e:
            {
                MKV_DATA char  data_chars[4]   = "opi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nen
            case 0x006e656e:
            {
                MKV_DATA char  data_chars[3]   = "dt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // neo
            case 0x006f656e:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ner
            case 0x0072656e:
            {
                MKV_DATA char  data_chars[10]   = "stlnwybga";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // nes
            case 0x0073656e:
            {
                MKV_DATA char  data_chars[5]   = "sthk";
                MKV_DATA uint16_t data_weights[4] = {
                    0xebec, // 0.921569 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // net
            case 0x0074656e:
            {
                MKV_DATA char  data_chars[6]   = "hrsto";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd098, // 0.814815 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // neu
            case 0x0075656e:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nev
            case 0x0076656e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // new
            case 0x0077656e:
            {
                MKV_DATA char  data_chars[14]   = "tmhblcapgfesi";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3333, // 0.200000 
                    0x2d83, // 0.177778 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ney
            case 0x0079656e:
            {
                MKV_DATA char  data_chars[7]   = "bhwadk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nfa
            case 0x0061666e:
            {
                MKV_DATA char  data_chars[3]   = "ur";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfe
            case 0x0065666e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nff
            case 0x0066666e:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfi
            case 0x0069666e:
            {
                MKV_DATA char  data_chars[4]   = "enr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nfl
            case 0x006c666e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfo
            case 0x006f666e:
            {
                MKV_DATA char  data_chars[4]   = "orl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nfr
            case 0x0072666e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfu
            case 0x0075666e:
            {
                MKV_DATA char  data_chars[3]   = "ri";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nga
            case 0x0061676e:
            {
                MKV_DATA char  data_chars[9]   = "rslntvib";
                MKV_DATA uint16_t data_weights[8] = {
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ngb
            case 0x0062676e:
            {
                MKV_DATA char  data_chars[4]   = "auo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngc
            case 0x0063676e:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngd
            case 0x0064676e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nge
            case 0x0065676e:
            {
                MKV_DATA char  data_chars[6]   = "ramnp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngf
            case 0x0066676e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngh
            case 0x0068676e:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngi
            case 0x0069676e:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngk
            case 0x006b676e:
            {
                return 'e';
            }
            break;

            // ngl
            case 0x006c676e:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngm
            case 0x006d676e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngn
            case 0x006e676e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngo
            case 0x006f676e:
            {
                MKV_DATA char  data_chars[6]   = "noblm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngp
            case 0x0070676e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngr
            case 0x0072676e:
            {
                MKV_DATA char  data_chars[6]   = "aiyeo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngs
            case 0x0073676e:
            {
                MKV_DATA char  data_chars[11]   = "tihckbeflm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ngt
            case 0x0074676e:
            {
                return 'o';
            }
            break;

            // ngu
            case 0x0075676e:
            {
                MKV_DATA char  data_chars[4]   = "esr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngw
            case 0x0077676e:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nha
            case 0x0061686e:
            {
                MKV_DATA char  data_chars[5]   = "lruv";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nhe
            case 0x0065686e:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nhi
            case 0x0069686e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nho
            case 0x006f686e:
            {
                MKV_DATA char  data_chars[4]   = "lup";
                MKV_DATA uint16_t data_weights[3] = {
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nhu
            case 0x0075686e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nia
            case 0x0061696e:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nib
            case 0x0062696e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nic
            case 0x0063696e:
            {
                MKV_DATA char  data_chars[7]   = "hkrual";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9697, // 0.588235 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nid
            case 0x0064696e:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nie
            case 0x0065696e:
            {
                MKV_DATA char  data_chars[7]   = "hsbfgl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nif
            case 0x0066696e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nig
            case 0x0067696e:
            {
                MKV_DATA char  data_chars[6]   = "hgioa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nik
            case 0x006b696e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nil
            case 0x006c696e:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nim
            case 0x006d696e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nin
            case 0x006e696e:
            {
                MKV_DATA char  data_chars[6]   = "giveo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nip
            case 0x0070696e:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // niq
            case 0x0071696e:
            {
                return 'u';
            }
            break;

            // nir
            case 0x0072696e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nis
            case 0x0073696e:
            {
                MKV_DATA char  data_chars[8]   = "htbdlei";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb8a8, // 0.721311 
                    0x25c5, // 0.147541 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nit
            case 0x0074696e:
            {
                MKV_DATA char  data_chars[5]   = "hosy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // niv
            case 0x0076696e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkb
            case 0x00626b6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nke
            case 0x00656b6e:
            {
                MKV_DATA char  data_chars[5]   = "lnrg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nkf
            case 0x00666b6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkg
            case 0x00676b6e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkh
            case 0x00686b6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nki
            case 0x00696b6e:
            {
                MKV_DATA char  data_chars[4]   = "ner";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nkl
            case 0x006c6b6e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkn
            case 0x006e6b6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nks
            case 0x00736b6e:
            {
                MKV_DATA char  data_chars[6]   = "hwint";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nkt
            case 0x00746b6e:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nla
            case 0x00616c6e:
            {
                MKV_DATA char  data_chars[5]   = "rwbn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nle
            case 0x00656c6e:
            {
                MKV_DATA char  data_chars[6]   = "yaeic";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nli
            case 0x00696c6e:
            {
                MKV_DATA char  data_chars[6]   = "vacet";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nlo
            case 0x006f6c6e:
            {
                MKV_DATA char  data_chars[8]   = "caipsum";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa3d7, // 0.640000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nlu
            case 0x00756c6e:
            {
                MKV_DATA char  data_chars[4]   = "cia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nma
            case 0x00616d6e:
            {
                MKV_DATA char  data_chars[4]   = "yrv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nmh
            case 0x00686d6e:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nmi
            case 0x00696d6e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nmo
            case 0x006f6d6e:
            {
                MKV_DATA char  data_chars[5]   = "rguw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd555, // 0.833333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nmu
            case 0x00756d6e:
            {
                MKV_DATA char  data_chars[5]   = "inrc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nmy
            case 0x00796d6e:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nna
            case 0x00616e6e:
            {
                MKV_DATA char  data_chars[11]   = "ntivcdlhsu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7bdf, // 0.483871 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // nnb
            case 0x00626e6e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnd
            case 0x00646e6e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nne
            case 0x00656e6e:
            {
                MKV_DATA char  data_chars[11]   = "rtlsiyacdf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4e39, // 0.305556 
                    0x38e4, // 0.222222 
                    0x31c7, // 0.194444 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // nnf
            case 0x00666e6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nni
            case 0x00696e6e:
            {
                MKV_DATA char  data_chars[7]   = "sencgk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x43c4, // 0.264706 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nno
            case 0x006f6e6e:
            {
                MKV_DATA char  data_chars[7]   = "cxwbfn";
                MKV_DATA uint16_t data_weights[6] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nnp
            case 0x00706e6e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nns
            case 0x00736e6e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnv
            case 0x00766e6e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnw
            case 0x00776e6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nny
            case 0x00796e6e:
            {
                MKV_DATA char  data_chars[9]   = "blsfkrtg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // noa
            case 0x00616f6e:
            {
                MKV_DATA char  data_chars[3]   = "dc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nob
            case 0x00626f6e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // noc
            case 0x00636f6e:
            {
                MKV_DATA char  data_chars[4]   = "khb";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa1e2, // 0.632353 
                    0x5a5a, // 0.352941 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nof
            case 0x00666f6e:
            {
                MKV_DATA char  data_chars[3]   = "if";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nog
            case 0x00676f6e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // noi
            case 0x00696f6e:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nol
            case 0x006c6f6e:
            {
                MKV_DATA char  data_chars[3]   = "l-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // non
            case 0x006e6f6e:
            {
                MKV_DATA char  data_chars[6]   = "bgims";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // noo
            case 0x006f6f6e:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nor
            case 0x00726f6e:
            {
                MKV_DATA char  data_chars[9]   = "tdwbhmra";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nos
            case 0x00736f6e:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // not
            case 0x00746f6e:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nou
            case 0x00756f6e:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nov
            case 0x00766f6e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // now
            case 0x00776f6e:
            {
                MKV_DATA char  data_chars[4]   = "eal";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nox
            case 0x00786f6e:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npa
            case 0x0061706e:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nph
            case 0x0068706e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npo
            case 0x006f706e:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npr
            case 0x0072706e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nqu
            case 0x0075716e:
            {
                MKV_DATA char  data_chars[5]   = "ahei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nra
            case 0x0061726e:
            {
                MKV_DATA char  data_chars[5]   = "egit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nre
            case 0x0065726e:
            {
                MKV_DATA char  data_chars[5]   = "aoei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nri
            case 0x0069726e:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nro
            case 0x006f726e:
            {
                MKV_DATA char  data_chars[5]   = "snta";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nry
            case 0x0079726e:
            {
                MKV_DATA char  data_chars[3]   = "a-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsa
            case 0x0061736e:
            {
                MKV_DATA char  data_chars[5]   = "ybln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nsb
            case 0x0062736e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsc
            case 0x0063736e:
            {
                MKV_DATA char  data_chars[6]   = "lohra";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsd
            case 0x0064736e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nse
            case 0x0065736e:
            {
                MKV_DATA char  data_chars[6]   = "glrtw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsf
            case 0x0066736e:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nsg
            case 0x0067736e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsh
            case 0x0068736e:
            {
                MKV_DATA char  data_chars[6]   = "aieou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x599a, // 0.350000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsi
            case 0x0069736e:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf0f1, // 0.941176 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsl
            case 0x006c736e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsp
            case 0x0070736e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsr
            case 0x0072736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nst
            case 0x0074736e:
            {
                MKV_DATA char  data_chars[5]   = "orai";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd800, // 0.843750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nsu
            case 0x0075736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsw
            case 0x0077736e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsy
            case 0x0079736e:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nta
            case 0x0061746e:
            {
                MKV_DATA char  data_chars[8]   = "iltsgnr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ntb
            case 0x0062746e:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nte
            case 0x0065746e:
            {
                MKV_DATA char  data_chars[5]   = "rise";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ntf
            case 0x0066746e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntg
            case 0x0067746e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nth
            case 0x0068746e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nti
            case 0x0069746e:
            {
                MKV_DATA char  data_chars[8]   = "nblrsae";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ntl
            case 0x006c746e:
            {
                MKV_DATA char  data_chars[4]   = "aey";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ntm
            case 0x006d746e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nto
            case 0x006f746e:
            {
                MKV_DATA char  data_chars[6]   = "nrwuc";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb13b, // 0.692308 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ntp
            case 0x0070746e:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntr
            case 0x0072746e:
            {
                MKV_DATA char  data_chars[6]   = "ayoue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9436, // 0.578947 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nts
            case 0x0073746e:
            {
                MKV_DATA char  data_chars[4]   = "fho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ntu
            case 0x0075746e:
            {
                MKV_DATA char  data_chars[5]   = "rliy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nty
            case 0x0079746e:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nua
            case 0x0061756e:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nui
            case 0x0069756e:
            {
                MKV_DATA char  data_chars[3]   = "lg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nun
            case 0x006e756e:
            {
                MKV_DATA char  data_chars[4]   = "ght";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nur
            case 0x0072756e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nva
            case 0x0061766e:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nve
            case 0x0065766e:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfbdf, // 0.983871 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nvi
            case 0x0069766e:
            {
                MKV_DATA char  data_chars[4]   = "lec";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nvu
            case 0x0075766e:
            {
                return 'l';
            }
            break;

            // nwa
            case 0x0061776e:
            {
                MKV_DATA char  data_chars[4]   = "ltd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nwe
            case 0x0065776e:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwh
            case 0x0068776e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwi
            case 0x0069776e:
            {
                MKV_DATA char  data_chars[3]   = "cl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwo
            case 0x006f776e:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwy
            case 0x0079776e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nxh
            case 0x0068786e:
            {
                return 'o';
            }
            break;

            // nya
            case 0x0061796e:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyb
            case 0x0062796e:
            {
                MKV_DATA char  data_chars[4]   = "ras";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyd
            case 0x0064796e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyf
            case 0x0066796e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyg
            case 0x0067796e:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyh
            case 0x0068796e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyk
            case 0x006b796e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyl
            case 0x006c796e:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nym
            case 0x006d796e:
            {
                MKV_DATA char  data_chars[3]   = "ub";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyr
            case 0x0072796e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nys
            case 0x0073796e:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyt
            case 0x0074796e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nze
            case 0x00657a6e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nzi
            case 0x00697a6e:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // n
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'o':
        {
            switch ( trigram_u32 )
            {
            // oac
            case 0x0063616f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oad
            case 0x0064616f:
            {
                MKV_DATA char  data_chars[9]   = "shfmw-el";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // oai
            case 0x0069616f:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oak
            case 0x006b616f:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oal
            case 0x006c616f:
            {
                MKV_DATA char  data_chars[6]   = "bfhst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oan
            case 0x006e616f:
            {
                MKV_DATA char  data_chars[6]   = "hsdib";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oap
            case 0x0070616f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oar
            case 0x0072616f:
            {
                MKV_DATA char  data_chars[3]   = "fh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oas
            case 0x0073616f:
            {
                MKV_DATA char  data_chars[3]   = "t-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oat
            case 0x0074616f:
            {
                MKV_DATA char  data_chars[9]   = "shbdeflm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // oba
            case 0x0061626f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obb
            case 0x0062626f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obe
            case 0x0065626f:
            {
                MKV_DATA char  data_chars[4]   = "rgl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // obh
            case 0x0068626f:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obi
            case 0x0069626f:
            {
                MKV_DATA char  data_chars[4]   = "seg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // obk
            case 0x006b626f:
            {
                return 'i';
            }
            break;

            // obl
            case 0x006c626f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obo
            case 0x006f626f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obr
            case 0x0072626f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obs
            case 0x0073626f:
            {
                MKV_DATA char  data_chars[4]   = "dno";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oca
            case 0x0061636f:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ocb
            case 0x0062636f:
            {
                return 'r';
            }
            break;

            // och
            case 0x0068636f:
            {
                MKV_DATA char  data_chars[20]   = "aegyirstmdbfhconwlp";
                MKV_DATA uint16_t data_weights[19] = {
                    0x37c3, // 0.217822 
                    0x20f3, // 0.128713 
                    0x1447, // 0.079208 
                    0x1447, // 0.079208 
                    0x0f35, // 0.059406 
                    0x0f35, // 0.059406 
                    0x0f35, // 0.059406 
                    0x0f35, // 0.059406 
                    0x0a23, // 0.039604 
                    0x0a23, // 0.039604 
                    0x079b, // 0.029703 
                    0x079b, // 0.029703 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // oci
            case 0x0069636f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ock
            case 0x006b636f:
            {
                MKV_DATA char  data_chars[14]   = "abehilsfgtrcn";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1aab, // 0.104167 
                    0x1aab, // 0.104167 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ocr
            case 0x0072636f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oda
            case 0x0061646f:
            {
                MKV_DATA char  data_chars[4]   = "lcb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odb
            case 0x0062646f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odd
            case 0x0064646f:
            {
                MKV_DATA char  data_chars[7]   = "aeiloy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ode
            case 0x0065646f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odf
            case 0x0066646f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odg
            case 0x0067646f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odh
            case 0x0068646f:
            {
                MKV_DATA char  data_chars[5]   = "aeoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odi
            case 0x0069646f:
            {
                MKV_DATA char  data_chars[4]   = "ecg";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odl
            case 0x006c646f:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ods
            case 0x0073646f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odv
            case 0x0076646f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odw
            case 0x0077646f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oes
            case 0x0073656f:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // off
            case 0x0066666f:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ofi
            case 0x0069666f:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oft
            case 0x0074666f:
            {
                MKV_DATA char  data_chars[7]   = "flmnsa";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oga
            case 0x0061676f:
            {
                MKV_DATA char  data_chars[7]   = "nrltci";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oge
            case 0x0065676f:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogg
            case 0x0067676f:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogh
            case 0x0068676f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogi
            case 0x0069676f:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogl
            case 0x006c676f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogm
            case 0x006d676f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogn
            case 0x006e676f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogp
            case 0x0070676f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogr
            case 0x0072676f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogs
            case 0x0073676f:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogt
            case 0x0074676f:
            {
                return 'o';
            }
            break;

            // ogw
            case 0x0077676f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohe
            case 0x0065686f:
            {
                MKV_DATA char  data_chars[3]   = "n-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohn
            case 0x006e686f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oho
            case 0x006f686f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohu
            case 0x0075686f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oic
            case 0x0063696f:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oid
            case 0x0064696f:
            {
                MKV_DATA char  data_chars[4]   = "ahe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oil
            case 0x006c696f:
            {
                MKV_DATA char  data_chars[3]   = "lh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oin
            case 0x006e696f:
            {
                MKV_DATA char  data_chars[6]   = "entdi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oir
            case 0x0072696f:
            {
                MKV_DATA char  data_chars[4]   = "ste";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ois
            case 0x0073696f:
            {
                MKV_DATA char  data_chars[6]   = "hdetn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oke
            case 0x00656b6f:
            {
                MKV_DATA char  data_chars[3]   = "dr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okf
            case 0x00666b6f:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oki
            case 0x00696b6f:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okn
            case 0x006e6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oks
            case 0x00736b6f:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ol-
            case 0x002d6c6f:
            {
                return 'c';
            }
            break;

            // ola
            case 0x00616c6f:
            {
                MKV_DATA char  data_chars[5]   = "isnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // olb
            case 0x00626c6f:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // old
            case 0x00646c6f:
            {
                MKV_DATA char  data_chars[12]   = "sarhiotbewm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ole
            case 0x00656c6f:
            {
                MKV_DATA char  data_chars[6]   = "sfhmw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // olf
            case 0x00666c6f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olg
            case 0x00676c6f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olh
            case 0x00686c6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oli
            case 0x00696c6f:
            {
                MKV_DATA char  data_chars[7]   = "ncegst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oll
            case 0x006c6c6f:
            {
                MKV_DATA char  data_chars[8]   = "aoieycr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5dde, // 0.366667 
                    0x3bbc, // 0.233333 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // olm
            case 0x006d6c6f:
            {
                MKV_DATA char  data_chars[7]   = "sahoei";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oln
            case 0x006e6c6f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olp
            case 0x00706c6f:
            {
                MKV_DATA char  data_chars[3]   = "hy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ols
            case 0x00736c6f:
            {
                MKV_DATA char  data_chars[3]   = "tp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olt
            case 0x00746c6f:
            {
                MKV_DATA char  data_chars[5]   = "oafn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // olu
            case 0x00756c6f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olv
            case 0x00766c6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olw
            case 0x00776c6f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oly
            case 0x00796c6f:
            {
                MKV_DATA char  data_chars[6]   = "glrtw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oma
            case 0x00616d6f:
            {
                MKV_DATA char  data_chars[8]   = "nrtcgks";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // omb
            case 0x00626d6f:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omc
            case 0x00636d6f:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ome
            case 0x00656d6f:
            {
                MKV_DATA char  data_chars[7]   = "shlmrf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // omf
            case 0x00666d6f:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omh
            case 0x00686d6f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omi
            case 0x00696d6f:
            {
                MKV_DATA char  data_chars[6]   = "nescl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oml
            case 0x006c6d6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omm
            case 0x006d6d6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omn
            case 0x006e6d6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omo
            case 0x006f6d6f:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omr
            case 0x00726d6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oms
            case 0x00736d6f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omu
            case 0x00756d6f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // on-
            case 0x002d6e6f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ona
            case 0x00616e6f:
            {
                MKV_DATA char  data_chars[9]   = "clnribwd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ccd, // 0.300000 
                    0x4444, // 0.266667 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // onb
            case 0x00626e6f:
            {
                MKV_DATA char  data_chars[7]   = "ruioae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // onc
            case 0x00636e6f:
            {
                MKV_DATA char  data_chars[4]   = "her";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ond
            case 0x00646e6f:
            {
                MKV_DATA char  data_chars[7]   = "uiovab";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // one
            case 0x00656e6f:
            {
                MKV_DATA char  data_chars[9]   = "yhlbmsdf";
                MKV_DATA uint16_t data_weights[8] = {
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // onf
            case 0x00666e6f:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ong
            case 0x00676e6f:
            {
                MKV_DATA char  data_chars[13]   = "rafsuhpmnbcl";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3555, // 0.208333 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // onh
            case 0x00686e6f:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa1af, // 0.631579 
                    0x50d8, // 0.315789 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oni
            case 0x00696e6f:
            {
                MKV_DATA char  data_chars[9]   = "ecakfmsv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // onk
            case 0x006b6e6f:
            {
                MKV_DATA char  data_chars[5]   = "stln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // onl
            case 0x006c6e6f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onm
            case 0x006d6e6f:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onn
            case 0x006e6e6f:
            {
                MKV_DATA char  data_chars[7]   = "yaeips";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ono
            case 0x006f6e6f:
            {
                MKV_DATA char  data_chars[4]   = "cnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onp
            case 0x00706e6f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onq
            case 0x00716e6f:
            {
                return 'u';
            }
            break;

            // onr
            case 0x00726e6f:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ons
            case 0x00736e6f:
            {
                MKV_DATA char  data_chars[8]   = "thiybef";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ont
            case 0x00746e6f:
            {
                MKV_DATA char  data_chars[7]   = "ofirgh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // onv
            case 0x00766e6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onw
            case 0x00776e6f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ony
            case 0x00796e6f:
            {
                MKV_DATA char  data_chars[3]   = "bm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onz
            case 0x007a6e6f:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ood
            case 0x00646f6f:
            {
                MKV_DATA char  data_chars[10]   = "hilswebfv";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ook
            case 0x006b6f6f:
            {
                MKV_DATA char  data_chars[5]   = "fens";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ool
            case 0x006c6f6f:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oom
            case 0x006d6f6f:
            {
                MKV_DATA char  data_chars[7]   = "hilraf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oon
            case 0x006e6f6f:
            {
                MKV_DATA char  data_chars[4]   = "ifz";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oop
            case 0x00706f6f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oor
            case 0x00726f6f:
            {
                MKV_DATA char  data_chars[5]   = "ehps";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oot
            case 0x00746f6f:
            {
                MKV_DATA char  data_chars[5]   = "fhps";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // opa
            case 0x0061706f:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opb
            case 0x0062706f:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ope
            case 0x0065706f:
            {
                MKV_DATA char  data_chars[3]   = "fm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opi
            case 0x0069706f:
            {
                MKV_DATA char  data_chars[4]   = "ens";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // opl
            case 0x006c706f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opm
            case 0x006d706f:
            {
                return 'i';
            }
            break;

            // opo
            case 0x006f706f:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opp
            case 0x0070706f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ops
            case 0x0073706f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opt
            case 0x0074706f:
            {
                return 'o';
            }
            break;

            // oqu
            case 0x0075716f:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ora
            case 0x0061726f:
            {
                MKV_DATA char  data_chars[9]   = "nirystcl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // orb
            case 0x0062726f:
            {
                MKV_DATA char  data_chars[8]   = "oeiuyar";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // orc
            case 0x0063726f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ord
            case 0x0064726f:
            {
                MKV_DATA char  data_chars[13]   = "oiahsleymtdj";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4f73, // 0.310345 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // ore
            case 0x0065726f:
            {
                MKV_DATA char  data_chars[10]   = "sbnflmdrh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // orf
            case 0x0066726f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // org
            case 0x0067726f:
            {
                MKV_DATA char  data_chars[6]   = "aeuhi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // orh
            case 0x0068726f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ori
            case 0x0069726f:
            {
                MKV_DATA char  data_chars[5]   = "nesd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ork
            case 0x006b726f:
            {
                MKV_DATA char  data_chars[4]   = "neh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // orl
            case 0x006c726f:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orm
            case 0x006d726f:
            {
                MKV_DATA char  data_chars[5]   = "iosa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // orn
            case 0x006e726f:
            {
                MKV_DATA char  data_chars[13]   = "aiteohyldsrb";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2be3, // 0.171429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1d42, // 0.114286 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // oro
            case 0x006f726f:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orp
            case 0x0070726f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orq
            case 0x0071726f:
            {
                return 'u';
            }
            break;

            // orr
            case 0x0072726f:
            {
                MKV_DATA char  data_chars[6]   = "iaoye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x594d, // 0.348837 
                    0x417d, // 0.255814 
                    0x2fa1, // 0.186047 
                    0x1dc4, // 0.116279 
                    0x17d0, // 0.093023 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ors
            case 0x0073726f:
            {
                MKV_DATA char  data_chars[8]   = "lotbeih";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ort
            case 0x0074726f:
            {
                MKV_DATA char  data_chars[18]   = "hoernasil-ukgtvpm";
                MKV_DATA uint16_t data_weights[17] = {
                    0x3e10, // 0.242424 
                    0x22e9, // 0.136364 
                    0x1b27, // 0.106061 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // orv
            case 0x0076726f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orw
            case 0x0077726f:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ory
            case 0x0079726f:
            {
                MKV_DATA char  data_chars[3]   = "-g";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osa
            case 0x0061736f:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osb
            case 0x0062736f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osc
            case 0x0063736f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ose
            case 0x0065736f:
            {
                MKV_DATA char  data_chars[8]   = "bhmnwil";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // osg
            case 0x0067736f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osh
            case 0x0068736f:
            {
                MKV_DATA char  data_chars[3]   = "av";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osk
            case 0x006b736f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osl
            case 0x006c736f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osn
            case 0x006e736f:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // osp
            case 0x0070736f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oss
            case 0x0073736f:
            {
                MKV_DATA char  data_chars[18]   = "bhitlmagrnofke-dp";
                MKV_DATA uint16_t data_weights[17] = {
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ost
            case 0x0074736f:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // osw
            case 0x0077736f:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // osy
            case 0x0079736f:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ota
            case 0x0061746f:
            {
                MKV_DATA char  data_chars[3]   = "ri";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otb
            case 0x0062746f:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ote
            case 0x0065746f:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otf
            case 0x0066746f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oth
            case 0x0068746f:
            {
                MKV_DATA char  data_chars[9]   = "ieamnqwb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x68ba, // 0.409091 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // otl
            case 0x006c746f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oto
            case 0x006f746f:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otp
            case 0x0070746f:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ots
            case 0x0073746f:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ott
            case 0x0074746f:
            {
                MKV_DATA char  data_chars[6]   = "eaois";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // otv
            case 0x0076746f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otw
            case 0x0077746f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oub
            case 0x0062756f:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ouc
            case 0x0063756f:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oug
            case 0x0067756f:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oul
            case 0x006c756f:
            {
                MKV_DATA char  data_chars[11]   = "litnvdaprz";
                MKV_DATA uint16_t data_weights[10] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // oun
            case 0x006e756f:
            {
                MKV_DATA char  data_chars[9]   = "tdbeshir";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x57c5, // 0.342857 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // oup
            case 0x0070756f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // our
            case 0x0072756f:
            {
                MKV_DATA char  data_chars[10]   = "tiadhlnos";
                MKV_DATA uint16_t data_weights[9] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ous
            case 0x0073756f:
            {
                MKV_DATA char  data_chars[9]   = "etalwbds";
                MKV_DATA uint16_t data_weights[8] = {
                    0xc211, // 0.758065 
                    0x2108, // 0.129032 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // out
            case 0x0074756f:
            {
                MKV_DATA char  data_chars[4]   = "heo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd794, // 0.842105 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ova
            case 0x0061766f:
            {
                MKV_DATA char  data_chars[4]   = "niy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ove
            case 0x0065766f:
            {
                MKV_DATA char  data_chars[6]   = "rcnas";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ovi
            case 0x0069766f:
            {
                MKV_DATA char  data_chars[4]   = "egn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ovu
            case 0x0075766f:
            {
                return 'l';
            }
            break;

            // owa
            case 0x0061776f:
            {
                MKV_DATA char  data_chars[5]   = "nyrl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // owb
            case 0x0062776f:
            {
                MKV_DATA char  data_chars[4]   = "era";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owc
            case 0x0063776f:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owd
            case 0x0064776f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owe
            case 0x0065776f:
            {
                MKV_DATA char  data_chars[4]   = "rst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9d8a, // 0.615385 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owf
            case 0x0066776f:
            {
                MKV_DATA char  data_chars[5]   = "oail";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // owg
            case 0x0067776f:
            {
                return 'a';
            }
            break;

            // owh
            case 0x0068776f:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owi
            case 0x0069776f:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owk
            case 0x006b776f:
            {
                MKV_DATA char  data_chars[4]   = "hst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owl
            case 0x006c776f:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owm
            case 0x006d776f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // own
            case 0x006e776f:
            {
                MKV_DATA char  data_chars[7]   = "hfisae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // owo
            case 0x006f776f:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owp
            case 0x0070776f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owr
            case 0x0072776f:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ows
            case 0x0073776f:
            {
                MKV_DATA char  data_chars[4]   = "tbh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owt
            case 0x0074776f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oww
            case 0x0077776f:
            {
                return 'o';
            }
            break;

            // oxb
            case 0x0062786f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxe
            case 0x0065786f:
            {
                return 't';
            }
            break;

            // oxg
            case 0x0067786f:
            {
                return 'a';
            }
            break;

            // oxl
            case 0x006c786f:
            {
                return 'e';
            }
            break;

            // oxn
            case 0x006e786f:
            {
                return 'a';
            }
            break;

            // oxt
            case 0x0074786f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxw
            case 0x0077786f:
            {
                return 'e';
            }
            break;

            // oya
            case 0x0061796f:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyb
            case 0x0062796f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyc
            case 0x0063796f:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oye
            case 0x0065796f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyl
            case 0x006c796f:
            {
                MKV_DATA char  data_chars[5]   = "eotu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oyn
            case 0x006e796f:
            {
                MKV_DATA char  data_chars[4]   = "eda";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oys
            case 0x0073796f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oze
            case 0x00657a6f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // o
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'p':
        {
            switch ( trigram_u32 )
            {
            // pab
            case 0x00626170:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pac
            case 0x00636170:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pad
            case 0x00646170:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // paf
            case 0x00666170:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pai
            case 0x00696170:
            {
                MKV_DATA char  data_chars[5]   = "rsdg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pal
            case 0x006c6170:
            {
                MKV_DATA char  data_chars[4]   = "ain";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pan
            case 0x006e6170:
            {
                MKV_DATA char  data_chars[5]   = "sbgh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pap
            case 0x00706170:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // par
            case 0x00726170:
            {
                MKV_DATA char  data_chars[5]   = "ktbs";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd000, // 0.812500 
                    0x2000, // 0.125000 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pas
            case 0x00736170:
            {
                MKV_DATA char  data_chars[3]   = "l-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pat
            case 0x00746170:
            {
                MKV_DATA char  data_chars[5]   = "hrtn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pau
            case 0x00756170:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pax
            case 0x00786170:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pbe
            case 0x00656270:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pbr
            case 0x00726270:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pdo
            case 0x006f6470:
            {
                MKV_DATA char  data_chars[3]   = "wb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pea
            case 0x00616570:
            {
                MKV_DATA char  data_chars[4]   = "tns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ped
            case 0x00646570:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pee
            case 0x00656570:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pef
            case 0x00666570:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pei
            case 0x00696570:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pel
            case 0x006c6570:
            {
                MKV_DATA char  data_chars[5]   = "htkl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pem
            case 0x006d6570:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pen
            case 0x006e6570:
            {
                MKV_DATA char  data_chars[7]   = "incpst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // per
            case 0x00726570:
            {
                MKV_DATA char  data_chars[8]   = "tscdhkl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pet
            case 0x00746570:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pey
            case 0x00796570:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfi
            case 0x00696670:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfo
            case 0x006f6670:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pha
            case 0x00616870:
            {
                MKV_DATA char  data_chars[5]   = "nilu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // phe
            case 0x00656870:
            {
                MKV_DATA char  data_chars[6]   = "adirt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // phi
            case 0x00696870:
            {
                MKV_DATA char  data_chars[4]   = "nlc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb8e4, // 0.722222 
                    0x38e4, // 0.222222 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // phl
            case 0x006c6870:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pho
            case 0x006f6870:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // phr
            case 0x00726870:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // phu
            case 0x00756870:
            {
                MKV_DATA char  data_chars[4]   = "bir";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pic
            case 0x00636970:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pie
            case 0x00656970:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pig
            case 0x00676970:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pil
            case 0x006c6970:
            {
                MKV_DATA char  data_chars[5]   = "amrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pin
            case 0x006e6970:
            {
                MKV_DATA char  data_chars[8]   = "dkmnwag";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pip
            case 0x00706970:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pir
            case 0x00726970:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pis
            case 0x00736970:
            {
                MKV_DATA char  data_chars[4]   = "dgt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pit
            case 0x00746970:
            {
                MKV_DATA char  data_chars[13]   = "tcmlrsfpbgke";
                MKV_DATA uint16_t data_weights[12] = {
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // pki
            case 0x00696b70:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pla
            case 0x00616c70:
            {
                MKV_DATA char  data_chars[6]   = "niwsc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ple
            case 0x00656c70:
            {
                MKV_DATA char  data_chars[6]   = "tagch";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // plo
            case 0x006f6c70:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pmi
            case 0x00696d70:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pne
            case 0x00656e70:
            {
                MKV_DATA char  data_chars[3]   = "s-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poc
            case 0x00636f70:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poi
            case 0x00696f70:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pol
            case 0x006c6f70:
            {
                MKV_DATA char  data_chars[9]   = "ltmnebgw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ccd, // 0.300000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pon
            case 0x006e6f70:
            {
                MKV_DATA char  data_chars[3]   = "t-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poo
            case 0x006f6f70:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // por
            case 0x00726f70:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pos
            case 0x00736f70:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pot
            case 0x00746f70:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pou
            case 0x00756f70:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pow
            case 0x00776f70:
            {
                MKV_DATA char  data_chars[5]   = "fimr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ppa
            case 0x00617070:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppe
            case 0x00657070:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppf
            case 0x00667070:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppi
            case 0x00697070:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppl
            case 0x006c7070:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppo
            case 0x006f7070:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pra
            case 0x00617270:
            {
                MKV_DATA char  data_chars[3]   = "bi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pre
            case 0x00657270:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pri
            case 0x00697270:
            {
                MKV_DATA char  data_chars[4]   = "neo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pro
            case 0x006f7270:
            {
                MKV_DATA char  data_chars[4]   = "suv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // psh
            case 0x00687370:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psi
            case 0x00697370:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pst
            case 0x00747370:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pto
            case 0x006f7470:
            {
                MKV_DATA char  data_chars[4]   = "nuw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pul
            case 0x006c7570:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pum
            case 0x006d7570:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pun
            case 0x006e7570:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // put
            case 0x00747570:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwo
            case 0x006f7770:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // p
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'q':
        {
            switch ( trigram_u32 )
            {
            // qua
            case 0x00617571:
            {
                MKV_DATA char  data_chars[6]   = "ryint";
                MKV_DATA uint16_t data_weights[5] = {
                    0xca1b, // 0.789474 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // que
            case 0x00657571:
            {
                MKV_DATA char  data_chars[4]   = "eni";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // quh
            case 0x00687571:
            {
                MKV_DATA char  data_chars[6]   = "aieoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // qui
            case 0x00697571:
            {
                MKV_DATA char  data_chars[5]   = "dlvc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // quo
            case 0x006f7571:
            {
                MKV_DATA char  data_chars[5]   = "ytxi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // q
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'r':
        {
            switch ( trigram_u32 )
            {
            // raa
            case 0x00616172:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rab
            case 0x00626172:
            {
                MKV_DATA char  data_chars[9]   = "hosruabe";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rac
            case 0x00636172:
            {
                MKV_DATA char  data_chars[7]   = "hkoela";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa38e, // 0.638889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rad
            case 0x00646172:
            {
                MKV_DATA char  data_chars[8]   = "aeydhno";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rae
            case 0x00656172:
            {
                MKV_DATA char  data_chars[11]   = "shmgfwdprv";
                MKV_DATA uint16_t data_weights[10] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // raf
            case 0x00666172:
            {
                MKV_DATA char  data_chars[5]   = "fiat";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rag
            case 0x00676172:
            {
                MKV_DATA char  data_chars[7]   = "garhil";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rah
            case 0x00686172:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rai
            case 0x00696172:
            {
                MKV_DATA char  data_chars[9]   = "gdntlckv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9249, // 0.571429 
                    0x2be3, // 0.171429 
                    0x1ad2, // 0.104762 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x04e0, // 0.019048 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rak
            case 0x006b6172:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ral
            case 0x006c6172:
            {
                MKV_DATA char  data_chars[6]   = "lidos";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ram
            case 0x006d6172:
            {
                MKV_DATA char  data_chars[7]   = "soahmn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ran
            case 0x006e6172:
            {
                MKV_DATA char  data_chars[20]   = "gtsadcneokizxrylfhm";
                MKV_DATA uint16_t data_weights[19] = {
                    0x29cc, // 0.163265 
                    0x1f59, // 0.122449 
                    0x1a1f, // 0.102041 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // rao
            case 0x006f6172:
            {
                MKV_DATA char  data_chars[4]   = "nbc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rap
            case 0x00706172:
            {
                MKV_DATA char  data_chars[6]   = "oprln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // raq
            case 0x00716172:
            {
                return 'u';
            }
            break;

            // rar
            case 0x00726172:
            {
                MKV_DATA char  data_chars[6]   = "inadg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ras
            case 0x00736172:
            {
                MKV_DATA char  data_chars[8]   = "thksace";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rat
            case 0x00746172:
            {
                MKV_DATA char  data_chars[5]   = "hota";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdef8, // 0.870968 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rav
            case 0x00766172:
            {
                MKV_DATA char  data_chars[6]   = "ieaou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // raw
            case 0x00776172:
            {
                MKV_DATA char  data_chars[5]   = "fity";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rax
            case 0x00786172:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ray
            case 0x00796172:
            {
                MKV_DATA char  data_chars[6]   = "nstwf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rba
            case 0x00616272:
            {
                MKV_DATA char  data_chars[6]   = "nruyl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rbe
            case 0x00656272:
            {
                MKV_DATA char  data_chars[7]   = "rgacst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rbh
            case 0x00686272:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbi
            case 0x00696272:
            {
                MKV_DATA char  data_chars[5]   = "senr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rbo
            case 0x006f6272:
            {
                MKV_DATA char  data_chars[5]   = "lsyt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rbr
            case 0x00726272:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rbu
            case 0x00756272:
            {
                MKV_DATA char  data_chars[5]   = "rsti";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rca
            case 0x00616372:
            {
                MKV_DATA char  data_chars[4]   = "ils";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rce
            case 0x00656372:
            {
                MKV_DATA char  data_chars[4]   = "bta";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rch
            case 0x00686372:
            {
                MKV_DATA char  data_chars[9]   = "aieblmoy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4b4b, // 0.294118 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rcl
            case 0x006c6372:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rco
            case 0x006f6372:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rcr
            case 0x00726372:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rcu
            case 0x00756372:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rda
            case 0x00616472:
            {
                MKV_DATA char  data_chars[6]   = "lnrci";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rdb
            case 0x00626472:
            {
                MKV_DATA char  data_chars[4]   = "elr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rdc
            case 0x00636472:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdd
            case 0x00646472:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rde
            case 0x00656472:
            {
                MKV_DATA char  data_chars[7]   = "nrleso";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x47ae, // 0.280000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rdf
            case 0x00666472:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdg
            case 0x00676472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdh
            case 0x00686472:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rdi
            case 0x00696472:
            {
                MKV_DATA char  data_chars[7]   = "enlqvf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x5e51, // 0.368421 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rdj
            case 0x006a6472:
            {
                return 'o';
            }
            break;

            // rdk
            case 0x006b6472:
            {
                return 'e';
            }
            break;

            // rdl
            case 0x006c6472:
            {
                MKV_DATA char  data_chars[5]   = "aeuy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rdm
            case 0x006d6472:
            {
                MKV_DATA char  data_chars[6]   = "oaehi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rdn
            case 0x006e6472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdo
            case 0x006f6472:
            {
                MKV_DATA char  data_chars[7]   = "ncruwy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ccd, // 0.550000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rdp
            case 0x00706472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdr
            case 0x00726472:
            {
                MKV_DATA char  data_chars[5]   = "oiua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rds
            case 0x00736472:
            {
                MKV_DATA char  data_chars[5]   = "hklt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rdt
            case 0x00746472:
            {
                MKV_DATA char  data_chars[5]   = "oaeu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rdu
            case 0x00756472:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdv
            case 0x00766472:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rdw
            case 0x00776472:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdy
            case 0x00796472:
            {
                MKV_DATA char  data_chars[4]   = "ckn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rea
            case 0x00616572:
            {
                MKV_DATA char  data_chars[15]   = "cgvntmbsdywklr";
                MKV_DATA uint16_t data_weights[14] = {
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // reb
            case 0x00626572:
            {
                MKV_DATA char  data_chars[5]   = "aoru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rec
            case 0x00636572:
            {
                MKV_DATA char  data_chars[5]   = "khla";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // red
            case 0x00646572:
            {
                MKV_DATA char  data_chars[11]   = "hdpglmufis";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ree
            case 0x00656572:
            {
                MKV_DATA char  data_chars[11]   = "ntphsldbfm";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb216, // 0.695652 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ref
            case 0x00666572:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // reg
            case 0x00676572:
            {
                MKV_DATA char  data_chars[5]   = "grhl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // reh
            case 0x00686572:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rei
            case 0x00696572:
            {
                MKV_DATA char  data_chars[10]   = "ncfsgvwbt";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rel
            case 0x006c6572:
            {
                MKV_DATA char  data_chars[6]   = "ateou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rem
            case 0x006d6572:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ren
            case 0x006e6572:
            {
                MKV_DATA char  data_chars[9]   = "nidacfbt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x30c3, // 0.190476 
                    0x30c3, // 0.190476 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // reo
            case 0x006f6572:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rep
            case 0x00706572:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rer
            case 0x00726572:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // res
            case 0x00736572:
            {
                MKV_DATA char  data_chars[12]   = "tshcoiknrwa";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7b42, // 0.481481 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ret
            case 0x00746572:
            {
                MKV_DATA char  data_chars[4]   = "nst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // reu
            case 0x00756572:
            {
                MKV_DATA char  data_chars[3]   = "cm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rev
            case 0x00766572:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rew
            case 0x00776572:
            {
                MKV_DATA char  data_chars[5]   = "sael";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rey
            case 0x00796572:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfa
            case 0x00616672:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfe
            case 0x00656672:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfh
            case 0x00686672:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfi
            case 0x00696672:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfo
            case 0x006f6672:
            {
                MKV_DATA char  data_chars[4]   = "ory";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rfr
            case 0x00726672:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfs
            case 0x00736672:
            {
                MKV_DATA char  data_chars[3]   = "ik";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rga
            case 0x00616772:
            {
                MKV_DATA char  data_chars[6]   = "rnbst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rge
            case 0x00656772:
            {
                MKV_DATA char  data_chars[6]   = "lwdnt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rgh
            case 0x00686772:
            {
                MKV_DATA char  data_chars[4]   = "aes";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rgi
            case 0x00696772:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgl
            case 0x006c6772:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgn
            case 0x006e6772:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgo
            case 0x006f6772:
            {
                MKV_DATA char  data_chars[3]   = "wr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgr
            case 0x00726772:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgu
            case 0x00756772:
            {
                MKV_DATA char  data_chars[5]   = "esln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rgy
            case 0x00796772:
            {
                MKV_DATA char  data_chars[4]   = "mbl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rha
            case 0x00616872:
            {
                MKV_DATA char  data_chars[5]   = "lmru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rhe
            case 0x00656872:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rhi
            case 0x00696872:
            {
                MKV_DATA char  data_chars[6]   = "lcrtv";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc859, // 0.782609 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rho
            case 0x006f6872:
            {
                MKV_DATA char  data_chars[5]   = "upln";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rhu
            case 0x00756872:
            {
                MKV_DATA char  data_chars[4]   = "gve";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rhy
            case 0x00796872:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ria
            case 0x00616972:
            {
                MKV_DATA char  data_chars[6]   = "cnrgi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rib
            case 0x00626972:
            {
                MKV_DATA char  data_chars[3]   = "uo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ric
            case 0x00636972:
            {
                MKV_DATA char  data_chars[5]   = "khce";
                MKV_DATA uint16_t data_weights[4] = {
                    0x90b2, // 0.565217 
                    0x590b, // 0.347826 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rid
            case 0x00646972:
            {
                MKV_DATA char  data_chars[7]   = "gehdoa";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc4ec, // 0.769231 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rie
            case 0x00656972:
            {
                MKV_DATA char  data_chars[13]   = "sfcdvglmrbnt";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6492, // 0.392857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rif
            case 0x00666972:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rig
            case 0x00676972:
            {
                MKV_DATA char  data_chars[8]   = "ghailrs";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8ba3, // 0.545455 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rih
            case 0x00686972:
            {
                return 'a';
            }
            break;

            // rik
            case 0x006b6972:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ril
            case 0x006c6972:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rim
            case 0x006d6972:
            {
                MKV_DATA char  data_chars[7]   = "sinobe";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rin
            case 0x006e6972:
            {
                MKV_DATA char  data_chars[14]   = "giadentqscomk";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4925, // 0.285714 
                    0x3978, // 0.224490 
                    0x29cc, // 0.163265 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // rio
            case 0x006f6972:
            {
                MKV_DATA char  data_chars[8]   = "cmfnrtb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rir
            case 0x00726972:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ris
            case 0x00736972:
            {
                MKV_DATA char  data_chars[8]   = "tdhalci";
                MKV_DATA uint16_t data_weights[7] = {
                    0x47ae, // 0.280000 
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rit
            case 0x00746972:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // riu
            case 0x00756972:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // riv
            case 0x00766972:
            {
                MKV_DATA char  data_chars[5]   = "aeir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rjo
            case 0x006f6a72:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rka
            case 0x00616b72:
            {
                MKV_DATA char  data_chars[7]   = "idnptb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rkb
            case 0x00626b72:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkc
            case 0x00636b72:
            {
                MKV_DATA char  data_chars[4]   = "oua";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rke
            case 0x00656b72:
            {
                MKV_DATA char  data_chars[5]   = "intr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rkf
            case 0x00666b72:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkg
            case 0x00676b72:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkh
            case 0x00686b72:
            {
                MKV_DATA char  data_chars[5]   = "iaeo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rki
            case 0x00696b72:
            {
                MKV_DATA char  data_chars[6]   = "nerbp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rkl
            case 0x006c6b72:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rkm
            case 0x006d6b72:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rkn
            case 0x006e6b72:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rko
            case 0x006f6b72:
            {
                MKV_DATA char  data_chars[3]   = "sm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkp
            case 0x00706b72:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rks
            case 0x00736b72:
            {
                MKV_DATA char  data_chars[4]   = "hti";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rkt
            case 0x00746b72:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rku
            case 0x00756b72:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkw
            case 0x00776b72:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rla
            case 0x00616c72:
            {
                MKV_DATA char  data_chars[6]   = "nbiwd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9000, // 0.562500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rle
            case 0x00656c72:
            {
                MKV_DATA char  data_chars[10]   = "styienvfm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rlf
            case 0x00666c72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rli
            case 0x00696c72:
            {
                MKV_DATA char  data_chars[7]   = "engstc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x5e51, // 0.368421 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rlo
            case 0x006f6c72:
            {
                MKV_DATA char  data_chars[9]   = "ctgopsuw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rls
            case 0x00736c72:
            {
                MKV_DATA char  data_chars[3]   = "tf";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlu
            case 0x00756c72:
            {
                MKV_DATA char  data_chars[5]   = "kmns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rma
            case 0x00616d72:
            {
                MKV_DATA char  data_chars[5]   = "cidn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rme
            case 0x00656d72:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmi
            case 0x00696d72:
            {
                MKV_DATA char  data_chars[7]   = "lsntcd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x50d8, // 0.315789 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rml
            case 0x006c6d72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmo
            case 0x006f6d72:
            {
                MKV_DATA char  data_chars[5]   = "rnui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rms
            case 0x00736d72:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmt
            case 0x00746d72:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmu
            case 0x00756d72:
            {
                MKV_DATA char  data_chars[6]   = "ictln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rmy
            case 0x00796d72:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rn-
            case 0x002d6e72:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rna
            case 0x00616e72:
            {
                MKV_DATA char  data_chars[12]   = "incmvlyfgsu";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rnb
            case 0x00626e72:
            {
                MKV_DATA char  data_chars[6]   = "aeuor";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rnc
            case 0x00636e72:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnd
            case 0x00646e72:
            {
                MKV_DATA char  data_chars[4]   = "ueo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rne
            case 0x00656e72:
            {
                MKV_DATA char  data_chars[9]   = "sytilveg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rnf
            case 0x00666e72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rng
            case 0x00676e72:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnh
            case 0x00686e72:
            {
                MKV_DATA char  data_chars[5]   = "ieoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rni
            case 0x00696e72:
            {
                MKV_DATA char  data_chars[6]   = "esnca";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x5555, // 0.333333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rnk
            case 0x006b6e72:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnl
            case 0x006c6e72:
            {
                MKV_DATA char  data_chars[5]   = "eiuy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rnm
            case 0x006d6e72:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rno
            case 0x006f6e72:
            {
                MKV_DATA char  data_chars[9]   = "clnrtuwa";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9c72, // 0.611111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rnp
            case 0x00706e72:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnq
            case 0x00716e72:
            {
                return 'u';
            }
            break;

            // rnr
            case 0x00726e72:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rns
            case 0x00736e72:
            {
                MKV_DATA char  data_chars[6]   = "iahpt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rnt
            case 0x00746e72:
            {
                MKV_DATA char  data_chars[5]   = "ouiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rnw
            case 0x00776e72:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rny
            case 0x00796e72:
            {
                MKV_DATA char  data_chars[5]   = "ahlt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // roa
            case 0x00616f72:
            {
                MKV_DATA char  data_chars[7]   = "dtgnci";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9555, // 0.583333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rob
            case 0x00626f72:
            {
                MKV_DATA char  data_chars[8]   = "esailor";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // roc
            case 0x00636f72:
            {
                MKV_DATA char  data_chars[4]   = "hka";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8889, // 0.533333 
                    0x6eef, // 0.433333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rod
            case 0x00646f72:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // roe
            case 0x00656f72:
            {
                return 's';
            }
            break;

            // rof
            case 0x00666f72:
            {
                MKV_DATA char  data_chars[3]   = "tf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rog
            case 0x00676f72:
            {
                MKV_DATA char  data_chars[8]   = "aghinpe";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // roi
            case 0x00696f72:
            {
                MKV_DATA char  data_chars[5]   = "sclr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rol
            case 0x006c6f72:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rom
            case 0x006d6f72:
            {
                MKV_DATA char  data_chars[7]   = "eaboin";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ron
            case 0x006e6f72:
            {
                MKV_DATA char  data_chars[17]   = "asgeodbmlwyintch";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // roo
            case 0x006f6f72:
            {
                MKV_DATA char  data_chars[7]   = "mkdtln";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rop
            case 0x00706f72:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roq
            case 0x00716f72:
            {
                return 'u';
            }
            break;

            // ror
            case 0x00726f72:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ros
            case 0x00736f72:
            {
                MKV_DATA char  data_chars[11]   = "sektnwlyhb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x9a6a, // 0.603175 
                    0x3cf4, // 0.238095 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rot
            case 0x00746f72:
            {
                MKV_DATA char  data_chars[4]   = "hto";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rou
            case 0x00756f72:
            {
                MKV_DATA char  data_chars[6]   = "gblns";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc000, // 0.750000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rov
            case 0x00766f72:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // row
            case 0x00776f72:
            {
                MKV_DATA char  data_chars[7]   = "nsafhl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rox
            case 0x00786f72:
            {
                MKV_DATA char  data_chars[3]   = "be";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roy
            case 0x00796f72:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roz
            case 0x007a6f72:
            {
                return 'e';
            }
            break;

            // rpa
            case 0x00617072:
            {
                MKV_DATA char  data_chars[4]   = "rcf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rph
            case 0x00687072:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpl
            case 0x006c7072:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rqu
            case 0x00757172:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rra
            case 0x00617272:
            {
                MKV_DATA char  data_chars[16]   = "nicydgpsfwvthlb";
                MKV_DATA uint16_t data_weights[15] = {
                    0x5249, // 0.321429 
                    0x2925, // 0.160714 
                    0x1b6e, // 0.107143 
                    0x16db, // 0.089286 
                    0x0db7, // 0.053571 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // rre
            case 0x00657272:
            {
                MKV_DATA char  data_chars[6]   = "lsgnr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rrh
            case 0x00687272:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rri
            case 0x00697272:
            {
                MKV_DATA char  data_chars[10]   = "esgncdafm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7627, // 0.461538 
                    0x2df3, // 0.179487 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rrm
            case 0x006d7272:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rro
            case 0x006f7272:
            {
                MKV_DATA char  data_chars[12]   = "cwnydlegsub";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4530, // 0.270270 
                    0x4530, // 0.270270 
                    0x2983, // 0.162162 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rru
            case 0x00757272:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rrw
            case 0x00777272:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rry
            case 0x00797272:
            {
                MKV_DATA char  data_chars[12]   = "hbglswdcpmn";
                MKV_DATA uint16_t data_weights[11] = {
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rsa
            case 0x00617372:
            {
                MKV_DATA char  data_chars[5]   = "inry";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsb
            case 0x00627372:
            {
                MKV_DATA char  data_chars[4]   = "ura";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rsd
            case 0x00647372:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rse
            case 0x00657372:
            {
                MKV_DATA char  data_chars[5]   = "agmn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsh
            case 0x00687372:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsi
            case 0x00697372:
            {
                MKV_DATA char  data_chars[6]   = "edtan";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rsk
            case 0x006b7372:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsl
            case 0x006c7372:
            {
                MKV_DATA char  data_chars[5]   = "eoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsn
            case 0x006e7372:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rso
            case 0x006f7372:
            {
                MKV_DATA char  data_chars[4]   = "ncu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rsp
            case 0x00707372:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rst
            case 0x00747372:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9ee6, // 0.620690 
                    0x5847, // 0.344828 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rsw
            case 0x00777372:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsy
            case 0x00797372:
            {
                MKV_DATA char  data_chars[3]   = "dk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rt-
            case 0x002d7472:
            {
                MKV_DATA char  data_chars[3]   = "on";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rta
            case 0x00617472:
            {
                MKV_DATA char  data_chars[7]   = "cintvf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rtc
            case 0x00637472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rte
            case 0x00657472:
            {
                MKV_DATA char  data_chars[6]   = "rnasv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rtf
            case 0x00667472:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtg
            case 0x00677472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rth
            case 0x00687472:
            {
                MKV_DATA char  data_chars[14]   = "iadotusrlmwfp";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2c23, // 0.172414 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // rti
            case 0x00697472:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtk
            case 0x006b7472:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtl
            case 0x006c7472:
            {
                MKV_DATA char  data_chars[5]   = "eaoy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rtm
            case 0x006d7472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtn
            case 0x006e7472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rto
            case 0x006f7472:
            {
                MKV_DATA char  data_chars[8]   = "nworbcm";
                MKV_DATA uint16_t data_weights[7] = {
                    0xbb6e, // 0.732143 
                    0x2db7, // 0.178571 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rtp
            case 0x00707472:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtr
            case 0x00727472:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rts
            case 0x00737472:
            {
                MKV_DATA char  data_chars[7]   = "ohkltd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rtt
            case 0x00747472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtu
            case 0x00757472:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtv
            case 0x00767472:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtw
            case 0x00777472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rty
            case 0x00797472:
            {
                MKV_DATA char  data_chars[4]   = "rsm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rua
            case 0x00617572:
            {
                MKV_DATA char  data_chars[6]   = "incdr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rub
            case 0x00627572:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ruc
            case 0x00637572:
            {
                MKV_DATA char  data_chars[4]   = "ehk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rud
            case 0x00647572:
            {
                MKV_DATA char  data_chars[4]   = "eiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rue
            case 0x00657572:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rug
            case 0x00677572:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rui
            case 0x00697572:
            {
                MKV_DATA char  data_chars[10]   = "scemnxdlg";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rul
            case 0x006c7572:
            {
                MKV_DATA char  data_chars[5]   = "eiaz";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rum
            case 0x006d7572:
            {
                MKV_DATA char  data_chars[19]   = "mbscognfledrutaipv";
                MKV_DATA uint16_t data_weights[18] = {
                    0x2577, // 0.146341 
                    0x2577, // 0.146341 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // run
            case 0x006e7572:
            {
                MKV_DATA char  data_chars[6]   = "aetds";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rur
            case 0x00727572:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rus
            case 0x00737572:
            {
                MKV_DATA char  data_chars[4]   = "hks";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rut
            case 0x00747572:
            {
                MKV_DATA char  data_chars[4]   = "hin";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rva
            case 0x00617672:
            {
                MKV_DATA char  data_chars[6]   = "irlns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rve
            case 0x00657672:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rvi
            case 0x00697672:
            {
                MKV_DATA char  data_chars[6]   = "esgln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rvo
            case 0x006f7672:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwa
            case 0x00617772:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwe
            case 0x00657772:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwi
            case 0x00697772:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwo
            case 0x006f7772:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ry-
            case 0x002d7972:
            {
                MKV_DATA char  data_chars[3]   = "dy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rya
            case 0x00617972:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryb
            case 0x00627972:
            {
                MKV_DATA char  data_chars[4]   = "uar";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryc
            case 0x00637972:
            {
                MKV_DATA char  data_chars[4]   = "hru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryd
            case 0x00647972:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rye
            case 0x00657972:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryf
            case 0x00667972:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryg
            case 0x00677972:
            {
                MKV_DATA char  data_chars[4]   = "alu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryh
            case 0x00687972:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryk
            case 0x006b7972:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryl
            case 0x006c7972:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rym
            case 0x006d7972:
            {
                MKV_DATA char  data_chars[6]   = "pueio";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ryn
            case 0x006e7972:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ryp
            case 0x00707972:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rys
            case 0x00737972:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryt
            case 0x00747972:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryv
            case 0x00767972:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryw
            case 0x00777972:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rzi
            case 0x00697a72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // r
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 's':
        {
            switch ( trigram_u32 )
            {
            // s-l
            case 0x006c2d73:
            {
                return 'u';
            }
            break;

            // s-s
            case 0x00732d73:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // saa
            case 0x00616173:
            {
                MKV_DATA char  data_chars[3]   = "sr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sab
            case 0x00626173:
            {
                MKV_DATA char  data_chars[5]   = "hiru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sac
            case 0x00636173:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sad
            case 0x00646173:
            {
                MKV_DATA char  data_chars[3]   = "dy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sai
            case 0x00696173:
            {
                MKV_DATA char  data_chars[6]   = "gdnrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc859, // 0.782609 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sal
            case 0x006c6173:
            {
                MKV_DATA char  data_chars[8]   = "teilmsu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sam
            case 0x006d6173:
            {
                MKV_DATA char  data_chars[4]   = "ahu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // san
            case 0x006e6173:
            {
                MKV_DATA char  data_chars[7]   = "dngqta";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb08d, // 0.689655 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sap
            case 0x00706173:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sar
            case 0x00726173:
            {
                MKV_DATA char  data_chars[6]   = "yicta";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sat
            case 0x00746173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sau
            case 0x00756173:
            {
                MKV_DATA char  data_chars[5]   = "cgrl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sav
            case 0x00766173:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // say
            case 0x00796173:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sba
            case 0x00616273:
            {
                MKV_DATA char  data_chars[5]   = "ycnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sbe
            case 0x00656273:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbh
            case 0x00686273:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbi
            case 0x00696273:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbl
            case 0x006c6273:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbo
            case 0x006f6273:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbr
            case 0x00726273:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbu
            case 0x00756273:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sca
            case 0x00616373:
            {
                MKV_DATA char  data_chars[9]   = "rldtiumv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sch
            case 0x00686373:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // scl
            case 0x006c6373:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sco
            case 0x006f6373:
            {
                MKV_DATA char  data_chars[10]   = "turnoglwb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6aab, // 0.416667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // scr
            case 0x00726373:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sda
            case 0x00616473:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf1c7, // 0.944444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sde
            case 0x00656473:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sdr
            case 0x00726473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sdy
            case 0x00796473:
            {
                MKV_DATA char  data_chars[3]   = "k-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sea
            case 0x00616573:
            {
                MKV_DATA char  data_chars[6]   = "tmfsb";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // seb
            case 0x00626573:
            {
                MKV_DATA char  data_chars[7]   = "aueory";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sec
            case 0x00636573:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // see
            case 0x00656573:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sef
            case 0x00666573:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // seg
            case 0x00676573:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // seh
            case 0x00686573:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sei
            case 0x00696573:
            {
                MKV_DATA char  data_chars[4]   = "lsg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sel
            case 0x006c6573:
            {
                MKV_DATA char  data_chars[7]   = "kleiab";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sem
            case 0x006d6573:
            {
                MKV_DATA char  data_chars[6]   = "oabiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sen
            case 0x006e6573:
            {
                MKV_DATA char  data_chars[4]   = "des";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ser
            case 0x00726573:
            {
                MKV_DATA char  data_chars[5]   = "fnab";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // set
            case 0x00746573:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sew
            case 0x00776573:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sfe
            case 0x00656673:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfi
            case 0x00696673:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfo
            case 0x006f6673:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sga
            case 0x00616773:
            {
                MKV_DATA char  data_chars[7]   = "rnhilt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sge
            case 0x00656773:
            {
                MKV_DATA char  data_chars[4]   = "air";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sgi
            case 0x00696773:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sgo
            case 0x006f6773:
            {
                MKV_DATA char  data_chars[3]   = "iw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sgr
            case 0x00726773:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sha
            case 0x00616873:
            {
                MKV_DATA char  data_chars[10]   = "wdnlrvimu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x56c8, // 0.338983 
                    0x3868, // 0.220339 
                    0x2b64, // 0.169492 
                    0x1e5f, // 0.118644 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // shb
            case 0x00626873:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shc
            case 0x00636873:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // she
            case 0x00656873:
            {
                MKV_DATA char  data_chars[12]   = "artisednbwg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3555, // 0.208333 
                    0x3555, // 0.208333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // shf
            case 0x00666873:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shg
            case 0x00676873:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shi
            case 0x00696873:
            {
                MKV_DATA char  data_chars[9]   = "rleanpsv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x467e, // 0.275362 
                    0x3f13, // 0.246377 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // shk
            case 0x006b6873:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shl
            case 0x006c6873:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shm
            case 0x006d6873:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shn
            case 0x006e6873:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sho
            case 0x006f6873:
            {
                MKV_DATA char  data_chars[8]   = "rpultcm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x51ec, // 0.320000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // shr
            case 0x00726873:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sht
            case 0x00746873:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shu
            case 0x00756873:
            {
                MKV_DATA char  data_chars[4]   = "lag";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // shv
            case 0x00766873:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sia
            case 0x00616973:
            {
                MKV_DATA char  data_chars[4]   = "drb";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sib
            case 0x00626973:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sid
            case 0x00646973:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf820, // 0.969231 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sie
            case 0x00656973:
            {
                MKV_DATA char  data_chars[5]   = "hmrw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sig
            case 0x00676973:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sik
            case 0x006b6973:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sil
            case 0x006c6973:
            {
                MKV_DATA char  data_chars[5]   = "vdlw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sin
            case 0x006e6973:
            {
                MKV_DATA char  data_chars[4]   = "cia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sir
            case 0x00726973:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sit
            case 0x00746973:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ska
            case 0x00616b73:
            {
                MKV_DATA char  data_chars[9]   = "ilvtwdnr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // skb
            case 0x00626b73:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // skd
            case 0x00646b73:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ske
            case 0x00656b73:
            {
                MKV_DATA char  data_chars[8]   = "lrntagi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5c29, // 0.360000 
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // skf
            case 0x00666b73:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // skg
            case 0x00676b73:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // skh
            case 0x00686b73:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ski
            case 0x00696b73:
            {
                MKV_DATA char  data_chars[6]   = "nrepg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // skn
            case 0x006e6b73:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sko
            case 0x006f6b73:
            {
                MKV_DATA char  data_chars[3]   = "ms";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sku
            case 0x00756b73:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sky
            case 0x00796b73:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sla
            case 0x00616c73:
            {
                MKV_DATA char  data_chars[8]   = "ncitvem";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7333, // 0.450000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sle
            case 0x00656c73:
            {
                MKV_DATA char  data_chars[8]   = "yetaosi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sli
            case 0x00696c73:
            {
                MKV_DATA char  data_chars[9]   = "envbcdga";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8788, // 0.529412 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // slo
            case 0x006f6c73:
            {
                MKV_DATA char  data_chars[6]   = "cgipw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // slu
            case 0x00756c73:
            {
                MKV_DATA char  data_chars[3]   = "gi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sma
            case 0x00616d73:
            {
                MKV_DATA char  data_chars[6]   = "lrchi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sme
            case 0x00656d73:
            {
                MKV_DATA char  data_chars[4]   = "air";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // smi
            case 0x00696d73:
            {
                MKV_DATA char  data_chars[6]   = "tlrcd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // smu
            case 0x00756d73:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // smy
            case 0x00796d73:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sna
            case 0x00616e73:
            {
                MKV_DATA char  data_chars[6]   = "cbgku";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sne
            case 0x00656e73:
            {
                MKV_DATA char  data_chars[6]   = "surta";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sni
            case 0x00696e73:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sno
            case 0x006f6e73:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soc
            case 0x00636f73:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sod
            case 0x00646f73:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sof
            case 0x00666f73:
            {
                MKV_DATA char  data_chars[3]   = "tf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sol
            case 0x006c6f73:
            {
                MKV_DATA char  data_chars[5]   = "ialu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // som
            case 0x006d6f73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // son
            case 0x006e6f73:
            {
                MKV_DATA char  data_chars[6]   = "hstac";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sor
            case 0x00726f73:
            {
                MKV_DATA char  data_chars[7]   = "ntbdio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sou
            case 0x00756f73:
            {
                MKV_DATA char  data_chars[4]   = "tnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x599a, // 0.350000 
                    0x2666, // 0.150000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // soy
            case 0x00796f73:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spa
            case 0x00617073:
            {
                MKV_DATA char  data_chars[4]   = "rnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // spe
            case 0x00657073:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sph
            case 0x00687073:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spi
            case 0x00697073:
            {
                MKV_DATA char  data_chars[5]   = "ntes";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // spo
            case 0x006f7073:
            {
                MKV_DATA char  data_chars[4]   = "tou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // spr
            case 0x00727073:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // squ
            case 0x00757173:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sra
            case 0x00617273:
            {
                MKV_DATA char  data_chars[4]   = "gin";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sri
            case 0x00697273:
            {
                MKV_DATA char  data_chars[3]   = "dc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sro
            case 0x006f7273:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ss-
            case 0x002d7373:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssa
            case 0x00617373:
            {
                MKV_DATA char  data_chars[9]   = "nrtbcdip";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ssb
            case 0x00627373:
            {
                MKV_DATA char  data_chars[6]   = "uoral";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ssd
            case 0x00647373:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sse
            case 0x00657373:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssf
            case 0x00667373:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssg
            case 0x00677373:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssh
            case 0x00687373:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ssi
            case 0x00697373:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssk
            case 0x006b7373:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssl
            case 0x006c7373:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssm
            case 0x006d7373:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssn
            case 0x006e7373:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sso
            case 0x006f7373:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssp
            case 0x00707373:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssr
            case 0x00727373:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sst
            case 0x00747373:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssw
            case 0x00777373:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sta
            case 0x00617473:
            {
                MKV_DATA char  data_chars[14]   = "ndirtmfbvloxg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x63e7, // 0.390244 
                    0x2577, // 0.146341 
                    0x2577, // 0.146341 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // stb
            case 0x00627473:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ste
            case 0x00657473:
            {
                MKV_DATA char  data_chars[10]   = "rniepwavo";
                MKV_DATA uint16_t data_weights[9] = {
                    0xc15d, // 0.755319 
                    0x0d9e, // 0.053191 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x082c, // 0.031915 
                    0x082c, // 0.031915 
                    0x0572, // 0.021277 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // stf
            case 0x00667473:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sth
            case 0x00687473:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sti
            case 0x00697473:
            {
                MKV_DATA char  data_chars[7]   = "enrlac";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // stl
            case 0x006c7473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf1c7, // 0.944444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stm
            case 0x006d7473:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sto
            case 0x006f7473:
            {
                MKV_DATA char  data_chars[11]   = "nwucrbtdev";
                MKV_DATA uint16_t data_weights[10] = {
                    0xc6f8, // 0.777228 
                    0x1a9d, // 0.103960 
                    0x0b68, // 0.044554 
                    0x079b, // 0.029703 
                    0x03cd, // 0.014851 
                    0x0289, // 0.009901 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // stp
            case 0x00707473:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stq
            case 0x00717473:
            {
                return 'u';
            }
            break;

            // str
            case 0x00727473:
            {
                MKV_DATA char  data_chars[7]   = "aouiey";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6c00, // 0.421875 
                    0x4400, // 0.265625 
                    0x2800, // 0.156250 
                    0x1400, // 0.078125 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sts
            case 0x00737473:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stu
            case 0x00757473:
            {
                MKV_DATA char  data_chars[4]   = "ars";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // stw
            case 0x00777473:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sty
            case 0x00797473:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sua
            case 0x00617573:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // suc
            case 0x00637573:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sui
            case 0x00697573:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sul
            case 0x006c7573:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sum
            case 0x006d7573:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sun
            case 0x006e7573:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sut
            case 0x00747573:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // svo
            case 0x006f7673:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // svr
            case 0x00727673:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swa
            case 0x00617773:
            {
                MKV_DATA char  data_chars[7]   = "lnrydi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // swe
            case 0x00657773:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swi
            case 0x00697773:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swo
            case 0x006f7773:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syd
            case 0x00647973:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syk
            case 0x006b7973:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sym
            case 0x006d7973:
            {
                MKV_DATA char  data_chars[3]   = "bi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syn
            case 0x006e7973:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syr
            case 0x00727973:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syt
            case 0x00747973:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // s
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 't':
        {
            switch ( trigram_u32 )
            {
            // t-n
            case 0x006e2d74:
            {
                return 'a';
            }
            break;

            // t-o
            case 0x006f2d74:
            {
                MKV_DATA char  data_chars[3]   = "bn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // t-s
            case 0x00732d74:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tab
            case 0x00626174:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tac
            case 0x00636174:
            {
                MKV_DATA char  data_chars[5]   = "khlo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tad
            case 0x00646174:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // taf
            case 0x00666174:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tag
            case 0x00676174:
            {
                MKV_DATA char  data_chars[4]   = "ear";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tai
            case 0x00696174:
            {
                MKV_DATA char  data_chars[6]   = "nrgld";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tal
            case 0x006c6174:
            {
                MKV_DATA char  data_chars[8]   = "lmnrefi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8000, // 0.500000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tam
            case 0x006d6174:
            {
                MKV_DATA char  data_chars[4]   = "fip";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tan
            case 0x006e6174:
            {
                MKV_DATA char  data_chars[9]   = "egndhlsy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tao
            case 0x006f6174:
            {
                MKV_DATA char  data_chars[3]   = "bi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tar
            case 0x00726174:
            {
                MKV_DATA char  data_chars[12]   = "brlsfvyatdo";
                MKV_DATA uint16_t data_weights[11] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // tas
            case 0x00736174:
            {
                MKV_DATA char  data_chars[4]   = "sok";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tat
            case 0x00746174:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tav
            case 0x00766174:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tax
            case 0x00786174:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tay
            case 0x00796174:
            {
                MKV_DATA char  data_chars[5]   = "inpv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tbe
            case 0x00656274:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbh
            case 0x00686274:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbl
            case 0x006c6274:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbr
            case 0x00726274:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbu
            case 0x00756274:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tca
            case 0x00616374:
            {
                MKV_DATA char  data_chars[4]   = "ilp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tch
            case 0x00686374:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tco
            case 0x006f6374:
            {
                MKV_DATA char  data_chars[4]   = "ars";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tdy
            case 0x00796474:
            {
                MKV_DATA char  data_chars[3]   = "k-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tea
            case 0x00616574:
            {
                MKV_DATA char  data_chars[8]   = "dcglnrs";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // teb
            case 0x00626574:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tec
            case 0x00636574:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tee
            case 0x00656574:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tef
            case 0x00666574:
            {
                MKV_DATA char  data_chars[5]   = "aoil";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // teg
            case 0x00676574:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // teh
            case 0x00686574:
            {
                MKV_DATA char  data_chars[6]   = "iaoeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tei
            case 0x00696574:
            {
                MKV_DATA char  data_chars[4]   = "ntl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tek
            case 0x006b6574:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tel
            case 0x006c6574:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tem
            case 0x006d6574:
            {
                MKV_DATA char  data_chars[4]   = "piy";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ten
            case 0x006e6574:
            {
                MKV_DATA char  data_chars[10]   = "shitcefwa";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // teo
            case 0x006f6574:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tep
            case 0x00706574:
            {
                MKV_DATA char  data_chars[3]   = "sp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ter
            case 0x00726574:
            {
                MKV_DATA char  data_chars[18]   = "shtfamldcerbinkow";
                MKV_DATA uint16_t data_weights[17] = {
                    0x30f1, // 0.191176 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1a5a, // 0.102941 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // tes
            case 0x00736574:
            {
                MKV_DATA char  data_chars[5]   = "isph";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // teu
            case 0x00756574:
            {
                MKV_DATA char  data_chars[3]   = "cg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tev
            case 0x00766574:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tew
            case 0x00776574:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfi
            case 0x00696674:
            {
                MKV_DATA char  data_chars[4]   = "erc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc3c4, // 0.764706 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tfo
            case 0x006f6674:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tga
            case 0x00616774:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tge
            case 0x00656774:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tgo
            case 0x006f6774:
            {
                MKV_DATA char  data_chars[3]   = "rw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tgr
            case 0x00726774:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // th-
            case 0x002d6874:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tha
            case 0x00616874:
            {
                MKV_DATA char  data_chars[10]   = "nlmirsvtu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7a6f, // 0.478261 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // thb
            case 0x00626874:
            {
                MKV_DATA char  data_chars[4]   = "aeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thc
            case 0x00636874:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thd
            case 0x00646874:
            {
                MKV_DATA char  data_chars[5]   = "eoya";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // the
            case 0x00656874:
            {
                MKV_DATA char  data_chars[9]   = "rnsam-lb";
                MKV_DATA uint16_t data_weights[8] = {
                    0xa12f, // 0.629630 
                    0x2aab, // 0.166667 
                    0x17b4, // 0.092593 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // thf
            case 0x00666874:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thg
            case 0x00676874:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thh
            case 0x00686874:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thi
            case 0x00696874:
            {
                MKV_DATA char  data_chars[5]   = "lera";
                MKV_DATA uint16_t data_weights[4] = {
                    0x73cf, // 0.452381 
                    0x6186, // 0.380952 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // thk
            case 0x006b6874:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thl
            case 0x006c6874:
            {
                MKV_DATA char  data_chars[6]   = "iyaeo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // thm
            case 0x006d6874:
            {
                MKV_DATA char  data_chars[4]   = "oui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thn
            case 0x006e6874:
            {
                MKV_DATA char  data_chars[4]   = "eoy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tho
            case 0x006f6874:
            {
                MKV_DATA char  data_chars[6]   = "rlunm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // thp
            case 0x00706874:
            {
                MKV_DATA char  data_chars[4]   = "uae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thq
            case 0x00716874:
            {
                return 'u';
            }
            break;

            // thr
            case 0x00726874:
            {
                MKV_DATA char  data_chars[7]   = "aeiouy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ths
            case 0x00736874:
            {
                MKV_DATA char  data_chars[6]   = "itehw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tht
            case 0x00746874:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thu
            case 0x00756874:
            {
                MKV_DATA char  data_chars[4]   = "ran";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thv
            case 0x00766874:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thw
            case 0x00776874:
            {
                MKV_DATA char  data_chars[5]   = "eahi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // thy
            case 0x00796874:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tia
            case 0x00616974:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tib
            case 0x00626974:
            {
                MKV_DATA char  data_chars[5]   = "belu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tic
            case 0x00636974:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tie
            case 0x00656974:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tif
            case 0x00666974:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tig
            case 0x00676974:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // til
            case 0x006c6974:
            {
                MKV_DATA char  data_chars[5]   = "lbdt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tim
            case 0x006d6974:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tin
            case 0x006e6974:
            {
                MKV_DATA char  data_chars[11]   = "gnseciwavl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6666, // 0.400000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // tio
            case 0x006f6974:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tip
            case 0x00706974:
            {
                MKV_DATA char  data_chars[3]   = "hp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tir
            case 0x00726974:
            {
                MKV_DATA char  data_chars[5]   = "lrvi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tis
            case 0x00736974:
            {
                MKV_DATA char  data_chars[3]   = "cl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tiv
            case 0x00766974:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tke
            case 0x00656b74:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tki
            case 0x00696b74:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tkn
            case 0x006e6b74:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tla
            case 0x00616c74:
            {
                MKV_DATA char  data_chars[4]   = "nwc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x7000, // 0.437500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tle
            case 0x00656c74:
            {
                MKV_DATA char  data_chars[13]   = "tbshmfleacrw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x364e, // 0.212121 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // tli
            case 0x00696c74:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tlo
            case 0x006f6c74:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tma
            case 0x00616d74:
            {
                MKV_DATA char  data_chars[4]   = "dhl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tme
            case 0x00656d74:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmi
            case 0x00696d74:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmo
            case 0x006f6d74:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmu
            case 0x00756d74:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tna
            case 0x00616e74:
            {
                MKV_DATA char  data_chars[6]   = "hlctg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tne
            case 0x00656e74:
            {
                MKV_DATA char  data_chars[4]   = "syt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // toa
            case 0x00616f74:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tob
            case 0x00626f74:
            {
                MKV_DATA char  data_chars[5]   = "heso";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // toc
            case 0x00636f74:
            {
                MKV_DATA char  data_chars[4]   = "khi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tod
            case 0x00646f74:
            {
                MKV_DATA char  data_chars[4]   = "hdl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // toe
            case 0x00656f74:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tof
            case 0x00666f74:
            {
                MKV_DATA char  data_chars[3]   = "tf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tol
            case 0x006c6f74:
            {
                MKV_DATA char  data_chars[6]   = "lsamv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tom
            case 0x006d6f74:
            {
                MKV_DATA char  data_chars[6]   = "ainyc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ton
            case 0x006e6f74:
            {
                MKV_DATA char  data_chars[15]   = "ehgsmfrapkyvld";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6d2d, // 0.426471 
                    0x34b5, // 0.205882 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // too
            case 0x006f6f74:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toq
            case 0x00716f74:
            {
                return 'u';
            }
            break;

            // tor
            case 0x00726f74:
            {
                MKV_DATA char  data_chars[16]   = "rbpnelmswtyigvq";
                MKV_DATA uint16_t data_weights[15] = {
                    0x51ec, // 0.320000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // tos
            case 0x00736f74:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tot
            case 0x00746f74:
            {
                MKV_DATA char  data_chars[6]   = "eafsy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tou
            case 0x00756f74:
            {
                MKV_DATA char  data_chars[6]   = "nlrcg";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa6f5, // 0.652174 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tov
            case 0x00766f74:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tow
            case 0x00776f74:
            {
                MKV_DATA char  data_chars[5]   = "neia";
                MKV_DATA uint16_t data_weights[4] = {
                    0xeeef, // 0.933333 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tpa
            case 0x00617074:
            {
                MKV_DATA char  data_chars[4]   = "tnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tpl
            case 0x006c7074:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpo
            case 0x006f7074:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tqu
            case 0x00757174:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tra
            case 0x00617274:
            {
                MKV_DATA char  data_chars[14]   = "tniybcdlvaeqp";
                MKV_DATA uint16_t data_weights[13] = {
                    0x642d, // 0.391304 
                    0x26f5, // 0.152174 
                    0x1bd3, // 0.108696 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // tre
            case 0x00657274:
            {
                MKV_DATA char  data_chars[5]   = "esau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tri
            case 0x00697274:
            {
                MKV_DATA char  data_chars[6]   = "cgens";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tro
            case 0x006f7274:
            {
                MKV_DATA char  data_chars[10]   = "nmosctwqu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5ad7, // 0.354839 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // tru
            case 0x00757274:
            {
                MKV_DATA char  data_chars[9]   = "tmbiayns";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // try
            case 0x00797274:
            {
                MKV_DATA char  data_chars[3]   = "p-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsb
            case 0x00627374:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsc
            case 0x00637374:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsd
            case 0x00647374:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tse
            case 0x00657374:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsf
            case 0x00667374:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsh
            case 0x00687374:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tsi
            case 0x00697374:
            {
                MKV_DATA char  data_chars[3]   = "dg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsk
            case 0x006b7374:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsl
            case 0x006c7374:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tso
            case 0x006f7374:
            {
                MKV_DATA char  data_chars[5]   = "nmyl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tsr
            case 0x00727374:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tst
            case 0x00747374:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsw
            case 0x00777374:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tta
            case 0x00617474:
            {
                MKV_DATA char  data_chars[8]   = "lngsbcd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tte
            case 0x00657474:
            {
                MKV_DATA char  data_chars[4]   = "rnu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcec5, // 0.807692 
                    0x2762, // 0.153846 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tti
            case 0x00697474:
            {
                MKV_DATA char  data_chars[5]   = "encs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ttl
            case 0x006c7474:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ttn
            case 0x006e7474:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tto
            case 0x006f7474:
            {
                MKV_DATA char  data_chars[5]   = "nwcm";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ttr
            case 0x00727474:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tts
            case 0x00737474:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ttu
            case 0x00757474:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tty
            case 0x00797474:
            {
                MKV_DATA char  data_chars[5]   = "hbct";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tua
            case 0x00617574:
            {
                MKV_DATA char  data_chars[4]   = "irt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tub
            case 0x00627574:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tud
            case 0x00647574:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tug
            case 0x00677574:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tui
            case 0x00697574:
            {
                MKV_DATA char  data_chars[3]   = "mc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tul
            case 0x006c7574:
            {
                MKV_DATA char  data_chars[5]   = "likm";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd000, // 0.812500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tum
            case 0x006d7574:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tun
            case 0x006e7574:
            {
                MKV_DATA char  data_chars[3]   = "eg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tur
            case 0x00727574:
            {
                MKV_DATA char  data_chars[7]   = "knfrde";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tus
            case 0x00737574:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tva
            case 0x00617674:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tve
            case 0x00657674:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twa
            case 0x00617774:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twe
            case 0x00657774:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twi
            case 0x00697774:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // two
            case 0x006f7774:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twy
            case 0x00797774:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyb
            case 0x00627974:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyc
            case 0x00637974:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyh
            case 0x00687974:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyl
            case 0x006c7974:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tym
            case 0x006d7974:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyn
            case 0x006e7974:
            {
                MKV_DATA char  data_chars[5]   = "eird";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tyr
            case 0x00727974:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tys
            case 0x00737974:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyt
            case 0x00747974:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // t
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'u':
        {
            switch ( trigram_u32 )
            {
            // uac
            case 0x00636175:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uad
            case 0x00646175:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uag
            case 0x00676175:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uai
            case 0x00696175:
            {
                MKV_DATA char  data_chars[6]   = "rgcnl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ual
            case 0x006c6175:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uan
            case 0x006e6175:
            {
                MKV_DATA char  data_chars[3]   = "m-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uar
            case 0x00726175:
            {
                MKV_DATA char  data_chars[7]   = "rtadfe";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // uas
            case 0x00736175:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uat
            case 0x00746175:
            {
                MKV_DATA char  data_chars[3]   = "hq";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uba
            case 0x00616275:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubb
            case 0x00626275:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubf
            case 0x00666275:
            {
                return 'o';
            }
            break;

            // ubi
            case 0x00696275:
            {
                MKV_DATA char  data_chars[4]   = "ens";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ubs
            case 0x00736275:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubu
            case 0x00756275:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ucc
            case 0x00636375:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uce
            case 0x00656375:
            {
                MKV_DATA char  data_chars[3]   = "fh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uch
            case 0x00686375:
            {
                MKV_DATA char  data_chars[9]   = "eiatlmnb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x522c, // 0.320988 
                    0x3291, // 0.197531 
                    0x2c3f, // 0.172840 
                    0x1f9b, // 0.123457 
                    0x1620, // 0.086420 
                    0x0ca4, // 0.049383 
                    0x097b, // 0.037037 
                    0x0329, // 0.012346 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uck
            case 0x006b6375:
            {
                MKV_DATA char  data_chars[7]   = "lhirsp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // udb
            case 0x00626475:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udd
            case 0x00646475:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ude
            case 0x00656475:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udi
            case 0x00696475:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udl
            case 0x006c6475:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udn
            case 0x006e6475:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udr
            case 0x00726475:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uds
            case 0x00736475:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uec
            case 0x00636575:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uee
            case 0x00656575:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uei
            case 0x00696575:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uel
            case 0x006c6575:
            {
                MKV_DATA char  data_chars[3]   = "s-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uen
            case 0x006e6575:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uer
            case 0x00726575:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ues
            case 0x00736575:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uff
            case 0x00666675:
            {
                MKV_DATA char  data_chars[4]   = "uts";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uga
            case 0x00616775:
            {
                MKV_DATA char  data_chars[4]   = "rst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ugd
            case 0x00646775:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uge
            case 0x00656775:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugg
            case 0x00676775:
            {
                MKV_DATA char  data_chars[4]   = "ail";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ugh
            case 0x00686775:
            {
                MKV_DATA char  data_chars[9]   = "ta-shipr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ugi
            case 0x00696775:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugl
            case 0x006c6775:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugn
            case 0x006e6775:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugt
            case 0x00746775:
            {
                return 'o';
            }
            break;

            // ugu
            case 0x00756775:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uha
            case 0x00616875:
            {
                MKV_DATA char  data_chars[5]   = "rnmp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uhe
            case 0x00656875:
            {
                MKV_DATA char  data_chars[3]   = "y-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uhi
            case 0x00696875:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uho
            case 0x006f6875:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uhy
            case 0x00796875:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uic
            case 0x00636975:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uid
            case 0x00646975:
            {
                MKV_DATA char  data_chars[6]   = "hnrsy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uie
            case 0x00656975:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uig
            case 0x00676975:
            {
                MKV_DATA char  data_chars[4]   = "hse";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uik
            case 0x006b6975:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uil
            case 0x006c6975:
            {
                MKV_DATA char  data_chars[6]   = "dqtil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uim
            case 0x006d6975:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uin
            case 0x006e6975:
            {
                MKV_DATA char  data_chars[4]   = "nai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uir
            case 0x00726975:
            {
                MKV_DATA char  data_chars[12]   = "hstigebkfcd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // uis
            case 0x00736975:
            {
                MKV_DATA char  data_chars[9]   = "eikdghna";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uit
            case 0x00746975:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uiv
            case 0x00766975:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uke
            case 0x00656b75:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukm
            case 0x006d6b75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ula
            case 0x00616c75:
            {
                MKV_DATA char  data_chars[7]   = "dgimyb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ulb
            case 0x00626c75:
            {
                MKV_DATA char  data_chars[6]   = "eiosu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ulc
            case 0x00636c75:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uld
            case 0x00646c75:
            {
                MKV_DATA char  data_chars[12]   = "hsemucorwyg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // uli
            case 0x00696c75:
            {
                MKV_DATA char  data_chars[5]   = "nsev";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ulk
            case 0x006b6c75:
            {
                MKV_DATA char  data_chars[4]   = "emi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ull
            case 0x006c6c75:
            {
                MKV_DATA char  data_chars[7]   = "ioayew";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6f4e, // 0.434783 
                    0x3216, // 0.195652 
                    0x2c86, // 0.173913 
                    0x1bd3, // 0.108696 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ulm
            case 0x006d6c75:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uln
            case 0x006e6c75:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulo
            case 0x006f6c75:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulp
            case 0x00706c75:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulr
            case 0x00726c75:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uls
            case 0x00736c75:
            {
                MKV_DATA char  data_chars[5]   = "aitw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ult
            case 0x00746c75:
            {
                MKV_DATA char  data_chars[10]   = "eimorsvyb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ulv
            case 0x00766c75:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulz
            case 0x007a6c75:
            {
                return 'i';
            }
            break;

            // uma
            case 0x00616d75:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umb
            case 0x00626d75:
            {
                MKV_DATA char  data_chars[7]   = "lrueia";
                MKV_DATA uint16_t data_weights[6] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // umc
            case 0x00636d75:
            {
                MKV_DATA char  data_chars[4]   = "hlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umd
            case 0x00646d75:
            {
                return 'o';
            }
            break;

            // ume
            case 0x00656d75:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umf
            case 0x00666d75:
            {
                MKV_DATA char  data_chars[4]   = "reo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umg
            case 0x00676d75:
            {
                MKV_DATA char  data_chars[5]   = "elou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // umi
            case 0x00696d75:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uml
            case 0x006c6d75:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umm
            case 0x006d6d75:
            {
                MKV_DATA char  data_chars[6]   = "eiouy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // umn
            case 0x006e6d75:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umo
            case 0x006f6d75:
            {
                MKV_DATA char  data_chars[4]   = "ary";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ump
            case 0x00706d75:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umr
            case 0x00726d75:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ums
            case 0x00736d75:
            {
                MKV_DATA char  data_chars[5]   = "tdlm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // umt
            case 0x00746d75:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umu
            case 0x00756d75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umv
            case 0x00766d75:
            {
                return 'a';
            }
            break;

            // una
            case 0x00616e75:
            {
                MKV_DATA char  data_chars[10]   = "nrsplmtvc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // unb
            case 0x00626e75:
            {
                MKV_DATA char  data_chars[7]   = "ealouy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // unc
            case 0x00636e75:
            {
                MKV_DATA char  data_chars[6]   = "ahort";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // und
            case 0x00646e75:
            {
                MKV_DATA char  data_chars[12]   = "lseyaorhiuw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // une
            case 0x00656e75:
            {
                MKV_DATA char  data_chars[6]   = "s-acr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unf
            case 0x00666e75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ung
            case 0x00676e75:
            {
                MKV_DATA char  data_chars[5]   = "alor";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // unh
            case 0x00686e75:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uni
            case 0x00696e75:
            {
                MKV_DATA char  data_chars[6]   = "epnrf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unk
            case 0x006b6e75:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unl
            case 0x006c6e75:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unm
            case 0x006d6e75:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unn
            case 0x006e6e75:
            {
                MKV_DATA char  data_chars[6]   = "iaoye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uno
            case 0x006f6e75:
            {
                MKV_DATA char  data_chars[4]   = "lov";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unr
            case 0x00726e75:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uns
            case 0x00736e75:
            {
                MKV_DATA char  data_chars[6]   = "htycd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unt
            case 0x00746e75:
            {
                MKV_DATA char  data_chars[12]   = "iboeasuglrp";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // unu
            case 0x00756e75:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unv
            case 0x00766e75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unz
            case 0x007a6e75:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uoi
            case 0x00696f75:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uot
            case 0x00746f75:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uoy
            case 0x00796f75:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // upa
            case 0x00617075:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uph
            case 0x00687075:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // upl
            case 0x006c7075:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upo
            case 0x006f7075:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upp
            case 0x00707075:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ura
            case 0x00617275:
            {
                MKV_DATA char  data_chars[7]   = "nfgtyc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // urb
            case 0x00627275:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urc
            case 0x00637275:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urd
            case 0x00647275:
            {
                MKV_DATA char  data_chars[4]   = "ioy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ure
            case 0x00657275:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urf
            case 0x00667275:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urg
            case 0x00677275:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urh
            case 0x00687275:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uri
            case 0x00697275:
            {
                MKV_DATA char  data_chars[5]   = "escn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // url
            case 0x006c7275:
            {
                MKV_DATA char  data_chars[6]   = "iefya";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // urn
            case 0x006e7275:
            {
                MKV_DATA char  data_chars[12]   = "ahtifsebmow";
                MKV_DATA uint16_t data_weights[11] = {
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // uro
            case 0x006f7275:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urq
            case 0x00717275:
            {
                return 'u';
            }
            break;

            // urr
            case 0x00727275:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7777, // 0.466667 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urs
            case 0x00737275:
            {
                MKV_DATA char  data_chars[4]   = "tio";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // urt
            case 0x00747275:
            {
                MKV_DATA char  data_chars[5]   = "hore";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urv
            case 0x00767275:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urw
            case 0x00777275:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usa
            case 0x00617375:
            {
                MKV_DATA char  data_chars[5]   = "ibny";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // usb
            case 0x00627375:
            {
                MKV_DATA char  data_chars[5]   = "aiuy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // usd
            case 0x00647375:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // use
            case 0x00657375:
            {
                MKV_DATA char  data_chars[9]   = "sbwmhlrt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ush
            case 0x00687375:
            {
                MKV_DATA char  data_chars[4]   = "ina";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // usk
            case 0x006b7375:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usl
            case 0x006c7375:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usn
            case 0x006e7375:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uss
            case 0x00737375:
            {
                MKV_DATA char  data_chars[5]   = "aeil";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ust
            case 0x00747375:
            {
                MKV_DATA char  data_chars[7]   = "aoerui";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // usv
            case 0x00767375:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usw
            case 0x00777375:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utc
            case 0x00637475:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ute
            case 0x00657475:
            {
                MKV_DATA char  data_chars[4]   = "rhs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uth
            case 0x00687475:
            {
                MKV_DATA char  data_chars[16]   = "eirv-pstnyadmhw";
                MKV_DATA uint16_t data_weights[15] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // uti
            case 0x00697475:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utl
            case 0x006c7475:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utn
            case 0x006e7475:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uto
            case 0x006f7475:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utt
            case 0x00747475:
            {
                MKV_DATA char  data_chars[5]   = "iosy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uvo
            case 0x006f7675:
            {
                MKV_DATA char  data_chars[3]   = "ul";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxl
            case 0x006c7875:
            {
                return 'e';
            }
            break;

            // uxt
            case 0x00747875:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uye
            case 0x00657975:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // u
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'v':
        {
            switch ( trigram_u32 )
            {
            // vac
            case 0x00636176:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vad
            case 0x00646176:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vag
            case 0x00676176:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vai
            case 0x00696176:
            {
                MKV_DATA char  data_chars[4]   = "gcr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd000, // 0.812500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // val
            case 0x006c6176:
            {
                MKV_DATA char  data_chars[6]   = "eladt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // van
            case 0x006e6176:
            {
                MKV_DATA char  data_chars[10]   = "timsdefhn";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // var
            case 0x00726176:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vas
            case 0x00736176:
            {
                MKV_DATA char  data_chars[4]   = "ags";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vat
            case 0x00746176:
            {
                MKV_DATA char  data_chars[4]   = "tes";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vau
            case 0x00756176:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vax
            case 0x00786176:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vea
            case 0x00616576:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vec
            case 0x00636576:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ved
            case 0x00646576:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vee
            case 0x00656576:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // veg
            case 0x00676576:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vei
            case 0x00696576:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vel
            case 0x006c6576:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vem
            case 0x006d6576:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ven
            case 0x006e6576:
            {
                MKV_DATA char  data_chars[10]   = "sihvefcwy";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // veo
            case 0x006f6576:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ver
            case 0x00726576:
            {
                MKV_DATA char  data_chars[20]   = "sbangilkteumcfhrdvy";
                MKV_DATA uint16_t data_weights[19] = {
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1666, // 0.087500 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // ves
            case 0x00736576:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vic
            case 0x00636976:
            {
                MKV_DATA char  data_chars[5]   = "hkta";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vid
            case 0x00646976:
            {
                MKV_DATA char  data_chars[4]   = "sal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vie
            case 0x00656976:
            {
                MKV_DATA char  data_chars[3]   = "ws";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vig
            case 0x00676976:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vil
            case 0x006c6976:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vin
            case 0x006e6976:
            {
                MKV_DATA char  data_chars[8]   = "gedhstb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // vio
            case 0x006f6976:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vis
            case 0x00736976:
            {
                MKV_DATA char  data_chars[3]   = "tw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vit
            case 0x00746976:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voc
            case 0x00636f76:
            {
                MKV_DATA char  data_chars[4]   = "hka";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // voe
            case 0x00656f76:
            {
                return 's';
            }
            break;

            // vol
            case 0x006c6f76:
            {
                MKV_DATA char  data_chars[3]   = "d-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // von
            case 0x006e6f76:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vor
            case 0x00726f76:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vou
            case 0x00756f76:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vra
            case 0x00617276:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vru
            case 0x00757276:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vul
            case 0x006c7576:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // v
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'w':
        {
            switch ( trigram_u32 )
            {
            // wad
            case 0x00646177:
            {
                MKV_DATA char  data_chars[5]   = "eirb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wai
            case 0x00696177:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wal
            case 0x006c6177:
            {
                MKV_DATA char  data_chars[7]   = "ldtkns";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ccd, // 0.550000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wan
            case 0x006e6177:
            {
                MKV_DATA char  data_chars[7]   = "bdhlsw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // war
            case 0x00726177:
            {
                MKV_DATA char  data_chars[7]   = "dtikrs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x5e51, // 0.368421 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // was
            case 0x00736177:
            {
                MKV_DATA char  data_chars[3]   = "b-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wat
            case 0x00746177:
            {
                MKV_DATA char  data_chars[5]   = "ethc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wau
            case 0x00756177:
            {
                MKV_DATA char  data_chars[3]   = "lk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wav
            case 0x00766177:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // way
            case 0x00796177:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wba
            case 0x00616277:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wbe
            case 0x00656277:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wbi
            case 0x00696277:
            {
                MKV_DATA char  data_chars[3]   = "ge";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wbo
            case 0x006f6277:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wbr
            case 0x00726277:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wbu
            case 0x00756277:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wca
            case 0x00616377:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wcr
            case 0x00726377:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wde
            case 0x00656477:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdo
            case 0x006f6477:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wea
            case 0x00616577:
            {
                MKV_DATA char  data_chars[3]   = "vr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wec
            case 0x00636577:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wed
            case 0x00646577:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wee
            case 0x00656577:
            {
                MKV_DATA char  data_chars[3]   = "dm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wei
            case 0x00696577:
            {
                MKV_DATA char  data_chars[3]   = "sr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wel
            case 0x006c6577:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf878, // 0.970588 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wem
            case 0x006d6577:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wer
            case 0x00726577:
            {
                MKV_DATA char  data_chars[4]   = "shw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wes
            case 0x00736577:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wet
            case 0x00746577:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfa
            case 0x00616677:
            {
                MKV_DATA char  data_chars[3]   = "uc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfi
            case 0x00696677:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfl
            case 0x006c6677:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfo
            case 0x006f6677:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wga
            case 0x00616777:
            {
                MKV_DATA char  data_chars[3]   = "tr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wha
            case 0x00616877:
            {
                MKV_DATA char  data_chars[5]   = "uvit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // whe
            case 0x00656877:
            {
                MKV_DATA char  data_chars[4]   = "aer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // whi
            case 0x00696877:
            {
                MKV_DATA char  data_chars[7]   = "tlnsfg";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb5ad, // 0.709677 
                    0x2529, // 0.145161 
                    0x14a5, // 0.080645 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // who
            case 0x006f6877:
            {
                MKV_DATA char  data_chars[3]   = "ul";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wic
            case 0x00636977:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wie
            case 0x00656977:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wig
            case 0x00676977:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wil
            case 0x006c6977:
            {
                MKV_DATA char  data_chars[7]   = "lksdgt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // win
            case 0x006e6977:
            {
                MKV_DATA char  data_chars[9]   = "dntigces";
                MKV_DATA uint16_t data_weights[8] = {
                    0x68ba, // 0.409091 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wis
            case 0x00736977:
            {
                MKV_DATA char  data_chars[4]   = "thm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wkh
            case 0x00686b77:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wks
            case 0x00736b77:
            {
                MKV_DATA char  data_chars[3]   = "hb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wkt
            case 0x00746b77:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wla
            case 0x00616c77:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wle
            case 0x00656c77:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wli
            case 0x00696c77:
            {
                MKV_DATA char  data_chars[4]   = "sen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wma
            case 0x00616d77:
            {
                MKV_DATA char  data_chars[4]   = "cir";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wmi
            case 0x00696d77:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wmo
            case 0x006f6d77:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wna
            case 0x00616e77:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wne
            case 0x00656e77:
            {
                MKV_DATA char  data_chars[3]   = "n-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnf
            case 0x00666e77:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnh
            case 0x00686e77:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wni
            case 0x00696e77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wns
            case 0x00736e77:
            {
                MKV_DATA char  data_chars[3]   = "bh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wol
            case 0x006c6f77:
            {
                MKV_DATA char  data_chars[3]   = "lf";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // woo
            case 0x006f6f77:
            {
                MKV_DATA char  data_chars[4]   = "dlp";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf6db, // 0.964286 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wor
            case 0x00726f77:
            {
                MKV_DATA char  data_chars[3]   = "dm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wot
            case 0x00746f77:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpa
            case 0x00617077:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpo
            case 0x006f7077:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wre
            case 0x00657277:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wri
            case 0x00697277:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsb
            case 0x00627377:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsh
            case 0x00687377:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wst
            case 0x00747377:
            {
                MKV_DATA char  data_chars[4]   = "oer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wth
            case 0x00687477:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wto
            case 0x006f7477:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wty
            case 0x00797477:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wwo
            case 0x006f7777:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wya
            case 0x00617977:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyn
            case 0x006e7977:
            {
                MKV_DATA char  data_chars[4]   = "dgh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // w
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'x':
        {
            switch ( trigram_u32 )
            {
            // xan
            case 0x006e6178:
            {
                MKV_DATA char  data_chars[3]   = "d-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xba
            case 0x00616278:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbu
            case 0x00756278:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xda
            case 0x00616478:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xfi
            case 0x00696678:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xga
            case 0x00616778:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xho
            case 0x006f6878:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xig
            case 0x00676978:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xle
            case 0x00656c78:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xna
            case 0x00616e78:
            {
                MKV_DATA char  data_chars[3]   = "bm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xob
            case 0x00626f78:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xte
            case 0x00657478:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xto
            case 0x006f7478:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xwe
            case 0x00657778:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // x
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'y':
        {
            switch ( trigram_u32 )
            {
            // y-d
            case 0x00642d79:
            {
                return 'e';
            }
            break;

            // y-y
            case 0x00792d79:
            {
                return 'e';
            }
            break;

            // yac
            case 0x00636179:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yai
            case 0x00696179:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yan
            case 0x006e6179:
            {
                MKV_DATA char  data_chars[3]   = "s-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yar
            case 0x00726179:
            {
                MKV_DATA char  data_chars[3]   = "dr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yba
            case 0x00616279:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybe
            case 0x00656279:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybo
            case 0x006f6279:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybr
            case 0x00726279:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ybs
            case 0x00736279:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybu
            case 0x00756279:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ych
            case 0x00686379:
            {
                MKV_DATA char  data_chars[3]   = "r-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ycr
            case 0x00726379:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ycu
            case 0x00756379:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yda
            case 0x00616479:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yde
            case 0x00656479:
            {
                MKV_DATA char  data_chars[6]   = "npsbk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ydi
            case 0x00696479:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydo
            case 0x006f6479:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydr
            case 0x00726479:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yea
            case 0x00616579:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yed
            case 0x00646579:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yeh
            case 0x00686579:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yel
            case 0x006c6579:
            {
                MKV_DATA char  data_chars[3]   = "l-";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yem
            case 0x006d6579:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yen
            case 0x006e6579:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yeo
            case 0x006f6579:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yer
            case 0x00726579:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yes
            case 0x00736579:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yet
            case 0x00746579:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfi
            case 0x00696679:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfo
            case 0x006f6679:
            {
                MKV_DATA char  data_chars[4]   = "lur";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yga
            case 0x00616779:
            {
                MKV_DATA char  data_chars[5]   = "tlru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ygl
            case 0x006c6779:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ygo
            case 0x006f6779:
            {
                MKV_DATA char  data_chars[3]   = "uw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ygr
            case 0x00726779:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ygu
            case 0x00756779:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yhe
            case 0x00656879:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yhi
            case 0x00696879:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yho
            case 0x006f6879:
            {
                MKV_DATA char  data_chars[3]   = "lp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yie
            case 0x00656979:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yin
            case 0x006e6979:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yke
            case 0x00656b79:
            {
                MKV_DATA char  data_chars[5]   = "sbhl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yki
            case 0x00696b79:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ykn
            case 0x006e6b79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yla
            case 0x00616c79:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yle
            case 0x00656c79:
            {
                MKV_DATA char  data_chars[6]   = "serap";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yli
            case 0x00696c79:
            {
                MKV_DATA char  data_chars[4]   = "enp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yll
            case 0x006c6c79:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylo
            case 0x006f6c79:
            {
                MKV_DATA char  data_chars[5]   = "osad";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ylt
            case 0x00746c79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylu
            case 0x00756c79:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymb
            case 0x00626d79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yme
            case 0x00656d79:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymi
            case 0x00696d79:
            {
                MKV_DATA char  data_chars[5]   = "ncel";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ymo
            case 0x006f6d79:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymp
            case 0x00706d79:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymu
            case 0x00756d79:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yna
            case 0x00616e79:
            {
                MKV_DATA char  data_chars[5]   = "hmtc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ync
            case 0x00636e79:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynd
            case 0x00646e79:
            {
                MKV_DATA char  data_chars[7]   = "ilefhr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yne
            case 0x00656e79:
            {
                MKV_DATA char  data_chars[4]   = "sht";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ynh
            case 0x00686e79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yni
            case 0x00696e79:
            {
                MKV_DATA char  data_chars[4]   = "ens";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ynn
            case 0x006e6e79:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yno
            case 0x006f6e79:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynr
            case 0x00726e79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynt
            case 0x00746e79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynu
            case 0x00756e79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynw
            case 0x00776e79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yoc
            case 0x00636f79:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yok
            case 0x006b6f79:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yor
            case 0x00726f79:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypa
            case 0x00617079:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypo
            case 0x006f7079:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yre
            case 0x00657279:
            {
                MKV_DATA char  data_chars[4]   = "slb";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yri
            case 0x00697279:
            {
                MKV_DATA char  data_chars[4]   = "deg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yro
            case 0x006f7279:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yrs
            case 0x00737279:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yru
            case 0x00757279:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysa
            case 0x00617379:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysb
            case 0x00627379:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysd
            case 0x00647379:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysh
            case 0x00687379:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysi
            case 0x00697379:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysm
            case 0x006d7379:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yst
            case 0x00747379:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yth
            case 0x00687479:
            {
                MKV_DATA char  data_chars[6]   = "aeisw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yto
            case 0x006f7479:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yva
            case 0x00617679:
            {
                MKV_DATA char  data_chars[4]   = "nrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yvi
            case 0x00697679:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywe
            case 0x00657779:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywi
            case 0x00697779:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywo
            case 0x006f7779:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // y
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'z':
        {
            switch ( trigram_u32 )
            {
            // zea
            case 0x0061657a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zel
            case 0x006c657a:
            {
                MKV_DATA char  data_chars[5]   = "lbdt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // zeo
            case 0x006f657a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zia
            case 0x0061697a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zie
            case 0x0065697a:
            {
                MKV_DATA char  data_chars[5]   = "mrbl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // zio
            case 0x006f697a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // z
        break;

    }
    return 0;
} // SelectNextLetter()

} // namespace scotland
} // namespace mk
