// generated by markovich:tablegen
// ishani.org 2021

namespace mk {
namespace thailand {

MKV_DISABLE_OPT
static char SelectNextLetter(
    const uint32_t          trigram_u32,
    const float             input_weight,
    const uint32_t          input_seed,
    BranchDecisionFunction  decision_fn )
{
    const char initial_letter = (char)( trigram_u32 & 0xff );
    switch (initial_letter)
    {
        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'a':
        {
            switch ( trigram_u32 )
            {
            // aad
            case 0x00646161:
            {
                MKV_DATA char  data_chars[6]   = "lrsty";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aal
            case 0x006c6161:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aam
            case 0x006d6161:
            {
                MKV_DATA char  data_chars[3]   = "rp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aan
            case 0x006e6161:
            {
                MKV_DATA char  data_chars[11]   = "tlnragpswc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // aar
            case 0x00726161:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aas
            case 0x00736161:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aav
            case 0x00766161:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aay
            case 0x00796161:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aba
            case 0x00616261:
            {
                MKV_DATA char  data_chars[12]   = "nteiokmrlyc";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6536, // 0.395349 
                    0x329b, // 0.197674 
                    0x1dc4, // 0.116279 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // abb
            case 0x00626261:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abe
            case 0x00656261:
            {
                MKV_DATA char  data_chars[6]   = "naert";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // abh
            case 0x00686261:
            {
                MKV_DATA char  data_chars[4]   = "uao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abi
            case 0x00696261:
            {
                MKV_DATA char  data_chars[5]   = "anty";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // abl
            case 0x006c6261:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abo
            case 0x006f6261:
            {
                MKV_DATA char  data_chars[13]   = "nekrptidaomc";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3555, // 0.208333 
                    0x2aab, // 0.166667 
                    0x2555, // 0.145833 
                    0x1aab, // 0.104167 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // abp
            case 0x00706261:
            {
                return 'r';
            }
            break;

            // abr
            case 0x00726261:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abs
            case 0x00736261:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abu
            case 0x00756261:
            {
                MKV_DATA char  data_chars[8]   = "rtneack";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7272, // 0.447059 
                    0x3333, // 0.200000 
                    0x2a2a, // 0.164706 
                    0x1515, // 0.082353 
                    0x1515, // 0.082353 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // aby
            case 0x00796261:
            {
                MKV_DATA char  data_chars[3]   = "ed";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aca
            case 0x00616361:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // acc
            case 0x00636361:
            {
                MKV_DATA char  data_chars[5]   = "aoeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ace
            case 0x00656361:
            {
                MKV_DATA char  data_chars[4]   = "sal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ach
            case 0x00686361:
            {
                MKV_DATA char  data_chars[12]   = "aiouectbfns";
                MKV_DATA uint16_t data_weights[11] = {
                    0x84f6, // 0.519380 
                    0x3399, // 0.201550 
                    0x25b5, // 0.147287 
                    0x1286, // 0.072351 
                    0x09ec, // 0.038760 
                    0x0153, // 0.005168 
                    0x0153, // 0.005168 
                    0x00a9, // 0.002584 
                    0x00a9, // 0.002584 
                    0x00a9, // 0.002584 
                    0x00a9, // 0.002584 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // aci
            case 0x00696361:
            {
                MKV_DATA char  data_chars[7]   = "elntaf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // acl
            case 0x006c6361:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aco
            case 0x006f6361:
            {
                MKV_DATA char  data_chars[5]   = "clmn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // acs
            case 0x00736361:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // acu
            case 0x00756361:
            {
                MKV_DATA char  data_chars[3]   = "lz";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ada
            case 0x00616461:
            {
                MKV_DATA char  data_chars[12]   = "nermopitkwy";
                MKV_DATA uint16_t data_weights[11] = {
                    0x440d, // 0.265823 
                    0x2d5e, // 0.177215 
                    0x26e3, // 0.151899 
                    0x19ed, // 0.101266 
                    0x19ed, // 0.101266 
                    0x1034, // 0.063291 
                    0x0cf6, // 0.050633 
                    0x09b9, // 0.037975 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // adb
            case 0x00626461:
            {
                return 'u';
            }
            break;

            // add
            case 0x00646461:
            {
                MKV_DATA char  data_chars[4]   = "aip";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ade
            case 0x00656461:
            {
                MKV_DATA char  data_chars[12]   = "etnwmsvblkr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7507, // 0.457143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // adh
            case 0x00686461:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adi
            case 0x00696461:
            {
                MKV_DATA char  data_chars[11]   = "tnasypkuvo";
                MKV_DATA uint16_t data_weights[10] = {
                    0x61bf, // 0.381818 
                    0x2e8c, // 0.181818 
                    0x253d, // 0.145455 
                    0x1bed, // 0.109091 
                    0x129e, // 0.072727 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // adk
            case 0x006b6461:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adl
            case 0x006c6461:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adm
            case 0x006d6461:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ado
            case 0x006f6461:
            {
                MKV_DATA char  data_chars[13]   = "nemkplucirtw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x59f2, // 0.351351 
                    0x2298, // 0.135135 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // adp
            case 0x00706461:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adr
            case 0x00726461:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ads
            case 0x00736461:
            {
                MKV_DATA char  data_chars[5]   = "adou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adt
            case 0x00746461:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adu
            case 0x00756461:
            {
                MKV_DATA char  data_chars[9]   = "neakmszd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5359, // 0.325581 
                    0x4771, // 0.279070 
                    0x2fa1, // 0.186047 
                    0x17d0, // 0.093023 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // adv
            case 0x00766461:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ady
            case 0x00796461:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aea
            case 0x00616561:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aec
            case 0x00636561:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aeh
            case 0x00686561:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aek
            case 0x006b6561:
            {
                MKV_DATA char  data_chars[9]   = "otscklbu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ael
            case 0x006c6561:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aem
            case 0x006d6561:
            {
                MKV_DATA char  data_chars[7]   = "stahop";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aen
            case 0x006e6561:
            {
                MKV_DATA char  data_chars[7]   = "gstacd";
                MKV_DATA uint16_t data_weights[6] = {
                    0xf348, // 0.950311 
                    0x032e, // 0.012422 
                    0x032e, // 0.012422 
                    0x032e, // 0.012422 
                    0x0197, // 0.006211 
                    0x0197, // 0.006211 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aeo
            case 0x006f6561:
            {
                MKV_DATA char  data_chars[3]   = "tk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aep
            case 0x00706561:
            {
                MKV_DATA char  data_chars[5]   = "dhpt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aer
            case 0x00726561:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aes
            case 0x00736561:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aet
            case 0x00746561:
            {
                MKV_DATA char  data_chars[6]   = "aehls";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aev
            case 0x00766561:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aew
            case 0x00776561:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aex
            case 0x00786561:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aey
            case 0x00796561:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afa
            case 0x00616661:
            {
                MKV_DATA char  data_chars[7]   = "neirtk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // afi
            case 0x00696661:
            {
                MKV_DATA char  data_chars[3]   = "yc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afr
            case 0x00726661:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aft
            case 0x00746661:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afu
            case 0x00756661:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aga
            case 0x00616761:
            {
                MKV_DATA char  data_chars[5]   = "pren";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // age
            case 0x00656761:
            {
                MKV_DATA char  data_chars[4]   = "des";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agi
            case 0x00696761:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agn
            case 0x006e6761:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ago
            case 0x006f6761:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agr
            case 0x00726761:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agu
            case 0x00756761:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agy
            case 0x00796761:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aha
            case 0x00616861:
            {
                MKV_DATA char  data_chars[14]   = "ntpwerkmsciyo";
                MKV_DATA uint16_t data_weights[13] = {
                    0x45d1, // 0.272727 
                    0x33b8, // 0.202020 
                    0x19dc, // 0.101010 
                    0x19dc, // 0.101010 
                    0x121a, // 0.070707 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ahe
            case 0x00656861:
            {
                MKV_DATA char  data_chars[6]   = "nsopy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ahi
            case 0x00696861:
            {
                MKV_DATA char  data_chars[7]   = "nadtpy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x68ba, // 0.409091 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ahk
            case 0x006b6861:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ahm
            case 0x006d6861:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aho
            case 0x006f6861:
            {
                MKV_DATA char  data_chars[11]   = "nkmrteisyl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6c4f, // 0.423077 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ahr
            case 0x00726861:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ahs
            case 0x00736861:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ahu
            case 0x00756861:
            {
                MKV_DATA char  data_chars[6]   = "naetm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5e51, // 0.368421 
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ahw
            case 0x00776861:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ahy
            case 0x00796861:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aia
            case 0x00616961:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aib
            case 0x00626961:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aic
            case 0x00636961:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aid
            case 0x00646961:
            {
                MKV_DATA char  data_chars[5]   = "aeuh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aif
            case 0x00666961:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aih
            case 0x00686961:
            {
                MKV_DATA char  data_chars[5]   = "oaiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aik
            case 0x006b6961:
            {
                MKV_DATA char  data_chars[5]   = "ahou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ail
            case 0x006c6961:
            {
                MKV_DATA char  data_chars[8]   = "aiyeouw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9e7a, // 0.619048 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // aim
            case 0x006d6961:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ain
            case 0x006e6961:
            {
                MKV_DATA char  data_chars[7]   = "agucef";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7333, // 0.450000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aio
            case 0x006f6961:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aip
            case 0x00706961:
            {
                MKV_DATA char  data_chars[5]   = "hael";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // air
            case 0x00726961:
            {
                MKV_DATA char  data_chars[11]   = "aioeyputbf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5075, // 0.314286 
                    0x2be3, // 0.171429 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ais
            case 0x00736961:
            {
                MKV_DATA char  data_chars[6]   = "aoirs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x69ee, // 0.413793 
                    0x5847, // 0.344828 
                    0x2c23, // 0.172414 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ait
            case 0x00746961:
            {
                MKV_DATA char  data_chars[7]   = "hraios";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc000, // 0.750000 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aiv
            case 0x00766961:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aiw
            case 0x00776961:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aiy
            case 0x00796961:
            {
                MKV_DATA char  data_chars[5]   = "aoiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdef8, // 0.870968 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aja
            case 0x00616a61:
            {
                MKV_DATA char  data_chars[5]   = "bpkm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ajd
            case 0x00646a61:
            {
                return 'a';
            }
            break;

            // aje
            case 0x00656a61:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ajp
            case 0x00706a61:
            {
                return 'r';
            }
            break;

            // ajt
            case 0x00746a61:
            {
                return 'a';
            }
            break;

            // aka
            case 0x00616b61:
            {
                MKV_DATA char  data_chars[15]   = "nrmteiowkypsld";
                MKV_DATA uint16_t data_weights[14] = {
                    0x53b1, // 0.326923 
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x1555, // 0.083333 
                    0x13b1, // 0.076923 
                    0x0b7d, // 0.044872 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x0835, // 0.032051 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // akb
            case 0x00626b61:
            {
                MKV_DATA char  data_chars[4]   = "iua";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // akc
            case 0x00636b61:
            {
                return 'h';
            }
            break;

            // akd
            case 0x00646b61:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ake
            case 0x00656b61:
            {
                MKV_DATA char  data_chars[7]   = "tsnver";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8e39, // 0.555556 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // akf
            case 0x00666b61:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akh
            case 0x00686b61:
            {
                MKV_DATA char  data_chars[10]   = "aoureilwn";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5834, // 0.344538 
                    0x3cf4, // 0.238095 
                    0x1ed6, // 0.120448 
                    0x1583, // 0.084034 
                    0x1583, // 0.084034 
                    0x12a5, // 0.072829 
                    0x0a0a, // 0.039216 
                    0x0396, // 0.014006 
                    0x00b8, // 0.002801 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // aki
            case 0x00696b61:
            {
                MKV_DATA char  data_chars[6]   = "tanrs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ec5, // 0.557692 
                    0x53b1, // 0.326923 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // akk
            case 0x006b6b61:
            {
                MKV_DATA char  data_chars[7]   = "hariuo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8859, // 0.532609 
                    0x4000, // 0.250000 
                    0x1e9c, // 0.119565 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x02c8, // 0.010870 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // akl
            case 0x006c6b61:
            {
                MKV_DATA char  data_chars[6]   = "auioe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x599a, // 0.350000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // akm
            case 0x006d6b61:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // akn
            case 0x006e6b61:
            {
                MKV_DATA char  data_chars[7]   = "gaoeiu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ako
            case 0x006f6b61:
            {
                MKV_DATA char  data_chars[12]   = "nrtemkisplo";
                MKV_DATA uint16_t data_weights[11] = {
                    0xa1af, // 0.631579 
                    0x1841, // 0.094737 
                    0x102b, // 0.063158 
                    0x0ac7, // 0.042105 
                    0x0ac7, // 0.042105 
                    0x0ac7, // 0.042105 
                    0x0564, // 0.021053 
                    0x0564, // 0.021053 
                    0x0564, // 0.021053 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // akp
            case 0x00706b61:
            {
                MKV_DATA char  data_chars[6]   = "hioua";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc71c, // 0.777778 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // akr
            case 0x00726b61:
            {
                MKV_DATA char  data_chars[7]   = "aoueip";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x41a4, // 0.256410 
                    0x41a4, // 0.256410 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aks
            case 0x00736b61:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x711e, // 0.441860 
                    0x5359, // 0.325581 
                    0x29ad, // 0.162791 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // akt
            case 0x00746b61:
            {
                MKV_DATA char  data_chars[6]   = "hrauo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aku
            case 0x00756b61:
            {
                MKV_DATA char  data_chars[12]   = "nateimlkwpr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6666, // 0.400000 
                    0x3723, // 0.215385 
                    0x17a1, // 0.092308 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // akw
            case 0x00776b61:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aky
            case 0x00796b61:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ala
            case 0x00616c61:
            {
                MKV_DATA char  data_chars[19]   = "inekmtyropwscdhlbz";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4569, // 0.271127 
                    0x1bf2, // 0.109155 
                    0x1b0b, // 0.105634 
                    0x13d5, // 0.077465 
                    0x12ee, // 0.073944 
                    0x103a, // 0.063380 
                    0x0e6c, // 0.056338 
                    0x0d85, // 0.052817 
                    0x0904, // 0.035211 
                    0x081d, // 0.031690 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0569, // 0.021127 
                    0x0569, // 0.021127 
                    0x02b4, // 0.010563 
                    0x01ce, // 0.007042 
                    0x00e7, // 0.003521 
                    0x00e7, // 0.003521 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // alb
            case 0x00626c61:
            {
                return 'u';
            }
            break;

            // alc
            case 0x00636c61:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ald
            case 0x00646c61:
            {
                MKV_DATA char  data_chars[3]   = "od";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ale
            case 0x00656c61:
            {
                MKV_DATA char  data_chars[12]   = "etnskolxrwa";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3e10, // 0.242424 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // alf
            case 0x00666c61:
            {
                MKV_DATA char  data_chars[3]   = "ri";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alh
            case 0x00686c61:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ali
            case 0x00696c61:
            {
                MKV_DATA char  data_chars[17]   = "ntakmwslyebhforg";
                MKV_DATA uint16_t data_weights[16] = {
                    0x40c5, // 0.253012 
                    0x2819, // 0.156626 
                    0x2503, // 0.144578 
                    0x1bc2, // 0.108434 
                    0x1597, // 0.084337 
                    0x0c56, // 0.048193 
                    0x0c56, // 0.048193 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // alk
            case 0x006b6c61:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // all
            case 0x006c6c61:
            {
                MKV_DATA char  data_chars[7]   = "eyaios";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // alm
            case 0x006d6c61:
            {
                MKV_DATA char  data_chars[6]   = "esyat";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aln
            case 0x006e6c61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alo
            case 0x006f6c61:
            {
                MKV_DATA char  data_chars[14]   = "nektmiwpfodhl";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3e83, // 0.244186 
                    0x388f, // 0.220930 
                    0x26b3, // 0.151163 
                    0x1dc4, // 0.116279 
                    0x1dc4, // 0.116279 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // alp
            case 0x00706c61:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alt
            case 0x00746c61:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alu
            case 0x00756c61:
            {
                MKV_DATA char  data_chars[10]   = "aenmktipb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x40f5, // 0.253731 
                    0x3950, // 0.223881 
                    0x2a08, // 0.164179 
                    0x1e91, // 0.119403 
                    0x16ed, // 0.089552 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // alw
            case 0x00776c61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aly
            case 0x00796c61:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // alz
            case 0x007a6c61:
            {
                return 'a';
            }
            break;

            // ama
            case 0x00616d61:
            {
                MKV_DATA char  data_chars[19]   = "ntrkiewolhsycpdbxz";
                MKV_DATA uint16_t data_weights[18] = {
                    0x5093, // 0.314741 
                    0x1f9e, // 0.123506 
                    0x1c8f, // 0.111554 
                    0x1a85, // 0.103586 
                    0x1466, // 0.079681 
                    0x1466, // 0.079681 
                    0x092e, // 0.035857 
                    0x0724, // 0.027888 
                    0x061f, // 0.023904 
                    0x061f, // 0.023904 
                    0x0414, // 0.015936 
                    0x0414, // 0.015936 
                    0x030f, // 0.011952 
                    0x020a, // 0.007968 
                    0x020a, // 0.007968 
                    0x020a, // 0.007968 
                    0x0105, // 0.003984 
                    0x0105, // 0.003984 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // amb
            case 0x00626d61:
            {
                MKV_DATA char  data_chars[7]   = "aouire";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // amc
            case 0x00636d61:
            {
                return 'h';
            }
            break;

            // amd
            case 0x00646d61:
            {
                MKV_DATA char  data_chars[4]   = "uai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ame
            case 0x00656d61:
            {
                MKV_DATA char  data_chars[10]   = "ntrlsoked";
                MKV_DATA uint16_t data_weights[9] = {
                    0x611a, // 0.379310 
                    0x3dcb, // 0.241379 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // amh
            case 0x00686d61:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ami
            case 0x00696d61:
            {
                MKV_DATA char  data_chars[11]   = "tnaylkpode";
                MKV_DATA uint16_t data_weights[10] = {
                    0x672a, // 0.402985 
                    0x4c6b, // 0.298507 
                    0x1abf, // 0.104478 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // amk
            case 0x006b6d61:
            {
                MKV_DATA char  data_chars[7]   = "haokul";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aml
            case 0x006c6d61:
            {
                MKV_DATA char  data_chars[6]   = "auioe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amm
            case 0x006d6d61:
            {
                MKV_DATA char  data_chars[6]   = "aoiun";
                MKV_DATA uint16_t data_weights[5] = {
                    0xe746, // 0.903409 
                    0x0ba3, // 0.045455 
                    0x0a2f, // 0.039773 
                    0x0174, // 0.005682 
                    0x0174, // 0.005682 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amn
            case 0x006e6d61:
            {
                MKV_DATA char  data_chars[6]   = "aouie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x2d2d, // 0.176471 
                    0x2828, // 0.156863 
                    0x2828, // 0.156863 
                    0x0a0a, // 0.039216 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amo
            case 0x006f6d61:
            {
                MKV_DATA char  data_chars[10]   = "nektrmios";
                MKV_DATA uint16_t data_weights[9] = {
                    0x9084, // 0.564516 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x14a5, // 0.080645 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // amp
            case 0x00706d61:
            {
                MKV_DATA char  data_chars[9]   = "haouritl";
                MKV_DATA uint16_t data_weights[8] = {
                    0xa6ca, // 0.651515 
                    0x326d, // 0.196970 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // amr
            case 0x00726d61:
            {
                MKV_DATA char  data_chars[6]   = "auoie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5111, // 0.316667 
                    0x3777, // 0.216667 
                    0x199a, // 0.100000 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ams
            case 0x00736d61:
            {
                MKV_DATA char  data_chars[6]   = "iaoeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amt
            case 0x00746d61:
            {
                MKV_DATA char  data_chars[4]   = "hao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa1af, // 0.631579 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // amu
            case 0x00756d61:
            {
                MKV_DATA char  data_chars[11]   = "natkiehdlr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x503d, // 0.313433 
                    0x2a08, // 0.164179 
                    0x2a08, // 0.164179 
                    0x1abf, // 0.104478 
                    0x16ed, // 0.089552 
                    0x16ed, // 0.089552 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // amw
            case 0x00776d61:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // amy
            case 0x00796d61:
            {
                MKV_DATA char  data_chars[5]   = "aoeu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ana
            case 0x00616e61:
            {
                MKV_DATA char  data_chars[19]   = "rnktwpselmciodbvgy";
                MKV_DATA uint16_t data_weights[18] = {
                    0x3eb8, // 0.244989 
                    0x250f, // 0.144766 
                    0x1bf0, // 0.109131 
                    0x19a8, // 0.100223 
                    0x19a8, // 0.100223 
                    0x0c8b, // 0.048998 
                    0x0b67, // 0.044543 
                    0x0ad5, // 0.042316 
                    0x088d, // 0.033408 
                    0x07fb, // 0.031180 
                    0x05b4, // 0.022272 
                    0x05b4, // 0.022272 
                    0x0522, // 0.020045 
                    0x03fe, // 0.015590 
                    0x0248, // 0.008909 
                    0x0124, // 0.004454 
                    0x0124, // 0.004454 
                    0x0092, // 0.002227 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // anb
            case 0x00626e61:
            {
                MKV_DATA char  data_chars[6]   = "uiaeo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anc
            case 0x00636e61:
            {
                MKV_DATA char  data_chars[5]   = "heat";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe0dd, // 0.878378 
                    0x1837, // 0.094595 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // and
            case 0x00646e61:
            {
                MKV_DATA char  data_chars[11]   = "aeosimrtyv";
                MKV_DATA uint16_t data_weights[10] = {
                    0xa257, // 0.634146 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0f9c, // 0.060976 
                    0x0f9c, // 0.060976 
                    0x095e, // 0.036585 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ane
            case 0x00656e61:
            {
                MKV_DATA char  data_chars[9]   = "tenkryah";
                MKV_DATA uint16_t data_weights[8] = {
                    0x51ec, // 0.320000 
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // anf
            case 0x00666e61:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ang
            case 0x00676e61:
            {
                MKV_DATA char  data_chars[22]   = "ksatwoprnmblchyudejfi";
                MKV_DATA uint16_t data_weights[21] = {
                    0x5d17, // 0.363636 
                    0x1f08, // 0.121212 
                    0x11d8, // 0.069697 
                    0x0f84, // 0.060606 
                    0x0ebd, // 0.057576 
                    0x0a16, // 0.039394 
                    0x094f, // 0.036364 
                    0x0889, // 0.033333 
                    0x07c2, // 0.030303 
                    0x06fb, // 0.027273 
                    0x0635, // 0.024242 
                    0x056e, // 0.021212 
                    0x056e, // 0.021212 
                    0x056e, // 0.021212 
                    0x04a8, // 0.018182 
                    0x03e1, // 0.015152 
                    0x031a, // 0.012121 
                    0x0254, // 0.009091 
                    0x018d, // 0.006061 
                    0x018d, // 0.006061 
                    0x018d, // 0.006061 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // anh
            case 0x00686e61:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ani
            case 0x00696e61:
            {
                MKV_DATA char  data_chars[17]   = "tamwnyksrcpzdjlo";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4c1c, // 0.297297 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x195f, // 0.099099 
                    0x195f, // 0.099099 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0b88, // 0.045045 
                    0x093a, // 0.036036 
                    0x049d, // 0.018018 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // anj
            case 0x006a6e61:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ank
            case 0x006b6e61:
            {
                MKV_DATA char  data_chars[8]   = "haorglu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7bdf, // 0.483871 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // anl
            case 0x006c6e61:
            {
                MKV_DATA char  data_chars[6]   = "aeoui";
                MKV_DATA uint16_t data_weights[5] = {
                    0xad2d, // 0.676471 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anm
            case 0x006d6e61:
            {
                MKV_DATA char  data_chars[6]   = "aiueo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x93b1, // 0.576923 
                    0x3b14, // 0.230769 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ann
            case 0x006e6e61:
            {
                MKV_DATA char  data_chars[8]   = "aoiguet";
                MKV_DATA uint16_t data_weights[7] = {
                    0xc1f0, // 0.757576 
                    0x14b0, // 0.080808 
                    0x0f84, // 0.060606 
                    0x0a58, // 0.040404 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ano
            case 0x006f6e61:
            {
                MKV_DATA char  data_chars[16]   = "nmtrkpiedahwbol";
                MKV_DATA uint16_t data_weights[15] = {
                    0x5c41, // 0.360360 
                    0x24e7, // 0.144144 
                    0x204a, // 0.126126 
                    0x1273, // 0.072072 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0b88, // 0.045045 
                    0x06eb, // 0.027027 
                    0x049d, // 0.018018 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // anp
            case 0x00706e61:
            {
                MKV_DATA char  data_chars[8]   = "haulore";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // anq
            case 0x00716e61:
            {
                return 'u';
            }
            break;

            // anr
            case 0x00726e61:
            {
                MKV_DATA char  data_chars[5]   = "aoiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ans
            case 0x00736e61:
            {
                MKV_DATA char  data_chars[7]   = "auoieh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x711e, // 0.441860 
                    0x2fa1, // 0.186047 
                    0x29ad, // 0.162791 
                    0x23b9, // 0.139535 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ant
            case 0x00746e61:
            {
                MKV_DATA char  data_chars[8]   = "haireou";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9333, // 0.575000 
                    0x38cd, // 0.221875 
                    0x1d9a, // 0.115625 
                    0x0b33, // 0.043750 
                    0x04cd, // 0.018750 
                    0x0400, // 0.015625 
                    0x0266, // 0.009375 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // anu
            case 0x00756e61:
            {
                MKV_DATA char  data_chars[16]   = "skparnbmwetchil";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4a42, // 0.290076 
                    0x38ac, // 0.221374 
                    0x1f44, // 0.122137 
                    0x1196, // 0.068702 
                    0x0fa2, // 0.061069 
                    0x09c5, // 0.038168 
                    0x09c5, // 0.038168 
                    0x09c5, // 0.038168 
                    0x09c5, // 0.038168 
                    0x05dd, // 0.022901 
                    0x05dd, // 0.022901 
                    0x03e9, // 0.015267 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // anv
            case 0x00766e61:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anw
            case 0x00776e61:
            {
                MKV_DATA char  data_chars[4]   = "aie";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x3cf4, // 0.238095 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // anx
            case 0x00786e61:
            {
                return 'n';
            }
            break;

            // any
            case 0x00796e61:
            {
                MKV_DATA char  data_chars[7]   = "aiouem";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc0c1, // 0.752941 
                    0x1b1b, // 0.105882 
                    0x1212, // 0.070588 
                    0x0c0c, // 0.047059 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // anz
            case 0x007a6e61:
            {
                return 'a';
            }
            break;

            // aob
            case 0x00626f61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aoc
            case 0x00636f61:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aod
            case 0x00646f61:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aof
            case 0x00666f61:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aoh
            case 0x00686f61:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aok
            case 0x006b6f61:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aol
            case 0x006c6f61:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aom
            case 0x006d6f61:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aon
            case 0x006e6f61:
            {
                MKV_DATA char  data_chars[4]   = "gao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aoo
            case 0x006f6f61:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aop
            case 0x00706f61:
            {
                MKV_DATA char  data_chars[6]   = "hualo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aor
            case 0x00726f61:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aos
            case 0x00736f61:
            {
                MKV_DATA char  data_chars[6]   = "uorai";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aot
            case 0x00746f61:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aow
            case 0x00776f61:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf6db, // 0.964286 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aoy
            case 0x00796f61:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apa
            case 0x00617061:
            {
                MKV_DATA char  data_chars[15]   = "nekrtopcsylwmz";
                MKV_DATA uint16_t data_weights[14] = {
                    0x2916, // 0.160494 
                    0x2916, // 0.160494 
                    0x22c4, // 0.135802 
                    0x1620, // 0.086420 
                    0x1620, // 0.086420 
                    0x12f7, // 0.074074 
                    0x0fcd, // 0.061728 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x0329, // 0.012346 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // apb
            case 0x00627061:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apc
            case 0x00637061:
            {
                return 'h';
            }
            break;

            // ape
            case 0x00657061:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apf
            case 0x00667061:
            {
                return 'a';
            }
            break;

            // aph
            case 0x00687061:
            {
                MKV_DATA char  data_chars[9]   = "aouirelt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6a68, // 0.415648 
                    0x33f3, // 0.202934 
                    0x212c, // 0.129584 
                    0x1fec, // 0.124694 
                    0x14a8, // 0.080685 
                    0x05a2, // 0.022005 
                    0x05a2, // 0.022005 
                    0x00a0, // 0.002445 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // api
            case 0x00697061:
            {
                MKV_DATA char  data_chars[8]   = "natrsdp";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // apk
            case 0x006b7061:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apl
            case 0x006c7061:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // apm
            case 0x006d7061:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apo
            case 0x006f7061:
            {
                MKV_DATA char  data_chars[8]   = "nkmerpt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4aab, // 0.291667 
                    0x3555, // 0.208333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // app
            case 0x00707061:
            {
                MKV_DATA char  data_chars[7]   = "hairyl";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa38e, // 0.638889 
                    0x31c7, // 0.194444 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // apr
            case 0x00727061:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa2e9, // 0.636364 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aps
            case 0x00737061:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // apt
            case 0x00747061:
            {
                MKV_DATA char  data_chars[5]   = "hais";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // apu
            case 0x00757061:
            {
                MKV_DATA char  data_chars[8]   = "nreakmt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5174, // 0.318182 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // apw
            case 0x00777061:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aqu
            case 0x00757161:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ara
            case 0x00617261:
            {
                MKV_DATA char  data_chars[23]   = "mtnrkwpsidecyblohvjqag";
                MKV_DATA uint16_t data_weights[22] = {
                    0x9fbf, // 0.624013 
                    0x17a9, // 0.092417 
                    0x12ce, // 0.073460 
                    0x0bee, // 0.046603 
                    0x0ab8, // 0.041864 
                    0x0679, // 0.025276 
                    0x0473, // 0.017378 
                    0x0370, // 0.013428 
                    0x02d5, // 0.011058 
                    0x026d, // 0.009479 
                    0x026d, // 0.009479 
                    0x0239, // 0.008689 
                    0x01d2, // 0.007109 
                    0x01d2, // 0.007109 
                    0x009b, // 0.002370 
                    0x009b, // 0.002370 
                    0x009b, // 0.002370 
                    0x0068, // 0.001580 
                    0x0068, // 0.001580 
                    0x0034, // 0.000790 
                    0x0034, // 0.000790 
                    0x0034, // 0.000790 
                };
                return decision_fn( data_chars, data_weights, 22, input_weight, input_seed );
            }
            break;

            // arb
            case 0x00627261:
            {
                MKV_DATA char  data_chars[4]   = "olr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // arc
            case 0x00637261:
            {
                MKV_DATA char  data_chars[5]   = "ohau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ard
            case 0x00647261:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // are
            case 0x00657261:
            {
                MKV_DATA char  data_chars[8]   = "etnsoac";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6f97, // 0.435897 
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x20d2, // 0.128205 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ari
            case 0x00697261:
            {
                MKV_DATA char  data_chars[20]   = "ntykamsrwcdlupobevz";
                MKV_DATA uint16_t data_weights[19] = {
                    0x5c69, // 0.360976 
                    0x2078, // 0.126829 
                    0x18fa, // 0.097561 
                    0x18fa, // 0.097561 
                    0x153b, // 0.082927 
                    0x09fe, // 0.039024 
                    0x08be, // 0.034146 
                    0x077e, // 0.029268 
                    0x077e, // 0.029268 
                    0x04ff, // 0.019512 
                    0x04ff, // 0.019512 
                    0x03bf, // 0.014634 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // arj
            case 0x006a7261:
            {
                return 'e';
            }
            break;

            // ark
            case 0x006b7261:
            {
                MKV_DATA char  data_chars[6]   = "veuwl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // arl
            case 0x006c7261:
            {
                MKV_DATA char  data_chars[5]   = "tyio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // arm
            case 0x006d7261:
            {
                MKV_DATA char  data_chars[4]   = "aey";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // arn
            case 0x006e7261:
            {
                MKV_DATA char  data_chars[9]   = "astvwdeo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // aro
            case 0x006f7261:
            {
                MKV_DATA char  data_chars[14]   = "mnetkipdcbjwr";
                MKV_DATA uint16_t data_weights[13] = {
                    0x51bf, // 0.319328 
                    0x33a1, // 0.201681 
                    0x2f54, // 0.184874 
                    0x226c, // 0.134454 
                    0x0ce8, // 0.050420 
                    0x0674, // 0.025210 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // arr
            case 0x00727261:
            {
                MKV_DATA char  data_chars[7]   = "oayieu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ars
            case 0x00737261:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // art
            case 0x00747261:
            {
                MKV_DATA char  data_chars[7]   = "imehpr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aru
            case 0x00757261:
            {
                MKV_DATA char  data_chars[13]   = "nektapwihbms";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5f5f, // 0.372549 
                    0x4141, // 0.254902 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x1192, // 0.068627 
                    0x0a0a, // 0.039216 
                    0x0788, // 0.029412 
                    0x0505, // 0.019608 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // arv
            case 0x00767261:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // arw
            case 0x00777261:
            {
                MKV_DATA char  data_chars[3]   = "ci";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ary
            case 0x00797261:
            {
                MKV_DATA char  data_chars[4]   = "ano";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asa
            case 0x00617361:
            {
                MKV_DATA char  data_chars[19]   = "nterikmopwylscdhav";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4b91, // 0.295181 
                    0x40c5, // 0.253012 
                    0x1282, // 0.072289 
                    0x1282, // 0.072289 
                    0x1282, // 0.072289 
                    0x10f7, // 0.066265 
                    0x0acc, // 0.042169 
                    0x07b6, // 0.030120 
                    0x04a0, // 0.018072 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // asc
            case 0x00637361:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asd
            case 0x00647361:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ase
            case 0x00657361:
            {
                MKV_DATA char  data_chars[10]   = "mntkrloab";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x38e4, // 0.222222 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ash
            case 0x00687361:
            {
                MKV_DATA char  data_chars[4]   = "eil";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asi
            case 0x00697361:
            {
                MKV_DATA char  data_chars[15]   = "tnamkrdlswoehu";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6000, // 0.375000 
                    0x3d8a, // 0.240385 
                    0x189e, // 0.096154 
                    0x113b, // 0.067308 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x0762, // 0.028846 
                    0x0762, // 0.028846 
                    0x04ec, // 0.019231 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // asm
            case 0x006d7361:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asn
            case 0x006e7361:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aso
            case 0x006f7361:
            {
                MKV_DATA char  data_chars[10]   = "nmekptcil";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x31c7, // 0.194444 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0aab, // 0.041667 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // asp
            case 0x00707361:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asr
            case 0x00727361:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ass
            case 0x00737361:
            {
                MKV_DATA char  data_chars[5]   = "aiey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ast
            case 0x00747361:
            {
                MKV_DATA char  data_chars[7]   = "eioaly";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // asu
            case 0x00757361:
            {
                MKV_DATA char  data_chars[14]   = "kaenptmdbclrs";
                MKV_DATA uint16_t data_weights[13] = {
                    0x51b4, // 0.319149 
                    0x2b93, // 0.170213 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ata
            case 0x00617461:
            {
                MKV_DATA char  data_chars[17]   = "nreimtwkpyovsdbl";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3c82, // 0.236364 
                    0x2790, // 0.154545 
                    0x1e41, // 0.118182 
                    0x1e41, // 0.118182 
                    0x14f2, // 0.081818 
                    0x14f2, // 0.081818 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x06fb, // 0.027273 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // atb
            case 0x00627461:
            {
                MKV_DATA char  data_chars[4]   = "auo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atc
            case 0x00637461:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atd
            case 0x00647461:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ate
            case 0x00657461:
            {
                MKV_DATA char  data_chars[7]   = "rnealw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // atf
            case 0x00667461:
            {
                return 'a';
            }
            break;

            // ath
            case 0x00687461:
            {
                MKV_DATA char  data_chars[9]   = "aiuoetry";
                MKV_DATA uint16_t data_weights[8] = {
                    0x795b, // 0.474041 
                    0x31b3, // 0.194131 
                    0x2ac3, // 0.167043 
                    0x1fc9, // 0.124154 
                    0x0817, // 0.031603 
                    0x0128, // 0.004515 
                    0x0094, // 0.002257 
                    0x0094, // 0.002257 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ati
            case 0x00697461:
            {
                MKV_DATA char  data_chars[16]   = "knoatpmcehblvsr";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2be3, // 0.171429 
                    0x283b, // 0.157143 
                    0x283b, // 0.157143 
                    0x199a, // 0.100000 
                    0x1249, // 0.071429 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // atk
            case 0x006b7461:
            {
                MKV_DATA char  data_chars[4]   = "ahr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atl
            case 0x006c7461:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atm
            case 0x006d7461:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atn
            case 0x006e7461:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ato
            case 0x006f7461:
            {
                MKV_DATA char  data_chars[10]   = "nkwetprmi";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8000, // 0.500000 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // atp
            case 0x00707461:
            {
                MKV_DATA char  data_chars[5]   = "rhoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // atr
            case 0x00727461:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x71c7, // 0.444444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ats
            case 0x00737461:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0xe333, // 0.887500 
                    0x1000, // 0.062500 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // att
            case 0x00747461:
            {
                MKV_DATA char  data_chars[9]   = "hairouty";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8bd1, // 0.546154 
                    0x589e, // 0.346154 
                    0x0ad5, // 0.042308 
                    0x09d9, // 0.038462 
                    0x02f4, // 0.011538 
                    0x01f8, // 0.007692 
                    0x00fc, // 0.003846 
                    0x00fc, // 0.003846 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // atu
            case 0x00757461:
            {
                MKV_DATA char  data_chars[14]   = "nremkbpatclwi";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3c00, // 0.234375 
                    0x3000, // 0.187500 
                    0x2800, // 0.156250 
                    0x1c00, // 0.109375 
                    0x1000, // 0.062500 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // atw
            case 0x00777461:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aty
            case 0x00797461:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aue
            case 0x00657561:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aug
            case 0x00677561:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aum
            case 0x006d7561:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aun
            case 0x006e7561:
            {
                MKV_DATA char  data_chars[4]   = "gac";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aur
            case 0x00727561:
            {
                MKV_DATA char  data_chars[5]   = "aeou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aut
            case 0x00747561:
            {
                MKV_DATA char  data_chars[4]   = "hit";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ava
            case 0x00617661:
            {
                MKV_DATA char  data_chars[7]   = "nldmrt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ave
            case 0x00657661:
            {
                MKV_DATA char  data_chars[5]   = "lner";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // avi
            case 0x00697661:
            {
                MKV_DATA char  data_chars[8]   = "lnsreop";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7000, // 0.437500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // avo
            case 0x006f7661:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awa
            case 0x00617761:
            {
                MKV_DATA char  data_chars[16]   = "tnrdemkisplyoga";
                MKV_DATA uint16_t data_weights[15] = {
                    0x7a4e, // 0.477756 
                    0x45d1, // 0.272727 
                    0x0edb, // 0.058027 
                    0x0a66, // 0.040619 
                    0x076d, // 0.029014 
                    0x05f1, // 0.023211 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x04f4, // 0.019342 
                    0x02f9, // 0.011605 
                    0x02f9, // 0.011605 
                    0x017c, // 0.005803 
                    0x00fe, // 0.003868 
                    0x007f, // 0.001934 
                    0x007f, // 0.001934 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // awe
            case 0x00657761:
            {
                MKV_DATA char  data_chars[7]   = "tnekly";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // awh
            case 0x00687761:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awi
            case 0x00697761:
            {
                MKV_DATA char  data_chars[13]   = "tahncwsrkmlp";
                MKV_DATA uint16_t data_weights[12] = {
                    0x61cc, // 0.382022 
                    0x1fa4, // 0.123596 
                    0x19e3, // 0.101124 
                    0x1703, // 0.089888 
                    0x0e62, // 0.056180 
                    0x0e62, // 0.056180 
                    0x0b81, // 0.044944 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // awk
            case 0x006b7761:
            {
                return 'a';
            }
            break;

            // awo
            case 0x006f7761:
            {
                MKV_DATA char  data_chars[6]   = "nerki";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd1d6, // 0.819672 
                    0x14fc, // 0.081967 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // awu
            case 0x00757761:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aww
            case 0x00777761:
            {
                return 'a';
            }
            break;

            // axc
            case 0x00637861:
            {
                MKV_DATA char  data_chars[3]   = "lh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axi
            case 0x00697861:
            {
                return 'n';
            }
            break;

            // aya
            case 0x00617961:
            {
                MKV_DATA char  data_chars[17]   = "nrkltwsepmboiyvc";
                MKV_DATA uint16_t data_weights[16] = {
                    0x48ff, // 0.285141 
                    0x3368, // 0.200803 
                    0x2819, // 0.156626 
                    0x0d5e, // 0.052209 
                    0x0d5e, // 0.052209 
                    0x0b4f, // 0.044177 
                    0x0b4f, // 0.044177 
                    0x0b4f, // 0.044177 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0524, // 0.020080 
                    0x0524, // 0.020080 
                    0x041d, // 0.016064 
                    0x020e, // 0.008032 
                    0x0107, // 0.004016 
                    0x0107, // 0.004016 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ayb
            case 0x00627961:
            {
                return 'u';
            }
            break;

            // ayc
            case 0x00637961:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayd
            case 0x00647961:
            {
                MKV_DATA char  data_chars[3]   = "og";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aye
            case 0x00657961:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayf
            case 0x00667961:
            {
                MKV_DATA char  data_chars[4]   = "alr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayh
            case 0x00687961:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayi
            case 0x00697961:
            {
                MKV_DATA char  data_chars[7]   = "naktos";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ayk
            case 0x006b7961:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aym
            case 0x006d7961:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayn
            case 0x006e7961:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayo
            case 0x006f7961:
            {
                MKV_DATA char  data_chars[9]   = "nmtdepki";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4555, // 0.270833 
                    0x4000, // 0.250000 
                    0x3555, // 0.208333 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ayp
            case 0x00707961:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayr
            case 0x00727961:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ays
            case 0x00737961:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayu
            case 0x00757961:
            {
                MKV_DATA char  data_chars[11]   = "npterhdkma";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5555, // 0.333333 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ayv
            case 0x00767961:
            {
                return 'i';
            }
            break;

            // ayw
            case 0x00777961:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aza
            case 0x00617a61:
            {
                MKV_DATA char  data_chars[4]   = "aly";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aze
            case 0x00657a61:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // azo
            case 0x006f7a61:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // azz
            case 0x007a7a61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // a
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'b':
        {
            switch ( trigram_u32 )
            {
            // baa
            case 0x00616162:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bab
            case 0x00626162:
            {
                MKV_DATA char  data_chars[5]   = "aioy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bac
            case 0x00636162:
            {
                MKV_DATA char  data_chars[4]   = "chk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bad
            case 0x00646162:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bae
            case 0x00656162:
            {
                MKV_DATA char  data_chars[6]   = "knpwo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5e51, // 0.368421 
                    0x5e51, // 0.368421 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bah
            case 0x00686162:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bai
            case 0x00696162:
            {
                MKV_DATA char  data_chars[9]   = "ybcdfmnp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bak
            case 0x006b6162:
            {
                MKV_DATA char  data_chars[11]   = "hdorsuakel";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bal
            case 0x006c6162:
            {
                MKV_DATA char  data_chars[8]   = "aioucel";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bam
            case 0x006d6162:
            {
                MKV_DATA char  data_chars[5]   = "rpbn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ban
            case 0x006e6162:
            {
                MKV_DATA char  data_chars[15]   = "gtanpcldkybhrs";
                MKV_DATA uint16_t data_weights[14] = {
                    0x65e7, // 0.398058 
                    0x1dd3, // 0.116505 
                    0x165e, // 0.087379 
                    0x13e2, // 0.077670 
                    0x1166, // 0.067961 
                    0x0eea, // 0.058252 
                    0x0eea, // 0.058252 
                    0x09f1, // 0.038835 
                    0x09f1, // 0.038835 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // bao
            case 0x006f6162:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bap
            case 0x00706162:
            {
                MKV_DATA char  data_chars[4]   = "htp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bar
            case 0x00726162:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9e7a, // 0.619048 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bas
            case 0x00736162:
            {
                MKV_DATA char  data_chars[5]   = "saei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bat
            case 0x00746162:
            {
                MKV_DATA char  data_chars[8]   = "utoahir";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bau
            case 0x00756162:
            {
                MKV_DATA char  data_chars[3]   = "me";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bav
            case 0x00766162:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // baw
            case 0x00776162:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bay
            case 0x00796162:
            {
                MKV_DATA char  data_chars[10]   = "awbcuosvf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // baz
            case 0x007a6162:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbi
            case 0x00696262:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbo
            case 0x006f6262:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbt
            case 0x00746262:
            {
                MKV_DATA char  data_chars[3]   = "vr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bea
            case 0x00616562:
            {
                MKV_DATA char  data_chars[6]   = "ckmrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bed
            case 0x00646562:
            {
                MKV_DATA char  data_chars[3]   = "sr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bee
            case 0x00656562:
            {
                MKV_DATA char  data_chars[4]   = "brs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bek
            case 0x006b6562:
            {
                MKV_DATA char  data_chars[3]   = "ks";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bel
            case 0x006c6562:
            {
                MKV_DATA char  data_chars[6]   = "lmahi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ben
            case 0x006e6562:
            {
                MKV_DATA char  data_chars[6]   = "cygji";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb555, // 0.708333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ber
            case 0x00726562:
            {
                MKV_DATA char  data_chars[3]   = "kr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bes
            case 0x00736562:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bet
            case 0x00746562:
            {
                MKV_DATA char  data_chars[7]   = "hlmotw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bev
            case 0x00766562:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bey
            case 0x00796562:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bha
            case 0x00616862:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhi
            case 0x00696862:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bho
            case 0x006f6862:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhr
            case 0x00726862:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhu
            case 0x00756862:
            {
                MKV_DATA char  data_chars[5]   = "mnvk";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bia
            case 0x00616962:
            {
                MKV_DATA char  data_chars[6]   = "ntokp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bib
            case 0x00626962:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bid
            case 0x00646962:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bih
            case 0x00686962:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bik
            case 0x006b6962:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bil
            case 0x006c6962:
            {
                MKV_DATA char  data_chars[4]   = "ael";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bin
            case 0x006e6962:
            {
                MKV_DATA char  data_chars[5]   = "gyao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bio
            case 0x006f6962:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bir
            case 0x00726962:
            {
                MKV_DATA char  data_chars[4]   = "adi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bit
            case 0x00746962:
            {
                MKV_DATA char  data_chars[4]   = "ias";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // biy
            case 0x00796962:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bka
            case 0x00616b62:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bla
            case 0x00616c62:
            {
                MKV_DATA char  data_chars[5]   = "nsce";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ble
            case 0x00656c62:
            {
                MKV_DATA char  data_chars[4]   = "stu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bli
            case 0x00696c62:
            {
                MKV_DATA char  data_chars[6]   = "cslnv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // blo
            case 0x006f6c62:
            {
                MKV_DATA char  data_chars[4]   = "seo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // blu
            case 0x00756c62:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bng
            case 0x00676e62:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boa
            case 0x00616f62:
            {
                MKV_DATA char  data_chars[3]   = "tr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bob
            case 0x00626f62:
            {
                MKV_DATA char  data_chars[3]   = "os";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boc
            case 0x00636f62:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bod
            case 0x00646f62:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boe
            case 0x00656f62:
            {
                MKV_DATA char  data_chars[8]   = "ntkiycm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // boi
            case 0x00696f62:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bok
            case 0x006b6f62:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bol
            case 0x006c6f62:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bom
            case 0x006d6f62:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bon
            case 0x006e6f62:
            {
                MKV_DATA char  data_chars[6]   = "ganrk";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa6f5, // 0.652174 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // boo
            case 0x006f6f62:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bop
            case 0x00706f62:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bor
            case 0x00726f62:
            {
                MKV_DATA char  data_chars[7]   = "oiaden";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7712, // 0.465116 
                    0x4d65, // 0.302326 
                    0x29ad, // 0.162791 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bos
            case 0x00736f62:
            {
                MKV_DATA char  data_chars[3]   = "so";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bot
            case 0x00746f62:
            {
                MKV_DATA char  data_chars[6]   = "akort";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bou
            case 0x00756f62:
            {
                MKV_DATA char  data_chars[5]   = "trln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bow
            case 0x00776f62:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boy
            case 0x00796f62:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bpr
            case 0x00727062:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bra
            case 0x00617262:
            {
                MKV_DATA char  data_chars[6]   = "ncers";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bre
            case 0x00657262:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bri
            case 0x00697262:
            {
                MKV_DATA char  data_chars[8]   = "gtzacdk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // brr
            case 0x00727262:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bru
            case 0x00757262:
            {
                MKV_DATA char  data_chars[5]   = "bekp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bsa
            case 0x00617362:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bso
            case 0x006f7362:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bst
            case 0x00747362:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // btr
            case 0x00727462:
            {
                MKV_DATA char  data_chars[3]   = "xa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bua
            case 0x00617562:
            {
                MKV_DATA char  data_chars[10]   = "ntrlikpbm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // bub
            case 0x00627562:
            {
                MKV_DATA char  data_chars[3]   = "uo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buc
            case 0x00637562:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bud
            case 0x00647562:
            {
                MKV_DATA char  data_chars[4]   = "dag";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bue
            case 0x00657562:
            {
                MKV_DATA char  data_chars[7]   = "anlrsk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bui
            case 0x00697562:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buk
            case 0x006b7562:
            {
                MKV_DATA char  data_chars[6]   = "ehaik";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bul
            case 0x006c7562:
            {
                MKV_DATA char  data_chars[6]   = "oauyl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bum
            case 0x006d7562:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bun
            case 0x006e7562:
            {
                MKV_DATA char  data_chars[15]   = "ytgsclmrdowanp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4758, // 0.278689 
                    0x2193, // 0.131148 
                    0x2193, // 0.131148 
                    0x1d61, // 0.114754 
                    0x192e, // 0.098361 
                    0x0c97, // 0.049180 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // bup
            case 0x00707562:
            {
                MKV_DATA char  data_chars[4]   = "pah";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bur
            case 0x00727562:
            {
                MKV_DATA char  data_chars[6]   = "iaeou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9c95, // 0.611650 
                    0x4d0c, // 0.300971 
                    0x0eea, // 0.058252 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bus
            case 0x00737562:
            {
                MKV_DATA char  data_chars[3]   = "si";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // but
            case 0x00747562:
            {
                MKV_DATA char  data_chars[10]   = "stedacnor";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6db7, // 0.428571 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // buw
            case 0x00777562:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buy
            case 0x00797562:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bwa
            case 0x00617762:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byd
            case 0x00647962:
            {
                MKV_DATA char  data_chars[3]   = "lg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // b
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'c':
        {
            switch ( trigram_u32 )
            {
            // cab
            case 0x00626163:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cad
            case 0x00646163:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cae
            case 0x00656163:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // caf
            case 0x00666163:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cak
            case 0x006b6163:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cal
            case 0x006c6163:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cam
            case 0x006d6163:
            {
                MKV_DATA char  data_chars[3]   = "ep";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // can
            case 0x006e6163:
            {
                MKV_DATA char  data_chars[5]   = "anty";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cap
            case 0x00706163:
            {
                MKV_DATA char  data_chars[6]   = "eairt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // car
            case 0x00726163:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cas
            case 0x00736163:
            {
                MKV_DATA char  data_chars[7]   = "atuchi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // cat
            case 0x00746163:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cav
            case 0x00766163:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cce
            case 0x00656363:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cch
            case 0x00686363:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cco
            case 0x006f6363:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cea
            case 0x00616563:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cef
            case 0x00666563:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cel
            case 0x006c6563:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cen
            case 0x006e6563:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cep
            case 0x00706563:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cer
            case 0x00726563:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ces
            case 0x00736563:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cet
            case 0x00746563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ceu
            case 0x00756563:
            {
                MKV_DATA char  data_chars[3]   = "mg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cev
            case 0x00766563:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cey
            case 0x00796563:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cha
            case 0x00616863:
            {
                MKV_DATA char  data_chars[22]   = "nirmktlwopeysbdchvaux";
                MKV_DATA uint16_t data_weights[21] = {
                    0x3cc1, // 0.237319 
                    0x2607, // 0.148551 
                    0x1cc1, // 0.112319 
                    0x14a3, // 0.080616 
                    0x1252, // 0.071558 
                    0x1129, // 0.067029 
                    0x10ed, // 0.066123 
                    0x090b, // 0.035326 
                    0x0859, // 0.032609 
                    0x06f5, // 0.027174 
                    0x06f5, // 0.027174 
                    0x05cc, // 0.022645 
                    0x05cc, // 0.022645 
                    0x0468, // 0.017210 
                    0x03f1, // 0.015399 
                    0x01db, // 0.007246 
                    0x00b2, // 0.002717 
                    0x0077, // 0.001812 
                    0x0077, // 0.001812 
                    0x0077, // 0.001812 
                    0x003b, // 0.000906 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // chb
            case 0x00626863:
            {
                MKV_DATA char  data_chars[3]   = "uo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chc
            case 0x00636863:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chd
            case 0x00646863:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // che
            case 0x00656863:
            {
                MKV_DATA char  data_chars[13]   = "tdnrkcmolapq";
                MKV_DATA uint16_t data_weights[12] = {
                    0x83e1, // 0.515152 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // chf
            case 0x00666863:
            {
                return 'r';
            }
            break;

            // chi
            case 0x00696863:
            {
                MKV_DATA char  data_chars[18]   = "ntamrkpwcleduovgf";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4000, // 0.250000 
                    0x3e1e, // 0.242647 
                    0x20f1, // 0.128676 
                    0x1969, // 0.099265 
                    0x1878, // 0.095588 
                    0x0969, // 0.036765 
                    0x0878, // 0.033088 
                    0x0788, // 0.029412 
                    0x04b5, // 0.018382 
                    0x03c4, // 0.014706 
                    0x02d3, // 0.011029 
                    0x02d3, // 0.011029 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x00f1, // 0.003676 
                    0x00f1, // 0.003676 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // chk
            case 0x006b6863:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chl
            case 0x006c6863:
            {
                MKV_DATA char  data_chars[4]   = "oay";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // chm
            case 0x006d6863:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chn
            case 0x006e6863:
            {
                MKV_DATA char  data_chars[6]   = "goiua";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cho
            case 0x006f6863:
            {
                MKV_DATA char  data_chars[16]   = "nmtekirlpcwdhof";
                MKV_DATA uint16_t data_weights[15] = {
                    0x7657, // 0.462264 
                    0x2b79, // 0.169811 
                    0x1cfb, // 0.113208 
                    0x15bc, // 0.084906 
                    0x0c13, // 0.047170 
                    0x073f, // 0.028302 
                    0x060a, // 0.023585 
                    0x039f, // 0.014151 
                    0x039f, // 0.014151 
                    0x039f, // 0.014151 
                    0x026a, // 0.009434 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // chr
            case 0x00726863:
            {
                MKV_DATA char  data_chars[5]   = "oeib";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chs
            case 0x00736863:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cht
            case 0x00746863:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chu
            case 0x00756863:
            {
                MKV_DATA char  data_chars[14]   = "mentarlksipwc";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3aa0, // 0.229008 
                    0x2521, // 0.145038 
                    0x2139, // 0.129771 
                    0x1d50, // 0.114504 
                    0x1773, // 0.091603 
                    0x138b, // 0.076336 
                    0x138b, // 0.076336 
                    0x09c5, // 0.038168 
                    0x05dd, // 0.022901 
                    0x05dd, // 0.022901 
                    0x05dd, // 0.022901 
                    0x03e9, // 0.015267 
                    0x03e9, // 0.015267 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // chv
            case 0x00766863:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chw
            case 0x00776863:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cia
            case 0x00616963:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cie
            case 0x00656963:
            {
                MKV_DATA char  data_chars[4]   = "rtn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cif
            case 0x00666963:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cil
            case 0x006c6963:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cin
            case 0x006e6963:
            {
                MKV_DATA char  data_chars[4]   = "tgn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cip
            case 0x00706963:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cir
            case 0x00726963:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cit
            case 0x00746963:
            {
                MKV_DATA char  data_chars[5]   = "yiar";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cka
            case 0x00616b63:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cke
            case 0x00656b63:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cks
            case 0x00736b63:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cla
            case 0x00616c63:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cle
            case 0x00656c63:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cli
            case 0x00696c63:
            {
                MKV_DATA char  data_chars[3]   = "fn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // clo
            case 0x006f6c63:
            {
                MKV_DATA char  data_chars[4]   = "suv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // clu
            case 0x00756c63:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coa
            case 0x00616f63:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coc
            case 0x00636f63:
            {
                MKV_DATA char  data_chars[4]   = "ock";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cod
            case 0x00646f63:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cof
            case 0x00666f63:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coh
            case 0x00686f63:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coi
            case 0x00696f63:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // col
            case 0x006c6f63:
            {
                MKV_DATA char  data_chars[7]   = "loaenu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // com
            case 0x006d6f63:
            {
                MKV_DATA char  data_chars[9]   = "eposabmf";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6bca, // 0.421053 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // con
            case 0x006e6f63:
            {
                MKV_DATA char  data_chars[10]   = "tcdvryuno";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // coo
            case 0x006f6f63:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cop
            case 0x00706f63:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cor
            case 0x00726f63:
            {
                MKV_DATA char  data_chars[6]   = "adnpe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cos
            case 0x00736f63:
            {
                MKV_DATA char  data_chars[3]   = "ty";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cot
            case 0x00746f63:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cou
            case 0x00756f63:
            {
                MKV_DATA char  data_chars[4]   = "rnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cov
            case 0x00766f63:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coz
            case 0x007a6f63:
            {
                MKV_DATA char  data_chars[4]   = "eiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cra
            case 0x00617263:
            {
                MKV_DATA char  data_chars[3]   = "cf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cre
            case 0x00657263:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cri
            case 0x00697263:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cro
            case 0x006f7263:
            {
                MKV_DATA char  data_chars[3]   = "ws";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cru
            case 0x00757263:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cry
            case 0x00797263:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // csu
            case 0x00757363:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cta
            case 0x00617463:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cti
            case 0x00697463:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cto
            case 0x006f7463:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ctr
            case 0x00727463:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ctu
            case 0x00757463:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cul
            case 0x006c7563:
            {
                MKV_DATA char  data_chars[4]   = "tpa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cup
            case 0x00707563:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cur
            case 0x00727563:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cus
            case 0x00737563:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cut
            case 0x00747563:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cuz
            case 0x007a7563:
            {
                return 'z';
            }
            break;

            // cya
            case 0x00617963:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // c
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'd':
        {
            switch ( trigram_u32 )
            {
            // dab
            case 0x00626164:
            {
                MKV_DATA char  data_chars[4]   = "uoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dac
            case 0x00636164:
            {
                MKV_DATA char  data_chars[5]   = "henc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dad
            case 0x00646164:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dae
            case 0x00656164:
            {
                MKV_DATA char  data_chars[6]   = "ntkdg";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc71c, // 0.777778 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dah
            case 0x00686164:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dai
            case 0x00696164:
            {
                MKV_DATA char  data_chars[4]   = "kmn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dak
            case 0x006b6164:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dal
            case 0x006c6164:
            {
                MKV_DATA char  data_chars[5]   = "aweu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dam
            case 0x006d6164:
            {
                MKV_DATA char  data_chars[6]   = "arnbp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5e51, // 0.368421 
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dan
            case 0x006e6164:
            {
                MKV_DATA char  data_chars[7]   = "gacoul";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9bd3, // 0.608696 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dao
            case 0x006f6164:
            {
                MKV_DATA char  data_chars[4]   = "wrn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dap
            case 0x00706164:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dar
            case 0x00726164:
            {
                MKV_DATA char  data_chars[8]   = "auiodej";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9bd3, // 0.608696 
                    0x2c86, // 0.173913 
                    0x1dae, // 0.115942 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // das
            case 0x00736164:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dat
            case 0x00746164:
            {
                MKV_DATA char  data_chars[4]   = "efu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dav
            case 0x00766164:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // daw
            case 0x00776164:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // day
            case 0x00796164:
            {
                MKV_DATA char  data_chars[5]   = "asor";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dbu
            case 0x00756264:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dce
            case 0x00656364:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dch
            case 0x00686364:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dco
            case 0x006f6364:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dde
            case 0x00656464:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddh
            case 0x00686464:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddi
            case 0x00696464:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddl
            case 0x006c6464:
            {
                MKV_DATA char  data_chars[3]   = "xa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddp
            case 0x00706464:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dea
            case 0x00616564:
            {
                MKV_DATA char  data_chars[5]   = "stwn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // deb
            case 0x00626564:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dec
            case 0x00636564:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dee
            case 0x00656564:
            {
                MKV_DATA char  data_chars[3]   = "dv";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // deg
            case 0x00676564:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // del
            case 0x006c6564:
            {
                MKV_DATA char  data_chars[5]   = "uimp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dem
            case 0x006d6564:
            {
                MKV_DATA char  data_chars[5]   = "aeoy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // den
            case 0x006e6564:
            {
                MKV_DATA char  data_chars[7]   = "gstlbc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dep
            case 0x00706564:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // der
            case 0x00726564:
            {
                MKV_DATA char  data_chars[5]   = "fmno";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // des
            case 0x00736564:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // det
            case 0x00746564:
            {
                MKV_DATA char  data_chars[4]   = "pac";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // deu
            case 0x00756564:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dev
            case 0x00766564:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dew
            case 0x00776564:
            {
                MKV_DATA char  data_chars[4]   = "ais";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dge
            case 0x00656764:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dha
            case 0x00616864:
            {
                MKV_DATA char  data_chars[6]   = "yrmnp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dhe
            case 0x00656864:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dhi
            case 0x00696864:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dho
            case 0x006f6864:
            {
                MKV_DATA char  data_chars[5]   = "rnst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dhr
            case 0x00726864:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dhy
            case 0x00796864:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dia
            case 0x00616964:
            {
                MKV_DATA char  data_chars[7]   = "nkmtop";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dib
            case 0x00626964:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // did
            case 0x00646964:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // die
            case 0x00656964:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dig
            case 0x00676964:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dik
            case 0x006b6964:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dil
            case 0x006c6964:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dim
            case 0x006d6964:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // din
            case 0x006e6964:
            {
                MKV_DATA char  data_chars[11]   = "gsidemnatu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // dip
            case 0x00706964:
            {
                MKV_DATA char  data_chars[5]   = "ahlr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dir
            case 0x00726964:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dis
            case 0x00736964:
            {
                MKV_DATA char  data_chars[7]   = "oetacs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dit
            case 0x00746964:
            {
                MKV_DATA char  data_chars[7]   = "tspehi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x471c, // 0.277778 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // diu
            case 0x00756964:
            {
                MKV_DATA char  data_chars[3]   = "md";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // div
            case 0x00766964:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // diy
            case 0x00796964:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dkh
            case 0x00686b64:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dkr
            case 0x00726b64:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dla
            case 0x00616c64:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dli
            case 0x00696c64:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dlo
            case 0x006f6c64:
            {
                MKV_DATA char  data_chars[3]   = "fm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dlr
            case 0x00726c64:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dls
            case 0x00736c64:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dlx
            case 0x00786c64:
            {
                return 'w';
            }
            break;

            // dma
            case 0x00616d64:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dmi
            case 0x00696d64:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // doc
            case 0x00636f64:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // doe
            case 0x00656f64:
            {
                MKV_DATA char  data_chars[4]   = "mnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // doi
            case 0x00696f64:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dok
            case 0x006b6f64:
            {
                MKV_DATA char  data_chars[5]   = "kcmb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dol
            case 0x006c6f64:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dom
            case 0x006d6f64:
            {
                MKV_DATA char  data_chars[11]   = "septikmwdc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // don
            case 0x006e6f64:
            {
                MKV_DATA char  data_chars[9]   = "gcmsltki";
                MKV_DATA uint16_t data_weights[8] = {
                    0x97b4, // 0.592593 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // doo
            case 0x006f6f64:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dor
            case 0x00726f64:
            {
                MKV_DATA char  data_chars[4]   = "afm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dot
            case 0x00746f64:
            {
                MKV_DATA char  data_chars[4]   = "etu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dou
            case 0x00756f64:
            {
                MKV_DATA char  data_chars[4]   = "bay";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dow
            case 0x00776f64:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpl
            case 0x006c7064:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpo
            case 0x006f7064:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpr
            case 0x00727064:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dra
            case 0x00617264:
            {
                MKV_DATA char  data_chars[4]   = "nwg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dre
            case 0x00657264:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dri
            case 0x00697264:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dro
            case 0x006f7264:
            {
                MKV_DATA char  data_chars[3]   = "op";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dru
            case 0x00757264:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsa
            case 0x00617364:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dse
            case 0x00657364:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsh
            case 0x00687364:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dso
            case 0x006f7364:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsu
            case 0x00757364:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dth
            case 0x00687464:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dti
            case 0x00697464:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dua
            case 0x00617564:
            {
                MKV_DATA char  data_chars[5]   = "nitk";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dub
            case 0x00627564:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duc
            case 0x00637564:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dud
            case 0x00647564:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // due
            case 0x00657564:
            {
                MKV_DATA char  data_chars[5]   = "ankb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8d3e, // 0.551724 
                    0x4f73, // 0.310345 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // duk
            case 0x006b7564:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dul
            case 0x006c7564:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dum
            case 0x006d7564:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dun
            case 0x006e7564:
            {
                MKV_DATA char  data_chars[4]   = "gye";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dup
            case 0x00707564:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dur
            case 0x00727564:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dus
            case 0x00737564:
            {
                MKV_DATA char  data_chars[5]   = "ioat";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dut
            case 0x00747564:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duw
            case 0x00777564:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duz
            case 0x007a7564:
            {
                MKV_DATA char  data_chars[3]   = "iz";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dva
            case 0x00617664:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dve
            case 0x00657664:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dvi
            case 0x00697664:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwi
            case 0x00697764:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dya
            case 0x00617964:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dye
            case 0x00657964:
            {
                MKV_DATA char  data_chars[3]   = "ak";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyl
            case 0x006c7964:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyn
            case 0x006e7964:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // d
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'e':
        {
            switch ( trigram_u32 )
            {
            // eab
            case 0x00626165:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eac
            case 0x00636165:
            {
                MKV_DATA char  data_chars[4]   = "hoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eaf
            case 0x00666165:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eah
            case 0x00686165:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eai
            case 0x00696165:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eak
            case 0x006b6165:
            {
                MKV_DATA char  data_chars[5]   = "efhu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eal
            case 0x006c6165:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eam
            case 0x006d6165:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ean
            case 0x006e6165:
            {
                MKV_DATA char  data_chars[7]   = "gshkuc";
                MKV_DATA uint16_t data_weights[6] = {
                    0xe9bd, // 0.913043 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eap
            case 0x00706165:
            {
                MKV_DATA char  data_chars[5]   = "elop";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ear
            case 0x00726165:
            {
                MKV_DATA char  data_chars[7]   = "leinac";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eas
            case 0x00736165:
            {
                MKV_DATA char  data_chars[9]   = "touycehi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eat
            case 0x00746165:
            {
                MKV_DATA char  data_chars[5]   = "eaim";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eau
            case 0x00756165:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eav
            case 0x00766165:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eaw
            case 0x00776165:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eaz
            case 0x007a6165:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eba
            case 0x00616265:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebe
            case 0x00656265:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebi
            case 0x00696265:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebu
            case 0x00756265:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ech
            case 0x00686365:
            {
                MKV_DATA char  data_chars[6]   = "ainor";
                MKV_DATA uint16_t data_weights[5] = {
                    0x90b2, // 0.565217 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eci
            case 0x00696365:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eco
            case 0x006f6365:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ecr
            case 0x00726365:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ect
            case 0x00746365:
            {
                MKV_DATA char  data_chars[4]   = "iar";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ecu
            case 0x00756365:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eda
            case 0x00616465:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ede
            case 0x00656465:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edh
            case 0x00686465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edi
            case 0x00696465:
            {
                MKV_DATA char  data_chars[6]   = "aklvy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edo
            case 0x006f6465:
            {
                MKV_DATA char  data_chars[3]   = "uc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edr
            case 0x00726465:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eeb
            case 0x00626565:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eec
            case 0x00636565:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eed
            case 0x00646565:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eeh
            case 0x00686565:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eek
            case 0x006b6565:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eel
            case 0x006c6565:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eem
            case 0x006d6565:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // een
            case 0x006e6565:
            {
                MKV_DATA char  data_chars[7]   = "vaelst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eeo
            case 0x006f6565:
            {
                MKV_DATA char  data_chars[3]   = "rk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eer
            case 0x00726565:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ees
            case 0x00736565:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eet
            case 0x00746565:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eev
            case 0x00766565:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eey
            case 0x00796565:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eez
            case 0x007a6565:
            {
                return 'e';
            }
            break;

            // efe
            case 0x00656665:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efi
            case 0x00696665:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efl
            case 0x006c6665:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ega
            case 0x00616765:
            {
                MKV_DATA char  data_chars[5]   = "nscl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ege
            case 0x00656765:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egg
            case 0x00676765:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egi
            case 0x00696765:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egr
            case 0x00726765:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egy
            case 0x00796765:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eha
            case 0x00616865:
            {
                MKV_DATA char  data_chars[5]   = "abrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ehe
            case 0x00656865:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eho
            case 0x006f6865:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ehu
            case 0x00756865:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eia
            case 0x00616965:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eig
            case 0x00676965:
            {
                MKV_DATA char  data_chars[3]   = "hn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eis
            case 0x00736965:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eiw
            case 0x00776965:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eiy
            case 0x00796965:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eka
            case 0x00616b65:
            {
                MKV_DATA char  data_chars[5]   = "rmny";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ekb
            case 0x00626b65:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekc
            case 0x00636b65:
            {
                return 'h';
            }
            break;

            // eke
            case 0x00656b65:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekh
            case 0x00686b65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekk
            case 0x006b6b65:
            {
                MKV_DATA char  data_chars[4]   = "ahi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8618, // 0.523810 
                    0x6db7, // 0.428571 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ekl
            case 0x006c6b65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekm
            case 0x006d6b65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekn
            case 0x006e6b65:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eko
            case 0x006f6b65:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekp
            case 0x00706b65:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekr
            case 0x00726b65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eks
            case 0x00736b65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekt
            case 0x00746b65:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eku
            case 0x00756b65:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekw
            case 0x00776b65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ela
            case 0x00616c65:
            {
                MKV_DATA char  data_chars[14]   = "ienxwrtpvmhbo";
                MKV_DATA uint16_t data_weights[13] = {
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // elc
            case 0x00636c65:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eld
            case 0x00646c65:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ele
            case 0x00656c65:
            {
                MKV_DATA char  data_chars[9]   = "cgpymnsv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // elh
            case 0x00686c65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eli
            case 0x00696c65:
            {
                MKV_DATA char  data_chars[9]   = "taxzcegm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ell
            case 0x006c6c65:
            {
                MKV_DATA char  data_chars[7]   = "aeofin";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // elm
            case 0x006d6c65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elo
            case 0x006f6c65:
            {
                MKV_DATA char  data_chars[5]   = "ndte";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // elp
            case 0x00706c65:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elu
            case 0x00756c65:
            {
                MKV_DATA char  data_chars[5]   = "wxkn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // elv
            case 0x00766c65:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ema
            case 0x00616d65:
            {
                MKV_DATA char  data_chars[7]   = "rwlnip";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // emb
            case 0x00626d65:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eme
            case 0x00656d65:
            {
                MKV_DATA char  data_chars[4]   = "nrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // emh
            case 0x00686d65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emi
            case 0x00696d65:
            {
                MKV_DATA char  data_chars[8]   = "nteksuy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // emm
            case 0x006d6d65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emo
            case 0x006f6d65:
            {
                MKV_DATA char  data_chars[5]   = "nrtc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // emp
            case 0x00706d65:
            {
                MKV_DATA char  data_chars[6]   = "hoilr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // emq
            case 0x00716d65:
            {
                return 'u';
            }
            break;

            // emr
            case 0x00726d65:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ems
            case 0x00736d65:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // emt
            case 0x00746d65:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emu
            case 0x00756d65:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emw
            case 0x00776d65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emy
            case 0x00796d65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ena
            case 0x00616e65:
            {
                MKV_DATA char  data_chars[10]   = "nrimtshkd";
                MKV_DATA uint16_t data_weights[9] = {
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // enb
            case 0x00626e65:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enc
            case 0x00636e65:
            {
                MKV_DATA char  data_chars[4]   = "hyo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe73a, // 0.903226 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // end
            case 0x00646e65:
            {
                MKV_DATA char  data_chars[7]   = "eihsya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ene
            case 0x00656e65:
            {
                MKV_DATA char  data_chars[6]   = "rcemn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // enf
            case 0x00666e65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eng
            case 0x00676e65:
            {
                MKV_DATA char  data_chars[16]   = "mrtckplnahdgsow";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2d83, // 0.177778 
                    0x27d2, // 0.155556 
                    0x2222, // 0.133333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // eni
            case 0x00696e65:
            {
                MKV_DATA char  data_chars[8]   = "tnxcael";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // enj
            case 0x006a6e65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enk
            case 0x006b6e65:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enl
            case 0x006c6e65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enm
            case 0x006d6e65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enn
            case 0x006e6e65:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eno
            case 0x006f6e65:
            {
                MKV_DATA char  data_chars[4]   = "int";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enp
            case 0x00706e65:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enr
            case 0x00726e65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ens
            case 0x00736e65:
            {
                MKV_DATA char  data_chars[6]   = "iueah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ent
            case 0x00746e65:
            {
                MKV_DATA char  data_chars[9]   = "hraiesuo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x34b5, // 0.205882 
                    0x34b5, // 0.205882 
                    0x2d2d, // 0.176471 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // enu
            case 0x00756e65:
            {
                MKV_DATA char  data_chars[3]   = "ex";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // env
            case 0x00766e65:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enw
            case 0x00776e65:
            {
                MKV_DATA char  data_chars[4]   = "eiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eny
            case 0x00796e65:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enz
            case 0x007a6e65:
            {
                return 'y';
            }
            break;

            // eok
            case 0x006b6f65:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eol
            case 0x006c6f65:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eon
            case 0x006e6f65:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eor
            case 0x00726f65:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eos
            case 0x00736f65:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eot
            case 0x00746f65:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eow
            case 0x00776f65:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epa
            case 0x00617065:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epd
            case 0x00647065:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eph
            case 0x00687065:
            {
                MKV_DATA char  data_chars[6]   = "aiour";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa5a6, // 0.647059 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // epi
            case 0x00697065:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epk
            case 0x006b7065:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epl
            case 0x006c7065:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epm
            case 0x006d7065:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epn
            case 0x006e7065:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epo
            case 0x006f7065:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epp
            case 0x00707065:
            {
                MKV_DATA char  data_chars[5]   = "hari";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // epr
            case 0x00727065:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eps
            case 0x00737065:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ept
            case 0x00747065:
            {
                MKV_DATA char  data_chars[4]   = "hiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epu
            case 0x00757065:
            {
                MKV_DATA char  data_chars[3]   = "bn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epw
            case 0x00777065:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eqi
            case 0x00697165:
            {
                return 'n';
            }
            break;

            // era
            case 0x00617265:
            {
                MKV_DATA char  data_chars[15]   = "niwkmtlyrspjve";
                MKV_DATA uint16_t data_weights[14] = {
                    0x41a4, // 0.256410 
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // erb
            case 0x00627265:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // erc
            case 0x00637265:
            {
                MKV_DATA char  data_chars[4]   = "uho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erd
            case 0x00647265:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ere
            case 0x00657265:
            {
                MKV_DATA char  data_chars[5]   = "nsei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // erf
            case 0x00667265:
            {
                MKV_DATA char  data_chars[7]   = "raelou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erg
            case 0x00677265:
            {
                MKV_DATA char  data_chars[4]   = "yra";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erh
            case 0x00687265:
            {
                return 'o';
            }
            break;

            // eri
            case 0x00697265:
            {
                MKV_DATA char  data_chars[10]   = "nateokdms";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // erk
            case 0x006b7265:
            {
                MKV_DATA char  data_chars[3]   = "we";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // erl
            case 0x006c7265:
            {
                MKV_DATA char  data_chars[4]   = "yai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erm
            case 0x006d7265:
            {
                MKV_DATA char  data_chars[4]   = "aie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ern
            case 0x006e7265:
            {
                MKV_DATA char  data_chars[5]   = "imag";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ero
            case 0x006f7265:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // err
            case 0x00727265:
            {
                MKV_DATA char  data_chars[4]   = "ayv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ers
            case 0x00737265:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ert
            case 0x00747265:
            {
                MKV_DATA char  data_chars[5]   = "iaey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eru
            case 0x00757265:
            {
                MKV_DATA char  data_chars[4]   = "wcn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erv
            case 0x00767265:
            {
                MKV_DATA char  data_chars[5]   = "iweo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // esa
            case 0x00617365:
            {
                MKV_DATA char  data_chars[9]   = "rntblpik";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // esb
            case 0x00627365:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esc
            case 0x00637365:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ese
            case 0x00657365:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esh
            case 0x00687365:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esi
            case 0x00697365:
            {
                MKV_DATA char  data_chars[5]   = "dtag";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eso
            case 0x006f7365:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esp
            case 0x00707365:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esr
            case 0x00727365:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ess
            case 0x00737365:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // est
            case 0x00747365:
            {
                MKV_DATA char  data_chars[7]   = "iayehr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // esu
            case 0x00757365:
            {
                MKV_DATA char  data_chars[3]   = "ak";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eta
            case 0x00617465:
            {
                MKV_DATA char  data_chars[12]   = "winorbdlsep";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // etb
            case 0x00627465:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etc
            case 0x00637465:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etd
            case 0x00647465:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ete
            case 0x00657465:
            {
                MKV_DATA char  data_chars[4]   = "ral";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eth
            case 0x00687465:
            {
                MKV_DATA char  data_chars[6]   = "aiore";
                MKV_DATA uint16_t data_weights[5] = {
                    0x90b2, // 0.565217 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eti
            case 0x00697465:
            {
                MKV_DATA char  data_chars[5]   = "yckt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // etk
            case 0x006b7465:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etl
            case 0x006c7465:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // etm
            case 0x006d7465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etn
            case 0x006e7465:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eto
            case 0x006f7465:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etp
            case 0x00707465:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etr
            case 0x00727465:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ets
            case 0x00737465:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x599a, // 0.350000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ett
            case 0x00747465:
            {
                MKV_DATA char  data_chars[6]   = "ahril";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x5e51, // 0.368421 
                    0x1436, // 0.078947 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // etu
            case 0x00757465:
            {
                MKV_DATA char  data_chars[3]   = "pd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etw
            case 0x00777465:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etz
            case 0x007a7465:
            {
                return 'z';
            }
            break;

            // eug
            case 0x00677565:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eun
            case 0x006e7565:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eur
            case 0x00727565:
            {
                MKV_DATA char  data_chars[4]   = "aos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eux
            case 0x00787565:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eva
            case 0x00617665:
            {
                MKV_DATA char  data_chars[4]   = "nsr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eve
            case 0x00657665:
            {
                MKV_DATA char  data_chars[4]   = "nre";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // evi
            case 0x00697665:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // evp
            case 0x00707665:
            {
                return 'a';
            }
            break;

            // ewa
            case 0x00617765:
            {
                MKV_DATA char  data_chars[12]   = "rntdskpywlv";
                MKV_DATA uint16_t data_weights[11] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ewd
            case 0x00647765:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewe
            case 0x00657765:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewi
            case 0x00697765:
            {
                MKV_DATA char  data_chars[4]   = "nat";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewo
            case 0x006f7765:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewp
            case 0x00707765:
            {
                return 'o';
            }
            break;

            // ews
            case 0x00737765:
            {
                return 'h';
            }
            break;

            // exa
            case 0x00617865:
            {
                MKV_DATA char  data_chars[3]   = "nh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exc
            case 0x00637865:
            {
                MKV_DATA char  data_chars[3]   = "lh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exe
            case 0x00657865:
            {
                return 'c';
            }
            break;

            // exo
            case 0x006f7865:
            {
                return 't';
            }
            break;

            // exp
            case 0x00707865:
            {
                return 'r';
            }
            break;

            // eya
            case 0x00617965:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eye
            case 0x00657965:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyl
            case 0x006c7965:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eym
            case 0x006d7965:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyo
            case 0x006f7965:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // e
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'f':
        {
            switch ( trigram_u32 )
            {
            // faa
            case 0x00616166:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fac
            case 0x00636166:
            {
                MKV_DATA char  data_chars[4]   = "eih";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fae
            case 0x00656166:
            {
                MKV_DATA char  data_chars[8]   = "npkmtbl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // fah
            case 0x00686166:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fai
            case 0x00696166:
            {
                MKV_DATA char  data_chars[4]   = "rfn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fak
            case 0x006b6166:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fal
            case 0x006c6166:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fam
            case 0x006d6166:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fan
            case 0x006e6166:
            {
                MKV_DATA char  data_chars[5]   = "gast";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fap
            case 0x00706166:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // far
            case 0x00726166:
            {
                MKV_DATA char  data_chars[4]   = "aim";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fas
            case 0x00736166:
            {
                MKV_DATA char  data_chars[4]   = "aht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fat
            case 0x00746166:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fay
            case 0x00796166:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fea
            case 0x00616566:
            {
                MKV_DATA char  data_chars[3]   = "kn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fec
            case 0x00636566:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fel
            case 0x006c6566:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fen
            case 0x006e6566:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fer
            case 0x00726566:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fes
            case 0x00736566:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // feu
            case 0x00756566:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffe
            case 0x00656666:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffi
            case 0x00696666:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fgj
            case 0x006a6766:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fic
            case 0x00636966:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fie
            case 0x00656966:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fif
            case 0x00666966:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fil
            case 0x006c6966:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fim
            case 0x006d6966:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fin
            case 0x006e6966:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fir
            case 0x00726966:
            {
                MKV_DATA char  data_chars[4]   = "esa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fis
            case 0x00736966:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fit
            case 0x00746966:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fiy
            case 0x00796966:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fla
            case 0x00616c66:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fle
            case 0x00656c66:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fli
            case 0x00696c66:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // flo
            case 0x006f6c66:
            {
                MKV_DATA char  data_chars[4]   = "rwa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // foe
            case 0x00656f66:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foi
            case 0x00696f66:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fol
            case 0x006c6f66:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fon
            case 0x006e6f66:
            {
                MKV_DATA char  data_chars[3]   = "dg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foo
            case 0x006f6f66:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // for
            case 0x00726f66:
            {
                MKV_DATA char  data_chars[8]   = "tedmnuc";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // fot
            case 0x00746f66:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fou
            case 0x00756f66:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fox
            case 0x00786f66:
            {
                MKV_DATA char  data_chars[3]   = "ly";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fra
            case 0x00617266:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fre
            case 0x00657266:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fri
            case 0x00697266:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fro
            case 0x006f7266:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fru
            case 0x00757266:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftu
            case 0x00757466:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fua
            case 0x00617566:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fue
            case 0x00657566:
            {
                MKV_DATA char  data_chars[6]   = "ankmt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ful
            case 0x006c7566:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fun
            case 0x006e7566:
            {
                MKV_DATA char  data_chars[4]   = "dgl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fur
            case 0x00727566:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fus
            case 0x00737566:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // f
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'g':
        {
            switch ( trigram_u32 )
            {
            // gac
            case 0x00636167:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gae
            case 0x00656167:
            {
                MKV_DATA char  data_chars[7]   = "noptkm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gaf
            case 0x00666167:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gaj
            case 0x006a6167:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gal
            case 0x006c6167:
            {
                MKV_DATA char  data_chars[5]   = "loay";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gam
            case 0x006d6167:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gan
            case 0x006e6167:
            {
                MKV_DATA char  data_chars[8]   = "gtybclm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // gap
            case 0x00706167:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gar
            case 0x00726167:
            {
                MKV_DATA char  data_chars[6]   = "dienu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gas
            case 0x00736167:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gat
            case 0x00746167:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gaz
            case 0x007a6167:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gba
            case 0x00616267:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbi
            case 0x00696267:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbu
            case 0x00756267:
            {
                MKV_DATA char  data_chars[5]   = "arnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gce
            case 0x00656367:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gch
            case 0x00686367:
            {
                MKV_DATA char  data_chars[6]   = "aouei";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc30c, // 0.761905 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gco
            case 0x006f6367:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gcx
            case 0x00786367:
            {
                return 'k';
            }
            break;

            // gda
            case 0x00616467:
            {
                MKV_DATA char  data_chars[4]   = "oen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gdo
            case 0x006f6467:
            {
                MKV_DATA char  data_chars[3]   = "em";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gdu
            case 0x00756467:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gem
            case 0x006d6567:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gen
            case 0x006e6567:
            {
                MKV_DATA char  data_chars[7]   = "gcdtei";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ger
            case 0x00726567:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // get
            case 0x00746567:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfa
            case 0x00616667:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfi
            case 0x00696667:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gga
            case 0x00616767:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gge
            case 0x00656767:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gha
            case 0x00616867:
            {
                MKV_DATA char  data_chars[5]   = "nrit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ghi
            case 0x00696867:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghl
            case 0x006c6867:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gho
            case 0x006f6867:
            {
                MKV_DATA char  data_chars[6]   = "mneiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ght
            case 0x00746867:
            {
                MKV_DATA char  data_chars[4]   = "hos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ghw
            case 0x00776867:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gia
            case 0x00616967:
            {
                MKV_DATA char  data_chars[5]   = "mnop";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gie
            case 0x00656967:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gin
            case 0x006e6967:
            {
                MKV_DATA char  data_chars[3]   = "gs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gio
            case 0x006f6967:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gja
            case 0x00616a67:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gji
            case 0x00696a67:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gka
            case 0x00616b67:
            {
                MKV_DATA char  data_chars[9]   = "nsleortc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // gke
            case 0x00656b67:
            {
                MKV_DATA char  data_chars[4]   = "tnp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gkh
            case 0x00686b67:
            {
                MKV_DATA char  data_chars[10]   = "aolriuemk";
                MKV_DATA uint16_t data_weights[9] = {
                    0x95a9, // 0.584615 
                    0x3b14, // 0.230769 
                    0x0dc9, // 0.053846 
                    0x0bd1, // 0.046154 
                    0x09d9, // 0.038462 
                    0x05e8, // 0.023077 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // gki
            case 0x00696b67:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gkl
            case 0x006c6b67:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gko
            case 0x006f6b67:
            {
                MKV_DATA char  data_chars[7]   = "ntrkip";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8618, // 0.523810 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gkr
            case 0x00726b67:
            {
                MKV_DATA char  data_chars[5]   = "auio";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gku
            case 0x00756b67:
            {
                MKV_DATA char  data_chars[5]   = "ntam";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gkw
            case 0x00776b67:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gla
            case 0x00616c67:
            {
                MKV_DATA char  data_chars[5]   = "knci";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gle
            case 0x00656c67:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gli
            case 0x00696c67:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // glo
            case 0x006f6c67:
            {
                MKV_DATA char  data_chars[5]   = "mrnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // glu
            case 0x00756c67:
            {
                MKV_DATA char  data_chars[5]   = "emnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gma
            case 0x00616d67:
            {
                MKV_DATA char  data_chars[6]   = "inekt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gmi
            case 0x00696d67:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmo
            case 0x006f6d67:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmu
            case 0x00756d67:
            {
                MKV_DATA char  data_chars[5]   = "mnte";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gna
            case 0x00616e67:
            {
                MKV_DATA char  data_chars[5]   = "mtik";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gng
            case 0x00676e67:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gni
            case 0x00696e67:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gno
            case 0x006f6e67:
            {
                MKV_DATA char  data_chars[6]   = "pikln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gnu
            case 0x00756e67:
            {
                MKV_DATA char  data_chars[4]   = "aet";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // god
            case 0x00646f67:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goe
            case 0x00656f67:
            {
                MKV_DATA char  data_chars[6]   = "nptim";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gol
            case 0x006c6f67:
            {
                MKV_DATA char  data_chars[3]   = "df";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gon
            case 0x006e6f67:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goo
            case 0x006f6f67:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gor
            case 0x00726f67:
            {
                MKV_DATA char  data_chars[3]   = "gi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gos
            case 0x00736f67:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gov
            case 0x00766f67:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpa
            case 0x00617067:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpe
            case 0x00657067:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gph
            case 0x00687067:
            {
                MKV_DATA char  data_chars[6]   = "uaeor";
                MKV_DATA uint16_t data_weights[5] = {
                    0x68ba, // 0.409091 
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gpl
            case 0x006c7067:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpo
            case 0x006f7067:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpr
            case 0x00727067:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpu
            case 0x00757067:
            {
                MKV_DATA char  data_chars[4]   = "aer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gra
            case 0x00617267:
            {
                MKV_DATA char  data_chars[10]   = "ntikscpor";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // grd
            case 0x00647267:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gre
            case 0x00657267:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gri
            case 0x00697267:
            {
                MKV_DATA char  data_chars[4]   = "acl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // grn
            case 0x006e7267:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gro
            case 0x006f7267:
            {
                MKV_DATA char  data_chars[8]   = "nvtmoui";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // grt
            case 0x00747267:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gru
            case 0x00757267:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsa
            case 0x00617367:
            {
                MKV_DATA char  data_chars[13]   = "rniwteohplkd";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4ec5, // 0.307692 
                    0x2df3, // 0.179487 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // gsi
            case 0x00697367:
            {
                MKV_DATA char  data_chars[5]   = "twyn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc925, // 0.785714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gso
            case 0x006f7367:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsr
            case 0x00727367:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gst
            case 0x00747367:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsu
            case 0x00757367:
            {
                MKV_DATA char  data_chars[4]   = "aex";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gta
            case 0x00617467:
            {
                MKV_DATA char  data_chars[9]   = "nirwklpo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // gte
            case 0x00657467:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gth
            case 0x00687467:
            {
                MKV_DATA char  data_chars[5]   = "aoei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9800, // 0.593750 
                    0x4800, // 0.281250 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gti
            case 0x00697467:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gto
            case 0x006f7467:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gtr
            case 0x00727467:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gtt
            case 0x00747467:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gtu
            case 0x00757467:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gua
            case 0x00617567:
            {
                MKV_DATA char  data_chars[4]   = "nim";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gud
            case 0x00647567:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gue
            case 0x00657567:
            {
                MKV_DATA char  data_chars[6]   = "msakn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // guh
            case 0x00687567:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // guk
            case 0x006b7567:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gul
            case 0x006c7567:
            {
                MKV_DATA char  data_chars[4]   = "flu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gun
            case 0x006e7567:
            {
                MKV_DATA char  data_chars[4]   = "ago";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gur
            case 0x00727567:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gus
            case 0x00737567:
            {
                MKV_DATA char  data_chars[4]   = "tei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gut
            case 0x00747567:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwa
            case 0x00617767:
            {
                MKV_DATA char  data_chars[6]   = "nyrti";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gwe
            case 0x00657767:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwi
            case 0x00697767:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwo
            case 0x006f7767:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gya
            case 0x00617967:
            {
                MKV_DATA char  data_chars[4]   = "int";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gyo
            case 0x006f7967:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyp
            case 0x00707967:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyu
            case 0x00757967:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // g
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'h':
        {
            switch ( trigram_u32 )
            {
            // haa
            case 0x00616168:
            {
                MKV_DATA char  data_chars[4]   = "dnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hab
            case 0x00626168:
            {
                MKV_DATA char  data_chars[6]   = "uaoie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x1eb8, // 0.120000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hac
            case 0x00636168:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfbf0, // 0.984127 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // had
            case 0x00646168:
            {
                MKV_DATA char  data_chars[10]   = "auioerybt";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5da9, // 0.365854 
                    0x3832, // 0.219512 
                    0x2577, // 0.146341 
                    0x1f38, // 0.121951 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hae
            case 0x00656168:
            {
                MKV_DATA char  data_chars[12]   = "ntmpkolrdgh";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7e98, // 0.494505 
                    0x1952, // 0.098901 
                    0x1952, // 0.098901 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0871, // 0.032967 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hag
            case 0x00676168:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hah
            case 0x00686168:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hai
            case 0x00696168:
            {
                MKV_DATA char  data_chars[18]   = "ysnrtwlpdcbkahfom";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5066, // 0.314050 
                    0x1d9f, // 0.115702 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x130b, // 0.074380 
                    0x130b, // 0.074380 
                    0x0ecf, // 0.057851 
                    0x0cb2, // 0.049587 
                    0x0876, // 0.033058 
                    0x0659, // 0.024793 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // hak
            case 0x006b6168:
            {
                MKV_DATA char  data_chars[20]   = "hakosipunrtcdlbweym";
                MKV_DATA uint16_t data_weights[19] = {
                    0x3d02, // 0.238318 
                    0x2fda, // 0.186916 
                    0x217f, // 0.130841 
                    0x191f, // 0.098131 
                    0x10bf, // 0.065421 
                    0x0d29, // 0.051402 
                    0x0ac4, // 0.042056 
                    0x0860, // 0.032710 
                    0x0860, // 0.032710 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                    0x04c9, // 0.018692 
                    0x0397, // 0.014019 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0132, // 0.004673 
                    0x0132, // 0.004673 
                    0x0132, // 0.004673 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // hal
            case 0x006c6168:
            {
                MKV_DATA char  data_chars[8]   = "aoieult";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6b2a, // 0.418605 
                    0x388f, // 0.220930 
                    0x26b3, // 0.151163 
                    0x1aca, // 0.104651 
                    0x14d6, // 0.081395 
                    0x0477, // 0.017442 
                    0x017d, // 0.005814 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ham
            case 0x006d6168:
            {
                MKV_DATA char  data_chars[20]   = "maponuirtkcelwbhdys";
                MKV_DATA uint16_t data_weights[19] = {
                    0x618f, // 0.381089 
                    0x29d0, // 0.163324 
                    0x1312, // 0.074499 
                    0x0df0, // 0.054441 
                    0x0df0, // 0.054441 
                    0x0c78, // 0.048711 
                    0x0bbd, // 0.045845 
                    0x0b01, // 0.042980 
                    0x0756, // 0.028653 
                    0x05de, // 0.022923 
                    0x05de, // 0.022923 
                    0x0467, // 0.017192 
                    0x02ef, // 0.011461 
                    0x02ef, // 0.011461 
                    0x0178, // 0.005731 
                    0x0178, // 0.005731 
                    0x00bc, // 0.002865 
                    0x00bc, // 0.002865 
                    0x00bc, // 0.002865 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // han
            case 0x006e6168:
            {
                MKV_DATA char  data_chars[21]   = "atgiuonydmesclkbwrhp";
                MKV_DATA uint16_t data_weights[20] = {
                    0x48d1, // 0.284444 
                    0x2f68, // 0.185185 
                    0x2a19, // 0.164444 
                    0x1784, // 0.091852 
                    0x1172, // 0.068148 
                    0x0da7, // 0.053333 
                    0x06d4, // 0.026667 
                    0x0673, // 0.025185 
                    0x04ee, // 0.019259 
                    0x048d, // 0.017778 
                    0x042c, // 0.016296 
                    0x03cb, // 0.014815 
                    0x01e5, // 0.007407 
                    0x0184, // 0.005926 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                    0x0123, // 0.004444 
                    0x00c2, // 0.002963 
                    0x0061, // 0.001481 
                    0x0061, // 0.001481 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // hao
            case 0x006f6168:
            {
                MKV_DATA char  data_chars[14]   = "ptmwnslkyrfhe";
                MKV_DATA uint16_t data_weights[13] = {
                    0x345d, // 0.204545 
                    0x1d17, // 0.113636 
                    0x1d17, // 0.113636 
                    0x1d17, // 0.113636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // hap
            case 0x00706168:
            {
                MKV_DATA char  data_chars[11]   = "harpoumbtw";
                MKV_DATA uint16_t data_weights[10] = {
                    0xa7d2, // 0.655556 
                    0x16c1, // 0.088889 
                    0x13e9, // 0.077778 
                    0x0e39, // 0.055556 
                    0x0b61, // 0.044444 
                    0x0889, // 0.033333 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // har
            case 0x00726168:
            {
                MKV_DATA char  data_chars[14]   = "aiouetnmbrdlc";
                MKV_DATA uint16_t data_weights[13] = {
                    0xb736, // 0.715667 
                    0x1abd, // 0.104449 
                    0x17c5, // 0.092843 
                    0x0be2, // 0.046422 
                    0x01fb, // 0.007737 
                    0x017c, // 0.005803 
                    0x017c, // 0.005803 
                    0x00fe, // 0.003868 
                    0x00fe, // 0.003868 
                    0x00fe, // 0.003868 
                    0x00fe, // 0.003868 
                    0x00fe, // 0.003868 
                    0x007f, // 0.001934 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // has
            case 0x00736168:
            {
                MKV_DATA char  data_chars[8]   = "aiouenr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6475, // 0.392405 
                    0x3d92, // 0.240506 
                    0x2068, // 0.126582 
                    0x19ed, // 0.101266 
                    0x19ed, // 0.101266 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hat
            case 0x00746168:
            {
                MKV_DATA char  data_chars[15]   = "thsuaocirpywke";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4925, // 0.285714 
                    0x46fe, // 0.277311 
                    0x19d1, // 0.100840 
                    0x1697, // 0.088235 
                    0x1249, // 0.071429 
                    0x0ac2, // 0.042017 
                    0x09ae, // 0.037815 
                    0x09ae, // 0.037815 
                    0x044d, // 0.016807 
                    0x033a, // 0.012605 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0113, // 0.004202 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // hau
            case 0x00756168:
            {
                MKV_DATA char  data_chars[5]   = "nist";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hav
            case 0x00766168:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // haw
            case 0x00776168:
            {
                MKV_DATA char  data_chars[8]   = "aioeuhw";
                MKV_DATA uint16_t data_weights[7] = {
                    0xabec, // 0.671569 
                    0x2969, // 0.161765 
                    0x1b9c, // 0.107843 
                    0x08c9, // 0.034314 
                    0x03c4, // 0.014706 
                    0x0141, // 0.004902 
                    0x0141, // 0.004902 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hax
            case 0x00786168:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hay
            case 0x00796168:
            {
                MKV_DATA char  data_chars[9]   = "aouimnde";
                MKV_DATA uint16_t data_weights[8] = {
                    0xc6fe, // 0.777311 
                    0x1ae4, // 0.105042 
                    0x0dfc, // 0.054622 
                    0x0bd5, // 0.046218 
                    0x0113, // 0.004202 
                    0x0113, // 0.004202 
                    0x0113, // 0.004202 
                    0x0113, // 0.004202 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hbo
            case 0x006f6268:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hbu
            case 0x00756268:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hch
            case 0x00686368:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hco
            case 0x006f6368:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdr
            case 0x00726468:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hea
            case 0x00616568:
            {
                MKV_DATA char  data_chars[7]   = "nldkop";
                MKV_DATA uint16_t data_weights[6] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hec
            case 0x00636568:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hed
            case 0x00646568:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hee
            case 0x00656568:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // heh
            case 0x00686568:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hei
            case 0x00696568:
            {
                MKV_DATA char  data_chars[4]   = "ygk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hek
            case 0x006b6568:
            {
                MKV_DATA char  data_chars[4]   = "nat";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hel
            case 0x006c6568:
            {
                MKV_DATA char  data_chars[6]   = "aliup";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hem
            case 0x006d6568:
            {
                MKV_DATA char  data_chars[5]   = "aiem";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7777, // 0.466667 
                    0x6666, // 0.400000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hen
            case 0x006e6568:
            {
                MKV_DATA char  data_chars[11]   = "gtaceosmpu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x8591, // 0.521739 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // heo
            case 0x006f6568:
            {
                MKV_DATA char  data_chars[4]   = "wkn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hep
            case 0x00706568:
            {
                MKV_DATA char  data_chars[12]   = "phtsnwadkmr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5c99, // 0.361702 
                    0x46cf, // 0.276596 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // heq
            case 0x00716568:
            {
                return 'i';
            }
            break;

            // her
            case 0x00726568:
            {
                MKV_DATA char  data_chars[9]   = "amneibds";
                MKV_DATA uint16_t data_weights[8] = {
                    0x642d, // 0.391304 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hes
            case 0x00736568:
            {
                MKV_DATA char  data_chars[5]   = "iaob";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // het
            case 0x00746568:
            {
                MKV_DATA char  data_chars[11]   = "tcisarundb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3eb2, // 0.244898 
                    0x2f05, // 0.183673 
                    0x2f05, // 0.183673 
                    0x29cc, // 0.163265 
                    0x14e6, // 0.081633 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // heu
            case 0x00756568:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hev
            case 0x00766568:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hew
            case 0x00776568:
            {
                MKV_DATA char  data_chars[6]   = "aiedo";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc1f0, // 0.757576 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hey
            case 0x00796568:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfr
            case 0x00726668:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hga
            case 0x00616768:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hho
            case 0x006f6868:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hia
            case 0x00616968:
            {
                MKV_DATA char  data_chars[11]   = "nopmktrbdw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7e98, // 0.494505 
                    0x2a33, // 0.164835 
                    0x1952, // 0.098901 
                    0x13b1, // 0.076923 
                    0x10e1, // 0.065934 
                    0x0b41, // 0.043956 
                    0x05a0, // 0.021978 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hib
            case 0x00626968:
            {
                MKV_DATA char  data_chars[5]   = "aueo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7777, // 0.466667 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hic
            case 0x00636968:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf3cf, // 0.952381 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hid
            case 0x00646968:
            {
                MKV_DATA char  data_chars[7]   = "aoeidl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hie
            case 0x00656968:
            {
                MKV_DATA char  data_chars[3]   = "on";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hif
            case 0x00666968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hig
            case 0x00676968:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hih
            case 0x00686968:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hii
            case 0x00696968:
            {
                return 't';
            }
            break;

            // hik
            case 0x006b6968:
            {
                MKV_DATA char  data_chars[8]   = "ahurokm";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa2e9, // 0.636364 
                    0x22e9, // 0.136364 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hil
            case 0x006c6968:
            {
                MKV_DATA char  data_chars[9]   = "laotuide";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // him
            case 0x006d6968:
            {
                MKV_DATA char  data_chars[9]   = "amupowit";
                MKV_DATA uint16_t data_weights[8] = {
                    0x589e, // 0.346154 
                    0x2762, // 0.153846 
                    0x2276, // 0.134615 
                    0x2276, // 0.134615 
                    0x1d8a, // 0.115385 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hin
            case 0x006e6968:
            {
                MKV_DATA char  data_chars[17]   = "giadntuoeycslpkb";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3522, // 0.207547 
                    0x290e, // 0.160377 
                    0x21d0, // 0.132075 
                    0x1a91, // 0.103774 
                    0x15bc, // 0.084906 
                    0x1352, // 0.075472 
                    0x0e7e, // 0.056604 
                    0x0c13, // 0.047170 
                    0x0c13, // 0.047170 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // hio
            case 0x006f6968:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hip
            case 0x00706968:
            {
                MKV_DATA char  data_chars[9]   = "hpaubrtw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7ce1, // 0.487805 
                    0x3832, // 0.219512 
                    0x2577, // 0.146341 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hir
            case 0x00726968:
            {
                MKV_DATA char  data_chars[8]   = "aiouekt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9249, // 0.571429 
                    0x4249, // 0.258929 
                    0x16db, // 0.089286 
                    0x0925, // 0.035714 
                    0x06db, // 0.026786 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // his
            case 0x00736968:
            {
                MKV_DATA char  data_chars[8]   = "aeoiutp";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7943, // 0.473684 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hit
            case 0x00746968:
            {
                MKV_DATA char  data_chars[14]   = "thascrmeilpwy";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6b98, // 0.420290 
                    0x37a7, // 0.217391 
                    0x2aab, // 0.166667 
                    0x128d, // 0.072464 
                    0x076c, // 0.028986 
                    0x0591, // 0.021739 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // hiu
            case 0x00756968:
            {
                MKV_DATA char  data_chars[3]   = "kd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hiv
            case 0x00766968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hiw
            case 0x00776968:
            {
                MKV_DATA char  data_chars[7]   = "aoeitu";
                MKV_DATA uint16_t data_weights[6] = {
                    0xcb7d, // 0.794872 
                    0x1a42, // 0.102564 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hiy
            case 0x00796968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hju
            case 0x00756a68:
            {
                MKV_DATA char  data_chars[3]   = "ml";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hka
            case 0x00616b68:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hkh
            case 0x00686b68:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hki
            case 0x00696b68:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hkl
            case 0x006c6b68:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hla
            case 0x00616c68:
            {
                MKV_DATA char  data_chars[12]   = "epnkrtoimwb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2fa1, // 0.186047 
                    0x29ad, // 0.162791 
                    0x23b9, // 0.139535 
                    0x17d0, // 0.093023 
                    0x17d0, // 0.093023 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hle
            case 0x00656c68:
            {
                MKV_DATA char  data_chars[6]   = "ntemo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hli
            case 0x00696c68:
            {
                MKV_DATA char  data_chars[8]   = "anwkmot";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hln
            case 0x006e6c68:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hlo
            case 0x006f6c68:
            {
                MKV_DATA char  data_chars[8]   = "nekmtip";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6c9b, // 0.424242 
                    0x4d93, // 0.303030 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hlu
            case 0x00756c68:
            {
                MKV_DATA char  data_chars[9]   = "eankmipt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6c4f, // 0.423077 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hma
            case 0x00616d68:
            {
                MKV_DATA char  data_chars[4]   = "kos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hme
            case 0x00656d68:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hmo
            case 0x006f6d68:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hmu
            case 0x00756d68:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hmx
            case 0x00786d68:
            {
                return 'c';
            }
            break;

            // hna
            case 0x00616e68:
            {
                MKV_DATA char  data_chars[4]   = "ryk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hnf
            case 0x00666e68:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hng
            case 0x00676e68:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hni
            case 0x00696e68:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hno
            case 0x006f6e68:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hnu
            case 0x00756e68:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hnx
            case 0x00786e68:
            {
                return 'n';
            }
            break;

            // hoa
            case 0x00616f68:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hob
            case 0x00626f68:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoc
            case 0x00636f68:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hod
            case 0x00646f68:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hoe
            case 0x00656f68:
            {
                MKV_DATA char  data_chars[9]   = "nimtkprl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7627, // 0.461538 
                    0x2762, // 0.153846 
                    0x2276, // 0.134615 
                    0x189e, // 0.096154 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hof
            case 0x00666f68:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoh
            case 0x00686f68:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoi
            case 0x00696f68:
            {
                MKV_DATA char  data_chars[3]   = "kw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hok
            case 0x006b6f68:
            {
                MKV_DATA char  data_chars[12]   = "hkadcemolsw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5174, // 0.318182 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hol
            case 0x006c6f68:
            {
                MKV_DATA char  data_chars[6]   = "oailc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hom
            case 0x006d6f68:
            {
                MKV_DATA char  data_chars[16]   = "pkesmcabnorvytd";
                MKV_DATA uint16_t data_weights[15] = {
                    0x253d, // 0.145455 
                    0x253d, // 0.145455 
                    0x2095, // 0.127273 
                    0x2095, // 0.127273 
                    0x1bed, // 0.109091 
                    0x129e, // 0.072727 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // hon
            case 0x006e6f68:
            {
                MKV_DATA char  data_chars[18]   = "gltnpsbcwerakymdz";
                MKV_DATA uint16_t data_weights[17] = {
                    0xa518, // 0.644898 
                    0x16fd, // 0.089796 
                    0x12cf, // 0.073469 
                    0x0a73, // 0.040816 
                    0x0645, // 0.024490 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0322, // 0.012245 
                    0x0217, // 0.008163 
                    0x0217, // 0.008163 
                    0x0217, // 0.008163 
                    0x0217, // 0.008163 
                    0x0217, // 0.008163 
                    0x010b, // 0.004082 
                    0x010b, // 0.004082 
                    0x010b, // 0.004082 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // hoo
            case 0x006f6f68:
            {
                MKV_DATA char  data_chars[3]   = "kl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hop
            case 0x00706f68:
            {
                MKV_DATA char  data_chars[4]   = "hei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hor
            case 0x00726f68:
            {
                MKV_DATA char  data_chars[9]   = "anseimtu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x90b2, // 0.565217 
                    0x26f5, // 0.152174 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hos
            case 0x00736f68:
            {
                MKV_DATA char  data_chars[4]   = "ior";
                MKV_DATA uint16_t data_weights[3] = {
                    0xbbbc, // 0.733333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hot
            case 0x00746f68:
            {
                MKV_DATA char  data_chars[11]   = "hitcsaeowk";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5a89, // 0.353659 
                    0x2577, // 0.146341 
                    0x2257, // 0.134146 
                    0x1c19, // 0.109756 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0f9c, // 0.060976 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hou
            case 0x00756f68:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // how
            case 0x00776f68:
            {
                MKV_DATA char  data_chars[5]   = "acdi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hoy
            case 0x00796f68:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpa
            case 0x00617068:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hph
            case 0x00687068:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hra
            case 0x00617268:
            {
                MKV_DATA char  data_chars[17]   = "rpnicemktwysbold";
                MKV_DATA uint16_t data_weights[16] = {
                    0x1c94, // 0.111628 
                    0x1a32, // 0.102326 
                    0x16a0, // 0.088372 
                    0x143e, // 0.079070 
                    0x143e, // 0.079070 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x10ab, // 0.065116 
                    0x0f7b, // 0.060465 
                    0x0f7b, // 0.060465 
                    0x0e4a, // 0.055814 
                    0x0be8, // 0.046512 
                    0x0ab7, // 0.041860 
                    0x0ab7, // 0.041860 
                    0x05f4, // 0.023256 
                    0x0131, // 0.004651 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // hrb
            case 0x00627268:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hre
            case 0x00657268:
            {
                MKV_DATA char  data_chars[7]   = "naktei";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hri
            case 0x00697268:
            {
                MKV_DATA char  data_chars[11]   = "takpnsmoev";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4771, // 0.279070 
                    0x2fa1, // 0.186047 
                    0x29ad, // 0.162791 
                    0x1dc4, // 0.116279 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hrn
            case 0x006e7268:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hro
            case 0x006f7268:
            {
                MKV_DATA char  data_chars[12]   = "mntkiwrupde";
                MKV_DATA uint16_t data_weights[11] = {
                    0x81e9, // 0.507463 
                    0x2635, // 0.149254 
                    0x1e91, // 0.119403 
                    0x1abf, // 0.104478 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hrs
            case 0x00737268:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hru
            case 0x00757268:
            {
                MKV_DATA char  data_chars[10]   = "eanktmpbc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x851f, // 0.520000 
                    0x28f6, // 0.160000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hsa
            case 0x00617368:
            {
                MKV_DATA char  data_chars[4]   = "imn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hse
            case 0x00657368:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsi
            case 0x00697368:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hta
            case 0x00617468:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htc
            case 0x00637468:
            {
                MKV_DATA char  data_chars[3]   = "lh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hth
            case 0x00687468:
            {
                MKV_DATA char  data_chars[4]   = "oak";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hto
            case 0x006f7468:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htt
            case 0x00747468:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hua
            case 0x00617568:
            {
                MKV_DATA char  data_chars[14]   = "nitmpkrceyloh";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5666, // 0.337500 
                    0x2333, // 0.137500 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1666, // 0.087500 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // hub
            case 0x00627568:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // huc
            case 0x00637568:
            {
                MKV_DATA char  data_chars[5]   = "hokn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hud
            case 0x00647568:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hue
            case 0x00657568:
            {
                MKV_DATA char  data_chars[9]   = "anktmglp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5726, // 0.340426 
                    0x46cf, // 0.276596 
                    0x2b93, // 0.170213 
                    0x1b3c, // 0.106383 
                    0x1310, // 0.074468 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // huh
            case 0x00687568:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hui
            case 0x00697568:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // huk
            case 0x006b7568:
            {
                MKV_DATA char  data_chars[8]   = "haeikuo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hul
            case 0x006c7568:
            {
                MKV_DATA char  data_chars[6]   = "aiute";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hum
            case 0x006d7568:
            {
                MKV_DATA char  data_chars[18]   = "impastwcrkvolnhbu";
                MKV_DATA uint16_t data_weights[17] = {
                    0x34c9, // 0.206186 
                    0x24f3, // 0.144330 
                    0x224f, // 0.134021 
                    0x151d, // 0.082474 
                    0x1279, // 0.072165 
                    0x1279, // 0.072165 
                    0x0fd6, // 0.061856 
                    0x0d32, // 0.051546 
                    0x0a8f, // 0.041237 
                    0x0a8f, // 0.041237 
                    0x07eb, // 0.030928 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // hun
            case 0x006e7568:
            {
                MKV_DATA char  data_chars[16]   = "gatlpnscyudohim";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4ba3, // 0.295455 
                    0x3a2f, // 0.227273 
                    0x1a2f, // 0.102273 
                    0x145d, // 0.079545 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // hup
            case 0x00707568:
            {
                MKV_DATA char  data_chars[6]   = "haoru";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hur
            case 0x00727568:
            {
                MKV_DATA char  data_chars[8]   = "iaueocs";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5b6e, // 0.357143 
                    0x5555, // 0.333333 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hus
            case 0x00737568:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hut
            case 0x00747568:
            {
                MKV_DATA char  data_chars[10]   = "thaiosdcp";
                MKV_DATA uint16_t data_weights[9] = {
                    0xb0b5, // 0.690265 
                    0x2b0b, // 0.168142 
                    0x0d98, // 0.053097 
                    0x06cc, // 0.026549 
                    0x0488, // 0.017699 
                    0x0488, // 0.017699 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // huv
            case 0x00767568:
            {
                return 'a';
            }
            break;

            // huw
            case 0x00777568:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // huy
            case 0x00797568:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hva
            case 0x00617668:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hvd
            case 0x00647668:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwa
            case 0x00617768:
            {
                MKV_DATA char  data_chars[9]   = "neimykot";
                MKV_DATA uint16_t data_weights[8] = {
                    0x642d, // 0.391304 
                    0x42c8, // 0.260870 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hwe
            case 0x00657768:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwi
            case 0x00697768:
            {
                MKV_DATA char  data_chars[4]   = "tan";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hwo
            case 0x006f7768:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hxm
            case 0x006d7868:
            {
                MKV_DATA char  data_chars[3]   = "pr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hxn
            case 0x006e7868:
            {
                MKV_DATA char  data_chars[3]   = "gp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hxt
            case 0x00747868:
            {
                return 'i';
            }
            break;

            // hya
            case 0x00617968:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hys
            case 0x00737968:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyt
            case 0x00747968:
            {
                return 'o';
            }
            break;

            // hyu
            case 0x00757968:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // h
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'i':
        {
            switch ( trigram_u32 )
            {
            // iae
            case 0x00656169:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iag
            case 0x00676169:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iak
            case 0x006b6169:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ial
            case 0x006c6169:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iam
            case 0x006d6169:
            {
                MKV_DATA char  data_chars[5]   = "eios";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ian
            case 0x006e6169:
            {
                MKV_DATA char  data_chars[12]   = "gtandhcemop";
                MKV_DATA uint16_t data_weights[11] = {
                    0xd813, // 0.844037 
                    0x0bbe, // 0.045872 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // iao
            case 0x006f6169:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iap
            case 0x00706169:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iar
            case 0x00726169:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iat
            case 0x00746169:
            {
                MKV_DATA char  data_chars[4]   = "tni";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iay
            case 0x00796169:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iba
            case 0x00616269:
            {
                MKV_DATA char  data_chars[5]   = "ntbd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x6276, // 0.384615 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ibb
            case 0x00626269:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibe
            case 0x00656269:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibi
            case 0x00696269:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibo
            case 0x006f6269:
            {
                MKV_DATA char  data_chars[5]   = "ndly";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ibr
            case 0x00726269:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibs
            case 0x00736269:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibu
            case 0x00756269:
            {
                MKV_DATA char  data_chars[6]   = "nrltk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ica
            case 0x00616369:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ice
            case 0x00656369:
            {
                MKV_DATA char  data_chars[4]   = "dfs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ich
            case 0x00686369:
            {
                MKV_DATA char  data_chars[9]   = "aioerlmu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9d4d, // 0.614458 
                    0x346f, // 0.204819 
                    0x1597, // 0.084337 
                    0x0c56, // 0.048193 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ici
            case 0x00696369:
            {
                MKV_DATA char  data_chars[3]   = "pt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ico
            case 0x006f6369:
            {
                MKV_DATA char  data_chars[5]   = "lsmn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ict
            case 0x00746369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // icu
            case 0x00756369:
            {
                MKV_DATA char  data_chars[3]   = "lp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ida
            case 0x00616469:
            {
                MKV_DATA char  data_chars[10]   = "recymtpod";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // idd
            case 0x00646469:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ide
            case 0x00656469:
            {
                MKV_DATA char  data_chars[7]   = "enagtw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // idg
            case 0x00676469:
            {
                return 'e';
            }
            break;

            // idh
            case 0x00686469:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idi
            case 0x00696469:
            {
                MKV_DATA char  data_chars[5]   = "ntae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // idl
            case 0x006c6469:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ido
            case 0x006f6469:
            {
                MKV_DATA char  data_chars[4]   = "nkl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // idp
            case 0x00706469:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idu
            case 0x00756469:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idy
            case 0x00796469:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iel
            case 0x006c6569:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ien
            case 0x006e6569:
            {
                MKV_DATA char  data_chars[5]   = "gdtn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ieo
            case 0x006f6569:
            {
                MKV_DATA char  data_chars[3]   = "wk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ier
            case 0x00726569:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iet
            case 0x00746569:
            {
                MKV_DATA char  data_chars[3]   = "ry";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iew
            case 0x00776569:
            {
                MKV_DATA char  data_chars[3]   = "sp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifa
            case 0x00616669:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ife
            case 0x00656669:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifi
            case 0x00696669:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifo
            case 0x006f6669:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ift
            case 0x00746669:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ige
            case 0x00656769:
            {
                MKV_DATA char  data_chars[3]   = "rm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igg
            case 0x00676769:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igh
            case 0x00686769:
            {
                MKV_DATA char  data_chars[4]   = "tlw";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // igi
            case 0x00696769:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igm
            case 0x006d6769:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ign
            case 0x006e6769:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iha
            case 0x00616869:
            {
                MKV_DATA char  data_chars[6]   = "nrtim";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ihd
            case 0x00646869:
            {
                return 'r';
            }
            break;

            // ihi
            case 0x00696869:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iho
            case 0x006f6869:
            {
                MKV_DATA char  data_chars[4]   = "nmk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ihu
            case 0x00756869:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iit
            case 0x00746969:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iji
            case 0x00696a69:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ika
            case 0x00616b69:
            {
                MKV_DATA char  data_chars[11]   = "rwnyiesmop";
                MKV_DATA uint16_t data_weights[10] = {
                    0x9db7, // 0.616071 
                    0x3000, // 0.187500 
                    0x1b6e, // 0.107143 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                    0x0249, // 0.008929 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ike
            case 0x00656b69:
            {
                MKV_DATA char  data_chars[4]   = "tlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikh
            case 0x00686b69:
            {
                MKV_DATA char  data_chars[7]   = "aouril";
                MKV_DATA uint16_t data_weights[6] = {
                    0x540f, // 0.328358 
                    0x4c6b, // 0.298507 
                    0x2dda, // 0.179104 
                    0x16ed, // 0.089552 
                    0x131b, // 0.074627 
                    0x07a4, // 0.029851 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // iki
            case 0x00696b69:
            {
                MKV_DATA char  data_chars[4]   = "ant";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikk
            case 0x006b6b69:
            {
                MKV_DATA char  data_chars[4]   = "ahi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8788, // 0.529412 
                    0x6969, // 0.411765 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikm
            case 0x006d6b69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iko
            case 0x006f6b69:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb333, // 0.700000 
                    0x4ccd, // 0.300000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ikr
            case 0x00726b69:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikt
            case 0x00746b69:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iku
            case 0x00756b69:
            {
                MKV_DATA char  data_chars[4]   = "nkr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ikw
            case 0x00776b69:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ila
            case 0x00616c69:
            {
                MKV_DATA char  data_chars[14]   = "intkwrmeplcyv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3800, // 0.218750 
                    0x2800, // 0.156250 
                    0x1c00, // 0.109375 
                    0x1800, // 0.093750 
                    0x1400, // 0.078125 
                    0x1400, // 0.078125 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ild
            case 0x00646c69:
            {
                MKV_DATA char  data_chars[4]   = "ilr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ile
            case 0x00656c69:
            {
                MKV_DATA char  data_chars[5]   = "dgkn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ilf
            case 0x00666c69:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ili
            case 0x00696c69:
            {
                MKV_DATA char  data_chars[8]   = "naotyep";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ilk
            case 0x006b6c69:
            {
                MKV_DATA char  data_chars[3]   = "yh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ill
            case 0x006c6c69:
            {
                MKV_DATA char  data_chars[8]   = "aeistly";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x4800, // 0.281250 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ilo
            case 0x006f6c69:
            {
                MKV_DATA char  data_chars[4]   = "mnk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilp
            case 0x00706c69:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilr
            case 0x00726c69:
            {
                return 'a';
            }
            break;

            // ilt
            case 0x00746c69:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilu
            case 0x00756c69:
            {
                MKV_DATA char  data_chars[6]   = "betxa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ilv
            case 0x00766c69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilw
            case 0x00776c69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ily
            case 0x00796c69:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ima
            case 0x00616d69:
            {
                MKV_DATA char  data_chars[11]   = "nrwtkliasy";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4a79, // 0.290909 
                    0x3333, // 0.200000 
                    0x2095, // 0.127273 
                    0x1bed, // 0.109091 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // imb
            case 0x00626d69:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imc
            case 0x00636d69:
            {
                return 'h';
            }
            break;

            // imf
            case 0x00666d69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imh
            case 0x00686d69:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imi
            case 0x00696d69:
            {
                MKV_DATA char  data_chars[5]   = "tnkl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // imk
            case 0x006b6d69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iml
            case 0x006c6d69:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imm
            case 0x006d6d69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imn
            case 0x006e6d69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imo
            case 0x006f6d69:
            {
                MKV_DATA char  data_chars[5]   = "nkts";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x3a2f, // 0.227273 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // imp
            case 0x00706d69:
            {
                MKV_DATA char  data_chars[7]   = "hlioae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // imr
            case 0x00726d69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ims
            case 0x00736d69:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imt
            case 0x00746d69:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imu
            case 0x00756d69:
            {
                MKV_DATA char  data_chars[6]   = "tknem";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6186, // 0.380952 
                    0x5555, // 0.333333 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // imw
            case 0x00776d69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imy
            case 0x00796d69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ina
            case 0x00616e69:
            {
                MKV_DATA char  data_chars[12]   = "trnwkimlgye";
                MKV_DATA uint16_t data_weights[11] = {
                    0x313b, // 0.192308 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // inb
            case 0x00626e69:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inc
            case 0x00636e69:
            {
                MKV_DATA char  data_chars[6]   = "heior";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ind
            case 0x00646e69:
            {
                MKV_DATA char  data_chars[10]   = "arisehmou";
                MKV_DATA uint16_t data_weights[9] = {
                    0x83e1, // 0.515152 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ine
            case 0x00656e69:
            {
                MKV_DATA char  data_chars[9]   = "srenwyah";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // inf
            case 0x00666e69:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ing
            case 0x00676e69:
            {
                MKV_DATA char  data_chars[16]   = "hksnopiwfldcetg";
                MKV_DATA uint16_t data_weights[15] = {
                    0x417d, // 0.255814 
                    0x29ad, // 0.162791 
                    0x29ad, // 0.162791 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ini
            case 0x00696e69:
            {
                MKV_DATA char  data_chars[12]   = "tnkywcdmzua";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4dea, // 0.304348 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // inj
            case 0x006a6e69:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ink
            case 0x006b6e69:
            {
                MKV_DATA char  data_chars[4]   = "elu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inl
            case 0x006c6e69:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcf3d, // 0.809524 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // inm
            case 0x006d6e69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inn
            case 0x006e6e69:
            {
                MKV_DATA char  data_chars[6]   = "aireo";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbca2, // 0.736842 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ino
            case 0x006f6e69:
            {
                MKV_DATA char  data_chars[6]   = "nrtwk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // inp
            case 0x00706e69:
            {
                MKV_DATA char  data_chars[4]   = "hai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inr
            case 0x00726e69:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ins
            case 0x00736e69:
            {
                MKV_DATA char  data_chars[9]   = "uoaiptxk";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // int
            case 0x00746e69:
            {
                MKV_DATA char  data_chars[11]   = "haroesudti";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb72c, // 0.715517 
                    0x1847, // 0.094828 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // inu
            case 0x00756e69:
            {
                MKV_DATA char  data_chars[7]   = "takmnr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // inv
            case 0x00766e69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inw
            case 0x00776e69:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iny
            case 0x00796e69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ioe
            case 0x00656f69:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iol
            case 0x006c6f69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ion
            case 0x006e6f69:
            {
                MKV_DATA char  data_chars[4]   = "ans";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ios
            case 0x00736f69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iot
            case 0x00746f69:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iou
            case 0x00756f69:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipa
            case 0x00617069:
            {
                MKV_DATA char  data_chars[9]   = "tnlprske";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8aab, // 0.541667 
                    0x3555, // 0.208333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ipb
            case 0x00627069:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipc
            case 0x00637069:
            {
                return 'h';
            }
            break;

            // ipe
            case 0x00657069:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iph
            case 0x00687069:
            {
                MKV_DATA char  data_chars[7]   = "aoiuer";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7673, // 0.462687 
                    0x4c6b, // 0.298507 
                    0x1abf, // 0.104478 
                    0x131b, // 0.074627 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ipi
            case 0x00697069:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipl
            case 0x006c7069:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ipp
            case 0x00707069:
            {
                MKV_DATA char  data_chars[5]   = "haei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ipr
            case 0x00727069:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ips
            case 0x00737069:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ipt
            case 0x00747069:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipu
            case 0x00757069:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipv
            case 0x00767069:
            {
                return 'i';
            }
            break;

            // ipw
            case 0x00777069:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iqu
            case 0x00757169:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ira
            case 0x00617269:
            {
                MKV_DATA char  data_chars[17]   = "twmnkpyrscldgbie";
                MKV_DATA uint16_t data_weights[16] = {
                    0x422d, // 0.258503 
                    0x2117, // 0.129252 
                    0x1d9b, // 0.115646 
                    0x1862, // 0.095238 
                    0x1328, // 0.074830 
                    0x116a, // 0.068027 
                    0x116a, // 0.068027 
                    0x0c31, // 0.047619 
                    0x08b5, // 0.034014 
                    0x08b5, // 0.034014 
                    0x06f7, // 0.027211 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                    0x01be, // 0.006803 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // irb
            case 0x00627269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irc
            case 0x00637269:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ire
            case 0x00657269:
            {
                MKV_DATA char  data_chars[5]   = "elnk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irf
            case 0x00667269:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iri
            case 0x00697269:
            {
                MKV_DATA char  data_chars[16]   = "nywktrpmcasobld";
                MKV_DATA uint16_t data_weights[15] = {
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1da4, // 0.115789 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x158f, // 0.084211 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0816, // 0.031579 
                    0x0564, // 0.021053 
                    0x0564, // 0.021053 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                    0x02b2, // 0.010526 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // iro
            case 0x006f7269:
            {
                MKV_DATA char  data_chars[7]   = "mtnydi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x684c, // 0.407407 
                    0x5ed1, // 0.370370 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // irp
            case 0x00707269:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irr
            case 0x00727269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irs
            case 0x00737269:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irt
            case 0x00747269:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iru
            case 0x00757269:
            {
                MKV_DATA char  data_chars[4]   = "npt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // irv
            case 0x00767269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iry
            case 0x00797269:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isa
            case 0x00617369:
            {
                MKV_DATA char  data_chars[11]   = "ntrkwilmby";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2b53, // 0.169231 
                    0x2b53, // 0.169231 
                    0x2372, // 0.138462 
                    0x1f82, // 0.123077 
                    0x17a1, // 0.092308 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // isc
            case 0x00637369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isd
            case 0x00647369:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ise
            case 0x00657369:
            {
                MKV_DATA char  data_chars[7]   = "kstalr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ish
            case 0x00687369:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // isi
            case 0x00697369:
            {
                MKV_DATA char  data_chars[6]   = "tpany";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x5174, // 0.318182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // isk
            case 0x006b7369:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isl
            case 0x006c7369:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ism
            case 0x006d7369:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iso
            case 0x006f7369:
            {
                MKV_DATA char  data_chars[6]   = "ntkmr";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc859, // 0.782609 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // isp
            case 0x00707369:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isr
            case 0x00727369:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iss
            case 0x00737369:
            {
                MKV_DATA char  data_chars[5]   = "aobi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ist
            case 0x00747369:
            {
                MKV_DATA char  data_chars[5]   = "aoir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // isu
            case 0x00757369:
            {
                MKV_DATA char  data_chars[8]   = "tkrnmde";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ita
            case 0x00617469:
            {
                MKV_DATA char  data_chars[13]   = "rnlmwkgiyetd";
                MKV_DATA uint16_t data_weights[12] = {
                    0x851f, // 0.520000 
                    0x1eb8, // 0.120000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // itc
            case 0x00637469:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itd
            case 0x00647469:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ite
            case 0x00657469:
            {
                MKV_DATA char  data_chars[4]   = "sdl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ith
            case 0x00687469:
            {
                MKV_DATA char  data_chars[6]   = "aoieu";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb4b5, // 0.705882 
                    0x1e1e, // 0.117647 
                    0x1a5a, // 0.102941 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // iti
            case 0x00697469:
            {
                MKV_DATA char  data_chars[12]   = "nwskmyaptco";
                MKV_DATA uint16_t data_weights[11] = {
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // itk
            case 0x006b7469:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itl
            case 0x006c7469:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itm
            case 0x006d7469:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itn
            case 0x006e7469:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ito
            case 0x006f7469:
            {
                MKV_DATA char  data_chars[6]   = "nmtek";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // itp
            case 0x00707469:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itr
            case 0x00727469:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // its
            case 0x00737469:
            {
                MKV_DATA char  data_chars[7]   = "aouile";
                MKV_DATA uint16_t data_weights[6] = {
                    0xd400, // 0.828125 
                    0x0c00, // 0.046875 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // itt
            case 0x00747469:
            {
                MKV_DATA char  data_chars[9]   = "hairloyt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9cc9, // 0.612440 
                    0x40eb, // 0.253588 
                    0x1260, // 0.071770 
                    0x0893, // 0.033493 
                    0x0273, // 0.009569 
                    0x0273, // 0.009569 
                    0x013a, // 0.004785 
                    0x013a, // 0.004785 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // itu
            case 0x00757469:
            {
                MKV_DATA char  data_chars[5]   = "dlnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // itw
            case 0x00777469:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ity
            case 0x00797469:
            {
                MKV_DATA char  data_chars[3]   = "ap";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iud
            case 0x00647569:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iuk
            case 0x006b7569:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iun
            case 0x006e7569:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iva
            case 0x00617669:
            {
                MKV_DATA char  data_chars[6]   = "tclnp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ive
            case 0x00657669:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ivi
            case 0x00697669:
            {
                MKV_DATA char  data_chars[5]   = "ntel";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ivo
            case 0x006f7669:
            {
                MKV_DATA char  data_chars[4]   = "lrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iwa
            case 0x00617769:
            {
                MKV_DATA char  data_chars[12]   = "ntrslkpimde";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6aab, // 0.416667 
                    0x5d55, // 0.364583 
                    0x12ab, // 0.072917 
                    0x0aab, // 0.041667 
                    0x0800, // 0.031250 
                    0x0555, // 0.020833 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // iwe
            case 0x00657769:
            {
                MKV_DATA char  data_chars[4]   = "tkr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9555, // 0.583333 
                    0x6000, // 0.375000 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iwi
            case 0x00697769:
            {
                MKV_DATA char  data_chars[8]   = "tchklos";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9c72, // 0.611111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // iwo
            case 0x006f7769:
            {
                MKV_DATA char  data_chars[5]   = "neti";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc3c4, // 0.764706 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // iwt
            case 0x00747769:
            {
                return 'e';
            }
            break;

            // iwu
            case 0x00757769:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixi
            case 0x00697869:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iya
            case 0x00617969:
            {
                MKV_DATA char  data_chars[15]   = "rwpntksmlbchde";
                MKV_DATA uint16_t data_weights[14] = {
                    0x51fd, // 0.320261 
                    0x2828, // 0.156863 
                    0x1e1e, // 0.117647 
                    0x1ac5, // 0.104575 
                    0x10bb, // 0.065359 
                    0x0d63, // 0.052288 
                    0x0d63, // 0.052288 
                    0x085e, // 0.032680 
                    0x06b1, // 0.026144 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0359, // 0.013072 
                    0x0359, // 0.013072 
                    0x01ac, // 0.006536 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // iye
            case 0x00657969:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iyi
            case 0x00697969:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iyo
            case 0x006f7969:
            {
                MKV_DATA char  data_chars[7]   = "mkrstw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // iyu
            case 0x00757969:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iza
            case 0x00617a69:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // izi
            case 0x00697a69:
            {
                MKV_DATA char  data_chars[3]   = "og";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // izo
            case 0x006f7a69:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // i
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'j':
        {
            switch ( trigram_u32 )
            {
            // jab
            case 0x0062616a:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jac
            case 0x0063616a:
            {
                MKV_DATA char  data_chars[4]   = "zku";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jad
            case 0x0064616a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jai
            case 0x0069616a:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jak
            case 0x006b616a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jam
            case 0x006d616a:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jan
            case 0x006e616a:
            {
                MKV_DATA char  data_chars[4]   = "gsa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jap
            case 0x0070616a:
            {
                MKV_DATA char  data_chars[4]   = "aru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jar
            case 0x0072616a:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jas
            case 0x0073616a:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jay
            case 0x0079616a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jaz
            case 0x007a616a:
            {
                MKV_DATA char  data_chars[3]   = "za";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jcu
            case 0x0075636a:
            {
                MKV_DATA char  data_chars[3]   = "zl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jda
            case 0x0061646a:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jea
            case 0x0061656a:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jel
            case 0x006c656a:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jer
            case 0x0072656a:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jes
            case 0x0073656a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jfg
            case 0x0067666a:
            {
                return 'j';
            }
            break;

            // jia
            case 0x0061696a:
            {
                MKV_DATA char  data_chars[3]   = "me";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jin
            case 0x006e696a:
            {
                MKV_DATA char  data_chars[4]   = "tdn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jip
            case 0x0070696a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jir
            case 0x0072696a:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jit
            case 0x0074696a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jol
            case 0x006c6f6a:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jom
            case 0x006d6f6a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jon
            case 0x006e6f6a:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // joo
            case 0x006f6f6a:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jou
            case 0x00756f6a:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jpr
            case 0x0072706a:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jta
            case 0x0061746a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jul
            case 0x006c756a:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jun
            case 0x006e756a:
            {
                MKV_DATA char  data_chars[5]   = "gice";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // jus
            case 0x0073756a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // j
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'k':
        {
            switch ( trigram_u32 )
            {
            // kaa
            case 0x0061616b:
            {
                MKV_DATA char  data_chars[3]   = "kd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kab
            case 0x0062616b:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x3555, // 0.208333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kac
            case 0x0063616b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kad
            case 0x0064616b:
            {
                MKV_DATA char  data_chars[7]   = "aoiues";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kae
            case 0x0065616b:
            {
                MKV_DATA char  data_chars[9]   = "onwktlmp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5307, // 0.324324 
                    0x4530, // 0.270270 
                    0x375a, // 0.216216 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // kaf
            case 0x0066616b:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kah
            case 0x0068616b:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kai
            case 0x0069616b:
            {
                MKV_DATA char  data_chars[6]   = "cltyf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kak
            case 0x006b616b:
            {
                MKV_DATA char  data_chars[5]   = "hioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kal
            case 0x006c616b:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7685, // 0.462963 
                    0x3426, // 0.203704 
                    0x2aab, // 0.166667 
                    0x212f, // 0.129630 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kam
            case 0x006d616b:
            {
                MKV_DATA char  data_chars[17]   = "apmuoencihrbklys";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4a34, // 0.289855 
                    0x3b5d, // 0.231884 
                    0x2164, // 0.130435 
                    0x0ed7, // 0.057971 
                    0x0ed7, // 0.057971 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // kan
            case 0x006e616b:
            {
                MKV_DATA char  data_chars[20]   = "tgcalonykbpdsihrwfu";
                MKV_DATA uint16_t data_weights[19] = {
                    0x3555, // 0.208333 
                    0x2444, // 0.141667 
                    0x2222, // 0.133333 
                    0x1bbc, // 0.108333 
                    0x199a, // 0.100000 
                    0x0aab, // 0.041667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // kao
            case 0x006f616b:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kap
            case 0x0070616b:
            {
                MKV_DATA char  data_chars[8]   = "haoiupl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8555, // 0.520833 
                    0x2555, // 0.145833 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kar
            case 0x0072616b:
            {
                MKV_DATA char  data_chars[11]   = "aiouemnydt";
                MKV_DATA uint16_t data_weights[10] = {
                    0xc60a, // 0.773585 
                    0x11b6, // 0.069182 
                    0x0e7e, // 0.056604 
                    0x0b45, // 0.044025 
                    0x0338, // 0.012579 
                    0x0338, // 0.012579 
                    0x0338, // 0.012579 
                    0x019c, // 0.006289 
                    0x019c, // 0.006289 
                    0x019c, // 0.006289 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // kas
            case 0x0073616b:
            {
                MKV_DATA char  data_chars[6]   = "aeiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x53c8, // 0.327273 
                    0x412a, // 0.254545 
                    0x412a, // 0.254545 
                    0x2095, // 0.127273 
                    0x094f, // 0.036364 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kat
            case 0x0074616b:
            {
                MKV_DATA char  data_chars[13]   = "haioutscepyr";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6000, // 0.375000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x1666, // 0.087500 
                    0x1666, // 0.087500 
                    0x099a, // 0.037500 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // kau
            case 0x0075616b:
            {
                MKV_DATA char  data_chars[3]   = "me";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kaw
            case 0x0077616b:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdd8a, // 0.865385 
                    0x189e, // 0.096154 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kay
            case 0x0079616b:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb8e4, // 0.722222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kba
            case 0x0061626b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbi
            case 0x0069626b:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbu
            case 0x0075626b:
            {
                MKV_DATA char  data_chars[4]   = "nat";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kch
            case 0x0068636b:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8788, // 0.529412 
                    0x5a5a, // 0.352941 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kda
            case 0x0061646b:
            {
                MKV_DATA char  data_chars[8]   = "riehlnw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kde
            case 0x0065646b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdi
            case 0x0069646b:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdo
            case 0x006f646b:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kea
            case 0x0061656b:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kec
            case 0x0063656b:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kee
            case 0x0065656b:
            {
                MKV_DATA char  data_chars[4]   = "trm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // keh
            case 0x0068656b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kek
            case 0x006b656b:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kel
            case 0x006c656b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kem
            case 0x006d656b:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ken
            case 0x006e656b:
            {
                MKV_DATA char  data_chars[3]   = "dg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kep
            case 0x0070656b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ker
            case 0x0072656b:
            {
                MKV_DATA char  data_chars[5]   = "beiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kes
            case 0x0073656b:
            {
                MKV_DATA char  data_chars[6]   = "aophi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ket
            case 0x0074656b:
            {
                MKV_DATA char  data_chars[7]   = "astmrh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kev
            case 0x0076656b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfa
            case 0x0061666b:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfu
            case 0x0075666b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kgo
            case 0x006f676b:
            {
                MKV_DATA char  data_chars[3]   = "kd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kha
            case 0x0061686b:
            {
                MKV_DATA char  data_chars[19]   = "nmroltyewcpiksbdhu";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4073, // 0.251748 
                    0x3864, // 0.220280 
                    0x23ce, // 0.139860 
                    0x101d, // 0.062937 
                    0x0f37, // 0.059441 
                    0x0e52, // 0.055944 
                    0x0d6d, // 0.052448 
                    0x0881, // 0.033217 
                    0x06b7, // 0.026224 
                    0x05d1, // 0.022727 
                    0x055f, // 0.020979 
                    0x0407, // 0.015734 
                    0x0395, // 0.013986 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                    0x0158, // 0.005245 
                    0x00e5, // 0.003497 
                    0x0073, // 0.001748 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // khe
            case 0x0065686b:
            {
                MKV_DATA char  data_chars[11]   = "tmnapkolwh";
                MKV_DATA uint16_t data_weights[10] = {
                    0x77be, // 0.467742 
                    0x318c, // 0.193548 
                    0x2529, // 0.145161 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // khi
            case 0x0069686b:
            {
                MKV_DATA char  data_chars[15]   = "ratnmkyueobplw";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3e10, // 0.242424 
                    0x38e4, // 0.222222 
                    0x3122, // 0.191919 
                    0x1f08, // 0.121212 
                    0x0cee, // 0.050505 
                    0x0a58, // 0.040404 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // khk
            case 0x006b686b:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // khl
            case 0x006c686b:
            {
                MKV_DATA char  data_chars[6]   = "aouie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4f3d, // 0.309524 
                    0x4000, // 0.250000 
                    0x3cf4, // 0.238095 
                    0x279e, // 0.154762 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // khm
            case 0x006d686b:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kho
            case 0x006f686b:
            {
                MKV_DATA char  data_chars[17]   = "nmtksrelpcbidhaw";
                MKV_DATA uint16_t data_weights[16] = {
                    0x5d33, // 0.364055 
                    0x3d58, // 0.239631 
                    0x25c0, // 0.147465 
                    0x0cfa, // 0.050691 
                    0x0970, // 0.036866 
                    0x0970, // 0.036866 
                    0x0714, // 0.027650 
                    0x0714, // 0.027650 
                    0x04b8, // 0.018433 
                    0x025c, // 0.009217 
                    0x025c, // 0.009217 
                    0x025c, // 0.009217 
                    0x025c, // 0.009217 
                    0x012e, // 0.004608 
                    0x012e, // 0.004608 
                    0x012e, // 0.004608 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // khr
            case 0x0072686b:
            {
                MKV_DATA char  data_chars[7]   = "oauies";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a00, // 0.351562 
                    0x4000, // 0.250000 
                    0x3400, // 0.203125 
                    0x2c00, // 0.171875 
                    0x0400, // 0.015625 
                    0x0200, // 0.007812 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // khu
            case 0x0075686b:
            {
                MKV_DATA char  data_chars[15]   = "nmearktipshldw";
                MKV_DATA uint16_t data_weights[14] = {
                    0x83e1, // 0.515152 
                    0x1a60, // 0.103030 
                    0x18d3, // 0.096970 
                    0x18d3, // 0.096970 
                    0x0c6a, // 0.048485 
                    0x07c2, // 0.030303 
                    0x0635, // 0.024242 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x031a, // 0.012121 
                    0x031a, // 0.012121 
                    0x031a, // 0.012121 
                    0x018d, // 0.006061 
                    0x018d, // 0.006061 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // khw
            case 0x0077686b:
            {
                MKV_DATA char  data_chars[6]   = "aioen";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // khx
            case 0x0078686b:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kia
            case 0x0061696b:
            {
                MKV_DATA char  data_chars[8]   = "tnopbmk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kie
            case 0x0065696b:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kil
            case 0x006c696b:
            {
                MKV_DATA char  data_chars[4]   = "aoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kim
            case 0x006d696b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kin
            case 0x006e696b:
            {
                MKV_DATA char  data_chars[6]   = "gntbi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kio
            case 0x006f696b:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kip
            case 0x0070696b:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kir
            case 0x0072696b:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kis
            case 0x0073696b:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kit
            case 0x0074696b:
            {
                MKV_DATA char  data_chars[8]   = "ticsadh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x61e2, // 0.382353 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kka
            case 0x00616b6b:
            {
                MKV_DATA char  data_chars[14]   = "rwtcsebmkylpn";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // kkh
            case 0x00686b6b:
            {
                MKV_DATA char  data_chars[9]   = "aiwluore";
                MKV_DATA uint16_t data_weights[8] = {
                    0xa6a4, // 0.650943 
                    0x304d, // 0.188679 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x073f, // 0.028302 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // kki
            case 0x00696b6b:
            {
                MKV_DATA char  data_chars[4]   = "nta";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kkl
            case 0x006c6b6b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kko
            case 0x006f6b6b:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kkr
            case 0x00726b6b:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kku
            case 0x00756b6b:
            {
                MKV_DATA char  data_chars[4]   = "atm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kla
            case 0x00616c6b:
            {
                MKV_DATA char  data_chars[12]   = "oneimptukrs";
                MKV_DATA uint16_t data_weights[11] = {
                    0x512c, // 0.317073 
                    0x3e70, // 0.243902 
                    0x2577, // 0.146341 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // kle
            case 0x00656c6b:
            {
                MKV_DATA char  data_chars[4]   = "tkn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // klh
            case 0x00686c6b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kli
            case 0x00696c6b:
            {
                MKV_DATA char  data_chars[9]   = "anpefkmt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // kln
            case 0x006e6c6b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // klo
            case 0x006f6c6b:
            {
                MKV_DATA char  data_chars[7]   = "nmteik";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // klu
            case 0x00756c6b:
            {
                MKV_DATA char  data_chars[7]   = "aemknt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x4aab, // 0.291667 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kma
            case 0x00616d6b:
            {
                MKV_DATA char  data_chars[5]   = "inot";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kmo
            case 0x006f6d6b:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmu
            case 0x00756d6b:
            {
                MKV_DATA char  data_chars[4]   = "aen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kna
            case 0x00616e6b:
            {
                MKV_DATA char  data_chars[5]   = "mceo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kne
            case 0x00656e6b:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kng
            case 0x00676e6b:
            {
                MKV_DATA char  data_chars[5]   = "aeou";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kni
            case 0x00696e6b:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kno
            case 0x006f6e6b:
            {
                MKV_DATA char  data_chars[4]   = "lkm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // knu
            case 0x00756e6b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kob
            case 0x00626f6b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // koc
            case 0x00636f6b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kod
            case 0x00646f6b:
            {
                MKV_DATA char  data_chars[4]   = "ciu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // koe
            case 0x00656f6b:
            {
                MKV_DATA char  data_chars[8]   = "nmptbik";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // koh
            case 0x00686f6b:
            {
                MKV_DATA char  data_chars[5]   = "cjno";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kok
            case 0x006b6f6b:
            {
                MKV_DATA char  data_chars[4]   = "ouc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kol
            case 0x006c6f6b:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kom
            case 0x006d6f6b:
            {
                MKV_DATA char  data_chars[6]   = "aouei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kon
            case 0x006e6f6b:
            {
                MKV_DATA char  data_chars[7]   = "gnadlt";
                MKV_DATA uint16_t data_weights[6] = {
                    0xcb7d, // 0.794872 
                    0x1a42, // 0.102564 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // koo
            case 0x006f6f6b:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kop
            case 0x00706f6b:
            {
                MKV_DATA char  data_chars[5]   = "achk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kor
            case 0x00726f6b:
            {
                MKV_DATA char  data_chars[6]   = "nabos";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kos
            case 0x00736f6b:
            {
                MKV_DATA char  data_chars[5]   = "ioau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6bca, // 0.421053 
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kot
            case 0x00746f6b:
            {
                MKV_DATA char  data_chars[4]   = "ahi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kow
            case 0x00776f6b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // koy
            case 0x00796f6b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpa
            case 0x0061706b:
            {
                MKV_DATA char  data_chars[4]   = "okn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kph
            case 0x0068706b:
            {
                MKV_DATA char  data_chars[6]   = "aouer";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kpi
            case 0x0069706b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpl
            case 0x006c706b:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpo
            case 0x006f706b:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpu
            case 0x0075706b:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kra
            case 0x0061726b:
            {
                MKV_DATA char  data_chars[19]   = "tpcsbdinlymrwheoak";
                MKV_DATA uint16_t data_weights[18] = {
                    0x3388, // 0.201299 
                    0x1f96, // 0.123377 
                    0x1ec1, // 0.120130 
                    0x1c42, // 0.110390 
                    0x1a99, // 0.103896 
                    0x18ef, // 0.097403 
                    0x09f9, // 0.038961 
                    0x09f9, // 0.038961 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x0428, // 0.016234 
                    0x0353, // 0.012987 
                    0x027e, // 0.009740 
                    0x00d5, // 0.003247 
                    0x00d5, // 0.003247 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // kre
            case 0x0065726b:
            {
                MKV_DATA char  data_chars[5]   = "ntad";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kri
            case 0x0069726b:
            {
                MKV_DATA char  data_chars[7]   = "atsnpm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x70a4, // 0.440000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kro
            case 0x006f726b:
            {
                MKV_DATA char  data_chars[8]   = "menpkit";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // krp
            case 0x0070726b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kru
            case 0x0075726b:
            {
                MKV_DATA char  data_chars[10]   = "atnekpmli";
                MKV_DATA uint16_t data_weights[9] = {
                    0x43c4, // 0.264706 
                    0x34b5, // 0.205882 
                    0x2d2d, // 0.176471 
                    0x25a6, // 0.147059 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ksa
            case 0x0061736b:
            {
                MKV_DATA char  data_chars[11]   = "rnwkblmsie";
                MKV_DATA uint16_t data_weights[10] = {
                    0x425f, // 0.259259 
                    0x2f68, // 0.185185 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // kse
            case 0x0065736b:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksh
            case 0x0068736b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksi
            case 0x0069736b:
            {
                MKV_DATA char  data_chars[5]   = "napt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kso
            case 0x006f736b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksu
            case 0x0075736b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kta
            case 0x0061746b:
            {
                MKV_DATA char  data_chars[7]   = "ekprtw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kth
            case 0x0068746b:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kto
            case 0x006f746b:
            {
                MKV_DATA char  data_chars[4]   = "epr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ktr
            case 0x0072746b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ktu
            case 0x0075746b:
            {
                MKV_DATA char  data_chars[3]   = "me";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kua
            case 0x0061756b:
            {
                MKV_DATA char  data_chars[8]   = "nitmkwy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kub
            case 0x0062756b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kuc
            case 0x0063756b:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kud
            case 0x0064756b:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kue
            case 0x0065756b:
            {
                MKV_DATA char  data_chars[8]   = "natmprk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kui
            case 0x0069756b:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kuk
            case 0x006b756b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kul
            case 0x006c756b:
            {
                MKV_DATA char  data_chars[5]   = "acui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kum
            case 0x006d756b:
            {
                MKV_DATA char  data_chars[6]   = "pakuv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kun
            case 0x006e756b:
            {
                MKV_DATA char  data_chars[9]   = "acgtnsul";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4dea, // 0.304348 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // kup
            case 0x0070756b:
            {
                MKV_DATA char  data_chars[4]   = "abu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kur
            case 0x0072756b:
            {
                MKV_DATA char  data_chars[4]   = "aue";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kus
            case 0x0073756b:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kut
            case 0x0074756b:
            {
                MKV_DATA char  data_chars[8]   = "tsikacd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kuw
            case 0x0077756b:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kuy
            case 0x0079756b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kvi
            case 0x0069766b:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwa
            case 0x0061776b:
            {
                MKV_DATA char  data_chars[10]   = "niertloyk";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // kwe
            case 0x0065776b:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwi
            case 0x0069776b:
            {
                MKV_DATA char  data_chars[4]   = "ant";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kwo
            case 0x006f776b:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwu
            case 0x0075776b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kxs
            case 0x0073786b:
            {
                return 'r';
            }
            break;

            // kya
            case 0x0061796b:
            {
                MKV_DATA char  data_chars[4]   = "ntu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kyr
            case 0x0072796b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyu
            case 0x0075796b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyv
            case 0x0076796b:
            {
                return 'i';
            }
            break;

            } // switch _u32
        } // k
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'l':
        {
            switch ( trigram_u32 )
            {
            // laa
            case 0x0061616c:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lab
            case 0x0062616c:
            {
                MKV_DATA char  data_chars[8]   = "oualyeh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5000, // 0.312500 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lac
            case 0x0063616c:
            {
                MKV_DATA char  data_chars[6]   = "hecik";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lad
            case 0x0064616c:
            {
                MKV_DATA char  data_chars[10]   = "aioupskye";
                MKV_DATA uint16_t data_weights[9] = {
                    0x70a4, // 0.440000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lae
            case 0x0065616c:
            {
                MKV_DATA char  data_chars[10]   = "nmpkotbah";
                MKV_DATA uint16_t data_weights[9] = {
                    0x73ed, // 0.452830 
                    0x3522, // 0.207547 
                    0x21d0, // 0.132075 
                    0x1352, // 0.075472 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // laf
            case 0x0066616c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lag
            case 0x0067616c:
            {
                MKV_DATA char  data_chars[4]   = "oue";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lah
            case 0x0068616c:
            {
                MKV_DATA char  data_chars[6]   = "aouiy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lai
            case 0x0069616c:
            {
                MKV_DATA char  data_chars[10]   = "tnwlmprko";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lak
            case 0x006b616c:
            {
                MKV_DATA char  data_chars[16]   = "haoserukplcmtdi";
                MKV_DATA uint16_t data_weights[15] = {
                    0x51c7, // 0.319444 
                    0x2aab, // 0.166667 
                    0x18e4, // 0.097222 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // lal
            case 0x006c616c:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x61e2, // 0.382353 
                    0x61e2, // 0.382353 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lam
            case 0x006d616c:
            {
                MKV_DATA char  data_chars[16]   = "apuiodncrlysbte";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3a84, // 0.228571 
                    0x2be3, // 0.171429 
                    0x20ea, // 0.128571 
                    0x1d42, // 0.114286 
                    0x199a, // 0.100000 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // lan
            case 0x006e616c:
            {
                MKV_DATA char  data_chars[12]   = "gtdaneiocys";
                MKV_DATA uint16_t data_weights[11] = {
                    0x67d9, // 0.405660 
                    0x2b79, // 0.169811 
                    0x243a, // 0.141509 
                    0x1352, // 0.075472 
                    0x0c13, // 0.047170 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x073f, // 0.028302 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lao
            case 0x006f616c:
            {
                MKV_DATA char  data_chars[10]   = "hndopsbkw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lap
            case 0x0070616c:
            {
                MKV_DATA char  data_chars[11]   = "ahplkrueio";
                MKV_DATA uint16_t data_weights[10] = {
                    0x713b, // 0.442308 
                    0x589e, // 0.346154 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lar
            case 0x0072616c:
            {
                MKV_DATA char  data_chars[8]   = "aenosiu";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa83b, // 0.657143 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // las
            case 0x0073616c:
            {
                MKV_DATA char  data_chars[8]   = "iaouset";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lat
            case 0x0074616c:
            {
                MKV_DATA char  data_chars[10]   = "htaidoske";
                MKV_DATA uint16_t data_weights[9] = {
                    0x60dd, // 0.378378 
                    0x2983, // 0.162162 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lau
            case 0x0075616c:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lav
            case 0x0076616c:
            {
                MKV_DATA char  data_chars[4]   = "aie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // law
            case 0x0077616c:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb5ad, // 0.709677 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lax
            case 0x0078616c:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lay
            case 0x0079616c:
            {
                MKV_DATA char  data_chars[8]   = "aiopseh";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb13b, // 0.692308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // laz
            case 0x007a616c:
            {
                MKV_DATA char  data_chars[4]   = "ayz";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lbu
            case 0x0075626c:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lce
            case 0x0065636c:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lch
            case 0x0068636c:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lco
            case 0x006f636c:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldd
            case 0x0064646c:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lde
            case 0x0065646c:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldi
            case 0x0069646c:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldl
            case 0x006c646c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldo
            case 0x006f646c:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldr
            case 0x0072646c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lds
            case 0x0073646c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lea
            case 0x0061656c:
            {
                MKV_DATA char  data_chars[6]   = "nfmpr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // leb
            case 0x0062656c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lec
            case 0x0063656c:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lee
            case 0x0065656c:
            {
                MKV_DATA char  data_chars[6]   = "lnvdp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // leg
            case 0x0067656c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // leh
            case 0x0068656c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lei
            case 0x0069656c:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lej
            case 0x006a656c:
            {
                return 'o';
            }
            break;

            // lek
            case 0x006b656c:
            {
                MKV_DATA char  data_chars[5]   = "hlst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lel
            case 0x006c656c:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lem
            case 0x006d656c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // len
            case 0x006e656c:
            {
                MKV_DATA char  data_chars[5]   = "gdna";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc4ec, // 0.769231 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lep
            case 0x0070656c:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ler
            case 0x0072656c:
            {
                MKV_DATA char  data_chars[6]   = "iynst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // les
            case 0x0073656c:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // let
            case 0x0074656c:
            {
                MKV_DATA char  data_chars[6]   = "hrste";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // leu
            case 0x0075656c:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lev
            case 0x0076656c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lew
            case 0x0077656c:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lex
            case 0x0078656c:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ley
            case 0x0079656c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfi
            case 0x0069666c:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfo
            case 0x006f666c:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfr
            case 0x0072666c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lha
            case 0x0061686c:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lho
            case 0x006f686c:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lia
            case 0x0061696c:
            {
                MKV_DATA char  data_chars[10]   = "nmotkspeg";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7c58, // 0.485714 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lib
            case 0x0062696c:
            {
                MKV_DATA char  data_chars[5]   = "aoru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lic
            case 0x0063696c:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lid
            case 0x0064696c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lie
            case 0x0065696c:
            {
                MKV_DATA char  data_chars[5]   = "ompu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lif
            case 0x0066696c:
            {
                MKV_DATA char  data_chars[4]   = "efo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lig
            case 0x0067696c:
            {
                MKV_DATA char  data_chars[3]   = "hn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lih
            case 0x0068696c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lik
            case 0x006b696c:
            {
                MKV_DATA char  data_chars[7]   = "auehio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ba3, // 0.545455 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lil
            case 0x006c696c:
            {
                MKV_DATA char  data_chars[6]   = "aiuye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lim
            case 0x006d696c:
            {
                MKV_DATA char  data_chars[7]   = "iahoue";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lin
            case 0x006e696c:
            {
                MKV_DATA char  data_chars[12]   = "gtiakencfop";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8000, // 0.500000 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lio
            case 0x006f696c:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lip
            case 0x0070696c:
            {
                MKV_DATA char  data_chars[6]   = "hpesa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lir
            case 0x0072696c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lis
            case 0x0073696c:
            {
                MKV_DATA char  data_chars[7]   = "ehstao";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lit
            case 0x0074696c:
            {
                MKV_DATA char  data_chars[11]   = "ayhuertzik";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6276, // 0.384615 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // liv
            case 0x0076696c:
            {
                MKV_DATA char  data_chars[4]   = "ieo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // liw
            case 0x0077696c:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lix
            case 0x0078696c:
            {
                return 'i';
            }
            break;

            // liy
            case 0x0079696c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // liz
            case 0x007a696c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkh
            case 0x00686b6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkl
            case 0x006c6b6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lko
            case 0x006f6b6c:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lla
            case 0x00616c6c:
            {
                MKV_DATA char  data_chars[9]   = "rgnsbmpv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // lle
            case 0x00656c6c:
            {
                MKV_DATA char  data_chars[8]   = "crydgnt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // llf
            case 0x00666c6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lli
            case 0x00696c6c:
            {
                MKV_DATA char  data_chars[6]   = "aovcn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lll
            case 0x006c6c6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llm
            case 0x006d6c6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lln
            case 0x006e6c6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llo
            case 0x006f6c6c:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lls
            case 0x00736c6c:
            {
                return 'i';
            }
            break;

            // llt
            case 0x00746c6c:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llu
            case 0x00756c6c:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lly
            case 0x00796c6c:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lma
            case 0x00616d6c:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lme
            case 0x00656d6c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmo
            case 0x006f6d6c:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmt
            case 0x00746d6c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmy
            case 0x00796d6c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lna
            case 0x00616e6c:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lne
            case 0x00656e6c:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lng
            case 0x00676e6c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnn
            case 0x006e6e6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lno
            case 0x006f6e6c:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loa
            case 0x00616f6c:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loc
            case 0x00636f6c:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lod
            case 0x00646f6c:
            {
                MKV_DATA char  data_chars[4]   = "goy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // loe
            case 0x00656f6c:
            {
                MKV_DATA char  data_chars[7]   = "nmtipk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5e51, // 0.368421 
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lof
            case 0x00666f6c:
            {
                MKV_DATA char  data_chars[3]   = "tf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // log
            case 0x00676f6c:
            {
                MKV_DATA char  data_chars[3]   = "yh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loh
            case 0x00686f6c:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lok
            case 0x006b6f6c:
            {
                MKV_DATA char  data_chars[6]   = "ahult";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lol
            case 0x006c6f6c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lom
            case 0x006d6f6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lon
            case 0x006e6f6c:
            {
                MKV_DATA char  data_chars[7]   = "geikna";
                MKV_DATA uint16_t data_weights[6] = {
                    0xe925, // 0.910714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // loo
            case 0x006f6f6c:
            {
                MKV_DATA char  data_chars[3]   = "mp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lop
            case 0x00706f6c:
            {
                MKV_DATA char  data_chars[3]   = "br";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lor
            case 0x00726f6c:
            {
                MKV_DATA char  data_chars[4]   = "aiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // los
            case 0x00736f6c:
            {
                MKV_DATA char  data_chars[5]   = "aeis";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lot
            case 0x00746f6c:
            {
                MKV_DATA char  data_chars[5]   = "hucp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lou
            case 0x00756f6c:
            {
                MKV_DATA char  data_chars[4]   = "din";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lov
            case 0x00766f6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // low
            case 0x00776f6c:
            {
                MKV_DATA char  data_chars[4]   = "eas";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // loy
            case 0x00796f6c:
            {
                MKV_DATA char  data_chars[4]   = "ifk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lph
            case 0x0068706c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpi
            case 0x0069706c:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpr
            case 0x0072706c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpt
            case 0x0074706c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lra
            case 0x0061726c:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsi
            case 0x0069736c:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lth
            case 0x0068746c:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lto
            case 0x006f746c:
            {
                MKV_DATA char  data_chars[3]   = "np";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltr
            case 0x0072746c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltu
            case 0x0075746c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lua
            case 0x0061756c:
            {
                MKV_DATA char  data_chars[8]   = "niktmel";
                MKV_DATA uint16_t data_weights[7] = {
                    0x882c, // 0.531915 
                    0x3678, // 0.212766 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lub
            case 0x0062756c:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // luc
            case 0x0063756c:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lud
            case 0x0064756c:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lue
            case 0x0065756c:
            {
                MKV_DATA char  data_chars[10]   = "ankmcpstw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7582, // 0.459016 
                    0x3ef3, // 0.245902 
                    0x1d61, // 0.114754 
                    0x10c9, // 0.065574 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lui
            case 0x0069756c:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // luk
            case 0x006b756c:
            {
                MKV_DATA char  data_chars[9]   = "akshlprc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6bca, // 0.421053 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // lul
            case 0x006c756c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lum
            case 0x006d756c:
            {
                MKV_DATA char  data_chars[8]   = "pbnlmoe";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9436, // 0.578947 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lun
            case 0x006e756c:
            {
                MKV_DATA char  data_chars[4]   = "gae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe50d, // 0.894737 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lup
            case 0x0070756c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lus
            case 0x0073756c:
            {
                MKV_DATA char  data_chars[4]   = "iot";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lut
            case 0x0074756c:
            {
                MKV_DATA char  data_chars[7]   = "iadeho";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // luw
            case 0x0077756c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lux
            case 0x0078756c:
            {
                MKV_DATA char  data_chars[7]   = "eouvxn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lve
            case 0x0065766c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lvi
            case 0x0069766c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwa
            case 0x0061776c:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwo
            case 0x006f776c:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lxw
            case 0x0077786c:
            {
                return 'o';
            }
            break;

            // lya
            case 0x0061796c:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyc
            case 0x0063796c:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyo
            case 0x006f796c:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyw
            case 0x0077796c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // l
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'm':
        {
            switch ( trigram_u32 )
            {
            // maa
            case 0x0061616d:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mab
            case 0x0062616d:
            {
                MKV_DATA char  data_chars[5]   = "ouap";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mac
            case 0x0063616d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mad
            case 0x0064616d:
            {
                MKV_DATA char  data_chars[6]   = "auios";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4aab, // 0.291667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mae
            case 0x0065616d:
            {
                MKV_DATA char  data_chars[14]   = "ntkrmopscyxwh";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4fa5, // 0.311111 
                    0x27d2, // 0.155556 
                    0x16c1, // 0.088889 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // maf
            case 0x0066616d:
            {
                MKV_DATA char  data_chars[4]   = "auo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mag
            case 0x0067616d:
            {
                MKV_DATA char  data_chars[4]   = "ino";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mah
            case 0x0068616d:
            {
                MKV_DATA char  data_chars[7]   = "aioeuk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9555, // 0.583333 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1555, // 0.083333 
                    0x1249, // 0.071429 
                    0x030c, // 0.011905 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mai
            case 0x0069616d:
            {
                MKV_DATA char  data_chars[9]   = "dhstkynp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // maj
            case 0x006a616d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mak
            case 0x006b616d:
            {
                MKV_DATA char  data_chars[18]   = "hkaoulrmpisntywfe";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5958, // 0.348993 
                    0x2e64, // 0.181208 
                    0x1b7d, // 0.107383 
                    0x0f77, // 0.060403 
                    0x0dbf, // 0.053691 
                    0x0a4f, // 0.040268 
                    0x0a4f, // 0.040268 
                    0x0897, // 0.033557 
                    0x06df, // 0.026846 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x0370, // 0.013423 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // mal
            case 0x006c616d:
            {
                MKV_DATA char  data_chars[7]   = "auieol";
                MKV_DATA uint16_t data_weights[6] = {
                    0x76ba, // 0.463768 
                    0x303b, // 0.188406 
                    0x251a, // 0.144928 
                    0x19f9, // 0.101449 
                    0x128d, // 0.072464 
                    0x076c, // 0.028986 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mam
            case 0x006d616d:
            {
                MKV_DATA char  data_chars[5]   = "uaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // man
            case 0x006e616d:
            {
                MKV_DATA char  data_chars[20]   = "giaoutdekncsmpbjyhw";
                MKV_DATA uint16_t data_weights[19] = {
                    0x3a13, // 0.226852 
                    0x3685, // 0.212963 
                    0x2bda, // 0.171296 
                    0x11c7, // 0.069444 
                    0x1098, // 0.064815 
                    0x0d09, // 0.050926 
                    0x0d09, // 0.050926 
                    0x097b, // 0.037037 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                    0x012f, // 0.004630 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // mao
            case 0x006f616d:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // map
            case 0x0070616d:
            {
                MKV_DATA char  data_chars[7]   = "hrailo";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa529, // 0.645161 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mar
            case 0x0072616d:
            {
                MKV_DATA char  data_chars[15]   = "aiuokercnvtsby";
                MKV_DATA uint16_t data_weights[14] = {
                    0x74f0, // 0.456790 
                    0x2916, // 0.160494 
                    0x212f, // 0.129630 
                    0x1162, // 0.067901 
                    0x0b10, // 0.043210 
                    0x097b, // 0.037037 
                    0x0652, // 0.024691 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x0329, // 0.012346 
                    0x0329, // 0.012346 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                    0x0195, // 0.006173 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // mas
            case 0x0073616d:
            {
                MKV_DATA char  data_chars[7]   = "aioesu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8a61, // 0.540541 
                    0x306f, // 0.189189 
                    0x2983, // 0.162162 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mat
            case 0x0074616d:
            {
                MKV_DATA char  data_chars[14]   = "hctauisrwyeop";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5f03, // 0.371134 
                    0x2cde, // 0.175258 
                    0x1a64, // 0.103093 
                    0x17c1, // 0.092784 
                    0x151d, // 0.082474 
                    0x0fd6, // 0.061856 
                    0x0a8f, // 0.041237 
                    0x0547, // 0.020619 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // mau
            case 0x0075616d:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // maw
            case 0x0077616d:
            {
                MKV_DATA char  data_chars[7]   = "aoieku";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc28f, // 0.760000 
                    0x1eb8, // 0.120000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // max
            case 0x0078616d:
            {
                MKV_DATA char  data_chars[3]   = "cx";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // may
            case 0x0079616d:
            {
                MKV_DATA char  data_chars[7]   = "auoefi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8800, // 0.531250 
                    0x3000, // 0.187500 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // maz
            case 0x007a616d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mba
            case 0x0061626d:
            {
                MKV_DATA char  data_chars[6]   = "tnskl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mbe
            case 0x0065626d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbi
            case 0x0069626d:
            {
                MKV_DATA char  data_chars[4]   = "ant";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mbl
            case 0x006c626d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbo
            case 0x006f626d:
            {
                MKV_DATA char  data_chars[4]   = "nol";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mbr
            case 0x0072626d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbu
            case 0x0075626d:
            {
                MKV_DATA char  data_chars[7]   = "nretcm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mch
            case 0x0068636d:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x831f, // 0.512195 
                    0x44af, // 0.268293 
                    0x2577, // 0.146341 
                    0x12bb, // 0.073171 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mda
            case 0x0061646d:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mde
            case 0x0065646d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdi
            case 0x0069646d:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdo
            case 0x006f646d:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdu
            case 0x0075646d:
            {
                MKV_DATA char  data_chars[4]   = "aen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mea
            case 0x0061656d:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // meb
            case 0x0062656d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // med
            case 0x0064656d:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mei
            case 0x0069656d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mek
            case 0x006b656d:
            {
                MKV_DATA char  data_chars[5]   = "kloh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mel
            case 0x006c656d:
            {
                MKV_DATA char  data_chars[6]   = "iouya";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mem
            case 0x006d656d:
            {
                MKV_DATA char  data_chars[3]   = "om";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // men
            case 0x006e656d:
            {
                MKV_DATA char  data_chars[6]   = "gtaci";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6186, // 0.380952 
                    0x6186, // 0.380952 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mer
            case 0x0072656d:
            {
                MKV_DATA char  data_chars[10]   = "ailsymcuo";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mes
            case 0x0073656d:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // met
            case 0x0074656d:
            {
                MKV_DATA char  data_chars[7]   = "htreaz";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mey
            case 0x0079656d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfa
            case 0x0061666d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfo
            case 0x006f666d:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mga
            case 0x0061676d:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mha
            case 0x0061686d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mhe
            case 0x0065686d:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mhi
            case 0x0069686d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mho
            case 0x006f686d:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mhu
            case 0x0075686d:
            {
                MKV_DATA char  data_chars[3]   = "hm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mia
            case 0x0061696d:
            {
                MKV_DATA char  data_chars[4]   = "ntm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mib
            case 0x0062696d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mic
            case 0x0063696d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mid
            case 0x0064696d:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mie
            case 0x0065696d:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mik
            case 0x006b696d:
            {
                MKV_DATA char  data_chars[7]   = "ahkerw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ba3, // 0.545455 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mil
            case 0x006c696d:
            {
                MKV_DATA char  data_chars[8]   = "alefiky";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mim
            case 0x006d696d:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // min
            case 0x006e696d:
            {
                MKV_DATA char  data_chars[10]   = "gtaidbleo";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mip
            case 0x0070696d:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mir
            case 0x0072696d:
            {
                MKV_DATA char  data_chars[4]   = "atu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mis
            case 0x0073696d:
            {
                MKV_DATA char  data_chars[6]   = "astko";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mit
            case 0x0074696d:
            {
                MKV_DATA char  data_chars[10]   = "thraciepm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // miu
            case 0x0075696d:
            {
                MKV_DATA char  data_chars[3]   = "md";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // miw
            case 0x0077696d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // miy
            case 0x0079696d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mka
            case 0x00616b6d:
            {
                MKV_DATA char  data_chars[8]   = "mneprwy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mkh
            case 0x00686b6d:
            {
                MKV_DATA char  data_chars[7]   = "aueori";
                MKV_DATA uint16_t data_weights[6] = {
                    0x68ba, // 0.409091 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mki
            case 0x00696b6d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mkk
            case 0x006b6b6d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mkl
            case 0x006c6b6d:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mko
            case 0x006f6b6d:
            {
                MKV_DATA char  data_chars[6]   = "kneim";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mkr
            case 0x00726b6d:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mku
            case 0x00756b6d:
            {
                MKV_DATA char  data_chars[3]   = "in";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mla
            case 0x00616c6d:
            {
                MKV_DATA char  data_chars[5]   = "einp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mle
            case 0x00656c6d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mli
            case 0x00696c6d:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mlo
            case 0x006f6c6d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mlu
            case 0x00756c6d:
            {
                MKV_DATA char  data_chars[5]   = "aekn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mma
            case 0x00616d6d:
            {
                MKV_DATA char  data_chars[15]   = "rntwskcpyldbhi";
                MKV_DATA uint16_t data_weights[14] = {
                    0x34a3, // 0.205607 
                    0x2b11, // 0.168224 
                    0x23e3, // 0.140187 
                    0x1b84, // 0.107477 
                    0x1a51, // 0.102804 
                    0x1588, // 0.084112 
                    0x1456, // 0.079439 
                    0x0860, // 0.032710 
                    0x072d, // 0.028037 
                    0x05fb, // 0.023364 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0132, // 0.004673 
                    0x0132, // 0.004673 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // mme
            case 0x00656d6d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmi
            case 0x00696d6d:
            {
                MKV_DATA char  data_chars[4]   = "ktp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mmn
            case 0x006e6d6d:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmo
            case 0x006f6d6d:
            {
                MKV_DATA char  data_chars[6]   = "netrc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mmu
            case 0x00756d6d:
            {
                MKV_DATA char  data_chars[5]   = "aekt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mna
            case 0x00616e6d:
            {
                MKV_DATA char  data_chars[8]   = "knrotmi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x611a, // 0.379310 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mne
            case 0x00656e6d:
            {
                MKV_DATA char  data_chars[3]   = "tr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mng
            case 0x00676e6d:
            {
                MKV_DATA char  data_chars[5]   = "aouk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mni
            case 0x00696e6d:
            {
                MKV_DATA char  data_chars[6]   = "awyno";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mno
            case 0x006f6e6d:
            {
                MKV_DATA char  data_chars[6]   = "eiknp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mnu
            case 0x00756e6d:
            {
                MKV_DATA char  data_chars[5]   = "aems";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // moc
            case 0x00636f6d:
            {
                MKV_DATA char  data_chars[4]   = "hkr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mod
            case 0x00646f6d:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moe
            case 0x00656f6d:
            {
                MKV_DATA char  data_chars[7]   = "nilktv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // moh
            case 0x00686f6d:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mok
            case 0x006b6f6d:
            {
                MKV_DATA char  data_chars[5]   = "kaho";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mol
            case 0x006c6f6d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mom
            case 0x006d6f6d:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mon
            case 0x006e6f6d:
            {
                MKV_DATA char  data_chars[17]   = "gtwdrmkclneaosuy";
                MKV_DATA uint16_t data_weights[16] = {
                    0x6fd1, // 0.436782 
                    0x469f, // 0.275862 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // moo
            case 0x006f6f6d:
            {
                MKV_DATA char  data_chars[4]   = "nbk";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mop
            case 0x00706f6d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mor
            case 0x00726f6d:
            {
                MKV_DATA char  data_chars[6]   = "ainye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9000, // 0.562500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mos
            case 0x00736f6d:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mot
            case 0x00746f6d:
            {
                MKV_DATA char  data_chars[6]   = "hitnd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mou
            case 0x00756f6d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mov
            case 0x00766f6d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moy
            case 0x00796f6d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpa
            case 0x0061706d:
            {
                MKV_DATA char  data_chars[13]   = "ntecosdglmwy";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4800, // 0.281250 
                    0x3800, // 0.218750 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // mpe
            case 0x0065706d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mph
            case 0x0068706d:
            {
                MKV_DATA char  data_chars[8]   = "aouierl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7133, // 0.442177 
                    0x35fd, // 0.210884 
                    0x2b8a, // 0.170068 
                    0x1a1f, // 0.102041 
                    0x08b5, // 0.034014 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mpi
            case 0x0069706d:
            {
                MKV_DATA char  data_chars[4]   = "nar";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mpl
            case 0x006c706d:
            {
                MKV_DATA char  data_chars[5]   = "eiua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpo
            case 0x006f706d:
            {
                MKV_DATA char  data_chars[8]   = "nrmiote";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5000, // 0.312500 
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mpr
            case 0x0072706d:
            {
                MKV_DATA char  data_chars[4]   = "aie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mpt
            case 0x0074706d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpu
            case 0x0075706d:
            {
                MKV_DATA char  data_chars[5]   = "knei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mqu
            case 0x0075716d:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mra
            case 0x0061726d:
            {
                MKV_DATA char  data_chars[10]   = "tnkiemcdp";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7000, // 0.437500 
                    0x4800, // 0.281250 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mre
            case 0x0065726d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mri
            case 0x0069726d:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mro
            case 0x006f726d:
            {
                MKV_DATA char  data_chars[5]   = "neim";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb000, // 0.687500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mru
            case 0x0075726d:
            {
                MKV_DATA char  data_chars[6]   = "neagm";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa762, // 0.653846 
                    0x313b, // 0.192308 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // msa
            case 0x0061736d:
            {
                MKV_DATA char  data_chars[11]   = "nikepomtwr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // mse
            case 0x0065736d:
            {
                MKV_DATA char  data_chars[4]   = "ant";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // msi
            case 0x0069736d:
            {
                MKV_DATA char  data_chars[7]   = "npatud";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mso
            case 0x006f736d:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msu
            case 0x0075736d:
            {
                MKV_DATA char  data_chars[4]   = "ekr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mta
            case 0x0061746d:
            {
                MKV_DATA char  data_chars[7]   = "nikmor";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mte
            case 0x0065746d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mth
            case 0x0068746d:
            {
                MKV_DATA char  data_chars[6]   = "aoiue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9800, // 0.593750 
                    0x3800, // 0.218750 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mti
            case 0x0069746d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mto
            case 0x006f746d:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mtr
            case 0x0072746d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mts
            case 0x0073746d:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mua
            case 0x0061756d:
            {
                MKV_DATA char  data_chars[9]   = "nketimpy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x94a5, // 0.580645 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mub
            case 0x0062756d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // muc
            case 0x0063756d:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mud
            case 0x0064756d:
            {
                MKV_DATA char  data_chars[4]   = "dor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mue
            case 0x0065756d:
            {
                MKV_DATA char  data_chars[5]   = "antk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x5174, // 0.318182 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // muh
            case 0x0068756d:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mui
            case 0x0069756d:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // muk
            case 0x006b756d:
            {
                MKV_DATA char  data_chars[5]   = "dhkt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mul
            case 0x006c756d:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mum
            case 0x006d756d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mun
            case 0x006e756d:
            {
                MKV_DATA char  data_chars[10]   = "iglntapro";
                MKV_DATA uint16_t data_weights[9] = {
                    0x52d3, // 0.323529 
                    0x4b4b, // 0.294118 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mur
            case 0x0072756d:
            {
                MKV_DATA char  data_chars[4]   = "air";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mus
            case 0x0073756d:
            {
                MKV_DATA char  data_chars[7]   = "eiaosu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mut
            case 0x0074756d:
            {
                MKV_DATA char  data_chars[10]   = "tcshiakdm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5be6, // 0.358974 
                    0x3483, // 0.205128 
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // muu
            case 0x0075756d:
            {
                return 'b';
            }
            break;

            // muy
            case 0x0079756d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mvi
            case 0x0069766d:
            {
                MKV_DATA char  data_chars[4]   = "tel";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mwa
            case 0x0061776d:
            {
                MKV_DATA char  data_chars[5]   = "ntds";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mwe
            case 0x0065776d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwi
            case 0x0069776d:
            {
                MKV_DATA char  data_chars[5]   = "tahw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mwn
            case 0x006e776d:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwo
            case 0x006f776d:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mxc
            case 0x0063786d:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mya
            case 0x0061796d:
            {
                MKV_DATA char  data_chars[5]   = "enri";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mye
            case 0x0065796d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myh
            case 0x0068796d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myi
            case 0x0069796d:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myo
            case 0x006f796d:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myr
            case 0x0072796d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mys
            case 0x0073796d:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myu
            case 0x0075796d:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // m
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'n':
        {
            switch ( trigram_u32 )
            {
            // nab
            case 0x0062616e:
            {
                MKV_DATA char  data_chars[5]   = "uhoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nac
            case 0x0063616e:
            {
                MKV_DATA char  data_chars[5]   = "hloi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcccd, // 0.800000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nad
            case 0x0064616e:
            {
                MKV_DATA char  data_chars[6]   = "ieuad";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7777, // 0.466667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nae
            case 0x0065616e:
            {
                MKV_DATA char  data_chars[6]   = "ntopl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbca2, // 0.736842 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nag
            case 0x0067616e:
            {
                MKV_DATA char  data_chars[4]   = "aey";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nah
            case 0x0068616e:
            {
                MKV_DATA char  data_chars[4]   = "oiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nai
            case 0x0069616e:
            {
                MKV_DATA char  data_chars[7]   = "ytrhms";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nak
            case 0x006b616e:
            {
                MKV_DATA char  data_chars[13]   = "hoainsrbkutl";
                MKV_DATA uint16_t data_weights[12] = {
                    0x8386, // 0.513761 
                    0x2ca0, // 0.174312 
                    0x233b, // 0.137615 
                    0x070c, // 0.027523 
                    0x070c, // 0.027523 
                    0x070c, // 0.027523 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // nal
            case 0x006c616e:
            {
                MKV_DATA char  data_chars[5]   = "aieu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x97b4, // 0.592593 
                    0x5555, // 0.333333 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nam
            case 0x006d616e:
            {
                MKV_DATA char  data_chars[19]   = "atpckiosyemurlwbhd";
                MKV_DATA uint16_t data_weights[18] = {
                    0x212f, // 0.129630 
                    0x212f, // 0.129630 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // nan
            case 0x006e616e:
            {
                MKV_DATA char  data_chars[12]   = "tguaidozcyp";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5a7c, // 0.353448 
                    0x53dd, // 0.327586 
                    0x1847, // 0.094828 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // nao
            case 0x006f616e:
            {
                MKV_DATA char  data_chars[5]   = "wspr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nap
            case 0x0070616e:
            {
                MKV_DATA char  data_chars[5]   = "hapr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc8a6, // 0.783784 
                    0x2983, // 0.162162 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nar
            case 0x0072616e:
            {
                MKV_DATA char  data_chars[9]   = "aioueytr";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbe3d, // 0.743119 
                    0x1e88, // 0.119266 
                    0x0ceb, // 0.050459 
                    0x0a92, // 0.041284 
                    0x070c, // 0.027523 
                    0x0259, // 0.009174 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nas
            case 0x0073616e:
            {
                MKV_DATA char  data_chars[7]   = "aiouet";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6907, // 0.410256 
                    0x4835, // 0.282051 
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nat
            case 0x0074616e:
            {
                MKV_DATA char  data_chars[14]   = "htiuaeodcwkrs";
                MKV_DATA uint16_t data_weights[13] = {
                    0x67e2, // 0.405797 
                    0x1dae, // 0.115942 
                    0x1dae, // 0.115942 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // nau
            case 0x0075616e:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nav
            case 0x0076616e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // naw
            case 0x0077616e:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbda1, // 0.740741 
                    0x25ed, // 0.148148 
                    0x0fcd, // 0.061728 
                    0x0ca4, // 0.049383 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nay
            case 0x0079616e:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nba
            case 0x0061626e:
            {
                MKV_DATA char  data_chars[4]   = "ney";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nbe
            case 0x0065626e:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbh
            case 0x0068626e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbi
            case 0x0069626e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbo
            case 0x006f626e:
            {
                MKV_DATA char  data_chars[3]   = "rk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbu
            case 0x0075626e:
            {
                MKV_DATA char  data_chars[4]   = "ran";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdb6e, // 0.857143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nca
            case 0x0061636e:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nce
            case 0x0065636e:
            {
                MKV_DATA char  data_chars[5]   = "ptvs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nch
            case 0x0068636e:
            {
                MKV_DATA char  data_chars[6]   = "aoiue";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb29b, // 0.697674 
                    0x25b5, // 0.147287 
                    0x19cc, // 0.100775 
                    0x0be8, // 0.046512 
                    0x01fc, // 0.007752 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nci
            case 0x0069636e:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nco
            case 0x006f636e:
            {
                MKV_DATA char  data_chars[3]   = "rm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ncr
            case 0x0072636e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nct
            case 0x0074636e:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nda
            case 0x0061646e:
            {
                MKV_DATA char  data_chars[17]   = "rmnlphiewvbtysdk";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4874, // 0.283019 
                    0x26a4, // 0.150943 
                    0x1cfb, // 0.113208 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ndc
            case 0x0063646e:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nde
            case 0x0065646e:
            {
                MKV_DATA char  data_chars[7]   = "reuzcn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ndh
            case 0x0068646e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndi
            case 0x0069646e:
            {
                MKV_DATA char  data_chars[7]   = "tnadgs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ndm
            case 0x006d646e:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndo
            case 0x006f646e:
            {
                MKV_DATA char  data_chars[8]   = "ntrclmp";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ndr
            case 0x0072646e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nds
            case 0x0073646e:
            {
                MKV_DATA char  data_chars[4]   = "eho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndu
            case 0x0075646e:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndv
            case 0x0076646e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nea
            case 0x0061656e:
            {
                MKV_DATA char  data_chars[3]   = "rp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nec
            case 0x0063656e:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nee
            case 0x0065656e:
            {
                MKV_DATA char  data_chars[4]   = "cdr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // neh
            case 0x0068656e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nek
            case 0x006b656e:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nel
            case 0x006c656e:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nem
            case 0x006d656e:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nen
            case 0x006e656e:
            {
                MKV_DATA char  data_chars[4]   = "gta";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // neo
            case 0x006f656e:
            {
                MKV_DATA char  data_chars[3]   = "lk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ner
            case 0x0072656e:
            {
                MKV_DATA char  data_chars[5]   = "agny";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nes
            case 0x0073656e:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // net
            case 0x0074656e:
            {
                MKV_DATA char  data_chars[5]   = "aikt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // neu
            case 0x0075656e:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nev
            case 0x0076656e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // new
            case 0x0077656e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ney
            case 0x0079656e:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfa
            case 0x0061666e:
            {
                MKV_DATA char  data_chars[4]   = "chi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nfi
            case 0x0069666e:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfo
            case 0x006f666e:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfu
            case 0x0075666e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nga
            case 0x0061676e:
            {
                MKV_DATA char  data_chars[11]   = "enmitorlpk";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4a88, // 0.291139 
                    0x3717, // 0.215190 
                    0x23a5, // 0.139241 
                    0x1d2a, // 0.113924 
                    0x1034, // 0.063291 
                    0x1034, // 0.063291 
                    0x09b9, // 0.037975 
                    0x09b9, // 0.037975 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ngb
            case 0x0062676e:
            {
                MKV_DATA char  data_chars[4]   = "uia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngc
            case 0x0063676e:
            {
                MKV_DATA char  data_chars[5]   = "hoxe";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe000, // 0.875000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngd
            case 0x0064676e:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nge
            case 0x0065676e:
            {
                MKV_DATA char  data_chars[5]   = "nrot";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngf
            case 0x0066676e:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngg
            case 0x0067676e:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngh
            case 0x0068676e:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9436, // 0.578947 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngi
            case 0x0069676e:
            {
                MKV_DATA char  data_chars[7]   = "anmoue";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7878, // 0.470588 
                    0x4b4b, // 0.294118 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ngj
            case 0x006a676e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngk
            case 0x006b676e:
            {
                MKV_DATA char  data_chars[10]   = "haoruleiw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x995d, // 0.599078 
                    0x2492, // 0.142857 
                    0x1c50, // 0.110599 
                    0x0cfa, // 0.050691 
                    0x0970, // 0.036866 
                    0x05e6, // 0.023041 
                    0x04b8, // 0.018433 
                    0x025c, // 0.009217 
                    0x025c, // 0.009217 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ngl
            case 0x006c676e:
            {
                MKV_DATA char  data_chars[7]   = "aouewi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x50d8, // 0.315789 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ngm
            case 0x006d676e:
            {
                MKV_DATA char  data_chars[6]   = "aouei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7333, // 0.450000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngn
            case 0x006e676e:
            {
                MKV_DATA char  data_chars[5]   = "gaou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x68ba, // 0.409091 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngo
            case 0x006f676e:
            {
                MKV_DATA char  data_chars[11]   = "nkepmiwstd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4ccd, // 0.300000 
                    0x399a, // 0.225000 
                    0x3333, // 0.200000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ngp
            case 0x0070676e:
            {
                MKV_DATA char  data_chars[8]   = "huorael";
                MKV_DATA uint16_t data_weights[7] = {
                    0xaaab, // 0.666667 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ngr
            case 0x0072676e:
            {
                MKV_DATA char  data_chars[7]   = "aoiuet";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ngs
            case 0x0073676e:
            {
                MKV_DATA char  data_chars[8]   = "aiueort";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8cf2, // 0.550562 
                    0x508a, // 0.314607 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ngt
            case 0x0074676e:
            {
                MKV_DATA char  data_chars[9]   = "haoiuert";
                MKV_DATA uint16_t data_weights[8] = {
                    0x94f2, // 0.581818 
                    0x3333, // 0.200000 
                    0x129e, // 0.072727 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ngu
            case 0x0075676e:
            {
                MKV_DATA char  data_chars[11]   = "aemnhtklsp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x64d9, // 0.393939 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ngw
            case 0x0077676e:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7c1f, // 0.484848 
                    0x45d1, // 0.272727 
                    0x364e, // 0.212121 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngy
            case 0x0079676e:
            {
                MKV_DATA char  data_chars[5]   = "auoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nha
            case 0x0061686e:
            {
                MKV_DATA char  data_chars[4]   = "ntw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nhe
            case 0x0065686e:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nho
            case 0x006f686e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nhu
            case 0x0075686e:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nia
            case 0x0061696e:
            {
                MKV_DATA char  data_chars[8]   = "nmtolpk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6c4f, // 0.423077 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nib
            case 0x0062696e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nic
            case 0x0063696e:
            {
                MKV_DATA char  data_chars[6]   = "heioa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nid
            case 0x0064696e:
            {
                MKV_DATA char  data_chars[4]   = "eho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nie
            case 0x0065696e:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nig
            case 0x0067696e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nih
            case 0x0068696e:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nik
            case 0x006b696e:
            {
                MKV_DATA char  data_chars[8]   = "haokrwe";
                MKV_DATA uint16_t data_weights[7] = {
                    0x871c, // 0.527778 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nil
            case 0x006c696e:
            {
                MKV_DATA char  data_chars[5]   = "aulr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nim
            case 0x006d696e:
            {
                MKV_DATA char  data_chars[4]   = "ima";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nin
            case 0x006e696e:
            {
                MKV_DATA char  data_chars[9]   = "gatlrsce";
                MKV_DATA uint16_t data_weights[8] = {
                    0x599a, // 0.350000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nio
            case 0x006f696e:
            {
                MKV_DATA char  data_chars[3]   = "sr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nip
            case 0x0070696e:
            {
                MKV_DATA char  data_chars[5]   = "hpai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // niq
            case 0x0071696e:
            {
                return 'u';
            }
            break;

            // nir
            case 0x0072696e:
            {
                MKV_DATA char  data_chars[5]   = "aoiv";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nis
            case 0x0073696e:
            {
                MKV_DATA char  data_chars[7]   = "aohirs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nit
            case 0x0074696e:
            {
                MKV_DATA char  data_chars[13]   = "hcsiyaetnrwd";
                MKV_DATA uint16_t data_weights[12] = {
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // niu
            case 0x0075696e:
            {
                MKV_DATA char  data_chars[3]   = "md";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // niv
            case 0x0076696e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // niw
            case 0x0077696e:
            {
                MKV_DATA char  data_chars[5]   = "aeoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa762, // 0.653846 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // niy
            case 0x0079696e:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaf28, // 0.684211 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // niz
            case 0x007a696e:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nja
            case 0x00616a6e:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nji
            case 0x00696a6e:
            {
                MKV_DATA char  data_chars[3]   = "np";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // njo
            case 0x006f6a6e:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nka
            case 0x00616b6e:
            {
                MKV_DATA char  data_chars[7]   = "enmrio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nke
            case 0x00656b6e:
            {
                MKV_DATA char  data_chars[4]   = "nry";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nkg
            case 0x00676b6e:
            {
                return 'o';
            }
            break;

            // nkh
            case 0x00686b6e:
            {
                MKV_DATA char  data_chars[7]   = "areiou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nkl
            case 0x006c6b6e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nko
            case 0x006f6b6e:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkr
            case 0x00726b6e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nku
            case 0x00756b6e:
            {
                MKV_DATA char  data_chars[3]   = "ap";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nla
            case 0x00616c6e:
            {
                MKV_DATA char  data_chars[12]   = "pynktcdwsbm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1b27, // 0.106061 
                    0x1b27, // 0.106061 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // nle
            case 0x00656c6e:
            {
                MKV_DATA char  data_chars[6]   = "nekrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nli
            case 0x00696c6e:
            {
                MKV_DATA char  data_chars[6]   = "kmtag";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nlo
            case 0x006f6c6e:
            {
                MKV_DATA char  data_chars[5]   = "npem";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nlp
            case 0x00706c6e:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nlu
            case 0x00756c6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nma
            case 0x00616d6e:
            {
                MKV_DATA char  data_chars[11]   = "rnkpwgltey";
                MKV_DATA uint16_t data_weights[10] = {
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // nme
            case 0x00656d6e:
            {
                MKV_DATA char  data_chars[4]   = "knt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nmi
            case 0x00696d6e:
            {
                MKV_DATA char  data_chars[4]   = "tky";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nmo
            case 0x006f6d6e:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nmu
            case 0x00756d6e:
            {
                MKV_DATA char  data_chars[6]   = "anert";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nna
            case 0x00616e6e:
            {
                MKV_DATA char  data_chars[15]   = "rkspnwtmdcbhel";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4792, // 0.279570 
                    0x2108, // 0.129032 
                    0x1b87, // 0.107527 
                    0x18c6, // 0.096774 
                    0x1345, // 0.075269 
                    0x1084, // 0.064516 
                    0x0dc3, // 0.053763 
                    0x0b03, // 0.043011 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // nne
            case 0x00656e6e:
            {
                MKV_DATA char  data_chars[5]   = "lcrx";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nng
            case 0x00676e6e:
            {
                MKV_DATA char  data_chars[3]   = "ap";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nni
            case 0x00696e6e:
            {
                MKV_DATA char  data_chars[12]   = "takwoemubgn";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // nno
            case 0x006f6e6e:
            {
                MKV_DATA char  data_chars[6]   = "neirw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nnp
            case 0x00706e6e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnr
            case 0x00726e6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnt
            case 0x00746e6e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nnu
            case 0x00756e6e:
            {
                MKV_DATA char  data_chars[5]   = "raek";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nob
            case 0x00626f6e:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // noc
            case 0x00636f6e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nod
            case 0x00646f6e:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // noe
            case 0x00656f6e:
            {
                MKV_DATA char  data_chars[7]   = "ntkrai";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9000, // 0.562500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // noh
            case 0x00686f6e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // noi
            case 0x00696f6e:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nok
            case 0x006b6f6e:
            {
                MKV_DATA char  data_chars[12]   = "khtspynilwc";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8348, // 0.512821 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // nol
            case 0x006c6f6e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nom
            case 0x006d6f6e:
            {
                MKV_DATA char  data_chars[7]   = "arkcpw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // non
            case 0x006e6f6e:
            {
                MKV_DATA char  data_chars[8]   = "gtbcdos";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb60b, // 0.711111 
                    0x2d83, // 0.177778 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // noo
            case 0x006f6f6e:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nop
            case 0x00706f6e:
            {
                MKV_DATA char  data_chars[4]   = "pha";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x3cf4, // 0.238095 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nor
            case 0x00726f6e:
            {
                MKV_DATA char  data_chars[10]   = "aotikrden";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8000, // 0.500000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // not
            case 0x00746f6e:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nou
            case 0x00756f6e:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nov
            case 0x00766f6e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // now
            case 0x00776f6e:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npa
            case 0x0061706e:
            {
                MKV_DATA char  data_chars[5]   = "aelr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // npe
            case 0x0065706e:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nph
            case 0x0068706e:
            {
                MKV_DATA char  data_chars[7]   = "oaieru";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3e45, // 0.243243 
                    0x3e45, // 0.243243 
                    0x375a, // 0.216216 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // npi
            case 0x0069706e:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npl
            case 0x006c706e:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npo
            case 0x006f706e:
            {
                MKV_DATA char  data_chars[3]   = "tk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npr
            case 0x0072706e:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // npu
            case 0x0075706e:
            {
                MKV_DATA char  data_chars[3]   = "fr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nqu
            case 0x0075716e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nra
            case 0x0061726e:
            {
                MKV_DATA char  data_chars[9]   = "tsimrwbd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nri
            case 0x0069726e:
            {
                MKV_DATA char  data_chars[4]   = "san";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nro
            case 0x006f726e:
            {
                MKV_DATA char  data_chars[4]   = "meo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nru
            case 0x0075726e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsa
            case 0x0061736e:
            {
                MKV_DATA char  data_chars[15]   = "tnwpiearokmslb";
                MKV_DATA uint16_t data_weights[14] = {
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // nse
            case 0x0065736e:
            {
                MKV_DATA char  data_chars[5]   = "atns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nsh
            case 0x0068736e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsi
            case 0x0069736e:
            {
                MKV_DATA char  data_chars[9]   = "rnmadovt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5e51, // 0.368421 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nsk
            case 0x006b736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nso
            case 0x006f736e:
            {
                MKV_DATA char  data_chars[6]   = "nmeop";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsp
            case 0x0070736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nst
            case 0x0074736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsu
            case 0x0075736e:
            {
                MKV_DATA char  data_chars[9]   = "kvaenrwl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nta
            case 0x0061746e:
            {
                MKV_DATA char  data_chars[16]   = "rnkywipltbsmguc";
                MKV_DATA uint16_t data_weights[15] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1794, // 0.092105 
                    0x1794, // 0.092105 
                    0x10d8, // 0.065789 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ntd
            case 0x0064746e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nte
            case 0x0065746e:
            {
                MKV_DATA char  data_chars[7]   = "rnadem";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9d8a, // 0.615385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nth
            case 0x0068746e:
            {
                MKV_DATA char  data_chars[7]   = "arioue";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa8ce, // 0.659401 
                    0x1a82, // 0.103542 
                    0x186a, // 0.095368 
                    0x1652, // 0.087193 
                    0x0a77, // 0.040872 
                    0x037d, // 0.013624 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nti
            case 0x0069746e:
            {
                MKV_DATA char  data_chars[17]   = "kwnptsycdraqmebo";
                MKV_DATA uint16_t data_weights[16] = {
                    0x22e9, // 0.136364 
                    0x1d17, // 0.113636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ntn
            case 0x006e746e:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nto
            case 0x006f746e:
            {
                MKV_DATA char  data_chars[8]   = "ekmnrwa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ntp
            case 0x0070746e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntr
            case 0x0072746e:
            {
                MKV_DATA char  data_chars[7]   = "aieuyo";
                MKV_DATA uint16_t data_weights[6] = {
                    0xacf9, // 0.675676 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ntt
            case 0x0074746e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntu
            case 0x0075746e:
            {
                MKV_DATA char  data_chars[5]   = "rakn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nua
            case 0x0061756e:
            {
                MKV_DATA char  data_chars[6]   = "nimte";
                MKV_DATA uint16_t data_weights[5] = {
                    0x93b1, // 0.576923 
                    0x44ec, // 0.269231 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nub
            case 0x0062756e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nuc
            case 0x0063756e:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nud
            case 0x0064756e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nue
            case 0x0065756e:
            {
                MKV_DATA char  data_chars[4]   = "nak";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6969, // 0.411765 
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nuh
            case 0x0068756e:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nuk
            case 0x006b756e:
            {
                MKV_DATA char  data_chars[6]   = "huair";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8d79, // 0.552632 
                    0x50d8, // 0.315789 
                    0x1436, // 0.078947 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nul
            case 0x006c756e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // num
            case 0x006d756e:
            {
                MKV_DATA char  data_chars[4]   = "abe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nun
            case 0x006e756e:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nup
            case 0x0070756e:
            {
                MKV_DATA char  data_chars[5]   = "ahpr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8788, // 0.529412 
                    0x5a5a, // 0.352941 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nur
            case 0x0072756e:
            {
                MKV_DATA char  data_chars[4]   = "auo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa1af, // 0.631579 
                    0x50d8, // 0.315789 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nus
            case 0x0073756e:
            {
                MKV_DATA char  data_chars[5]   = "oaic";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbe83, // 0.744186 
                    0x29ad, // 0.162791 
                    0x11dc, // 0.069767 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nut
            case 0x0074756e:
            {
                MKV_DATA char  data_chars[5]   = "hcst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nuw
            case 0x0077756e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nve
            case 0x0065766e:
            {
                MKV_DATA char  data_chars[4]   = "ner";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nvi
            case 0x0069766e:
            {
                MKV_DATA char  data_chars[4]   = "elm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nwa
            case 0x0061776e:
            {
                MKV_DATA char  data_chars[9]   = "ntdrsbel";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nwe
            case 0x0065776e:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwi
            case 0x0069776e:
            {
                MKV_DATA char  data_chars[5]   = "tacn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nwu
            case 0x0075776e:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nxn
            case 0x006e786e:
            {
                MKV_DATA char  data_chars[3]   = "gp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nya
            case 0x0061796e:
            {
                MKV_DATA char  data_chars[16]   = "rwtnpsklbcfvdmh";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2f15, // 0.183908 
                    0x2f15, // 0.183908 
                    0x2641, // 0.149425 
                    0x205e, // 0.126437 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // nye
            case 0x0065796e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyi
            case 0x0069796e:
            {
                MKV_DATA char  data_chars[3]   = "kn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nym
            case 0x006d796e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyo
            case 0x006f796e:
            {
                MKV_DATA char  data_chars[4]   = "nsm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyu
            case 0x0075796e:
            {
                MKV_DATA char  data_chars[4]   = "ent";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyy
            case 0x0079796e:
            {
                return 'a';
            }
            break;

            } // switch _u32
        } // n
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'o':
        {
            switch ( trigram_u32 )
            {
            // oad
            case 0x0064616f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oak
            case 0x006b616f:
            {
                MKV_DATA char  data_chars[3]   = "sw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oar
            case 0x0072616f:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oas
            case 0x0073616f:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oat
            case 0x0074616f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oba
            case 0x0061626f:
            {
                MKV_DATA char  data_chars[3]   = "nh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obe
            case 0x0065626f:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obl
            case 0x006c626f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obo
            case 0x006f626f:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obs
            case 0x0073626f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obu
            case 0x0075626f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oca
            case 0x0061636f:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // occ
            case 0x0063636f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oce
            case 0x0065636f:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // och
            case 0x0068636f:
            {
                MKV_DATA char  data_chars[6]   = "aiour";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8788, // 0.529412 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oci
            case 0x0069636f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ock
            case 0x006b636f:
            {
                MKV_DATA char  data_chars[3]   = "sy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oco
            case 0x006f636f:
            {
                MKV_DATA char  data_chars[6]   = "opvhn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ocr
            case 0x0072636f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oda
            case 0x0061646f:
            {
                MKV_DATA char  data_chars[6]   = "rtbem";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // odc
            case 0x0063646f:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odd
            case 0x0064646f:
            {
                MKV_DATA char  data_chars[3]   = "ye";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ode
            case 0x0065646f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odg
            case 0x0067646f:
            {
                return 'e';
            }
            break;

            // odh
            case 0x0068646f:
            {
                MKV_DATA char  data_chars[4]   = "aiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odi
            case 0x0069646f:
            {
                MKV_DATA char  data_chars[5]   = "nrta";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odl
            case 0x006c646f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odo
            case 0x006f646f:
            {
                MKV_DATA char  data_chars[4]   = "mtw";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odu
            case 0x0075646f:
            {
                MKV_DATA char  data_chars[5]   = "ekls";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odw
            case 0x0077646f:
            {
                return 'i';
            }
            break;

            // oeb
            case 0x0062656f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oec
            case 0x0063656f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oef
            case 0x0066656f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oei
            case 0x0069656f:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oek
            case 0x006b656f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oel
            case 0x006c656f:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oem
            case 0x006d656f:
            {
                MKV_DATA char  data_chars[7]   = "pwrsbm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oen
            case 0x006e656f:
            {
                MKV_DATA char  data_chars[13]   = "gwcsprdeatik";
                MKV_DATA uint16_t data_weights[12] = {
                    0xbc3c, // 0.735294 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // oep
            case 0x0070656f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oer
            case 0x0072656f:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oet
            case 0x0074656f:
            {
                MKV_DATA char  data_chars[5]   = "sacl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oev
            case 0x0076656f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // off
            case 0x0066666f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ofi
            case 0x0069666f:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oft
            case 0x0074666f:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogh
            case 0x0068676f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogr
            case 0x0072676f:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogu
            case 0x0075676f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oha
            case 0x0061686f:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohc
            case 0x0063686f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohi
            case 0x0069686f:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohj
            case 0x006a686f:
            {
                return 'u';
            }
            break;

            // ohk
            case 0x006b686f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohn
            case 0x006e686f:
            {
                MKV_DATA char  data_chars[3]   = "fg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oho
            case 0x006f686f:
            {
                MKV_DATA char  data_chars[3]   = "ku";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohr
            case 0x0072686f:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohs
            case 0x0073686f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohu
            case 0x0075686f:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oia
            case 0x0061696f:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oic
            case 0x0063696f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oid
            case 0x0064696f:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oik
            case 0x006b696f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oin
            case 0x006e696f:
            {
                MKV_DATA char  data_chars[4]   = "tsa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ois
            case 0x0073696f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oit
            case 0x0074696f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oiw
            case 0x0077696f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oji
            case 0x00696a6f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oka
            case 0x00616b6f:
            {
                MKV_DATA char  data_chars[9]   = "relntwyd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // okb
            case 0x00626b6f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okc
            case 0x00636b6f:
            {
                return 'h';
            }
            break;

            // okd
            case 0x00646b6f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oke
            case 0x00656b6f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okf
            case 0x00666b6f:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okh
            case 0x00686b6f:
            {
                MKV_DATA char  data_chars[7]   = "auioer";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oki
            case 0x00696b6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okk
            case 0x006b6b6f:
            {
                MKV_DATA char  data_chars[7]   = "harilo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x435e, // 0.263158 
                    0x3ca2, // 0.236842 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // okl
            case 0x006c6b6f:
            {
                MKV_DATA char  data_chars[4]   = "uai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // okm
            case 0x006d6b6f:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okn
            case 0x006e6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oko
            case 0x006f6b6f:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okp
            case 0x00706b6f:
            {
                MKV_DATA char  data_chars[5]   = "oahl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oks
            case 0x00736b6f:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // okt
            case 0x00746b6f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oku
            case 0x00756b6f:
            {
                MKV_DATA char  data_chars[5]   = "tyer";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // okw
            case 0x00776b6f:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oky
            case 0x00796b6f:
            {
                MKV_DATA char  data_chars[4]   = "oua";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ola
            case 0x00616c6f:
            {
                MKV_DATA char  data_chars[7]   = "enmsbk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // olc
            case 0x00636c6f:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // old
            case 0x00646c6f:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oli
            case 0x00696c6f:
            {
                MKV_DATA char  data_chars[9]   = "tnamychk";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // olk
            case 0x006b6c6f:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oll
            case 0x006c6c6f:
            {
                MKV_DATA char  data_chars[5]   = "eyau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oln
            case 0x006e6c6f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olo
            case 0x006f6c6f:
            {
                MKV_DATA char  data_chars[8]   = "gnykrmw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // olp
            case 0x00706c6f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olr
            case 0x00726c6f:
            {
                return 'a';
            }
            break;

            // ols
            case 0x00736c6f:
            {
                return 'i';
            }
            break;

            // olu
            case 0x00756c6f:
            {
                MKV_DATA char  data_chars[4]   = "mtx";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oly
            case 0x00796c6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oma
            case 0x00616d6f:
            {
                MKV_DATA char  data_chars[13]   = "ntierdklyops";
                MKV_DATA uint16_t data_weights[12] = {
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // omb
            case 0x00626d6f:
            {
                MKV_DATA char  data_chars[5]   = "uaeo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8889, // 0.533333 
                    0x5555, // 0.333333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // omc
            case 0x00636d6f:
            {
                return 'h';
            }
            break;

            // omd
            case 0x00646d6f:
            {
                MKV_DATA char  data_chars[5]   = "euai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ome
            case 0x00656d6f:
            {
                MKV_DATA char  data_chars[7]   = "stnrob";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // omf
            case 0x00666d6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omh
            case 0x00686d6f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omi
            case 0x00696d6f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omk
            case 0x006b6d6f:
            {
                MKV_DATA char  data_chars[6]   = "lhoiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x599a, // 0.350000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oml
            case 0x006c6d6f:
            {
                MKV_DATA char  data_chars[3]   = "uo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omm
            case 0x006d6d6f:
            {
                MKV_DATA char  data_chars[6]   = "aoiuy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd46d, // 0.829787 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // omn
            case 0x006e6d6f:
            {
                MKV_DATA char  data_chars[4]   = "iau";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // omo
            case 0x006f6d6f:
            {
                MKV_DATA char  data_chars[4]   = "nlt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // omp
            case 0x00706d6f:
            {
                MKV_DATA char  data_chars[7]   = "hoalru";
                MKV_DATA uint16_t data_weights[6] = {
                    0x999a, // 0.600000 
                    0x1d42, // 0.114286 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // omr
            case 0x00726d6f:
            {
                MKV_DATA char  data_chars[5]   = "auoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7943, // 0.473684 
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oms
            case 0x00736d6f:
            {
                MKV_DATA char  data_chars[6]   = "aiueo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // omt
            case 0x00746d6f:
            {
                MKV_DATA char  data_chars[5]   = "hais";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // omu
            case 0x00756d6f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omv
            case 0x00766d6f:
            {
                return 'i';
            }
            break;

            // omw
            case 0x00776d6f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omy
            case 0x00796d6f:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ona
            case 0x00616e6f:
            {
                MKV_DATA char  data_chars[9]   = "lnmrdotc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // onb
            case 0x00626e6f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onc
            case 0x00636e6f:
            {
                MKV_DATA char  data_chars[5]   = "heoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ond
            case 0x00646e6f:
            {
                MKV_DATA char  data_chars[6]   = "oaeci";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // one
            case 0x00656e6f:
            {
                MKV_DATA char  data_chars[7]   = "yvlnps";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ong
            case 0x00676e6f:
            {
                MKV_DATA char  data_chars[21]   = "kstprcwnlfdambyigojh";
                MKV_DATA uint16_t data_weights[20] = {
                    0x5a6c, // 0.353211 
                    0x2dcc, // 0.178899 
                    0x177c, // 0.091743 
                    0x1071, // 0.064220 
                    0x0e17, // 0.055046 
                    0x0965, // 0.036697 
                    0x0965, // 0.036697 
                    0x0838, // 0.032110 
                    0x070c, // 0.027523 
                    0x05df, // 0.022936 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0386, // 0.013761 
                    0x0386, // 0.013761 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // onh
            case 0x00686e6f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oni
            case 0x00696e6f:
            {
                MKV_DATA char  data_chars[6]   = "acnst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // onk
            case 0x006b6e6f:
            {
                MKV_DATA char  data_chars[5]   = "ahel";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // onl
            case 0x006c6e6f:
            {
                MKV_DATA char  data_chars[8]   = "aiuyeop";
                MKV_DATA uint16_t data_weights[7] = {
                    0xc000, // 0.750000 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // onm
            case 0x006d6e6f:
            {
                MKV_DATA char  data_chars[4]   = "aue";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onn
            case 0x006e6e6f:
            {
                MKV_DATA char  data_chars[6]   = "aieuy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x4aab, // 0.291667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ono
            case 0x006f6e6f:
            {
                MKV_DATA char  data_chars[5]   = "kcit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // onp
            case 0x00706e6f:
            {
                MKV_DATA char  data_chars[4]   = "hre";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onr
            case 0x00726e6f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ons
            case 0x00736e6f:
            {
                MKV_DATA char  data_chars[5]   = "iaou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ont
            case 0x00746e6f:
            {
                MKV_DATA char  data_chars[8]   = "hairenp";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa969, // 0.661765 
                    0x1e1e, // 0.117647 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // onu
            case 0x00756e6f:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onv
            case 0x00766e6f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onw
            case 0x00776e6f:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ony
            case 0x00796e6f:
            {
                MKV_DATA char  data_chars[4]   = "aox";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onz
            case 0x007a6e6f:
            {
                return 'u';
            }
            break;

            // oob
            case 0x00626f6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ood
            case 0x00646f6f:
            {
                MKV_DATA char  data_chars[5]   = "clsw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ook
            case 0x006b6f6f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ool
            case 0x006c6f6f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oom
            case 0x006d6f6f:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oon
            case 0x006e6f6f:
            {
                MKV_DATA char  data_chars[11]   = "diaclphstw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // opa
            case 0x0061706f:
            {
                MKV_DATA char  data_chars[5]   = "ltko";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // opb
            case 0x0062706f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opc
            case 0x0063706f:
            {
                return 'h';
            }
            break;

            // ope
            case 0x0065706f:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oph
            case 0x0068706f:
            {
                MKV_DATA char  data_chars[7]   = "aioruy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9643, // 0.586957 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x10b2, // 0.065217 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // opi
            case 0x0069706f:
            {
                MKV_DATA char  data_chars[5]   = "catu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // opk
            case 0x006b706f:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opl
            case 0x006c706f:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opo
            case 0x006f706f:
            {
                MKV_DATA char  data_chars[5]   = "likn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // opp
            case 0x0070706f:
            {
                MKV_DATA char  data_chars[5]   = "hair";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // opr
            case 0x0072706f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opu
            case 0x0075706f:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ora
            case 0x0061726f:
            {
                MKV_DATA char  data_chars[16]   = "nkptmwslcbdryvh";
                MKV_DATA uint16_t data_weights[15] = {
                    0x253d, // 0.145455 
                    0x2095, // 0.127273 
                    0x199a, // 0.100000 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x14f2, // 0.081818 
                    0x129e, // 0.072727 
                    0x129e, // 0.072727 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x06fb, // 0.027273 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // orb
            case 0x0062726f:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orc
            case 0x0063726f:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ord
            case 0x0064726f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ore
            case 0x0065726f:
            {
                MKV_DATA char  data_chars[4]   = "san";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // org
            case 0x0067726f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ori
            case 0x0069726f:
            {
                MKV_DATA char  data_chars[16]   = "kabhnseczdulrpt";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ork
            case 0x006b726f:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orl
            case 0x006c726f:
            {
                MKV_DATA char  data_chars[3]   = "di";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orm
            case 0x006d726f:
            {
                MKV_DATA char  data_chars[4]   = "eit";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // orn
            case 0x006e726f:
            {
                MKV_DATA char  data_chars[6]   = "ipelt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oro
            case 0x006f726f:
            {
                MKV_DATA char  data_chars[4]   = "mtk";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x2f68, // 0.185185 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // orp
            case 0x0070726f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orq
            case 0x0071726f:
            {
                return 'u';
            }
            break;

            // orr
            case 0x0072726f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ors
            case 0x0073726f:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ort
            case 0x0074726f:
            {
                MKV_DATA char  data_chars[6]   = "huyis";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oru
            case 0x0075726f:
            {
                MKV_DATA char  data_chars[4]   = "mne";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // osa
            case 0x0061736f:
            {
                MKV_DATA char  data_chars[7]   = "einmrw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // osc
            case 0x0063736f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ose
            case 0x0065736f:
            {
                MKV_DATA char  data_chars[5]   = "padl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // osi
            case 0x0069736f:
            {
                MKV_DATA char  data_chars[8]   = "tnlmprd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // oso
            case 0x006f736f:
            {
                MKV_DATA char  data_chars[7]   = "tnklmp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // osp
            case 0x0070736f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osr
            case 0x0072736f:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oss
            case 0x0073736f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ost
            case 0x0074736f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osu
            case 0x0075736f:
            {
                MKV_DATA char  data_chars[4]   = "mre";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ota
            case 0x0061746f:
            {
                MKV_DATA char  data_chars[5]   = "nrmo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // otc
            case 0x0063746f:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otd
            case 0x0064746f:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ote
            case 0x0065746f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otf
            case 0x0066746f:
            {
                return 'a';
            }
            break;

            // oth
            case 0x0068746f:
            {
                MKV_DATA char  data_chars[7]   = "aioeup";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa063, // 0.626506 
                    0x40c5, // 0.253012 
                    0x1282, // 0.072289 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oti
            case 0x0069746f:
            {
                MKV_DATA char  data_chars[11]   = "nytkwrsvco";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // otk
            case 0x006b746f:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otn
            case 0x006e746f:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oto
            case 0x006f746f:
            {
                MKV_DATA char  data_chars[7]   = "negkmt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // otp
            case 0x0070746f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otr
            case 0x0072746f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ots
            case 0x0073746f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ott
            case 0x0074746f:
            {
                MKV_DATA char  data_chars[8]   = "hairosl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4bda, // 0.296296 
                    0x425f, // 0.259259 
                    0x38e4, // 0.222222 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // otu
            case 0x0075746f:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otw
            case 0x0077746f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oua
            case 0x0061756f:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oub
            case 0x0062756f:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ouc
            case 0x0063756f:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oue
            case 0x0065756f:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oug
            case 0x0067756f:
            {
                MKV_DATA char  data_chars[3]   = "hn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oui
            case 0x0069756f:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oul
            case 0x006c756f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oun
            case 0x006e756f:
            {
                MKV_DATA char  data_chars[3]   = "tg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // our
            case 0x0072756f:
            {
                MKV_DATA char  data_chars[8]   = "teinpsw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ous
            case 0x0073756f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // out
            case 0x0074756f:
            {
                MKV_DATA char  data_chars[6]   = "hirud";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ouv
            case 0x0076756f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ouy
            case 0x0079756f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ova
            case 0x0061766f:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ove
            case 0x0065766f:
            {
                MKV_DATA char  data_chars[4]   = "rln";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ovi
            case 0x0069766f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ovo
            case 0x006f766f:
            {
                MKV_DATA char  data_chars[3]   = "tg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owa
            case 0x0061776f:
            {
                MKV_DATA char  data_chars[12]   = "nrtebdpkclo";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3a84, // 0.228571 
                    0x3a84, // 0.228571 
                    0x2be3, // 0.171429 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // owc
            case 0x0063776f:
            {
                return 'h';
            }
            break;

            // owd
            case 0x0064776f:
            {
                MKV_DATA char  data_chars[3]   = "yi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owe
            case 0x0065776f:
            {
                MKV_DATA char  data_chars[3]   = "rp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owi
            case 0x0069776f:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // own
            case 0x006e776f:
            {
                MKV_DATA char  data_chars[4]   = "eht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owo
            case 0x006f776f:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxl
            case 0x006c786f:
            {
                return 'e';
            }
            break;

            // oxy
            case 0x0079786f:
            {
                return 'g';
            }
            break;

            // oya
            case 0x0061796f:
            {
                MKV_DATA char  data_chars[6]   = "linog";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oye
            case 0x0065796f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyf
            case 0x0066796f:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyi
            case 0x0069796f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyk
            case 0x006b796f:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyo
            case 0x006f796f:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyu
            case 0x0075796f:
            {
                MKV_DATA char  data_chars[4]   = "hta";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // o
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'p':
        {
            switch ( trigram_u32 )
            {
            // paa
            case 0x00616170:
            {
                MKV_DATA char  data_chars[3]   = "kd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pac
            case 0x00636170:
            {
                MKV_DATA char  data_chars[4]   = "hti";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pad
            case 0x00646170:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pae
            case 0x00656170:
            {
                MKV_DATA char  data_chars[9]   = "tnpkmodv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pag
            case 0x00676170:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pah
            case 0x00686170:
            {
                MKV_DATA char  data_chars[4]   = "aui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pai
            case 0x00696170:
            {
                MKV_DATA char  data_chars[6]   = "lrtxc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pak
            case 0x006b6170:
            {
                MKV_DATA char  data_chars[14]   = "hakopsdicutne";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3a63, // 0.228070 
                    0x286c, // 0.157895 
                    0x23ee, // 0.140351 
                    0x1f70, // 0.122807 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // pal
            case 0x006c6170:
            {
                MKV_DATA char  data_chars[7]   = "amioue";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x43c4, // 0.264706 
                    0x2d2d, // 0.176471 
                    0x1697, // 0.088235 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pam
            case 0x006d6170:
            {
                MKV_DATA char  data_chars[5]   = "aoiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pan
            case 0x006e6170:
            {
                MKV_DATA char  data_chars[18]   = "acgyntdolswibhepv";
                MKV_DATA uint16_t data_weights[17] = {
                    0x3174, // 0.193182 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x2000, // 0.125000 
                    0x1d17, // 0.113636 
                    0x145d, // 0.079545 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // pao
            case 0x006f6170:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pap
            case 0x00706170:
            {
                MKV_DATA char  data_chars[5]   = "hapu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // par
            case 0x00726170:
            {
                MKV_DATA char  data_chars[10]   = "aitkonrce";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5b1e, // 0.355932 
                    0x49c3, // 0.288136 
                    0x1e5f, // 0.118644 
                    0x15b2, // 0.084746 
                    0x15b2, // 0.084746 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // pas
            case 0x00736170:
            {
                MKV_DATA char  data_chars[8]   = "asipueo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pat
            case 0x00746170:
            {
                MKV_DATA char  data_chars[15]   = "htciaosrbekndp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6b7b, // 0.419847 
                    0x232d, // 0.137405 
                    0x1d50, // 0.114504 
                    0x1d50, // 0.114504 
                    0x1773, // 0.091603 
                    0x09c5, // 0.038168 
                    0x05dd, // 0.022901 
                    0x03e9, // 0.015267 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                    0x01f4, // 0.007634 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // pav
            case 0x00766170:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // paw
            case 0x00776170:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb13b, // 0.692308 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pay
            case 0x00796170:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pba
            case 0x00616270:
            {
                MKV_DATA char  data_chars[5]   = "tdln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pbo
            case 0x006f6270:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pbu
            case 0x00756270:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pch
            case 0x00686370:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pda
            case 0x00616470:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pdi
            case 0x00696470:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pea
            case 0x00616570:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pec
            case 0x00636570:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ped
            case 0x00646570:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pee
            case 0x00656570:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pek
            case 0x006b6570:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pel
            case 0x006c6570:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pen
            case 0x006e6570:
            {
                MKV_DATA char  data_chars[9]   = "gicnstza";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // peo
            case 0x006f6570:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // per
            case 0x00726570:
            {
                MKV_DATA char  data_chars[10]   = "ieftyahml";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // pet
            case 0x00746570:
            {
                MKV_DATA char  data_chars[7]   = "craein";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pfa
            case 0x00616670:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pha
            case 0x00616870:
            {
                MKV_DATA char  data_chars[20]   = "ntkrwyieplsocdmhbug";
                MKV_DATA uint16_t data_weights[19] = {
                    0x395b, // 0.224051 
                    0x2928, // 0.160759 
                    0x1f1c, // 0.121519 
                    0x15b6, // 0.084810 
                    0x1279, // 0.072152 
                    0x1034, // 0.063291 
                    0x0e42, // 0.055696 
                    0x0b57, // 0.044304 
                    0x09b9, // 0.037975 
                    0x081a, // 0.031646 
                    0x06ce, // 0.026582 
                    0x05d5, // 0.022785 
                    0x0436, // 0.016456 
                    0x0436, // 0.016456 
                    0x02eb, // 0.011392 
                    0x00f9, // 0.003797 
                    0x00a6, // 0.002532 
                    0x00a6, // 0.002532 
                    0x0053, // 0.001266 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // phe
            case 0x00656870:
            {
                MKV_DATA char  data_chars[13]   = "tnrkldxceosw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // phi
            case 0x00696870:
            {
                MKV_DATA char  data_chars[17]   = "trnmscpalkbwohiy";
                MKV_DATA uint16_t data_weights[16] = {
                    0x49ee, // 0.288793 
                    0x246a, // 0.142241 
                    0x1847, // 0.094828 
                    0x14f7, // 0.081897 
                    0x13dd, // 0.077586 
                    0x0d3e, // 0.051724 
                    0x0d3e, // 0.051724 
                    0x0c23, // 0.047414 
                    0x0b09, // 0.043103 
                    0x09ee, // 0.038793 
                    0x08d4, // 0.034483 
                    0x069f, // 0.025862 
                    0x0235, // 0.008621 
                    0x011a, // 0.004310 
                    0x011a, // 0.004310 
                    0x011a, // 0.004310 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // phk
            case 0x006b6870:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // phl
            case 0x006c6870:
            {
                MKV_DATA char  data_chars[6]   = "aoiue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x69a7, // 0.412698 
                    0x38e4, // 0.222222 
                    0x28a3, // 0.158730 
                    0x2492, // 0.142857 
                    0x1041, // 0.063492 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // phn
            case 0x006e6870:
            {
                MKV_DATA char  data_chars[4]   = "gou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pho
            case 0x006f6870:
            {
                MKV_DATA char  data_chars[15]   = "ntekmpsldiycwr";
                MKV_DATA uint16_t data_weights[14] = {
                    0x93a7, // 0.576764 
                    0x30dd, // 0.190871 
                    0x131f, // 0.074689 
                    0x0baf, // 0.045643 
                    0x0770, // 0.029046 
                    0x0550, // 0.020747 
                    0x0550, // 0.020747 
                    0x0330, // 0.012448 
                    0x0220, // 0.008299 
                    0x0110, // 0.004149 
                    0x0110, // 0.004149 
                    0x0110, // 0.004149 
                    0x0110, // 0.004149 
                    0x0110, // 0.004149 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // phr
            case 0x00726870:
            {
                MKV_DATA char  data_chars[7]   = "aouien";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9e6d, // 0.618852 
                    0x28eb, // 0.159836 
                    0x1d61, // 0.114754 
                    0x13ef, // 0.077869 
                    0x064c, // 0.024590 
                    0x010d, // 0.004098 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pht
            case 0x00746870:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // phu
            case 0x00756870:
            {
                MKV_DATA char  data_chars[18]   = "tmenakprwlcydbisv";
                MKV_DATA uint16_t data_weights[17] = {
                    0x603c, // 0.375912 
                    0x3095, // 0.189781 
                    0x175c, // 0.091241 
                    0x139f, // 0.076642 
                    0x10d1, // 0.065693 
                    0x0d15, // 0.051095 
                    0x0958, // 0.036496 
                    0x0779, // 0.029197 
                    0x04ac, // 0.018248 
                    0x03bd, // 0.014599 
                    0x03bd, // 0.014599 
                    0x02ce, // 0.010949 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // phy
            case 0x00796870:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pia
            case 0x00616970:
            {
                MKV_DATA char  data_chars[6]   = "ntkmo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pic
            case 0x00636970:
            {
                MKV_DATA char  data_chars[4]   = "akh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pid
            case 0x00646970:
            {
                MKV_DATA char  data_chars[3]   = "so";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pie
            case 0x00656970:
            {
                MKV_DATA char  data_chars[4]   = "rst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pik
            case 0x006b6970:
            {
                MKV_DATA char  data_chars[4]   = "aku";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pil
            case 0x006c6970:
            {
                MKV_DATA char  data_chars[4]   = "alo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pim
            case 0x006d6970:
            {
                MKV_DATA char  data_chars[4]   = "arn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pin
            case 0x006e6970:
            {
                MKV_DATA char  data_chars[11]   = "geakitynps";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4f73, // 0.310345 
                    0x469f, // 0.275862 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // pio
            case 0x006f6970:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pip
            case 0x00706970:
            {
                MKV_DATA char  data_chars[3]   = "hp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pir
            case 0x00726970:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pis
            case 0x00736970:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pit
            case 0x00746970:
            {
                MKV_DATA char  data_chars[9]   = "aurtosci";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // piu
            case 0x00756970:
            {
                MKV_DATA char  data_chars[3]   = "md";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // piy
            case 0x00796970:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pkh
            case 0x00686b70:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pki
            case 0x00696b70:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pku
            case 0x00756b70:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pla
            case 0x00616c70:
            {
                MKV_DATA char  data_chars[21]   = "kptnclmdieysorahbfwz";
                MKV_DATA uint16_t data_weights[20] = {
                    0x3da1, // 0.240741 
                    0x17b4, // 0.092593 
                    0x1555, // 0.083333 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x1098, // 0.064815 
                    0x0e39, // 0.055556 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // plc
            case 0x00636c70:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ple
            case 0x00656c70:
            {
                MKV_DATA char  data_chars[8]   = "xnajort";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pli
            case 0x00696c70:
            {
                MKV_DATA char  data_chars[8]   = "antkouc";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // plo
            case 0x006f6c70:
            {
                MKV_DATA char  data_chars[9]   = "neyktpim";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // plu
            case 0x00756c70:
            {
                MKV_DATA char  data_chars[8]   = "eansmdk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pma
            case 0x00616d70:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pmu
            case 0x00756d70:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pna
            case 0x00616e70:
            {
                MKV_DATA char  data_chars[5]   = "gkmr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // png
            case 0x00676e70:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pni
            case 0x00696e70:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pod
            case 0x00646f70:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poe
            case 0x00656f70:
            {
                MKV_DATA char  data_chars[8]   = "ntmpfik";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // poh
            case 0x00686f70:
            {
                MKV_DATA char  data_chars[3]   = "os";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poi
            case 0x00696f70:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pok
            case 0x006b6f70:
            {
                MKV_DATA char  data_chars[4]   = "kpo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pol
            case 0x006c6f70:
            {
                MKV_DATA char  data_chars[6]   = "ioely";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pom
            case 0x006d6f70:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pon
            case 0x006e6f70:
            {
                MKV_DATA char  data_chars[5]   = "gpdo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd794, // 0.842105 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // poo
            case 0x006f6f70:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pop
            case 0x00706f70:
            {
                MKV_DATA char  data_chars[4]   = "pui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // por
            case 0x00726f70:
            {
                MKV_DATA char  data_chars[5]   = "ntai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pos
            case 0x00736f70:
            {
                MKV_DATA char  data_chars[4]   = "tai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pot
            case 0x00746f70:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pow
            case 0x00776f70:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poy
            case 0x00796f70:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppa
            case 0x00617070:
            {
                MKV_DATA char  data_chars[11]   = "rktmwedlny";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4800, // 0.281250 
                    0x3800, // 0.218750 
                    0x2800, // 0.156250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ppe
            case 0x00657070:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pph
            case 0x00687070:
            {
                MKV_DATA char  data_chars[6]   = "alire";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd555, // 0.833333 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x09d9, // 0.038462 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ppi
            case 0x00697070:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppl
            case 0x006c7070:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppr
            case 0x00727070:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pra
            case 0x00617270:
            {
                MKV_DATA char  data_chars[19]   = "ctsdkpnmywrieolhfj";
                MKV_DATA uint16_t data_weights[18] = {
                    0x3260, // 0.196774 
                    0x2a1e, // 0.164516 
                    0x26d0, // 0.151613 
                    0x171f, // 0.090323 
                    0x14a5, // 0.080645 
                    0x13d2, // 0.077419 
                    0x0c63, // 0.048387 
                    0x0c63, // 0.048387 
                    0x076f, // 0.029032 
                    0x05c8, // 0.022581 
                    0x04f4, // 0.019355 
                    0x04f4, // 0.019355 
                    0x0421, // 0.016129 
                    0x027a, // 0.009677 
                    0x027a, // 0.009677 
                    0x027a, // 0.009677 
                    0x00d3, // 0.003226 
                    0x00d3, // 0.003226 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // pre
            case 0x00657270:
            {
                MKV_DATA char  data_chars[9]   = "smtevknu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4925, // 0.285714 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pri
            case 0x00697270:
            {
                MKV_DATA char  data_chars[12]   = "navmdytckel";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4f3d, // 0.309524 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // pro
            case 0x006f7270:
            {
                MKV_DATA char  data_chars[11]   = "mnevktsipu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // pru
            case 0x00757270:
            {
                MKV_DATA char  data_chars[7]   = "emnakt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // psa
            case 0x00617370:
            {
                MKV_DATA char  data_chars[5]   = "nrmk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // psi
            case 0x00697370:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pso
            case 0x006f7370:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psu
            case 0x00757370:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pta
            case 0x00617470:
            {
                MKV_DATA char  data_chars[4]   = "nio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pth
            case 0x00687470:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pti
            case 0x00697470:
            {
                MKV_DATA char  data_chars[4]   = "tqm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pto
            case 0x006f7470:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ptu
            case 0x00757470:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pua
            case 0x00617570:
            {
                MKV_DATA char  data_chars[6]   = "ntikp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pub
            case 0x00627570:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // puc
            case 0x00637570:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pue
            case 0x00657570:
            {
                MKV_DATA char  data_chars[8]   = "antklmr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // puf
            case 0x00667570:
            {
                return 'a';
            }
            break;

            // puk
            case 0x006b7570:
            {
                MKV_DATA char  data_chars[4]   = "pah";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pul
            case 0x006c7570:
            {
                MKV_DATA char  data_chars[4]   = "alu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pun
            case 0x006e7570:
            {
                MKV_DATA char  data_chars[6]   = "yngth";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pup
            case 0x00707570:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pur
            case 0x00727570:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8618, // 0.523810 
                    0x6186, // 0.380952 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // put
            case 0x00747570:
            {
                MKV_DATA char  data_chars[7]   = "taecds";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // puy
            case 0x00797570:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pvi
            case 0x00697670:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwa
            case 0x00617770:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwi
            case 0x00697770:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyi
            case 0x00697970:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // p
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'q':
        {
            switch ( trigram_u32 )
            {
            // qin
            case 0x006e6971:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // qua
            case 0x00617571:
            {
                MKV_DATA char  data_chars[5]   = "rdlm";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // qud
            case 0x00647571:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // que
            case 0x00657571:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // qui
            case 0x00697571:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // q
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'r':
        {
            switch ( trigram_u32 )
            {
            // raa
            case 0x00616172:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rab
            case 0x00626172:
            {
                MKV_DATA char  data_chars[7]   = "uaoibe";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5671, // 0.337662 
                    0x4c78, // 0.298701 
                    0x3bd8, // 0.233766 
                    0x1a99, // 0.103896 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rac
            case 0x00636172:
            {
                MKV_DATA char  data_chars[6]   = "helsy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf107, // 0.941520 
                    0x08fc, // 0.035088 
                    0x02ff, // 0.011696 
                    0x017f, // 0.005848 
                    0x017f, // 0.005848 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rad
            case 0x00646172:
            {
                MKV_DATA char  data_chars[6]   = "iauoe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5389, // 0.326316 
                    0x4e26, // 0.305263 
                    0x2308, // 0.136842 
                    0x2056, // 0.126316 
                    0x1af3, // 0.105263 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rae
            case 0x00656172:
            {
                MKV_DATA char  data_chars[7]   = "nktomi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6bca, // 0.421053 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // raf
            case 0x00666172:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rag
            case 0x00676172:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rah
            case 0x00686172:
            {
                MKV_DATA char  data_chars[7]   = "aoueim";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6c4f, // 0.423077 
                    0x44ec, // 0.269231 
                    0x313b, // 0.192308 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rai
            case 0x00696172:
            {
                MKV_DATA char  data_chars[15]   = "nsrlwypmvktdbe";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // raj
            case 0x006a6172:
            {
                MKV_DATA char  data_chars[5]   = "adpt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rak
            case 0x006b6172:
            {
                MKV_DATA char  data_chars[15]   = "haioesurktlbcm";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5ab5, // 0.354331 
                    0x3265, // 0.196850 
                    0x2245, // 0.133858 
                    0x162c, // 0.086614 
                    0x0e1c, // 0.055118 
                    0x0e1c, // 0.055118 
                    0x0a14, // 0.039370 
                    0x060c, // 0.023622 
                    0x0408, // 0.015748 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                    0x0204, // 0.007874 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ral
            case 0x006c6172:
            {
                MKV_DATA char  data_chars[8]   = "aoewidu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ram
            case 0x006d6172:
            {
                MKV_DATA char  data_chars[12]   = "aiuopeksblm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x64ad, // 0.393258 
                    0x2845, // 0.157303 
                    0x19e3, // 0.101124 
                    0x19e3, // 0.101124 
                    0x1423, // 0.078652 
                    0x1142, // 0.067416 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ran
            case 0x006e6172:
            {
                MKV_DATA char  data_chars[20]   = "gayidoutwcksrenjxqb";
                MKV_DATA uint16_t data_weights[19] = {
                    0x46c4, // 0.276423 
                    0x45b9, // 0.272358 
                    0x214d, // 0.130081 
                    0x10a7, // 0.065041 
                    0x0b72, // 0.044715 
                    0x095e, // 0.036585 
                    0x0853, // 0.032520 
                    0x0853, // 0.032520 
                    0x063e, // 0.024390 
                    0x042a, // 0.016260 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x010a, // 0.004065 
                    0x010a, // 0.004065 
                    0x010a, // 0.004065 
                    0x010a, // 0.004065 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // rao
            case 0x006f6172:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rap
            case 0x00706172:
            {
                MKV_DATA char  data_chars[10]   = "harioupek";
                MKV_DATA uint16_t data_weights[9] = {
                    0xbb51, // 0.731707 
                    0x112c, // 0.067073 
                    0x0f9c, // 0.060976 
                    0x0aed, // 0.042683 
                    0x095e, // 0.036585 
                    0x095e, // 0.036585 
                    0x031f, // 0.012195 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // raq
            case 0x00716172:
            {
                return 'u';
            }
            break;

            // rar
            case 0x00726172:
            {
                MKV_DATA char  data_chars[10]   = "aoiuycdme";
                MKV_DATA uint16_t data_weights[9] = {
                    0xc902, // 0.785185 
                    0x18a7, // 0.096296 
                    0x0d46, // 0.051852 
                    0x05b0, // 0.022222 
                    0x03cb, // 0.014815 
                    0x01e5, // 0.007407 
                    0x01e5, // 0.007407 
                    0x01e5, // 0.007407 
                    0x01e5, // 0.007407 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ras
            case 0x00736172:
            {
                MKV_DATA char  data_chars[8]   = "aiouers";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5cee, // 0.363014 
                    0x365b, // 0.212329 
                    0x32d9, // 0.198630 
                    0x1f90, // 0.123288 
                    0x0fc8, // 0.061644 
                    0x0543, // 0.020548 
                    0x0543, // 0.020548 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rat
            case 0x00746172:
            {
                MKV_DATA char  data_chars[18]   = "hctaispuobekrdwnm";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5186, // 0.318452 
                    0x4000, // 0.250000 
                    0x2c31, // 0.172619 
                    0x130c, // 0.074405 
                    0x0925, // 0.035714 
                    0x0862, // 0.032738 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0492, // 0.017857 
                    0x030c, // 0.011905 
                    0x0249, // 0.008929 
                    0x0186, // 0.005952 
                    0x0186, // 0.005952 
                    0x0186, // 0.005952 
                    0x0186, // 0.005952 
                    0x00c3, // 0.002976 
                    0x00c3, // 0.002976 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // rau
            case 0x00756172:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rav
            case 0x00766172:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // raw
            case 0x00776172:
            {
                MKV_DATA char  data_chars[6]   = "aioeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9715, // 0.590164 
                    0x38a8, // 0.221311 
                    0x192e, // 0.098361 
                    0x12e3, // 0.073770 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ray
            case 0x00796172:
            {
                MKV_DATA char  data_chars[5]   = "aoui";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa08b, // 0.627119 
                    0x2fbb, // 0.186441 
                    0x270d, // 0.152542 
                    0x08ae, // 0.033898 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rba
            case 0x00616272:
            {
                MKV_DATA char  data_chars[4]   = "nls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rbe
            case 0x00656272:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbh
            case 0x00686272:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbl
            case 0x006c6272:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbo
            case 0x006f6272:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbr
            case 0x00726272:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbu
            case 0x00756272:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rca
            case 0x00616372:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rch
            case 0x00686372:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rcl
            case 0x006c6372:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rco
            case 0x006f6372:
            {
                MKV_DATA char  data_chars[4]   = "anp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rcu
            case 0x00756372:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rde
            case 0x00656472:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdi
            case 0x00696472:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdt
            case 0x00746472:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rea
            case 0x00616572:
            {
                MKV_DATA char  data_chars[9]   = "tnkmlous";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rec
            case 0x00636572:
            {
                MKV_DATA char  data_chars[3]   = "ak";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // red
            case 0x00646572:
            {
                MKV_DATA char  data_chars[3]   = "az";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ree
            case 0x00656572:
            {
                MKV_DATA char  data_chars[11]   = "ntdrzksofy";
                MKV_DATA uint16_t data_weights[10] = {
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ref
            case 0x00666572:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // reg
            case 0x00676572:
            {
                MKV_DATA char  data_chars[5]   = "eagi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rei
            case 0x00696572:
            {
                MKV_DATA char  data_chars[4]   = "gny";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rek
            case 0x006b6572:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rel
            case 0x006c6572:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rem
            case 0x006d6572:
            {
                MKV_DATA char  data_chars[5]   = "irbe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ren
            case 0x006e6572:
            {
                MKV_DATA char  data_chars[9]   = "gadueino";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8f5c, // 0.560000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // reo
            case 0x006f6572:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rep
            case 0x00706572:
            {
                MKV_DATA char  data_chars[4]   = "hlu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rer
            case 0x00726572:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // res
            case 0x00736572:
            {
                MKV_DATA char  data_chars[9]   = "taesucoi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x589e, // 0.346154 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ret
            case 0x00746572:
            {
                MKV_DATA char  data_chars[4]   = "osr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // reu
            case 0x00756572:
            {
                MKV_DATA char  data_chars[3]   = "kx";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rev
            case 0x00766572:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rew
            case 0x00776572:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfa
            case 0x00616672:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfe
            case 0x00656672:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfi
            case 0x00696672:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfl
            case 0x006c6672:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfo
            case 0x006f6672:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfr
            case 0x00726672:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfu
            case 0x00756672:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rga
            case 0x00616772:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rgr
            case 0x00726772:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rho
            case 0x006f6872:
            {
                MKV_DATA char  data_chars[3]   = "tu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ria
            case 0x00616972:
            {
                MKV_DATA char  data_chars[8]   = "nomlpkt";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa2e9, // 0.636364 
                    0x1b27, // 0.106061 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rib
            case 0x00626972:
            {
                MKV_DATA char  data_chars[5]   = "ueab";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ric
            case 0x00636972:
            {
                MKV_DATA char  data_chars[7]   = "hotuae";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa666, // 0.650000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rid
            case 0x00646972:
            {
                MKV_DATA char  data_chars[6]   = "aigep";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rie
            case 0x00656972:
            {
                MKV_DATA char  data_chars[4]   = "nos";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rig
            case 0x00676972:
            {
                MKV_DATA char  data_chars[3]   = "hg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rih
            case 0x00686972:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rii
            case 0x00696972:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rik
            case 0x006b6972:
            {
                MKV_DATA char  data_chars[9]   = "ahkotuei";
                MKV_DATA uint16_t data_weights[8] = {
                    0x95db, // 0.585366 
                    0x2577, // 0.146341 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ril
            case 0x006c6972:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rim
            case 0x006d6972:
            {
                MKV_DATA char  data_chars[11]   = "aitueocfkp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rin
            case 0x006e6972:
            {
                MKV_DATA char  data_chars[11]   = "tgadcyiejl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6060, // 0.376471 
                    0x3333, // 0.200000 
                    0x2424, // 0.141176 
                    0x1515, // 0.082353 
                    0x0f0f, // 0.058824 
                    0x0c0c, // 0.047059 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rio
            case 0x006f6972:
            {
                MKV_DATA char  data_chars[4]   = "tdr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rip
            case 0x00706972:
            {
                MKV_DATA char  data_chars[7]   = "huaelt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9555, // 0.583333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rir
            case 0x00726972:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ris
            case 0x00736972:
            {
                MKV_DATA char  data_chars[9]   = "atuoides";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rit
            case 0x00746972:
            {
                MKV_DATA char  data_chars[12]   = "thsaciwdryz";
                MKV_DATA uint16_t data_weights[11] = {
                    0x56b6, // 0.338710 
                    0x4a53, // 0.290323 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // riu
            case 0x00756972:
            {
                MKV_DATA char  data_chars[3]   = "ms";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // riv
            case 0x00766972:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // riw
            case 0x00776972:
            {
                MKV_DATA char  data_chars[6]   = "aoeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // riy
            case 0x00796972:
            {
                MKV_DATA char  data_chars[4]   = "aoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe84c, // 0.907407 
                    0x12f7, // 0.074074 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // riz
            case 0x007a6972:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rje
            case 0x00656a72:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rke
            case 0x00656b72:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkl
            case 0x006c6b72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rks
            case 0x00736b72:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rku
            case 0x00756b72:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkv
            case 0x00766b72:
            {
                return 'i';
            }
            break;

            // rkw
            case 0x00776b72:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rld
            case 0x00646c72:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rli
            case 0x00696c72:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlo
            case 0x006f6c72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlt
            case 0x00746c72:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rma
            case 0x00616d72:
            {
                MKV_DATA char  data_chars[5]   = "nikr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rme
            case 0x00656d72:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rmi
            case 0x00696d72:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmt
            case 0x00746d72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rna
            case 0x00616e72:
            {
                MKV_DATA char  data_chars[4]   = "brt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rnd
            case 0x00646e72:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rne
            case 0x00656e72:
            {
                MKV_DATA char  data_chars[5]   = "orty";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rng
            case 0x00676e72:
            {
                MKV_DATA char  data_chars[6]   = "aoute";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rni
            case 0x00696e72:
            {
                MKV_DATA char  data_chars[5]   = "gnsa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rnl
            case 0x006c6e72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnm
            case 0x006d6e72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rno
            case 0x006f6e72:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnp
            case 0x00706e72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rns
            case 0x00736e72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnt
            case 0x00746e72:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnv
            case 0x00766e72:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnw
            case 0x00776e72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roa
            case 0x00616f72:
            {
                MKV_DATA char  data_chars[3]   = "dk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rob
            case 0x00626f72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roc
            case 0x00636f72:
            {
                MKV_DATA char  data_chars[4]   = "kah";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rod
            case 0x00646f72:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // roe
            case 0x00656f72:
            {
                MKV_DATA char  data_chars[7]   = "nkmtip";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc000, // 0.750000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // roh
            case 0x00686f72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roi
            case 0x00696f72:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roj
            case 0x006a6f72:
            {
                return 'i';
            }
            break;

            // rok
            case 0x006b6f72:
            {
                MKV_DATA char  data_chars[5]   = "fhop";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rol
            case 0x006c6f72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rom
            case 0x006d6f72:
            {
                MKV_DATA char  data_chars[17]   = "mraetplwkndyscob";
                MKV_DATA uint16_t data_weights[16] = {
                    0x5e51, // 0.368421 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x10d8, // 0.065789 
                    0x10d8, // 0.065789 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ron
            case 0x006e6f72:
            {
                MKV_DATA char  data_chars[8]   = "gtbikna";
                MKV_DATA uint16_t data_weights[7] = {
                    0xd730, // 0.840580 
                    0x1643, // 0.086957 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // roo
            case 0x006f6f72:
            {
                MKV_DATA char  data_chars[4]   = "mdk";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rop
            case 0x00706f72:
            {
                MKV_DATA char  data_chars[5]   = "hioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ror
            case 0x00726f72:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ros
            case 0x00736f72:
            {
                MKV_DATA char  data_chars[6]   = "epsta";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rot
            case 0x00746f72:
            {
                MKV_DATA char  data_chars[7]   = "hctsaf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rou
            case 0x00756f72:
            {
                MKV_DATA char  data_chars[5]   = "gdkp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rov
            case 0x00766f72:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // row
            case 0x00776f72:
            {
                MKV_DATA char  data_chars[4]   = "nae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // roy
            case 0x00796f72:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpa
            case 0x00617072:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rph
            case 0x00687072:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpi
            case 0x00697072:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpo
            case 0x006f7072:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rqu
            case 0x00757172:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rra
            case 0x00617272:
            {
                MKV_DATA char  data_chars[8]   = "cyknrst";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rre
            case 0x00657272:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rri
            case 0x00697272:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rrk
            case 0x006b7272:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rro
            case 0x006f7272:
            {
                MKV_DATA char  data_chars[4]   = "wem";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rru
            case 0x00757272:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rrv
            case 0x00767272:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsa
            case 0x00617372:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rse
            case 0x00657372:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsi
            case 0x00697372:
            {
                MKV_DATA char  data_chars[4]   = "drt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rso
            case 0x006f7372:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsw
            case 0x00777372:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rte
            case 0x00657472:
            {
                MKV_DATA char  data_chars[4]   = "rlx";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rth
            case 0x00687472:
            {
                MKV_DATA char  data_chars[7]   = "uwaego";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rti
            case 0x00697472:
            {
                MKV_DATA char  data_chars[5]   = "ceks";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rtm
            case 0x006d7472:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtp
            case 0x00707472:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtr
            case 0x00727472:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtu
            case 0x00757472:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rty
            case 0x00797472:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rua
            case 0x00617572:
            {
                MKV_DATA char  data_chars[9]   = "ntmiepyk";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4f3d, // 0.309524 
                    0x430c, // 0.261905 
                    0x2aab, // 0.166667 
                    0x1e7a, // 0.119048 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rub
            case 0x00627572:
            {
                MKV_DATA char  data_chars[4]   = "aoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ruc
            case 0x00637572:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rue
            case 0x00657572:
            {
                MKV_DATA char  data_chars[11]   = "kanmtdhscp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4ac9, // 0.292135 
                    0x4228, // 0.258427 
                    0x1fa4, // 0.123596 
                    0x1cc4, // 0.112360 
                    0x1142, // 0.067416 
                    0x0b81, // 0.044944 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rug
            case 0x00677572:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ruh
            case 0x00687572:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rui
            case 0x00697572:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ruk
            case 0x006b7572:
            {
                MKV_DATA char  data_chars[6]   = "kahos";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rul
            case 0x006c7572:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rum
            case 0x006d7572:
            {
                MKV_DATA char  data_chars[4]   = "imp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // run
            case 0x006e7572:
            {
                MKV_DATA char  data_chars[17]   = "gotarsiwkdycpnml";
                MKV_DATA uint16_t data_weights[16] = {
                    0x7943, // 0.473684 
                    0x1436, // 0.078947 
                    0x10d8, // 0.065789 
                    0x10d8, // 0.065789 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // rup
            case 0x00707572:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rur
            case 0x00727572:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rus
            case 0x00737572:
            {
                MKV_DATA char  data_chars[5]   = "aiot";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rut
            case 0x00747572:
            {
                MKV_DATA char  data_chars[6]   = "tshda";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ruw
            case 0x00777572:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rux
            case 0x00787572:
            {
                MKV_DATA char  data_chars[3]   = "xn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rva
            case 0x00617672:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rve
            case 0x00657672:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rvi
            case 0x00697672:
            {
                MKV_DATA char  data_chars[5]   = "cenz";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rvo
            case 0x006f7672:
            {
                MKV_DATA char  data_chars[3]   = "ig";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwi
            case 0x00697772:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rxn
            case 0x006e7872:
            {
                MKV_DATA char  data_chars[3]   = "pg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryd
            case 0x00647972:
            {
                MKV_DATA char  data_chars[3]   = "gl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryl
            case 0x006c7972:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryo
            case 0x006f7972:
            {
                MKV_DATA char  data_chars[3]   = "od";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rys
            case 0x00737972:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // r
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 's':
        {
            switch ( trigram_u32 )
            {
            // saa
            case 0x00616173:
            {
                MKV_DATA char  data_chars[5]   = "mnty";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sab
            case 0x00626173:
            {
                MKV_DATA char  data_chars[6]   = "aouyi";
                MKV_DATA uint16_t data_weights[5] = {
                    0xad6b, // 0.677419 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sac
            case 0x00636173:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sad
            case 0x00646173:
            {
                MKV_DATA char  data_chars[6]   = "aoiue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7b14, // 0.480769 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sae
            case 0x00656173:
            {
                MKV_DATA char  data_chars[13]   = "nopalktmswfd";
                MKV_DATA uint16_t data_weights[12] = {
                    0x8348, // 0.512821 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // saf
            case 0x00666173:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sag
            case 0x00676173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sah
            case 0x00686173:
            {
                MKV_DATA char  data_chars[3]   = "aw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf627, // 0.961538 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sai
            case 0x00696173:
            {
                MKV_DATA char  data_chars[14]   = "ynkptlrmhcosd";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3800, // 0.218750 
                    0x2800, // 0.156250 
                    0x2000, // 0.125000 
                    0x1800, // 0.093750 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // sak
            case 0x006b6173:
            {
                MKV_DATA char  data_chars[12]   = "uhaokedrisw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3cb3, // 0.237113 
                    0x3a10, // 0.226804 
                    0x2f81, // 0.185567 
                    0x224f, // 0.134021 
                    0x0d32, // 0.051546 
                    0x0d32, // 0.051546 
                    0x07eb, // 0.030928 
                    0x07eb, // 0.030928 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x02a4, // 0.010309 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // sal
            case 0x006c6173:
            {
                MKV_DATA char  data_chars[9]   = "aiuoenzc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8539, // 0.520408 
                    0x343f, // 0.204082 
                    0x1cbc, // 0.112245 
                    0x1783, // 0.091837 
                    0x0a73, // 0.040816 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sam
            case 0x006d6173:
            {
                MKV_DATA char  data_chars[18]   = "apumirnoklecbsyht";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4ccd, // 0.300000 
                    0x2148, // 0.130000 
                    0x199a, // 0.100000 
                    0x170a, // 0.090000 
                    0x10a4, // 0.065000 
                    0x10a4, // 0.065000 
                    0x0e14, // 0.055000 
                    0x0b85, // 0.045000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x03d7, // 0.015000 
                    0x03d7, // 0.015000 
                    0x028f, // 0.010000 
                    0x0148, // 0.005000 
                    0x0148, // 0.005000 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // san
            case 0x006e6173:
            {
                MKV_DATA char  data_chars[19]   = "gatiuodspcyewkmhrn";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4d65, // 0.302326 
                    0x319d, // 0.193798 
                    0x2aab, // 0.166667 
                    0x0de4, // 0.054264 
                    0x0be8, // 0.046512 
                    0x0aea, // 0.042636 
                    0x08ee, // 0.034884 
                    0x07f0, // 0.031008 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x04f6, // 0.019380 
                    0x03f8, // 0.015504 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x00fe, // 0.003876 
                    0x00fe, // 0.003876 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // sao
            case 0x006f6173:
            {
                MKV_DATA char  data_chars[4]   = "wpt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sap
            case 0x00706173:
            {
                MKV_DATA char  data_chars[11]   = "hpauofstel";
                MKV_DATA uint16_t data_weights[10] = {
                    0x64f5, // 0.394366 
                    0x4482, // 0.267606 
                    0x2ee0, // 0.183099 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // sar
            case 0x00726173:
            {
                MKV_DATA char  data_chars[8]   = "aioeunt";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa860, // 0.657718 
                    0x3543, // 0.208054 
                    0x112e, // 0.067114 
                    0x06df, // 0.026846 
                    0x0528, // 0.020134 
                    0x0370, // 0.013423 
                    0x01b8, // 0.006711 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sas
            case 0x00736173:
            {
                MKV_DATA char  data_chars[5]   = "iuao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sat
            case 0x00746173:
            {
                MKV_DATA char  data_chars[13]   = "htsaoucirewn";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6172, // 0.380645 
                    0x3828, // 0.219355 
                    0x18c6, // 0.096774 
                    0x171f, // 0.090323 
                    0x0b90, // 0.045161 
                    0x09e9, // 0.038710 
                    0x09e9, // 0.038710 
                    0x09e9, // 0.038710 
                    0x069b, // 0.025806 
                    0x034e, // 0.012903 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // sau
            case 0x00756173:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sav
            case 0x00766173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // saw
            case 0x00776173:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xce21, // 0.805195 
                    0x1746, // 0.090909 
                    0x10a0, // 0.064935 
                    0x09f9, // 0.038961 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // say
            case 0x00796173:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdb6e, // 0.857143 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sba
            case 0x00616273:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbe
            case 0x00656273:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbl
            case 0x006c6273:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sca
            case 0x00616373:
            {
                MKV_DATA char  data_chars[5]   = "pdnr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sce
            case 0x00656373:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sch
            case 0x00686373:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sco
            case 0x006f6373:
            {
                MKV_DATA char  data_chars[4]   = "trv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // scr
            case 0x00726373:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // scu
            case 0x00756373:
            {
                MKV_DATA char  data_chars[3]   = "lp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sda
            case 0x00616473:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sde
            case 0x00656473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sdu
            case 0x00756473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sea
            case 0x00616573:
            {
                MKV_DATA char  data_chars[11]   = "snpbfrtvch";
                MKV_DATA uint16_t data_weights[10] = {
                    0x590b, // 0.347826 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // seb
            case 0x00626573:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sec
            case 0x00636573:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sed
            case 0x00646573:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // see
            case 0x00656573:
            {
                MKV_DATA char  data_chars[4]   = "hkn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sef
            case 0x00666573:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sek
            case 0x006b6573:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sel
            case 0x006c6573:
            {
                MKV_DATA char  data_chars[5]   = "aief";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sem
            case 0x006d6573:
            {
                MKV_DATA char  data_chars[4]   = "asr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sen
            case 0x006e6573:
            {
                MKV_DATA char  data_chars[10]   = "astgiyceo";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6000, // 0.375000 
                    0x2800, // 0.156250 
                    0x2800, // 0.156250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // seo
            case 0x006f6573:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ser
            case 0x00726573:
            {
                MKV_DATA char  data_chars[7]   = "iveart";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x5a5a, // 0.352941 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ses
            case 0x00736573:
            {
                MKV_DATA char  data_chars[3]   = "hs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // set
            case 0x00746573:
            {
                MKV_DATA char  data_chars[5]   = "tshu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // seu
            case 0x00756573:
            {
                MKV_DATA char  data_chars[3]   = "mg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sev
            case 0x00766573:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sew
            case 0x00776573:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sha
            case 0x00616873:
            {
                MKV_DATA char  data_chars[7]   = "ndmsvk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // she
            case 0x00656873:
            {
                MKV_DATA char  data_chars[6]   = "rweil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // shi
            case 0x00696873:
            {
                MKV_DATA char  data_chars[6]   = "nrlop";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // shl
            case 0x006c6873:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sho
            case 0x006f6873:
            {
                MKV_DATA char  data_chars[5]   = "raep";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // shu
            case 0x00756873:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sia
            case 0x00616973:
            {
                MKV_DATA char  data_chars[9]   = "nmtokpdl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6276, // 0.384615 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sib
            case 0x00626973:
            {
                MKV_DATA char  data_chars[3]   = "os";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sic
            case 0x00636973:
            {
                MKV_DATA char  data_chars[3]   = "hs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sid
            case 0x00646973:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb6db, // 0.714286 
                    0x30c3, // 0.190476 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sie
            case 0x00656973:
            {
                MKV_DATA char  data_chars[4]   = "now";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sif
            case 0x00666973:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sig
            case 0x00676973:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sih
            case 0x00686973:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sik
            case 0x006b6973:
            {
                MKV_DATA char  data_chars[7]   = "hakeou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sil
            case 0x006c6973:
            {
                MKV_DATA char  data_chars[10]   = "aiovlpqrk";
                MKV_DATA uint16_t data_weights[9] = {
                    0xb4b5, // 0.705882 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sim
            case 0x006d6973:
            {
                MKV_DATA char  data_chars[8]   = "apuimso";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8e39, // 0.555556 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sin
            case 0x006e6973:
            {
                MKV_DATA char  data_chars[13]   = "glatseoucirw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5e51, // 0.368421 
                    0x2f28, // 0.184211 
                    0x2bca, // 0.171053 
                    0x1e51, // 0.118421 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // sio
            case 0x006f6973:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sip
            case 0x00706973:
            {
                MKV_DATA char  data_chars[10]   = "ahsptrobl";
                MKV_DATA uint16_t data_weights[9] = {
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // siq
            case 0x00716973:
            {
                return 'u';
            }
            break;

            // sir
            case 0x00726973:
            {
                MKV_DATA char  data_chars[5]   = "iaeo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x3333, // 0.200000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sis
            case 0x00736973:
            {
                MKV_DATA char  data_chars[4]   = "aui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x86bd, // 0.526316 
                    0x5e51, // 0.368421 
                    0x1af3, // 0.105263 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sit
            case 0x00746973:
            {
                MKV_DATA char  data_chars[9]   = "tahwyiks";
                MKV_DATA uint16_t data_weights[8] = {
                    0x903a, // 0.563380 
                    0x3616, // 0.211268 
                    0x27a9, // 0.154930 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // siv
            case 0x00766973:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // siw
            case 0x00776973:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9697, // 0.588235 
                    0x6969, // 0.411765 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // siy
            case 0x00796973:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ska
            case 0x00616b73:
            {
                MKV_DATA char  data_chars[3]   = "ew";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sky
            case 0x00796b73:
            {
                MKV_DATA char  data_chars[3]   = "vy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sla
            case 0x00616c73:
            {
                MKV_DATA char  data_chars[4]   = "nmo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sle
            case 0x00656c73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sma
            case 0x00616d73:
            {
                MKV_DATA char  data_chars[4]   = "ylr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // smi
            case 0x00696d73:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // smo
            case 0x006f6d73:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // smu
            case 0x00756d73:
            {
                MKV_DATA char  data_chars[3]   = "dt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sna
            case 0x00616e73:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // snc
            case 0x00636e73:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sng
            case 0x00676e73:
            {
                MKV_DATA char  data_chars[6]   = "aiouk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // snn
            case 0x006e6e73:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soa
            case 0x00616f73:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soc
            case 0x00636f73:
            {
                MKV_DATA char  data_chars[3]   = "it";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sod
            case 0x00646f73:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soe
            case 0x00656f73:
            {
                MKV_DATA char  data_chars[8]   = "mtnkpri";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sof
            case 0x00666f73:
            {
                MKV_DATA char  data_chars[3]   = "if";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soi
            case 0x00696f73:
            {
                MKV_DATA char  data_chars[4]   = "dst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sok
            case 0x006b6f73:
            {
                MKV_DATA char  data_chars[6]   = "aehkm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sol
            case 0x006c6f73:
            {
                MKV_DATA char  data_chars[6]   = "iaeou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // som
            case 0x006d6f73:
            {
                MKV_DATA char  data_chars[17]   = "pbmrksdcntaheovw";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3ad0, // 0.229730 
                    0x2298, // 0.135135 
                    0x1837, // 0.094595 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x114c, // 0.067568 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // son
            case 0x006e6f73:
            {
                MKV_DATA char  data_chars[9]   = "gtsreynl";
                MKV_DATA uint16_t data_weights[8] = {
                    0xc1d4, // 0.757143 
                    0x199a, // 0.100000 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // soo
            case 0x006f6f73:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sop
            case 0x00706f73:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf1c7, // 0.944444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sor
            case 0x00726f73:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sos
            case 0x00736f73:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sot
            case 0x00746f73:
            {
                MKV_DATA char  data_chars[5]   = "hets";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sou
            case 0x00756f73:
            {
                MKV_DATA char  data_chars[5]   = "tcry";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sov
            case 0x00766f73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spa
            case 0x00617073:
            {
                MKV_DATA char  data_chars[4]   = "snr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // spe
            case 0x00657073:
            {
                MKV_DATA char  data_chars[5]   = "crna";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // spi
            case 0x00697073:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spl
            case 0x006c7073:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spo
            case 0x006f7073:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spr
            case 0x00727073:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // squ
            case 0x00757173:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sra
            case 0x00617273:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sri
            case 0x00697273:
            {
                MKV_DATA char  data_chars[9]   = "nsptwblr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sro
            case 0x006f7273:
            {
                MKV_DATA char  data_chars[4]   = "eim";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ssa
            case 0x00617373:
            {
                MKV_DATA char  data_chars[7]   = "nrgdkb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ssb
            case 0x00627373:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sse
            case 0x00657373:
            {
                MKV_DATA char  data_chars[4]   = "enr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ssi
            case 0x00697373:
            {
                MKV_DATA char  data_chars[6]   = "cfnoq";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sso
            case 0x006f7373:
            {
                MKV_DATA char  data_chars[4]   = "tmn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sta
            case 0x00617473:
            {
                MKV_DATA char  data_chars[8]   = "trylndu";
                MKV_DATA uint16_t data_weights[7] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // stb
            case 0x00627473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ste
            case 0x00657473:
            {
                MKV_DATA char  data_chars[5]   = "revw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sth
            case 0x00687473:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sti
            case 0x00697473:
            {
                MKV_DATA char  data_chars[7]   = "cngtak";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // stl
            case 0x006c7473:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sto
            case 0x006f7473:
            {
                MKV_DATA char  data_chars[5]   = "nrlm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // str
            case 0x00727473:
            {
                MKV_DATA char  data_chars[5]   = "ieya";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sty
            case 0x00797473:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sua
            case 0x00617573:
            {
                MKV_DATA char  data_chars[9]   = "niptrykm";
                MKV_DATA uint16_t data_weights[8] = {
                    0xb3e4, // 0.702703 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sub
            case 0x00627573:
            {
                MKV_DATA char  data_chars[7]   = "aioswh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // suc
            case 0x00637573:
            {
                MKV_DATA char  data_chars[4]   = "hkc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd2d3, // 0.823529 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sud
            case 0x00647573:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sue
            case 0x00657573:
            {
                MKV_DATA char  data_chars[7]   = "kamnpt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8421, // 0.516129 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sug
            case 0x00677573:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sui
            case 0x00697573:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // suk
            case 0x006b7573:
            {
                MKV_DATA char  data_chars[14]   = "hkasoirucwtly";
                MKV_DATA uint16_t data_weights[13] = {
                    0x8708, // 0.527473 
                    0x21c2, // 0.131868 
                    0x1ef2, // 0.120879 
                    0x10e1, // 0.065934 
                    0x0b41, // 0.043956 
                    0x05a0, // 0.021978 
                    0x05a0, // 0.021978 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // sul
            case 0x006c7573:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sum
            case 0x006d7573:
            {
                MKV_DATA char  data_chars[13]   = "aomebuntpdih";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6492, // 0.392857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // sun
            case 0x006e7573:
            {
                MKV_DATA char  data_chars[20]   = "tagydsbknrvwlopicfe";
                MKV_DATA uint16_t data_weights[19] = {
                    0x5e1e, // 0.367647 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // sup
            case 0x00707573:
            {
                MKV_DATA char  data_chars[8]   = "hpaesbr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8400, // 0.515625 
                    0x3800, // 0.218750 
                    0x2800, // 0.156250 
                    0x1000, // 0.062500 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sur
            case 0x00727573:
            {
                MKV_DATA char  data_chars[5]   = "aiey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x6db7, // 0.428571 
                    0x0db7, // 0.053571 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sus
            case 0x00737573:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sut
            case 0x00747573:
            {
                MKV_DATA char  data_chars[7]   = "thacky";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9794, // 0.592105 
                    0x4d79, // 0.302632 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // suv
            case 0x00767573:
            {
                return 'a';
            }
            break;

            // suw
            case 0x00777573:
            {
                MKV_DATA char  data_chars[5]   = "aino";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdb6e, // 0.857143 
                    0x1862, // 0.095238 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // suy
            case 0x00797573:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swa
            case 0x00617773:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swi
            case 0x00697773:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swr
            case 0x00727773:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syl
            case 0x006c7973:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syn
            case 0x006e7973:
            {
                MKV_DATA char  data_chars[4]   = "ces";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // s
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 't':
        {
            switch ( trigram_u32 )
            {
            // taa
            case 0x00616174:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tab
            case 0x00626174:
            {
                MKV_DATA char  data_chars[7]   = "auoeil";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5295, // 0.322581 
                    0x4211, // 0.258065 
                    0x39ce, // 0.225806 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tac
            case 0x00636174:
            {
                MKV_DATA char  data_chars[4]   = "hou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd2d3, // 0.823529 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tad
            case 0x00646174:
            {
                MKV_DATA char  data_chars[6]   = "iaeko";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tae
            case 0x00656174:
            {
                MKV_DATA char  data_chars[6]   = "nkmov";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // taf
            case 0x00666174:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tag
            case 0x00676174:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tah
            case 0x00686174:
            {
                MKV_DATA char  data_chars[8]   = "oruaeik";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tai
            case 0x00696174:
            {
                MKV_DATA char  data_chars[8]   = "nlrhmpy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tak
            case 0x006b6174:
            {
                MKV_DATA char  data_chars[15]   = "hruaikolesdmwt";
                MKV_DATA uint16_t data_weights[14] = {
                    0x64a6, // 0.393162 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1812, // 0.094017 
                    0x15e1, // 0.085470 
                    0x0af1, // 0.042735 
                    0x0af1, // 0.042735 
                    0x08c1, // 0.034188 
                    0x0690, // 0.025641 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // tal
            case 0x006c6174:
            {
                MKV_DATA char  data_chars[8]   = "uaioeks";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5000, // 0.312500 
                    0x4aab, // 0.291667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tam
            case 0x006d6174:
            {
                MKV_DATA char  data_chars[14]   = "auornimlbyeps";
                MKV_DATA uint16_t data_weights[13] = {
                    0x56db, // 0.339286 
                    0x2000, // 0.125000 
                    0x1b6e, // 0.107143 
                    0x16db, // 0.089286 
                    0x16db, // 0.089286 
                    0x1249, // 0.071429 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // tan
            case 0x006e6174:
            {
                MKV_DATA char  data_chars[15]   = "agotiuyrmdjnsk";
                MKV_DATA uint16_t data_weights[14] = {
                    0x862e, // 0.524138 
                    0x2fab, // 0.186207 
                    0x1530, // 0.082759 
                    0x0a98, // 0.041379 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x0388, // 0.013793 
                    0x0388, // 0.013793 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // tao
            case 0x006f6174:
            {
                MKV_DATA char  data_chars[3]   = "dh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tap
            case 0x00706174:
            {
                MKV_DATA char  data_chars[8]   = "haiorut";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa56a, // 0.646154 
                    0x3333, // 0.200000 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tar
            case 0x00726174:
            {
                MKV_DATA char  data_chars[11]   = "anioukswby";
                MKV_DATA uint16_t data_weights[10] = {
                    0xd75d, // 0.841270 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0618, // 0.023810 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                    0x0208, // 0.007937 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // tas
            case 0x00736174:
            {
                MKV_DATA char  data_chars[8]   = "aieotuy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tat
            case 0x00746174:
            {
                MKV_DATA char  data_chars[9]   = "hiuteaks";
                MKV_DATA uint16_t data_weights[8] = {
                    0x78e4, // 0.472222 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tau
            case 0x00756174:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tav
            case 0x00766174:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // taw
            case 0x00776174:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xac68, // 0.673469 
                    0x2492, // 0.142857 
                    0x1f59, // 0.122449 
                    0x0fac, // 0.061224 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tay
            case 0x00796174:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf22a, // 0.945946 
                    0x0dd6, // 0.054054 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // taz
            case 0x007a6174:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tba
            case 0x00616274:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbe
            case 0x00656274:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbo
            case 0x006f6274:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbu
            case 0x00756274:
            {
                MKV_DATA char  data_chars[3]   = "rm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tch
            case 0x00686374:
            {
                MKV_DATA char  data_chars[8]   = "aiouebv";
                MKV_DATA uint16_t data_weights[7] = {
                    0xdc1d, // 0.859813 
                    0x17ed, // 0.093458 
                    0x04c9, // 0.018692 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0132, // 0.004673 
                    0x0132, // 0.004673 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tcl
            case 0x006c6374:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tda
            case 0x00616474:
            {
                MKV_DATA char  data_chars[6]   = "remin";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tdh
            case 0x00686474:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tdi
            case 0x00696474:
            {
                MKV_DATA char  data_chars[4]   = "nkd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tdo
            case 0x006f6474:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tea
            case 0x00616574:
            {
                MKV_DATA char  data_chars[4]   = "ukn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tec
            case 0x00636574:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tee
            case 0x00656574:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tej
            case 0x006a6574:
            {
                return 'a';
            }
            break;

            // tek
            case 0x006b6574:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tel
            case 0x006c6574:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tem
            case 0x006d6574:
            {
                MKV_DATA char  data_chars[5]   = "paiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ten
            case 0x006e6574:
            {
                MKV_DATA char  data_chars[4]   = "gtf";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // teo
            case 0x006f6574:
            {
                MKV_DATA char  data_chars[3]   = "mk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ter
            case 0x00726574:
            {
                MKV_DATA char  data_chars[10]   = "fnracmegy";
                MKV_DATA uint16_t data_weights[9] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // tes
            case 0x00736574:
            {
                MKV_DATA char  data_chars[4]   = "cru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tet
            case 0x00746574:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tev
            case 0x00766574:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tew
            case 0x00776574:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tex
            case 0x00786574:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfa
            case 0x00616674:
            {
                MKV_DATA char  data_chars[3]   = "ni";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tha
            case 0x00616874:
            {
                MKV_DATA char  data_chars[21]   = "mnrywitkplscbeovhdua";
                MKV_DATA uint16_t data_weights[20] = {
                    0x3b48, // 0.231563 
                    0x2d4f, // 0.176991 
                    0x2a1a, // 0.164454 
                    0x185b, // 0.095133 
                    0x0fdc, // 0.061947 
                    0x0be5, // 0.046460 
                    0x0b84, // 0.044985 
                    0x0b23, // 0.043510 
                    0x069c, // 0.025811 
                    0x063b, // 0.024336 
                    0x04b8, // 0.018437 
                    0x0488, // 0.017699 
                    0x0458, // 0.016962 
                    0x0366, // 0.013274 
                    0x02d5, // 0.011062 
                    0x0091, // 0.002212 
                    0x0091, // 0.002212 
                    0x0061, // 0.001475 
                    0x0030, // 0.000737 
                    0x0030, // 0.000737 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // thc
            case 0x00636874:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // the
            case 0x00656874:
            {
                MKV_DATA char  data_chars[11]   = "pwtnrksoei";
                MKV_DATA uint16_t data_weights[10] = {
                    0x71fc, // 0.445255 
                    0x380f, // 0.218978 
                    0x166c, // 0.087591 
                    0x148e, // 0.080292 
                    0x12b0, // 0.072993 
                    0x0b36, // 0.043796 
                    0x059b, // 0.021898 
                    0x03bd, // 0.014599 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // thg
            case 0x00676874:
            {
                return 'a';
            }
            break;

            // thi
            case 0x00696874:
            {
                MKV_DATA char  data_chars[17]   = "tpknwayrsmcdbolu";
                MKV_DATA uint16_t data_weights[16] = {
                    0x2c4a, // 0.173010 
                    0x26fa, // 0.152249 
                    0x1a93, // 0.103806 
                    0x1542, // 0.083045 
                    0x1542, // 0.083045 
                    0x137d, // 0.076125 
                    0x129a, // 0.072664 
                    0x11b7, // 0.069204 
                    0x0d4a, // 0.051903 
                    0x0716, // 0.027682 
                    0x0633, // 0.024221 
                    0x0633, // 0.024221 
                    0x0551, // 0.020761 
                    0x0551, // 0.020761 
                    0x02a8, // 0.010381 
                    0x01c6, // 0.006920 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // thk
            case 0x006b6874:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thl
            case 0x006c6874:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thm
            case 0x006d6874:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thn
            case 0x006e6874:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tho
            case 0x006f6874:
            {
                MKV_DATA char  data_chars[12]   = "nemtrukplwi";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8ded, // 0.554404 
                    0x168d, // 0.088083 
                    0x168d, // 0.088083 
                    0x13e5, // 0.077720 
                    0x1292, // 0.072539 
                    0x07f5, // 0.031088 
                    0x07f5, // 0.031088 
                    0x03fb, // 0.015544 
                    0x03fb, // 0.015544 
                    0x03fb, // 0.015544 
                    0x02a7, // 0.010363 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // thp
            case 0x00706874:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thr
            case 0x00726874:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0xca82, // 0.791045 
                    0x16ed, // 0.089552 
                    0x16ed, // 0.089552 
                    0x07a4, // 0.029851 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ths
            case 0x00736874:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tht
            case 0x00746874:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thu
            case 0x00756874:
            {
                MKV_DATA char  data_chars[15]   = "menarlktwpdcbi";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4c9d, // 0.299270 
                    0x3631, // 0.211679 
                    0x21a3, // 0.131387 
                    0x166c, // 0.087591 
                    0x166c, // 0.087591 
                    0x0b36, // 0.043796 
                    0x0958, // 0.036496 
                    0x059b, // 0.021898 
                    0x059b, // 0.021898 
                    0x059b, // 0.021898 
                    0x03bd, // 0.014599 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                    0x01de, // 0.007299 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // thw
            case 0x00776874:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thx
            case 0x00786874:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thy
            case 0x00796874:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tia
            case 0x00616974:
            {
                MKV_DATA char  data_chars[7]   = "noltmp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tib
            case 0x00626974:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tic
            case 0x00636974:
            {
                MKV_DATA char  data_chars[4]   = "aho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tid
            case 0x00646974:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tie
            case 0x00656974:
            {
                MKV_DATA char  data_chars[4]   = "nor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tig
            case 0x00676974:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tih
            case 0x00686974:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tik
            case 0x006b6974:
            {
                MKV_DATA char  data_chars[5]   = "ahko";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x3333, // 0.200000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // til
            case 0x006c6974:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tim
            case 0x006d6974:
            {
                MKV_DATA char  data_chars[4]   = "aeb";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tin
            case 0x006e6974:
            {
                MKV_DATA char  data_chars[11]   = "gaiekuynot";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6c4f, // 0.423077 
                    0x313b, // 0.192308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // tio
            case 0x006f6974:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tip
            case 0x00706974:
            {
                MKV_DATA char  data_chars[5]   = "hacv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tiq
            case 0x00716974:
            {
                return 'u';
            }
            break;

            // tir
            case 0x00726974:
            {
                MKV_DATA char  data_chars[4]   = "auo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tis
            case 0x00736974:
            {
                MKV_DATA char  data_chars[7]   = "atueho";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tit
            case 0x00746974:
            {
                MKV_DATA char  data_chars[8]   = "htoilsu";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa762, // 0.653846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tiv
            case 0x00766974:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tiw
            case 0x00776974:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tiy
            case 0x00796974:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf287, // 0.947368 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tka
            case 0x00616b74:
            {
                MKV_DATA char  data_chars[6]   = "rweno";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tkh
            case 0x00686b74:
            {
                MKV_DATA char  data_chars[5]   = "eauo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tki
            case 0x00696b74:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tkl
            case 0x006c6b74:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tkr
            case 0x00726b74:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tla
            case 0x00616c74:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tle
            case 0x00656c74:
            {
                MKV_DATA char  data_chars[3]   = "hm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tlo
            case 0x006f6c74:
            {
                MKV_DATA char  data_chars[3]   = "em";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tlu
            case 0x00756c74:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tma
            case 0x00616d74:
            {
                MKV_DATA char  data_chars[5]   = "ntwl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tme
            case 0x00656d74:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmo
            case 0x006f6d74:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmu
            case 0x00756d74:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tna
            case 0x00616e74:
            {
                MKV_DATA char  data_chars[4]   = "mtr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tng
            case 0x00676e74:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tni
            case 0x00696e74:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tnu
            case 0x00756e74:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toa
            case 0x00616f74:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toc
            case 0x00636f74:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toe
            case 0x00656f74:
            {
                MKV_DATA char  data_chars[9]   = "inklmpty";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tog
            case 0x00676f74:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toh
            case 0x00686f74:
            {
                MKV_DATA char  data_chars[3]   = "ks";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toi
            case 0x00696f74:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tok
            case 0x006b6f74:
            {
                MKV_DATA char  data_chars[4]   = "hty";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tol
            case 0x006c6f74:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tom
            case 0x006d6f74:
            {
                MKV_DATA char  data_chars[3]   = "ms";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ton
            case 0x006e6f74:
            {
                MKV_DATA char  data_chars[13]   = "gyetcsndoabi";
                MKV_DATA uint16_t data_weights[12] = {
                    0x90b2, // 0.565217 
                    0x1bd3, // 0.108696 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // top
            case 0x00706f74:
            {
                MKV_DATA char  data_chars[4]   = "ils";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tor
            case 0x00726f74:
            {
                MKV_DATA char  data_chars[4]   = "iya";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa2e9, // 0.636364 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tos
            case 0x00736f74:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tot
            case 0x00746f74:
            {
                MKV_DATA char  data_chars[3]   = "hu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tou
            case 0x00756f74:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tow
            case 0x00776f74:
            {
                MKV_DATA char  data_chars[4]   = "nea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tpa
            case 0x00617074:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tph
            case 0x00687074:
            {
                MKV_DATA char  data_chars[4]   = "aro";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tpo
            case 0x006f7074:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpr
            case 0x00727074:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tra
            case 0x00617274:
            {
                MKV_DATA char  data_chars[18]   = "kirwtpsnmdevlbocu";
                MKV_DATA uint16_t data_weights[17] = {
                    0x2e20, // 0.180180 
                    0x24e7, // 0.144144 
                    0x1dfb, // 0.117117 
                    0x14c2, // 0.081081 
                    0x1273, // 0.072072 
                    0x1025, // 0.063063 
                    0x0dd6, // 0.054054 
                    0x0b88, // 0.045045 
                    0x0b88, // 0.045045 
                    0x0b88, // 0.045045 
                    0x093a, // 0.036036 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x049d, // 0.018018 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // tre
            case 0x00657274:
            {
                MKV_DATA char  data_chars[7]   = "eanltk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tri
            case 0x00697274:
            {
                MKV_DATA char  data_chars[17]   = "actunprmbksowgli";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4000, // 0.250000 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // trn
            case 0x006e7274:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tro
            case 0x006f7274:
            {
                MKV_DATA char  data_chars[9]   = "pnlkceim";
                MKV_DATA uint16_t data_weights[8] = {
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tru
            case 0x00757274:
            {
                MKV_DATA char  data_chars[10]   = "aetcnrsim";
                MKV_DATA uint16_t data_weights[9] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // trx
            case 0x00787274:
            {
                return 'n';
            }
            break;

            // try
            case 0x00797274:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsa
            case 0x00617374:
            {
                MKV_DATA char  data_chars[16]   = "ndlrtmkybwipchs";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3ccd, // 0.237500 
                    0x2800, // 0.156250 
                    0x24cd, // 0.143750 
                    0x1800, // 0.093750 
                    0x1666, // 0.087500 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x04cd, // 0.018750 
                    0x04cd, // 0.018750 
                    0x0333, // 0.012500 
                    0x019a, // 0.006250 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // tse
            case 0x00657374:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsi
            case 0x00697374:
            {
                MKV_DATA char  data_chars[6]   = "npdtk";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tsl
            case 0x006c7374:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tso
            case 0x006f7374:
            {
                MKV_DATA char  data_chars[4]   = "nlm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tsu
            case 0x00757374:
            {
                MKV_DATA char  data_chars[5]   = "ekwt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tta
            case 0x00617474:
            {
                MKV_DATA char  data_chars[15]   = "nrypwtmkcsbghi";
                MKV_DATA uint16_t data_weights[14] = {
                    0x52d3, // 0.323529 
                    0x2d2d, // 0.176471 
                    0x2121, // 0.129412 
                    0x1697, // 0.088235 
                    0x1515, // 0.082353 
                    0x0a8b, // 0.041176 
                    0x0909, // 0.035294 
                    0x0909, // 0.035294 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                    0x0485, // 0.017647 
                    0x0303, // 0.011765 
                    0x0182, // 0.005882 
                    0x0182, // 0.005882 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // tte
            case 0x00657474:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tth
            case 0x00687474:
            {
                MKV_DATA char  data_chars[8]   = "aiorent";
                MKV_DATA uint16_t data_weights[7] = {
                    0xc419, // 0.766004 
                    0x2f78, // 0.185430 
                    0x05a7, // 0.022075 
                    0x0516, // 0.019868 
                    0x0091, // 0.002208 
                    0x0091, // 0.002208 
                    0x0091, // 0.002208 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tti
            case 0x00697474:
            {
                MKV_DATA char  data_chars[11]   = "ktnywapcsh";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5f16, // 0.371429 
                    0x2be3, // 0.171429 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ttl
            case 0x006c7474:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tto
            case 0x006f7474:
            {
                MKV_DATA char  data_chars[4]   = "nte";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ttr
            case 0x00727474:
            {
                MKV_DATA char  data_chars[5]   = "aieu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ttt
            case 0x00747474:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ttu
            case 0x00757474:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tty
            case 0x00797474:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tua
            case 0x00617574:
            {
                MKV_DATA char  data_chars[8]   = "ntlmryi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tub
            case 0x00627574:
            {
                MKV_DATA char  data_chars[3]   = "uk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tuc
            case 0x00637574:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tud
            case 0x00647574:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tue
            case 0x00657574:
            {
                MKV_DATA char  data_chars[7]   = "npaktm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tuh
            case 0x00687574:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tui
            case 0x00697574:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tuk
            case 0x006b7574:
            {
                MKV_DATA char  data_chars[7]   = "ahkouw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tul
            case 0x006c7574:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tum
            case 0x006d7574:
            {
                MKV_DATA char  data_chars[7]   = "pbtahn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tun
            case 0x006e7574:
            {
                MKV_DATA char  data_chars[8]   = "gaekmno";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7777, // 0.466667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tup
            case 0x00707574:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tur
            case 0x00727574:
            {
                MKV_DATA char  data_chars[5]   = "aeiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tus
            case 0x00737574:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tut
            case 0x00747574:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tuw
            case 0x00777574:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tuy
            case 0x00797574:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twa
            case 0x00617774:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twe
            case 0x00657774:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twi
            case 0x00697774:
            {
                MKV_DATA char  data_chars[4]   = "tnm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // two
            case 0x006f7774:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tya
            case 0x00617974:
            {
                MKV_DATA char  data_chars[4]   = "rki";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tyl
            case 0x006c7974:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // typ
            case 0x00707974:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tzz
            case 0x007a7a74:
            {
                MKV_DATA char  data_chars[3]   = "za";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // t
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'u':
        {
            switch ( trigram_u32 )
            {
            // uab
            case 0x00626175:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uac
            case 0x00636175:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uae
            case 0x00656175:
            {
                MKV_DATA char  data_chars[4]   = "nkt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uah
            case 0x00686175:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uai
            case 0x00696175:
            {
                MKV_DATA char  data_chars[7]   = "sptwcm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // uak
            case 0x006b6175:
            {
                MKV_DATA char  data_chars[3]   = "lu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ual
            case 0x006c6175:
            {
                MKV_DATA char  data_chars[4]   = "oui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uam
            case 0x006d6175:
            {
                MKV_DATA char  data_chars[5]   = "camp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uan
            case 0x006e6175:
            {
                MKV_DATA char  data_chars[13]   = "gcptysnkblim";
                MKV_DATA uint16_t data_weights[12] = {
                    0xc000, // 0.750000 
                    0x0ec5, // 0.057692 
                    0x0c4f, // 0.048077 
                    0x0762, // 0.028846 
                    0x0762, // 0.028846 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // uap
            case 0x00706175:
            {
                MKV_DATA char  data_chars[4]   = "ahk";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uar
            case 0x00726175:
            {
                MKV_DATA char  data_chars[9]   = "iatnydeo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uat
            case 0x00746175:
            {
                MKV_DATA char  data_chars[3]   = "hm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uaw
            case 0x00776175:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uay
            case 0x00796175:
            {
                MKV_DATA char  data_chars[3]   = "ak";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uba
            case 0x00616275:
            {
                MKV_DATA char  data_chars[4]   = "nae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdb6e, // 0.857143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ube
            case 0x00656275:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubh
            case 0x00686275:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubi
            case 0x00696275:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubk
            case 0x006b6275:
            {
                return 'a';
            }
            break;

            // ubl
            case 0x006c6275:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubo
            case 0x006f6275:
            {
                MKV_DATA char  data_chars[7]   = "nstyil";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8ba3, // 0.545455 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ubs
            case 0x00736275:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubu
            case 0x00756275:
            {
                MKV_DATA char  data_chars[6]   = "rsten";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ubw
            case 0x00776275:
            {
                return 'a';
            }
            break;

            // ucc
            case 0x00636375:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uch
            case 0x00686375:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7712, // 0.465116 
                    0x6b2a, // 0.418605 
                    0x1dc4, // 0.116279 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uck
            case 0x006b6375:
            {
                MKV_DATA char  data_chars[5]   = "saey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ucn
            case 0x006e6375:
            {
                return 'g';
            }
            break;

            // uco
            case 0x006f6375:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uda
            case 0x00616475:
            {
                MKV_DATA char  data_chars[6]   = "rclwi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // udd
            case 0x00646475:
            {
                MKV_DATA char  data_chars[4]   = "hiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // udg
            case 0x00676475:
            {
                return 'e';
            }
            break;

            // udh
            case 0x00686475:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udi
            case 0x00696475:
            {
                MKV_DATA char  data_chars[4]   = "nsa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // udo
            case 0x006f6475:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udr
            case 0x00726475:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udu
            case 0x00756475:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uea
            case 0x00616575:
            {
                MKV_DATA char  data_chars[10]   = "nkimtgwpv";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8000, // 0.500000 
                    0x295b, // 0.161538 
                    0x217a, // 0.130769 
                    0x15a9, // 0.084615 
                    0x13b1, // 0.076923 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ueb
            case 0x00626575:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uec
            case 0x00636575:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ued
            case 0x00646575:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uee
            case 0x00656575:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ueh
            case 0x00686575:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uek
            case 0x006b6575:
            {
                MKV_DATA char  data_chars[7]   = "shkwrt";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa7b9, // 0.655172 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // uel
            case 0x006c6575:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uem
            case 0x006d6575:
            {
                MKV_DATA char  data_chars[5]   = "ioau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uen
            case 0x006e6575:
            {
                MKV_DATA char  data_chars[9]   = "gacrsyil";
                MKV_DATA uint16_t data_weights[8] = {
                    0xe0dd, // 0.878378 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uep
            case 0x00706575:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uer
            case 0x00726575:
            {
                MKV_DATA char  data_chars[4]   = "aot";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ues
            case 0x00736575:
            {
                MKV_DATA char  data_chars[6]   = "itaou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uet
            case 0x00746575:
            {
                MKV_DATA char  data_chars[7]   = "htprac";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // uew
            case 0x00776575:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uga
            case 0x00616775:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uge
            case 0x00656775:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugu
            case 0x00756775:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uha
            case 0x00616875:
            {
                MKV_DATA char  data_chars[4]   = "rno";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uhi
            case 0x00696875:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uho
            case 0x006f6875:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uhu
            case 0x00756875:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uib
            case 0x00626975:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uic
            case 0x00636975:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uid
            case 0x00646975:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uil
            case 0x006c6975:
            {
                MKV_DATA char  data_chars[4]   = "adi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uis
            case 0x00736975:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uit
            case 0x00746975:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uka
            case 0x00616b75:
            {
                MKV_DATA char  data_chars[8]   = "rnewclt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ukc
            case 0x00636b75:
            {
                return 'h';
            }
            break;

            // ukd
            case 0x00646b75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uke
            case 0x00656b75:
            {
                MKV_DATA char  data_chars[3]   = "tk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukh
            case 0x00686b75:
            {
                MKV_DATA char  data_chars[8]   = "aruoeil";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x38e4, // 0.222222 
                    0x24fa, // 0.144444 
                    0x2222, // 0.133333 
                    0x0e39, // 0.055556 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // uki
            case 0x00696b75:
            {
                MKV_DATA char  data_chars[3]   = "tm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukk
            case 0x006b6b75:
            {
                MKV_DATA char  data_chars[4]   = "hao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb26d, // 0.696970 
                    0x3e10, // 0.242424 
                    0x0f84, // 0.060606 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ukl
            case 0x006c6b75:
            {
                MKV_DATA char  data_chars[3]   = "uo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uko
            case 0x006f6b75:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukp
            case 0x00706b75:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukr
            case 0x00726b75:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uks
            case 0x00736b75:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ukt
            case 0x00746b75:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uku
            case 0x00756b75:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ukw
            case 0x00776b75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uky
            case 0x00796b75:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ula
            case 0x00616c75:
            {
                MKV_DATA char  data_chars[12]   = "onkrlpybems";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3bbc, // 0.233333 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ulc
            case 0x00636c75:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uld
            case 0x00646c75:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ule
            case 0x00656c75:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uli
            case 0x00696c75:
            {
                MKV_DATA char  data_chars[5]   = "pant";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ull
            case 0x006c6c75:
            {
                MKV_DATA char  data_chars[4]   = "ima";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ulo
            case 0x006f6c75:
            {
                MKV_DATA char  data_chars[3]   = "nk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulp
            case 0x00706c75:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ult
            case 0x00746c75:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulu
            case 0x00756c75:
            {
                MKV_DATA char  data_chars[6]   = "enpak";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uma
            case 0x00616d75:
            {
                MKV_DATA char  data_chars[6]   = "nrlth";
                MKV_DATA uint16_t data_weights[5] = {
                    0xad6b, // 0.677419 
                    0x294a, // 0.161290 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // umb
            case 0x00626d75:
            {
                MKV_DATA char  data_chars[6]   = "oaelu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // umc
            case 0x00636d75:
            {
                return 'h';
            }
            break;

            // umd
            case 0x00646d75:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ume
            case 0x00656d75:
            {
                MKV_DATA char  data_chars[4]   = "nrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umh
            case 0x00686d75:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umi
            case 0x00696d75:
            {
                MKV_DATA char  data_chars[10]   = "pntbkrswy";
                MKV_DATA uint16_t data_weights[9] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // umk
            case 0x006b6d75:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uml
            case 0x006c6d75:
            {
                MKV_DATA char  data_chars[5]   = "aeou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // umm
            case 0x006d6d75:
            {
                MKV_DATA char  data_chars[5]   = "aieu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbca2, // 0.736842 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // umn
            case 0x006e6d75:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umo
            case 0x006f6d75:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ump
            case 0x00706d75:
            {
                MKV_DATA char  data_chars[7]   = "hoaiur";
                MKV_DATA uint16_t data_weights[6] = {
                    0xbca2, // 0.736842 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // umr
            case 0x00726d75:
            {
                MKV_DATA char  data_chars[4]   = "uai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ums
            case 0x00736d75:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umt
            case 0x00746d75:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umu
            case 0x00756d75:
            {
                MKV_DATA char  data_chars[4]   = "int";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umv
            case 0x00766d75:
            {
                return 'i';
            }
            break;

            // umw
            case 0x00776d75:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // una
            case 0x00616e75:
            {
                MKV_DATA char  data_chars[11]   = "rnwkmstilp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x471c, // 0.277778 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // unb
            case 0x00626e75:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unc
            case 0x00636e75:
            {
                MKV_DATA char  data_chars[4]   = "hit";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // und
            case 0x00646e75:
            {
                MKV_DATA char  data_chars[5]   = "ahei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // une
            case 0x00656e75:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unf
            case 0x00666e75:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ung
            case 0x00676e75:
            {
                MKV_DATA char  data_chars[14]   = "stkraclewoydp";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // unh
            case 0x00686e75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uni
            case 0x00696e75:
            {
                MKV_DATA char  data_chars[9]   = "tckwqvno";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // unk
            case 0x006b6e75:
            {
                MKV_DATA char  data_chars[4]   = "ael";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unl
            case 0x006c6e75:
            {
                MKV_DATA char  data_chars[6]   = "aouei";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa1af, // 0.631579 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unm
            case 0x006d6e75:
            {
                MKV_DATA char  data_chars[4]   = "aui";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unn
            case 0x006e6e75:
            {
                MKV_DATA char  data_chars[7]   = "aoipye";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9c72, // 0.611111 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // uno
            case 0x006f6e75:
            {
                MKV_DATA char  data_chars[4]   = "tni";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unp
            case 0x00706e75:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unr
            case 0x00726e75:
            {
                MKV_DATA char  data_chars[5]   = "auio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uns
            case 0x00736e75:
            {
                MKV_DATA char  data_chars[7]   = "aoiueh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // unt
            case 0x00746e75:
            {
                MKV_DATA char  data_chars[6]   = "hariy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd49c, // 0.830508 
                    0x15b2, // 0.084746 
                    0x0d04, // 0.050847 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unu
            case 0x00756e75:
            {
                MKV_DATA char  data_chars[4]   = "nst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unv
            case 0x00766e75:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unw
            case 0x00776e75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uny
            case 0x00796e75:
            {
                MKV_DATA char  data_chars[6]   = "aiouy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xe453, // 0.891892 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // upa
            case 0x00617075:
            {
                MKV_DATA char  data_chars[7]   = "tnrlsk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8d3e, // 0.551724 
                    0x2c23, // 0.172414 
                    0x2c23, // 0.172414 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // upb
            case 0x00627075:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upe
            case 0x00657075:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uph
            case 0x00687075:
            {
                MKV_DATA char  data_chars[6]   = "aiour";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc235, // 0.758621 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // upi
            case 0x00697075:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upl
            case 0x006c7075:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upm
            case 0x006d7075:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upp
            case 0x00707075:
            {
                MKV_DATA char  data_chars[5]   = "haro";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8c31, // 0.547619 
                    0x5b6e, // 0.357143 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // upr
            case 0x00727075:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ups
            case 0x00737075:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upt
            case 0x00747075:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upu
            case 0x00757075:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ura
            case 0x00617275:
            {
                MKV_DATA char  data_chars[16]   = "nptkmcrslwiohdb";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3bd0, // 0.233645 
                    0x2b11, // 0.168224 
                    0x28ac, // 0.158879 
                    0x23e3, // 0.140187 
                    0x0e5b, // 0.056075 
                    0x0bf6, // 0.046729 
                    0x0992, // 0.037383 
                    0x0992, // 0.037383 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // urb
            case 0x00627275:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urc
            case 0x00637275:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ure
            case 0x00657275:
            {
                MKV_DATA char  data_chars[6]   = "ealns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uri
            case 0x00697275:
            {
                MKV_DATA char  data_chars[13]   = "nytwrmapcvks";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4646, // 0.274510 
                    0x4141, // 0.254902 
                    0x1e1e, // 0.117647 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // urn
            case 0x006e7275:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uro
            case 0x006f7275:
            {
                MKV_DATA char  data_chars[7]   = "tmnrsi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // urp
            case 0x00707275:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urr
            case 0x00727275:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urs
            case 0x00737275:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urt
            case 0x00747275:
            {
                MKV_DATA char  data_chars[3]   = "hy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uru
            case 0x00757275:
            {
                MKV_DATA char  data_chars[7]   = "mntrsk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // urv
            case 0x00767275:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urw
            case 0x00777275:
            {
                return 'i';
            }
            break;

            // ury
            case 0x00797275:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usa
            case 0x00617375:
            {
                MKV_DATA char  data_chars[11]   = "twkmnrpohl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // usc
            case 0x00637375:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // use
            case 0x00657375:
            {
                MKV_DATA char  data_chars[6]   = "stufn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // usi
            case 0x00697375:
            {
                MKV_DATA char  data_chars[6]   = "tvnco";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // usl
            case 0x006c7375:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uso
            case 0x006f7375:
            {
                MKV_DATA char  data_chars[4]   = "nei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf287, // 0.947368 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uss
            case 0x00737375:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ust
            case 0x00747375:
            {
                MKV_DATA char  data_chars[7]   = "orbehi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // usu
            case 0x00757375:
            {
                MKV_DATA char  data_chars[3]   = "mp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uta
            case 0x00617475:
            {
                MKV_DATA char  data_chars[10]   = "nrkmpwhio";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // utc
            case 0x00637475:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utd
            case 0x00647475:
            {
                MKV_DATA char  data_chars[5]   = "iaou";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ute
            case 0x00657475:
            {
                MKV_DATA char  data_chars[3]   = "hp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uth
            case 0x00687475:
            {
                MKV_DATA char  data_chars[9]   = "aioeursc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8b57, // 0.544304 
                    0x309c, // 0.189873 
                    0x19ed, // 0.101266 
                    0x1371, // 0.075949 
                    0x0cf6, // 0.050633 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uti
            case 0x00697475:
            {
                MKV_DATA char  data_chars[7]   = "qcmnov";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // utk
            case 0x006b7475:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utm
            case 0x006d7475:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utn
            case 0x006e7475:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uto
            case 0x006f7475:
            {
                MKV_DATA char  data_chars[5]   = "npek";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // utp
            case 0x00707475:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utr
            case 0x00727475:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uts
            case 0x00737475:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf685, // 0.962963 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utt
            case 0x00747475:
            {
                MKV_DATA char  data_chars[7]   = "hairoe";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc8af, // 0.783920 
                    0x2405, // 0.140704 
                    0x07b8, // 0.030151 
                    0x07b8, // 0.030151 
                    0x0293, // 0.010050 
                    0x0149, // 0.005025 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // utu
            case 0x00757475:
            {
                MKV_DATA char  data_chars[3]   = "kr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uty
            case 0x00797475:
            {
                MKV_DATA char  data_chars[3]   = "al";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uub
            case 0x00627575:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uva
            case 0x00617675:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uwa
            case 0x00617775:
            {
                MKV_DATA char  data_chars[9]   = "ntrdekpb";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbdcb, // 0.741379 
                    0x1a7c, // 0.103448 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // uwe
            case 0x00657775:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uwi
            case 0x00697775:
            {
                MKV_DATA char  data_chars[6]   = "ntrcm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uwn
            case 0x006e7775:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uwo
            case 0x006f7775:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxn
            case 0x006e7875:
            {
                MKV_DATA char  data_chars[3]   = "gp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxo
            case 0x006f7875:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxu
            case 0x00757875:
            {
                return 'r';
            }
            break;

            // uxv
            case 0x00767875:
            {
                return 'a';
            }
            break;

            // uxx
            case 0x00787875:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uya
            case 0x00617975:
            {
                MKV_DATA char  data_chars[4]   = "inr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uye
            case 0x00657975:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uyi
            case 0x00697975:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uym
            case 0x006d7975:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uyo
            case 0x006f7975:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uzz
            case 0x007a7a75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // u
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'v':
        {
            switch ( trigram_u32 )
            {
            // vab
            case 0x00626176:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vac
            case 0x00636176:
            {
                MKV_DATA char  data_chars[4]   = "ayi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vad
            case 0x00646176:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // val
            case 0x006c6176:
            {
                MKV_DATA char  data_chars[5]   = "alou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // van
            case 0x006e6176:
            {
                MKV_DATA char  data_chars[5]   = "aitd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vap
            case 0x00706176:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // var
            case 0x00726176:
            {
                MKV_DATA char  data_chars[7]   = "einatd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // vas
            case 0x00736176:
            {
                MKV_DATA char  data_chars[4]   = "oau";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vat
            case 0x00746176:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vcs
            case 0x00736376:
            {
                return 'u';
            }
            break;

            // vda
            case 0x00616476:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vea
            case 0x00616576:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ved
            case 0x00646576:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vee
            case 0x00656576:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // veg
            case 0x00676576:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vel
            case 0x006c6576:
            {
                MKV_DATA char  data_chars[6]   = "ailoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ven
            case 0x006e6576:
            {
                MKV_DATA char  data_chars[7]   = "tudips";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ver
            case 0x00726576:
            {
                MKV_DATA char  data_chars[14]   = "nastvhieoglky";
                MKV_DATA uint16_t data_weights[13] = {
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ves
            case 0x00736576:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // via
            case 0x00616976:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vib
            case 0x00626976:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vic
            case 0x00636976:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vie
            case 0x00656976:
            {
                MKV_DATA char  data_chars[4]   = "wnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd000, // 0.812500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vij
            case 0x006a6976:
            {
                return 'i';
            }
            break;

            // vik
            case 0x006b6976:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vil
            case 0x006c6976:
            {
                MKV_DATA char  data_chars[4]   = "lie";
                MKV_DATA uint16_t data_weights[3] = {
                    0xde9c, // 0.869565 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vim
            case 0x006d6976:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vin
            case 0x006e6976:
            {
                MKV_DATA char  data_chars[7]   = "gcdeta";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // vio
            case 0x006f6976:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vip
            case 0x00706976:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vir
            case 0x00726976:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vis
            case 0x00736976:
            {
                MKV_DATA char  data_chars[4]   = "tim";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vit
            case 0x00746976:
            {
                MKV_DATA char  data_chars[3]   = "ty";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // viv
            case 0x00766976:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // viz
            case 0x007a6976:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vog
            case 0x00676f76:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voi
            case 0x00696f76:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vol
            case 0x006c6f76:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vor
            case 0x00726f76:
            {
                MKV_DATA char  data_chars[3]   = "ny";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vot
            case 0x00746f76:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vou
            case 0x00756f76:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voy
            case 0x00796f76:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vpa
            case 0x00617076:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // v
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'w':
        {
            switch ( trigram_u32 )
            {
            // waa
            case 0x00616177:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wab
            case 0x00626177:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wac
            case 0x00636177:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wad
            case 0x00646177:
            {
                MKV_DATA char  data_chars[7]   = "ieaudo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8666, // 0.525000 
                    0x399a, // 0.225000 
                    0x2000, // 0.125000 
                    0x1333, // 0.075000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wae
            case 0x00656177:
            {
                MKV_DATA char  data_chars[6]   = "nktol";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x2f68, // 0.185185 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wah
            case 0x00686177:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wai
            case 0x00696177:
            {
                MKV_DATA char  data_chars[6]   = "ntykp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wak
            case 0x006b6177:
            {
                MKV_DATA char  data_chars[5]   = "ahue";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7777, // 0.466667 
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wal
            case 0x006c6177:
            {
                MKV_DATA char  data_chars[9]   = "aikuolde";
                MKV_DATA uint16_t data_weights[8] = {
                    0x72c2, // 0.448276 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wam
            case 0x006d6177:
            {
                MKV_DATA char  data_chars[7]   = "igmowa";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9d8a, // 0.615385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wan
            case 0x006e6177:
            {
                MKV_DATA char  data_chars[18]   = "agnotikldwrpmusyc";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5ab2, // 0.354286 
                    0x3620, // 0.211429 
                    0x2d59, // 0.177143 
                    0x0ea1, // 0.057143 
                    0x0a3d, // 0.040000 
                    0x0750, // 0.028571 
                    0x05da, // 0.022857 
                    0x05da, // 0.022857 
                    0x0463, // 0.017143 
                    0x0463, // 0.017143 
                    0x02ed, // 0.011429 
                    0x02ed, // 0.011429 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // wao
            case 0x006f6177:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wap
            case 0x00706177:
            {
                MKV_DATA char  data_chars[6]   = "ihuar";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // war
            case 0x00726177:
            {
                MKV_DATA char  data_chars[8]   = "aiuoerd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x65ed, // 0.398148 
                    0x612f, // 0.379630 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // was
            case 0x00736177:
            {
                MKV_DATA char  data_chars[7]   = "iaudto";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x3a2f, // 0.227273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wat
            case 0x00746177:
            {
                MKV_DATA char  data_chars[12]   = "thecadsiulr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x745d, // 0.454545 
                    0x1b27, // 0.106061 
                    0x1b27, // 0.106061 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // wav
            case 0x00766177:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // waw
            case 0x00776177:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // way
            case 0x00796177:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // waz
            case 0x007a6177:
            {
                MKV_DATA char  data_chars[3]   = "za";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wch
            case 0x00686377:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdi
            case 0x00696477:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wea
            case 0x00616577:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wee
            case 0x00656577:
            {
                MKV_DATA char  data_chars[3]   = "kn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // weh
            case 0x00686577:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wek
            case 0x006b6577:
            {
                MKV_DATA char  data_chars[5]   = "ahkt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wel
            case 0x006c6577:
            {
                MKV_DATA char  data_chars[6]   = "uaclv";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wen
            case 0x006e6577:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wer
            case 0x00726577:
            {
                MKV_DATA char  data_chars[3]   = "us";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wes
            case 0x00736577:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wet
            case 0x00746577:
            {
                MKV_DATA char  data_chars[8]   = "chsakpt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // wha
            case 0x00616877:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // whi
            case 0x00696877:
            {
                MKV_DATA char  data_chars[4]   = "tns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wia
            case 0x00616977:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wib
            case 0x00626977:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wic
            case 0x00636977:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wie
            case 0x00656977:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wih
            case 0x00686977:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wii
            case 0x00696977:
            {
                return 't';
            }
            break;

            // wik
            case 0x006b6977:
            {
                MKV_DATA char  data_chars[6]   = "horak";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wil
            case 0x006c6977:
            {
                MKV_DATA char  data_chars[4]   = "adl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc925, // 0.785714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wim
            case 0x006d6977:
            {
                MKV_DATA char  data_chars[4]   = "oua";
                MKV_DATA uint16_t data_weights[3] = {
                    0x79e8, // 0.476190 
                    0x5555, // 0.333333 
                    0x30c3, // 0.190476 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // win
            case 0x006e6977:
            {
                MKV_DATA char  data_chars[12]   = "gdlitasenbp";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4ec5, // 0.307692 
                    0x313b, // 0.192308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // wip
            case 0x00706977:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8ba3, // 0.545455 
                    0x745d, // 0.454545 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wir
            case 0x00726977:
            {
                MKV_DATA char  data_chars[7]   = "aioeru";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9000, // 0.562500 
                    0x4000, // 0.250000 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wis
            case 0x00736977:
            {
                MKV_DATA char  data_chars[8]   = "uaisoeh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x739d, // 0.451613 
                    0x318c, // 0.193548 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // wit
            case 0x00746977:
            {
                MKV_DATA char  data_chars[6]   = "thsco";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb13b, // 0.692308 
                    0x3723, // 0.215385 
                    0x0fc1, // 0.061538 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wiw
            case 0x00776977:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x79e8, // 0.476190 
                    0x5555, // 0.333333 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wiy
            case 0x00796977:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wka
            case 0x00616b77:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wlu
            case 0x00756c77:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wna
            case 0x00616e77:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnh
            case 0x00686e77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnt
            case 0x00746e77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // woe
            case 0x00656f77:
            {
                MKV_DATA char  data_chars[4]   = "nik";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wol
            case 0x006c6f77:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // won
            case 0x006e6f77:
            {
                MKV_DATA char  data_chars[6]   = "grdnw";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf094, // 0.939759 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // woo
            case 0x006f6f77:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wor
            case 0x00726f77:
            {
                MKV_DATA char  data_chars[5]   = "alkr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdf52, // 0.872340 
                    0x15ca, // 0.085106 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wot
            case 0x00746f77:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wow
            case 0x00776f77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpo
            case 0x006f7077:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wre
            case 0x00657277:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wrr
            case 0x00727277:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsh
            case 0x00687377:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wte
            case 0x00657477:
            {
                MKV_DATA char  data_chars[3]   = "xa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wue
            case 0x00657577:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wun
            case 0x006e7577:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wut
            case 0x00747577:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf0f1, // 0.941176 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wwa
            case 0x00617777:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyn
            case 0x006e7977:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // w
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'x':
        {
            switch ( trigram_u32 )
            {
            // xah
            case 0x00686178:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xan
            case 0x006e6178:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xap
            case 0x00706178:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xat
            case 0x00746178:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbt
            case 0x00746278:
            {
                return 'r';
            }
            break;

            // xch
            case 0x00686378:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xcl
            case 0x006c6378:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xec
            case 0x00636578:
            {
                MKV_DATA char  data_chars[3]   = "uh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xin
            case 0x006e6978:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xle
            case 0x00656c78:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xmp
            case 0x00706d78:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xmr
            case 0x00726d78:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xms
            case 0x00736d78:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xng
            case 0x00676e78:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xnp
            case 0x00706e78:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xot
            case 0x00746f78:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xpr
            case 0x00727078:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xsr
            case 0x00727378:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xti
            case 0x00697478:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xur
            case 0x00727578:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xva
            case 0x00617678:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xwo
            case 0x006f7778:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xxm
            case 0x006d7878:
            {
                MKV_DATA char  data_chars[3]   = "sp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xyg
            case 0x00677978:
            {
                return 'e';
            }
            break;

            } // switch _u32
        } // x
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'y':
        {
            switch ( trigram_u32 )
            {
            // yaa
            case 0x00616179:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yab
            case 0x00626179:
            {
                MKV_DATA char  data_chars[4]   = "uao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6db7, // 0.428571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yac
            case 0x00636179:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yad
            case 0x00646179:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yae
            case 0x00656179:
            {
                MKV_DATA char  data_chars[7]   = "nkmopt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yaf
            case 0x00666179:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yag
            case 0x00676179:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yah
            case 0x00686179:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yai
            case 0x00696179:
            {
                MKV_DATA char  data_chars[4]   = "mny";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yak
            case 0x006b6179:
            {
                MKV_DATA char  data_chars[7]   = "haokeu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8889, // 0.533333 
                    0x3777, // 0.216667 
                    0x2eef, // 0.183333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yal
            case 0x006c6179:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe148, // 0.880000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yam
            case 0x006d6179:
            {
                MKV_DATA char  data_chars[7]   = "aienou";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yan
            case 0x006e6179:
            {
                MKV_DATA char  data_chars[15]   = "gaunoitmswrhyk";
                MKV_DATA uint16_t data_weights[14] = {
                    0x41e7, // 0.257426 
                    0x3029, // 0.188119 
                    0x3029, // 0.188119 
                    0x16d0, // 0.089109 
                    0x16d0, // 0.089109 
                    0x0cac, // 0.049505 
                    0x0a23, // 0.039604 
                    0x079b, // 0.029703 
                    0x0512, // 0.019802 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // yao
            case 0x006f6179:
            {
                MKV_DATA char  data_chars[3]   = "wy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yap
            case 0x00706179:
            {
                MKV_DATA char  data_chars[5]   = "hrul";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd2d3, // 0.823529 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yar
            case 0x00726179:
            {
                MKV_DATA char  data_chars[6]   = "aiode";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf020, // 0.937984 
                    0x05f4, // 0.023256 
                    0x03f8, // 0.015504 
                    0x03f8, // 0.015504 
                    0x01fc, // 0.007752 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yas
            case 0x00736179:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x611a, // 0.379310 
                    0x5847, // 0.344828 
                    0x2c23, // 0.172414 
                    0x1a7c, // 0.103448 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yat
            case 0x00746179:
            {
                MKV_DATA char  data_chars[6]   = "hatui";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5075, // 0.314286 
                    0x4925, // 0.285714 
                    0x3a84, // 0.228571 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yau
            case 0x00756179:
            {
                MKV_DATA char  data_chars[3]   = "ke";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yav
            case 0x00766179:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yaw
            case 0x00776179:
            {
                MKV_DATA char  data_chars[6]   = "aioeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0xca1b, // 0.789474 
                    0x1675, // 0.087719 
                    0x11f7, // 0.070175 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yay
            case 0x00796179:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybu
            case 0x00756279:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yce
            case 0x00656379:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ycl
            case 0x006c6379:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydg
            case 0x00676479:
            {
                return 'e';
            }
            break;

            // ydl
            case 0x006c6479:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydo
            case 0x006f6479:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yea
            case 0x00616579:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yek
            case 0x006b6579:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yel
            case 0x006c6579:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yen
            case 0x006e6579:
            {
                MKV_DATA char  data_chars[4]   = "gns";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yer
            case 0x00726579:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yes
            case 0x00736579:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfa
            case 0x00616679:
            {
                MKV_DATA char  data_chars[3]   = "ih";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfl
            case 0x006c6679:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfr
            case 0x00726679:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yge
            case 0x00656779:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yha
            case 0x00616879:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yho
            case 0x006f6879:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yia
            case 0x00616979:
            {
                MKV_DATA char  data_chars[6]   = "nompt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yid
            case 0x00646979:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yih
            case 0x00686979:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yik
            case 0x006b6979:
            {
                MKV_DATA char  data_chars[3]   = "ak";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yil
            case 0x006c6979:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yim
            case 0x006d6979:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yin
            case 0x006e6979:
            {
                MKV_DATA char  data_chars[4]   = "gdm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yip
            case 0x00706979:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yir
            case 0x00726979:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yis
            case 0x00736979:
            {
                MKV_DATA char  data_chars[3]   = "ik";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yit
            case 0x00746979:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yka
            case 0x00616b79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ykh
            case 0x00686b79:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yla
            case 0x00616c79:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yle
            case 0x00656c79:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yli
            case 0x00696c79:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yll
            case 0x006c6c79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylo
            case 0x006f6c79:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylv
            case 0x00766c79:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yma
            case 0x00616d79:
            {
                MKV_DATA char  data_chars[3]   = "ti";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yme
            case 0x00656d79:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymo
            case 0x006f6d79:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yna
            case 0x00616e79:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ync
            case 0x00636e79:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynd
            case 0x00646e79:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yne
            case 0x00656e79:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yns
            case 0x00736e79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yod
            case 0x00646f79:
            {
                MKV_DATA char  data_chars[5]   = "houi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yoe
            case 0x00656f79:
            {
                MKV_DATA char  data_chars[6]   = "nrtim";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yok
            case 0x006b6f79:
            {
                MKV_DATA char  data_chars[6]   = "hkoae";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yom
            case 0x006d6f79:
            {
                MKV_DATA char  data_chars[5]   = "mabt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yon
            case 0x006e6f79:
            {
                MKV_DATA char  data_chars[6]   = "gdeot";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd70a, // 0.840000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yop
            case 0x00706f79:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yor
            case 0x00726f79:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yos
            case 0x00736f79:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yot
            case 0x00746f79:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // you
            case 0x00756f79:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yow
            case 0x00776f79:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypa
            case 0x00617079:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypo
            case 0x006f7079:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yre
            case 0x00657279:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yro
            case 0x006f7279:
            {
                MKV_DATA char  data_chars[3]   = "mo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysh
            case 0x00687379:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysi
            case 0x00697379:
            {
                MKV_DATA char  data_chars[4]   = "acd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yst
            case 0x00747379:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yto
            case 0x006f7479:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yua
            case 0x00617579:
            {
                MKV_DATA char  data_chars[7]   = "npikmt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yud
            case 0x00647579:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yue
            case 0x00657579:
            {
                MKV_DATA char  data_chars[5]   = "ankt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yuh
            case 0x00687579:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yuk
            case 0x006b7579:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yun
            case 0x006e7579:
            {
                MKV_DATA char  data_chars[5]   = "grsu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yup
            case 0x00707579:
            {
                MKV_DATA char  data_chars[4]   = "pha";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yur
            case 0x00727579:
            {
                MKV_DATA char  data_chars[5]   = "aeiv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yut
            case 0x00747579:
            {
                MKV_DATA char  data_chars[4]   = "tdi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yuw
            case 0x00777579:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yuy
            case 0x00797579:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yvi
            case 0x00697679:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywa
            case 0x00617779:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywo
            case 0x006f7779:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yya
            case 0x00617979:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // y
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'z':
        {
            switch ( trigram_u32 )
            {
            // zaa
            case 0x0061617a:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zab
            case 0x0062617a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zal
            case 0x006c617a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zar
            case 0x0072617a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zay
            case 0x0079617a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zaz
            case 0x007a617a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zea
            case 0x0061657a:
            {
                MKV_DATA char  data_chars[3]   = "vb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zeb
            case 0x0062657a:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zen
            case 0x006e657a:
            {
                MKV_DATA char  data_chars[3]   = "im";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zho
            case 0x006f687a:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zig
            case 0x0067697a:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zin
            case 0x006e697a:
            {
                MKV_DATA char  data_chars[4]   = "gic";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // zol
            case 0x006c6f7a:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zot
            case 0x00746f7a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zza
            case 0x00617a7a:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zzo
            case 0x006f7a7a:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // z
        break;

    }
    return 0;
} // SelectNextLetter()

} // namespace thailand
} // namespace mk
