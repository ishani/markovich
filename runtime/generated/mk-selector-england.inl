// generated by markovich:tablegen
// ishani.org

namespace mk {
namespace england {

MKV_DISABLE_OPT
static char SelectNextLetter(
    const uint32_t          trigram_u32,
    const float             input_weight,
    const uint32_t          input_seed,
    BranchDecisionFunction  decision_fn )
{
    const char initial_letter = (char)( trigram_u32 & 0xff );
    switch (initial_letter)
    {
        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'a':
        {
            switch ( trigram_u32 )
            {
            // aba
            case 0x00616261:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abb
            case 0x00626261:
            {
                MKV_DATA char  data_chars[7]   = "oeaisl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // abc
            case 0x00636261:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abd
            case 0x00646261:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abe
            case 0x00656261:
            {
                MKV_DATA char  data_chars[5]   = "rlnz";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // abg
            case 0x00676261:
            {
                return 'a';
            }
            break;

            // abi
            case 0x00696261:
            {
                MKV_DATA char  data_chars[4]   = "nst";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abl
            case 0x006c6261:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abn
            case 0x006e6261:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abo
            case 0x006f6261:
            {
                MKV_DATA char  data_chars[5]   = "ruel";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // abr
            case 0x00726261:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6969, // 0.411765 
                    0x6969, // 0.411765 
                    0x2d2d, // 0.176471 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abs
            case 0x00736261:
            {
                MKV_DATA char  data_chars[4]   = "dho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abt
            case 0x00746261:
            {
                MKV_DATA char  data_chars[3]   = "hr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // abu
            case 0x00756261:
            {
                MKV_DATA char  data_chars[4]   = "rls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // abw
            case 0x00776261:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aby
            case 0x00796261:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // acc
            case 0x00636361:
            {
                MKV_DATA char  data_chars[5]   = "oarl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ace
            case 0x00656361:
            {
                MKV_DATA char  data_chars[11]   = "bycdfmnwhl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ach
            case 0x00686361:
            {
                MKV_DATA char  data_chars[11]   = "ealwiouygb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5c29, // 0.360000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // aci
            case 0x00696361:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ack
            case 0x006b6361:
            {
                MKV_DATA char  data_chars[20]   = "lesfhbwmintdropgyaj";
                MKV_DATA uint16_t data_weights[19] = {
                    0x28ba, // 0.159091 
                    0x24d9, // 0.143939 
                    0x1365, // 0.075758 
                    0x1365, // 0.075758 
                    0x1365, // 0.075758 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0f84, // 0.060606 
                    0x0d93, // 0.053030 
                    0x0d93, // 0.053030 
                    0x0ba3, // 0.045455 
                    0x09b2, // 0.037879 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // acl
            case 0x006c6361:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aco
            case 0x006f6361:
            {
                MKV_DATA char  data_chars[10]   = "tmnbclrwx";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6935, // 0.410959 
                    0x3f20, // 0.246575 
                    0x349a, // 0.205479 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // acr
            case 0x00726361:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdcb1, // 0.862069 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // act
            case 0x00746361:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // acu
            case 0x00756361:
            {
                MKV_DATA char  data_chars[3]   = "pt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ada
            case 0x00616461:
            {
                MKV_DATA char  data_chars[4]   = "mrf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // adb
            case 0x00626461:
            {
                MKV_DATA char  data_chars[7]   = "ruoeya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4211, // 0.258065 
                    0x4211, // 0.258065 
                    0x318c, // 0.193548 
                    0x2108, // 0.129032 
                    0x2108, // 0.129032 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // adc
            case 0x00636461:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // add
            case 0x00646461:
            {
                MKV_DATA char  data_chars[7]   = "ioelar";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4a34, // 0.289855 
                    0x467e, // 0.275362 
                    0x3f13, // 0.246377 
                    0x251a, // 0.144928 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ade
            case 0x00656461:
            {
                MKV_DATA char  data_chars[11]   = "nslbrwyfhm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x61e2, // 0.382353 
                    0x2d2d, // 0.176471 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // adf
            case 0x00666461:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // adg
            case 0x00676461:
            {
                MKV_DATA char  data_chars[6]   = "aewri";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // adh
            case 0x00686461:
            {
                MKV_DATA char  data_chars[6]   = "aeoui";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // adi
            case 0x00696461:
            {
                MKV_DATA char  data_chars[9]   = "nslhpaef";
                MKV_DATA uint16_t data_weights[8] = {
                    0x79e8, // 0.476190 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // adj
            case 0x006a6461:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adk
            case 0x006b6461:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adl
            case 0x006c6461:
            {
                MKV_DATA char  data_chars[5]   = "eaoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9069, // 0.564103 
                    0x2df3, // 0.179487 
                    0x20d2, // 0.128205 
                    0x20d2, // 0.128205 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adm
            case 0x006d6461:
            {
                MKV_DATA char  data_chars[5]   = "oaie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7333, // 0.450000 
                    0x4ccd, // 0.300000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // adn
            case 0x006e6461:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ado
            case 0x006f6461:
            {
                MKV_DATA char  data_chars[7]   = "nwcarx";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // adp
            case 0x00706461:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adr
            case 0x00726461:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ads
            case 0x00736461:
            {
                MKV_DATA char  data_chars[13]   = "thwaeobcdimp";
                MKV_DATA uint16_t data_weights[12] = {
                    0x60dd, // 0.378378 
                    0x306f, // 0.189189 
                    0x2298, // 0.135135 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // adu
            case 0x00756461:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adv
            case 0x00766461:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // adw
            case 0x00776461:
            {
                MKV_DATA char  data_chars[5]   = "eaoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x4d93, // 0.303030 
                    0x364e, // 0.212121 
                    0x26ca, // 0.151515 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ady
            case 0x00796461:
            {
                MKV_DATA char  data_chars[10]   = "mwersbcko";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // adz
            case 0x007a6461:
            {
                return 'o';
            }
            break;

            // ael
            case 0x006c6561:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aen
            case 0x006e6561:
            {
                MKV_DATA char  data_chars[3]   = "bp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aer
            case 0x00726561:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aes
            case 0x00736561:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afb
            case 0x00626661:
            {
                return 'o';
            }
            break;

            // afe
            case 0x00656661:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aff
            case 0x00666661:
            {
                MKV_DATA char  data_chars[10]   = "oehircpya";
                MKV_DATA uint16_t data_weights[9] = {
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // afh
            case 0x00686661:
            {
                return 'a';
            }
            break;

            // afi
            case 0x00696661:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afl
            case 0x006c6661:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // afo
            case 0x006f6661:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aft
            case 0x00746661:
            {
                MKV_DATA char  data_chars[6]   = "oehwy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // aga
            case 0x00616761:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agb
            case 0x00626761:
            {
                MKV_DATA char  data_chars[6]   = "oeuya";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // agd
            case 0x00646761:
            {
                MKV_DATA char  data_chars[4]   = "aoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // age
            case 0x00656761:
            {
                MKV_DATA char  data_chars[5]   = "nrls";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agf
            case 0x00666761:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agg
            case 0x00676761:
            {
                MKV_DATA char  data_chars[10]   = "oeislbrya";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // agh
            case 0x00686761:
            {
                MKV_DATA char  data_chars[5]   = "aeou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agi
            case 0x00696761:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agl
            case 0x006c6761:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agm
            case 0x006d6761:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agn
            case 0x006e6761:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ago
            case 0x006f6761:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agp
            case 0x00706761:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // agr
            case 0x00726761:
            {
                MKV_DATA char  data_chars[4]   = "aey";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ags
            case 0x00736761:
            {
                MKV_DATA char  data_chars[5]   = "hltd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // agt
            case 0x00746761:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agu
            case 0x00756761:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // agw
            case 0x00776761:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aha
            case 0x00616861:
            {
                MKV_DATA char  data_chars[4]   = "mln";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ahe
            case 0x00656861:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aho
            case 0x006f6861:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aid
            case 0x00646961:
            {
                MKV_DATA char  data_chars[7]   = "eswyaf";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aig
            case 0x00676961:
            {
                MKV_DATA char  data_chars[5]   = "hnsb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aik
            case 0x006b6961:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ail
            case 0x006c6961:
            {
                MKV_DATA char  data_chars[8]   = "sebwrta";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6eef, // 0.433333 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // aim
            case 0x006d6961:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ain
            case 0x006e6961:
            {
                MKV_DATA char  data_chars[15]   = "stefhbowdgmlai";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4fcb, // 0.311688 
                    0x3532, // 0.207792 
                    0x1dec, // 0.116883 
                    0x1746, // 0.090909 
                    0x10a0, // 0.064935 
                    0x0d4c, // 0.051948 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // air
            case 0x00726961:
            {
                MKV_DATA char  data_chars[11]   = "lfswabymov";
                MKV_DATA uint16_t data_weights[10] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ais
            case 0x00736961:
            {
                MKV_DATA char  data_chars[10]   = "ethbgdlwy";
                MKV_DATA uint16_t data_weights[9] = {
                    0x42c8, // 0.260870 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ait
            case 0x00746961:
            {
                MKV_DATA char  data_chars[9]   = "ehsbflyc";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbbbc, // 0.733333 
                    0x2666, // 0.150000 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // aiz
            case 0x007a6961:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ajo
            case 0x006f6a61:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aka
            case 0x00616b61:
            {
                MKV_DATA char  data_chars[3]   = "ml";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akc
            case 0x00636b61:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akd
            case 0x00646b61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ake
            case 0x00656b61:
            {
                MKV_DATA char  data_chars[11]   = "nsrlfwhmbd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3c3c, // 0.235294 
                    0x34b5, // 0.205882 
                    0x2969, // 0.161765 
                    0x2969, // 0.161765 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // akf
            case 0x00666b61:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akg
            case 0x00676b61:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akh
            case 0x00686b61:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aki
            case 0x00696b61:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akl
            case 0x006c6b61:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akm
            case 0x006d6b61:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // akr
            case 0x00726b61:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aks
            case 0x00736b61:
            {
                MKV_DATA char  data_chars[4]   = "hep";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // akw
            case 0x00776b61:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ala
            case 0x00616c61:
            {
                MKV_DATA char  data_chars[7]   = "mncitb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // alb
            case 0x00626c61:
            {
                MKV_DATA char  data_chars[8]   = "oeuyrai";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3e10, // 0.242424 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // alc
            case 0x00636c61:
            {
                MKV_DATA char  data_chars[7]   = "oeluai";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb13b, // 0.692308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ald
            case 0x00646c61:
            {
                MKV_DATA char  data_chars[16]   = "ewirosbhlfmtygc";
                MKV_DATA uint16_t data_weights[15] = {
                    0x70f1, // 0.441176 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x1192, // 0.068627 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ale
            case 0x00656c61:
            {
                MKV_DATA char  data_chars[13]   = "sybwnhicefxm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x56b6, // 0.338710 
                    0x294a, // 0.161290 
                    0x2108, // 0.129032 
                    0x14a5, // 0.080645 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // alf
            case 0x00666c61:
            {
                MKV_DATA char  data_chars[8]   = "orialpw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x76db, // 0.464286 
                    0x36db, // 0.214286 
                    0x2db7, // 0.178571 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // alg
            case 0x00676c61:
            {
                MKV_DATA char  data_chars[4]   = "rah";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6276, // 0.384615 
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // alh
            case 0x00686c61:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ali
            case 0x00696c61:
            {
                MKV_DATA char  data_chars[6]   = "nstdf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // alk
            case 0x006b6c61:
            {
                MKV_DATA char  data_chars[11]   = "ehimfwsdrb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6c9b, // 0.424242 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // all
            case 0x006c6c61:
            {
                MKV_DATA char  data_chars[18]   = "eoiasbwghfrtdncmy";
                MKV_DATA uint16_t data_weights[17] = {
                    0x33b8, // 0.202020 
                    0x326d, // 0.196970 
                    0x2d41, // 0.176768 
                    0x22e9, // 0.136364 
                    0x1dbd, // 0.116162 
                    0x0ba3, // 0.045455 
                    0x0677, // 0.025253 
                    0x052c, // 0.020202 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x0296, // 0.010101 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                    0x014b, // 0.005051 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // alm
            case 0x006d6c61:
            {
                MKV_DATA char  data_chars[9]   = "eosiapbl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x512c, // 0.317073 
                    0x2bb5, // 0.170732 
                    0x2bb5, // 0.170732 
                    0x2577, // 0.146341 
                    0x18fa, // 0.097561 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // aln
            case 0x006e6c61:
            {
                MKV_DATA char  data_chars[7]   = "euwahm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // alo
            case 0x006f6c61:
            {
                MKV_DATA char  data_chars[6]   = "mntwz";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // alp
            case 0x00706c61:
            {
                MKV_DATA char  data_chars[7]   = "hoeira";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // alr
            case 0x00726c61:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // als
            case 0x00736c61:
            {
                MKV_DATA char  data_chars[15]   = "tawheocigdfmnk";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3eb2, // 0.244898 
                    0x29cc, // 0.163265 
                    0x1a1f, // 0.102041 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // alt
            case 0x00746c61:
            {
                MKV_DATA char  data_chars[14]   = "oehacwmbrflid";
                MKV_DATA uint16_t data_weights[13] = {
                    0x39b1, // 0.225352 
                    0x3616, // 0.211268 
                    0x2ee0, // 0.183099 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // alu
            case 0x00756c61:
            {
                MKV_DATA char  data_chars[4]   = "mpr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // alv
            case 0x00766c61:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb000, // 0.687500 
                    0x2800, // 0.156250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // alw
            case 0x00776c61:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aly
            case 0x00796c61:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ama
            case 0x00616d61:
            {
                MKV_DATA char  data_chars[6]   = "rglns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // amb
            case 0x00626d61:
            {
                MKV_DATA char  data_chars[10]   = "erloufsta";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4a34, // 0.289855 
                    0x3f13, // 0.246377 
                    0x33f1, // 0.202899 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // amc
            case 0x00636d61:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amd
            case 0x00646d61:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ame
            case 0x00656d61:
            {
                MKV_DATA char  data_chars[8]   = "rslnyai";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7333, // 0.450000 
                    0x399a, // 0.225000 
                    0x2ccd, // 0.175000 
                    0x1333, // 0.075000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // amf
            case 0x00666d61:
            {
                MKV_DATA char  data_chars[4]   = "oiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // amg
            case 0x00676d61:
            {
                return 'a';
            }
            break;

            // amh
            case 0x00686d61:
            {
                MKV_DATA char  data_chars[5]   = "iaou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ami
            case 0x00696d61:
            {
                MKV_DATA char  data_chars[4]   = "nls";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aml
            case 0x006c6d61:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x89d9, // 0.538462 
                    0x7627, // 0.461538 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amm
            case 0x006d6d61:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // amn
            case 0x006e6d61:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amo
            case 0x006f6d61:
            {
                MKV_DATA char  data_chars[5]   = "rnou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x3cf4, // 0.238095 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // amp
            case 0x00706d61:
            {
                MKV_DATA char  data_chars[15]   = "tseifondhlcmrv";
                MKV_DATA uint16_t data_weights[14] = {
                    0x9200, // 0.570312 
                    0x2800, // 0.156250 
                    0x0e00, // 0.054688 
                    0x0a00, // 0.039062 
                    0x0a00, // 0.039062 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // amr
            case 0x00726d61:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ams
            case 0x00736d61:
            {
                MKV_DATA char  data_chars[13]   = "htdlbenwcgai";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4ec5, // 0.307692 
                    0x41a4, // 0.256410 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // amt
            case 0x00746d61:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amu
            case 0x00756d61:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amv
            case 0x00766d61:
            {
                return 'i';
            }
            break;

            // amw
            case 0x00776d61:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // amy
            case 0x00796d61:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ana
            case 0x00616e61:
            {
                MKV_DATA char  data_chars[9]   = "drcghlwt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // anb
            case 0x00626e61:
            {
                MKV_DATA char  data_chars[7]   = "oyruae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x3bbc, // 0.233333 
                    0x3333, // 0.200000 
                    0x2aab, // 0.166667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // anc
            case 0x00636e61:
            {
                MKV_DATA char  data_chars[10]   = "ehoarilty";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6148, // 0.380000 
                    0x3852, // 0.220000 
                    0x1eb8, // 0.120000 
                    0x199a, // 0.100000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // and
            case 0x00646e61:
            {
                MKV_DATA char  data_chars[19]   = "sleoyiwfhbrpgcaktu";
                MKV_DATA uint16_t data_weights[18] = {
                    0x6405, // 0.390698 
                    0x130d, // 0.074419 
                    0x130d, // 0.074419 
                    0x10ab, // 0.065116 
                    0x0e4a, // 0.055814 
                    0x0e4a, // 0.055814 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x0ab7, // 0.041860 
                    0x0987, // 0.037209 
                    0x05f4, // 0.023256 
                    0x0262, // 0.009302 
                    0x0262, // 0.009302 
                    0x0262, // 0.009302 
                    0x0131, // 0.004651 
                    0x0131, // 0.004651 
                    0x0131, // 0.004651 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // ane
            case 0x00656e61:
            {
                MKV_DATA char  data_chars[13]   = "shrbwyalgmnt";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7287, // 0.447368 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // anf
            case 0x00666e61:
            {
                MKV_DATA char  data_chars[5]   = "ioar";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x71c7, // 0.444444 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ang
            case 0x00676e61:
            {
                MKV_DATA char  data_chars[17]   = "earlwotfdhmpsnbi";
                MKV_DATA uint16_t data_weights[16] = {
                    0x6319, // 0.387097 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1606, // 0.086022 
                    0x0dc3, // 0.053763 
                    0x0dc3, // 0.053763 
                    0x0dc3, // 0.053763 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // anh
            case 0x00686e61:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ani
            case 0x00696e61:
            {
                MKV_DATA char  data_chars[9]   = "snaovceh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // anj
            case 0x006a6e61:
            {
                return 'e';
            }
            break;

            // ank
            case 0x006b6e61:
            {
                MKV_DATA char  data_chars[13]   = "selhwfngityb";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4211, // 0.258065 
                    0x318c, // 0.193548 
                    0x294a, // 0.161290 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // anl
            case 0x006c6e61:
            {
                MKV_DATA char  data_chars[6]   = "eaiol";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa1af, // 0.631579 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anm
            case 0x006d6e61:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ann
            case 0x006e6e61:
            {
                MKV_DATA char  data_chars[9]   = "ieaoswyf";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6086, // 0.377049 
                    0x3ef3, // 0.245902 
                    0x25c5, // 0.147541 
                    0x2193, // 0.131148 
                    0x0c97, // 0.049180 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ano
            case 0x006f6e61:
            {
                MKV_DATA char  data_chars[6]   = "nreow";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anp
            case 0x00706e61:
            {
                MKV_DATA char  data_chars[6]   = "oeiua";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // anq
            case 0x00716e61:
            {
                return 'u';
            }
            break;

            // anr
            case 0x00726e61:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ans
            case 0x00736e61:
            {
                MKV_DATA char  data_chars[17]   = "tlwfhoedcbgakmri";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3b89, // 0.232558 
                    0x20bf, // 0.127907 
                    0x17d0, // 0.093023 
                    0x14d6, // 0.081395 
                    0x14d6, // 0.081395 
                    0x11dc, // 0.069767 
                    0x0ee2, // 0.058140 
                    0x0ee2, // 0.058140 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ant
            case 0x00746e61:
            {
                MKV_DATA char  data_chars[15]   = "ohsleariwuzmcy";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5c88, // 0.361446 
                    0x2819, // 0.156626 
                    0x21ed, // 0.132530 
                    0x1282, // 0.072289 
                    0x1282, // 0.072289 
                    0x0c56, // 0.048193 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // anu
            case 0x00756e61:
            {
                MKV_DATA char  data_chars[3]   = "dt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anv
            case 0x00766e61:
            {
                MKV_DATA char  data_chars[5]   = "ieoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // anw
            case 0x00776e61:
            {
                MKV_DATA char  data_chars[5]   = "oiea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4000, // 0.250000 
                    0x36db, // 0.214286 
                    0x1b6e, // 0.107143 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // anx
            case 0x00786e61:
            {
                MKV_DATA char  data_chars[3]   = "tw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // any
            case 0x00796e61:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // anz
            case 0x007a6e61:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apa
            case 0x00617061:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apc
            case 0x00637061:
            {
                MKV_DATA char  data_chars[4]   = "hoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ape
            case 0x00657061:
            {
                MKV_DATA char  data_chars[9]   = "lrntsydh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7b42, // 0.481481 
                    0x2f68, // 0.185185 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // apf
            case 0x00667061:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apg
            case 0x00677061:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aph
            case 0x00687061:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // api
            case 0x00697061:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apk
            case 0x006b7061:
            {
                MKV_DATA char  data_chars[3]   = "yi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apl
            case 0x006c7061:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd2d3, // 0.823529 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // apm
            case 0x006d7061:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apn
            case 0x006e7061:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // app
            case 0x00707061:
            {
                MKV_DATA char  data_chars[8]   = "leiorsa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7000, // 0.437500 
                    0x6000, // 0.375000 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // apr
            case 0x00727061:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aps
            case 0x00737061:
            {
                MKV_DATA char  data_chars[8]   = "theilfg";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // apt
            case 0x00747061:
            {
                MKV_DATA char  data_chars[5]   = "ohai";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // apu
            case 0x00757061:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // apw
            case 0x00777061:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aqu
            case 0x00757161:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ara
            case 0x00617261:
            {
                MKV_DATA char  data_chars[9]   = "zdmgtvch";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // arb
            case 0x00627261:
            {
                MKV_DATA char  data_chars[9]   = "oryeulis";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6d1d, // 0.426229 
                    0x25c5, // 0.147541 
                    0x2193, // 0.131148 
                    0x192e, // 0.098361 
                    0x192e, // 0.098361 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // arc
            case 0x00637261:
            {
                MKV_DATA char  data_chars[7]   = "holrey";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4b4b, // 0.294118 
                    0x43c4, // 0.264706 
                    0x34b5, // 0.205882 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ard
            case 0x00647261:
            {
                MKV_DATA char  data_chars[17]   = "sielowyhrunfgbma";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4daf, // 0.303448 
                    0x3333, // 0.200000 
                    0x2c23, // 0.172414 
                    0x1530, // 0.082759 
                    0x0c5c, // 0.048276 
                    0x0a98, // 0.041379 
                    0x0a98, // 0.041379 
                    0x0710, // 0.027586 
                    0x054c, // 0.020690 
                    0x0388, // 0.013793 
                    0x0388, // 0.013793 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // are
            case 0x00657261:
            {
                MKV_DATA char  data_chars[14]   = "shntwbflpgdym";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4646, // 0.274510 
                    0x2323, // 0.137255 
                    0x1919, // 0.098039 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // arf
            case 0x00667261:
            {
                MKV_DATA char  data_chars[7]   = "oiruel";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // arg
            case 0x00677261:
            {
                MKV_DATA char  data_chars[7]   = "aroehu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // arh
            case 0x00687261:
            {
                MKV_DATA char  data_chars[6]   = "aioeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ccd, // 0.550000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ari
            case 0x00697261:
            {
                MKV_DATA char  data_chars[6]   = "nstae";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7333, // 0.450000 
                    0x4ccd, // 0.300000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ark
            case 0x006b7261:
            {
                MKV_DATA char  data_chars[14]   = "ehslwbfitgyun";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3f13, // 0.246377 
                    0x2c86, // 0.173913 
                    0x251a, // 0.144928 
                    0x19f9, // 0.101449 
                    0x1643, // 0.086957 
                    0x128d, // 0.072464 
                    0x128d, // 0.072464 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // arl
            case 0x006c7261:
            {
                MKV_DATA char  data_chars[16]   = "eiasobtcpyhuwdf";
                MKV_DATA uint16_t data_weights[15] = {
                    0x6b1f, // 0.418440 
                    0x2f35, // 0.184397 
                    0x1d0d, // 0.113475 
                    0x0e86, // 0.056738 
                    0x0e86, // 0.056738 
                    0x0ae5, // 0.042553 
                    0x0914, // 0.035461 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x03a2, // 0.014184 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // arm
            case 0x006d7261:
            {
                MKV_DATA char  data_chars[11]   = "ioselabpwc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3d38, // 0.239130 
                    0x37a7, // 0.217391 
                    0x3216, // 0.195652 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // arn
            case 0x006e7261:
            {
                MKV_DATA char  data_chars[19]   = "esahofdibwltkcugmy";
                MKV_DATA uint16_t data_weights[18] = {
                    0x3e10, // 0.242424 
                    0x28ba, // 0.159091 
                    0x1b27, // 0.106061 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0d93, // 0.053030 
                    0x0d93, // 0.053030 
                    0x0d93, // 0.053030 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // aro
            case 0x006f7261:
            {
                MKV_DATA char  data_chars[5]   = "elnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // arp
            case 0x00707261:
            {
                MKV_DATA char  data_chars[12]   = "eslotaufinw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x21af, // 0.131579 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // arr
            case 0x00727261:
            {
                MKV_DATA char  data_chars[11]   = "oiaeysgvbh";
                MKV_DATA uint16_t data_weights[10] = {
                    0x53dd, // 0.327586 
                    0x3dcb, // 0.241379 
                    0x372c, // 0.215517 
                    0x1cb1, // 0.112069 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ars
            case 0x00737261:
            {
                MKV_DATA char  data_chars[14]   = "htoldbwicfgea";
                MKV_DATA uint16_t data_weights[13] = {
                    0x895e, // 0.536585 
                    0x2bb5, // 0.170732 
                    0x0e92, // 0.056911 
                    0x0e92, // 0.056911 
                    0x0c7d, // 0.048780 
                    0x0853, // 0.032520 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x042a, // 0.016260 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // art
            case 0x00747261:
            {
                MKV_DATA char  data_chars[17]   = "holsiefbmrywnpcg";
                MKV_DATA uint16_t data_weights[16] = {
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x15e5, // 0.085526 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x086c, // 0.032895 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x050d, // 0.019737 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                    0x01af, // 0.006579 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // aru
            case 0x00757261:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // arv
            case 0x00767261:
            {
                MKV_DATA char  data_chars[4]   = "iea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7627, // 0.461538 
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // arw
            case 0x00777261:
            {
                MKV_DATA char  data_chars[6]   = "ioeay";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5ed1, // 0.370370 
                    0x425f, // 0.259259 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ary
            case 0x00797261:
            {
                MKV_DATA char  data_chars[7]   = "pswcfl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // arz
            case 0x007a7261:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asa
            case 0x00617361:
            {
                MKV_DATA char  data_chars[4]   = "nul";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asb
            case 0x00627361:
            {
                MKV_DATA char  data_chars[4]   = "yuo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asc
            case 0x00637361:
            {
                MKV_DATA char  data_chars[4]   = "oah";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asd
            case 0x00647361:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ase
            case 0x00657361:
            {
                MKV_DATA char  data_chars[9]   = "lnybmtdh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // asf
            case 0x00667361:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asg
            case 0x00677361:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ash
            case 0x00687361:
            {
                MKV_DATA char  data_chars[17]   = "bewaimfloctrpgdu";
                MKV_DATA uint16_t data_weights[16] = {
                    0x25d1, // 0.147727 
                    0x25d1, // 0.147727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x145d, // 0.079545 
                    0x145d, // 0.079545 
                    0x0e8c, // 0.056818 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // asi
            case 0x00697361:
            {
                MKV_DATA char  data_chars[4]   = "nld";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ask
            case 0x006b7361:
            {
                MKV_DATA char  data_chars[4]   = "eah";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asl
            case 0x006c7361:
            {
                MKV_DATA char  data_chars[6]   = "eaiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // asm
            case 0x006d7361:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // asn
            case 0x006e7361:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aso
            case 0x006f7361:
            {
                MKV_DATA char  data_chars[4]   = "nlw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // asp
            case 0x00707361:
            {
                MKV_DATA char  data_chars[6]   = "eauls";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ass
            case 0x00737361:
            {
                MKV_DATA char  data_chars[12]   = "eioamuwgtfh";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5726, // 0.340426 
                    0x46cf, // 0.276596 
                    0x1b3c, // 0.106383 
                    0x1b3c, // 0.106383 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ast
            case 0x00747361:
            {
                MKV_DATA char  data_chars[19]   = "olehwcribayndvfumg";
                MKV_DATA uint16_t data_weights[18] = {
                    0x5b38, // 0.356322 
                    0x2932, // 0.160920 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x0bc5, // 0.045977 
                    0x0a4d, // 0.040230 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x075b, // 0.028736 
                    0x075b, // 0.028736 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x0179, // 0.005747 
                    0x0179, // 0.005747 
                    0x0179, // 0.005747 
                    0x0179, // 0.005747 
                    0x0179, // 0.005747 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // asw
            case 0x00777361:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ata
            case 0x00617461:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // atb
            case 0x00627461:
            {
                MKV_DATA char  data_chars[5]   = "yaru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // atc
            case 0x00637461:
            {
                MKV_DATA char  data_chars[6]   = "holur";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc9b2, // 0.787879 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ate
            case 0x00657461:
            {
                MKV_DATA char  data_chars[12]   = "rslnbfmpwag";
                MKV_DATA uint16_t data_weights[11] = {
                    0xa1af, // 0.631579 
                    0x2f28, // 0.184211 
                    0x0fb8, // 0.061404 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // atf
            case 0x00667461:
            {
                MKV_DATA char  data_chars[5]   = "oiey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8618, // 0.523810 
                    0x6186, // 0.380952 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // atg
            case 0x00677461:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ath
            case 0x00687461:
            {
                MKV_DATA char  data_chars[15]   = "eaowiluftbcypr";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6800, // 0.406250 
                    0x2555, // 0.145833 
                    0x1aab, // 0.104167 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ati
            case 0x00697461:
            {
                MKV_DATA char  data_chars[7]   = "oselmn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // atl
            case 0x006c7461:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7c1f, // 0.484848 
                    0x3e10, // 0.242424 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // atm
            case 0x006d7461:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // atn
            case 0x006e7461:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ato
            case 0x006f7461:
            {
                MKV_DATA char  data_chars[6]   = "nrlwf";
                MKV_DATA uint16_t data_weights[5] = {
                    0xde30, // 0.867925 
                    0x1352, // 0.075472 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // atr
            case 0x00727461:
            {
                MKV_DATA char  data_chars[5]   = "iaou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ats
            case 0x00737461:
            {
                MKV_DATA char  data_chars[8]   = "fohltwg";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // att
            case 0x00747461:
            {
                MKV_DATA char  data_chars[10]   = "eolisahry";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5e16, // 0.367521 
                    0x3253, // 0.196581 
                    0x2df3, // 0.179487 
                    0x2302, // 0.136752 
                    0x0f51, // 0.059829 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // atw
            case 0x00777461:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aub
            case 0x00627561:
            {
                MKV_DATA char  data_chars[4]   = "eho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // auc
            case 0x00637561:
            {
                MKV_DATA char  data_chars[5]   = "hekl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aud
            case 0x00647561:
            {
                MKV_DATA char  data_chars[5]   = "liey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aug
            case 0x00677561:
            {
                MKV_DATA char  data_chars[4]   = "hae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf333, // 0.950000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // auk
            case 0x006b7561:
            {
                MKV_DATA char  data_chars[3]   = "se";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aul
            case 0x006c7561:
            {
                MKV_DATA char  data_chars[9]   = "dtkseibc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // aum
            case 0x006d7561:
            {
                MKV_DATA char  data_chars[3]   = "bo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aun
            case 0x006e7561:
            {
                MKV_DATA char  data_chars[7]   = "tdscbk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x70f1, // 0.441176 
                    0x43c4, // 0.264706 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // aur
            case 0x00727561:
            {
                MKV_DATA char  data_chars[4]   = "eiw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aus
            case 0x00737561:
            {
                MKV_DATA char  data_chars[4]   = "tea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa492, // 0.642857 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aut
            case 0x00747561:
            {
                MKV_DATA char  data_chars[4]   = "bhe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // auv
            case 0x00767561:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // auw
            case 0x00777561:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aux
            case 0x00787561:
            {
                MKV_DATA char  data_chars[4]   = "lth";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ava
            case 0x00617661:
            {
                MKV_DATA char  data_chars[7]   = "nsglrh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ave
            case 0x00657661:
            {
                MKV_DATA char  data_chars[11]   = "nrlsatybdo";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5c64, // 0.360902 
                    0x569e, // 0.338346 
                    0x2492, // 0.142857 
                    0x1cdf, // 0.112782 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // avi
            case 0x00697661:
            {
                MKV_DATA char  data_chars[9]   = "nsadlekt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // avo
            case 0x006f7661:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // avr
            case 0x00727661:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // avy
            case 0x00797661:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awa
            case 0x00617761:
            {
                MKV_DATA char  data_chars[5]   = "ydrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // awb
            case 0x00627761:
            {
                MKV_DATA char  data_chars[8]   = "ruoyiae";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // awc
            case 0x00637761:
            {
                MKV_DATA char  data_chars[4]   = "olr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awd
            case 0x00647761:
            {
                MKV_DATA char  data_chars[5]   = "eors";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // awe
            case 0x00657761:
            {
                MKV_DATA char  data_chars[4]   = "sln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awf
            case 0x00667761:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awg
            case 0x00677761:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awh
            case 0x00687761:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awi
            case 0x00697761:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awk
            case 0x006b7761:
            {
                MKV_DATA char  data_chars[10]   = "eshwilcfr";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4f73, // 0.310345 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // awl
            case 0x006c7761:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc30c, // 0.761905 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // awn
            case 0x006e7761:
            {
                MKV_DATA char  data_chars[6]   = "ehsta";
                MKV_DATA uint16_t data_weights[5] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // awo
            case 0x006f7761:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awp
            case 0x00707761:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // awr
            case 0x00727761:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aws
            case 0x00737761:
            {
                MKV_DATA char  data_chars[9]   = "tehwoima";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // awt
            case 0x00747761:
            {
                MKV_DATA char  data_chars[5]   = "hore";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7943, // 0.473684 
                    0x6bca, // 0.421053 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // awy
            case 0x00797761:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axa
            case 0x00617861:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axb
            case 0x00627861:
            {
                MKV_DATA char  data_chars[3]   = "yr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axe
            case 0x00657861:
            {
                MKV_DATA char  data_chars[4]   = "yln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // axf
            case 0x00667861:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axh
            case 0x00687861:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // axi
            case 0x00697861:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axl
            case 0x006c7861:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // axm
            case 0x006d7861:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // axo
            case 0x006f7861:
            {
                MKV_DATA char  data_chars[3]   = "nv";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axp
            case 0x00707861:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axs
            case 0x00737861:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // axt
            case 0x00747861:
            {
                MKV_DATA char  data_chars[4]   = "oeh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x638e, // 0.388889 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // axw
            case 0x00777861:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aya
            case 0x00617961:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayb
            case 0x00627961:
            {
                MKV_DATA char  data_chars[4]   = "rua";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayc
            case 0x00637961:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayd
            case 0x00647961:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc4ec, // 0.769231 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // aye
            case 0x00657961:
            {
                MKV_DATA char  data_chars[4]   = "srn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb13b, // 0.692308 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayf
            case 0x00667961:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x5b6e, // 0.357143 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayg
            case 0x00677961:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayh
            case 0x00687961:
            {
                MKV_DATA char  data_chars[5]   = "aiue";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ayi
            case 0x00697961:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayk
            case 0x006b7961:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayl
            case 0x006c7961:
            {
                MKV_DATA char  data_chars[10]   = "eaihmswbt";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8e39, // 0.555556 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // aym
            case 0x006d7961:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayn
            case 0x006e7961:
            {
                MKV_DATA char  data_chars[5]   = "ehat";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ayo
            case 0x006f7961:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayp
            case 0x00707961:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ayr
            case 0x00727961:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ays
            case 0x00737961:
            {
                MKV_DATA char  data_chars[8]   = "htwiobd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ayt
            case 0x00747961:
            {
                MKV_DATA char  data_chars[4]   = "ohe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x5c29, // 0.360000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ayw
            case 0x00777961:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // aza
            case 0x00617a61:
            {
                MKV_DATA char  data_chars[5]   = "rknc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // aze
            case 0x00657a61:
            {
                MKV_DATA char  data_chars[7]   = "lybins";
                MKV_DATA uint16_t data_weights[6] = {
                    0xaaab, // 0.666667 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // azi
            case 0x00697a61:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // azl
            case 0x006c7a61:
            {
                return 'e';
            }
            break;

            // azo
            case 0x006f7a61:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // a
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'b':
        {
            switch ( trigram_u32 )
            {
            // bab
            case 0x00626162:
            {
                MKV_DATA char  data_chars[7]   = "beirwc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bac
            case 0x00636162:
            {
                MKV_DATA char  data_chars[6]   = "khotu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // bad
            case 0x00646162:
            {
                MKV_DATA char  data_chars[9]   = "gdswblhm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // baf
            case 0x00666162:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bag
            case 0x00676162:
            {
                MKV_DATA char  data_chars[15]   = "segbwnptlmiouh";
                MKV_DATA uint16_t data_weights[14] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // bai
            case 0x00696162:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bak
            case 0x006b6162:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bal
            case 0x006c6162:
            {
                MKV_DATA char  data_chars[12]   = "dlstmekwcha";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5555, // 0.333333 
                    0x4ec5, // 0.307692 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bam
            case 0x006d6162:
            {
                MKV_DATA char  data_chars[4]   = "bpf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ban
            case 0x006e6162:
            {
                MKV_DATA char  data_chars[12]   = "kdnsgtwbhiy";
                MKV_DATA uint16_t data_weights[11] = {
                    0xbb39, // 0.731343 
                    0x131b, // 0.074627 
                    0x0f49, // 0.059701 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bap
            case 0x00706162:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bar
            case 0x00726162:
            {
                MKV_DATA char  data_chars[18]   = "nrtdlkbsmcweofhyg";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4a99, // 0.291391 
                    0x28b0, // 0.158940 
                    0x160a, // 0.086093 
                    0x12a6, // 0.072848 
                    0x12a6, // 0.072848 
                    0x0f42, // 0.059603 
                    0x0f42, // 0.059603 
                    0x0a2c, // 0.039735 
                    0x06c8, // 0.026490 
                    0x06c8, // 0.026490 
                    0x06c8, // 0.026490 
                    0x06c8, // 0.026490 
                    0x0364, // 0.013245 
                    0x0364, // 0.013245 
                    0x0364, // 0.013245 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // bas
            case 0x00736162:
            {
                MKV_DATA char  data_chars[11]   = "tsiceofhlw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5ad7, // 0.354839 
                    0x4211, // 0.258065 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bat
            case 0x00746162:
            {
                MKV_DATA char  data_chars[11]   = "thcesomwfl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5870, // 0.345455 
                    0x3c82, // 0.236364 
                    0x37db, // 0.218182 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bau
            case 0x00756162:
            {
                MKV_DATA char  data_chars[5]   = "glmn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bav
            case 0x00766162:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // baw
            case 0x00776162:
            {
                MKV_DATA char  data_chars[4]   = "dbs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bax
            case 0x00786162:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bay
            case 0x00796162:
            {
                MKV_DATA char  data_chars[11]   = "ltsnchdfwb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bba
            case 0x00616262:
            {
                MKV_DATA char  data_chars[7]   = "crtgls";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bbe
            case 0x00656262:
            {
                MKV_DATA char  data_chars[7]   = "rystan";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8c63, // 0.548387 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bbi
            case 0x00696262:
            {
                MKV_DATA char  data_chars[4]   = "not";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bbl
            case 0x006c6262:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbo
            case 0x006f6262:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xec4f, // 0.923077 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bbu
            case 0x00756262:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bca
            case 0x00616362:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bch
            case 0x00686362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bco
            case 0x006f6362:
            {
                MKV_DATA char  data_chars[3]   = "tu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bda
            case 0x00616462:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bde
            case 0x00656462:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bdo
            case 0x006f6462:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bea
            case 0x00616562:
            {
                MKV_DATA char  data_chars[15]   = "rcunmldgwfvszt";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4835, // 0.282051 
                    0x3e5c, // 0.243590 
                    0x241a, // 0.141026 
                    0x16f9, // 0.089744 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // beb
            case 0x00626562:
            {
                MKV_DATA char  data_chars[4]   = "ios";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bec
            case 0x00636562:
            {
                MKV_DATA char  data_chars[5]   = "kcho";
                MKV_DATA uint16_t data_weights[4] = {
                    0xde30, // 0.867925 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bed
            case 0x00646562:
            {
                MKV_DATA char  data_chars[14]   = "fgilwshmdoncb";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // bee
            case 0x00656562:
            {
                MKV_DATA char  data_chars[9]   = "csrtldnb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5b6e, // 0.357143 
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bef
            case 0x00666562:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // beg
            case 0x00676562:
            {
                MKV_DATA char  data_chars[4]   = "gbd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bei
            case 0x00696562:
            {
                MKV_DATA char  data_chars[3]   = "gn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bek
            case 0x006b6562:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bel
            case 0x006c6562:
            {
                MKV_DATA char  data_chars[14]   = "ltsacvpmgfonb";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5d8a, // 0.365385 
                    0x1d8a, // 0.115385 
                    0x189e, // 0.096154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // bem
            case 0x006d6562:
            {
                MKV_DATA char  data_chars[4]   = "bei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ben
            case 0x006e6562:
            {
                MKV_DATA char  data_chars[16]   = "thngsfecwodavyi";
                MKV_DATA uint16_t data_weights[15] = {
                    0x53c8, // 0.327273 
                    0x253d, // 0.145455 
                    0x1bed, // 0.109091 
                    0x1746, // 0.090909 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // beo
            case 0x006f6562:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bep
            case 0x00706562:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ber
            case 0x00726562:
            {
                MKV_DATA char  data_chars[18]   = "trslgkdnemhwybfci";
                MKV_DATA uint16_t data_weights[17] = {
                    0x3c07, // 0.234483 
                    0x34f7, // 0.206897 
                    0x1e04, // 0.117241 
                    0x1e04, // 0.117241 
                    0x0c5c, // 0.048276 
                    0x0c5c, // 0.048276 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x0710, // 0.027586 
                    0x0710, // 0.027586 
                    0x0710, // 0.027586 
                    0x054c, // 0.020690 
                    0x0388, // 0.013793 
                    0x0388, // 0.013793 
                    0x0388, // 0.013793 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // bes
            case 0x00736562:
            {
                MKV_DATA char  data_chars[9]   = "sctwfdbo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bet
            case 0x00746562:
            {
                MKV_DATA char  data_chars[7]   = "htcslo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bev
            case 0x00766562:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bew
            case 0x00776562:
            {
                MKV_DATA char  data_chars[8]   = "bcdilsa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bex
            case 0x00786562:
            {
                MKV_DATA char  data_chars[7]   = "lowfhi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bey
            case 0x00796562:
            {
                MKV_DATA char  data_chars[4]   = "tds";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bez
            case 0x007a6562:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bfa
            case 0x00616662:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bfo
            case 0x006f6662:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bga
            case 0x00616762:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bha
            case 0x00616862:
            {
                MKV_DATA char  data_chars[3]   = "ml";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhe
            case 0x00656862:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhi
            case 0x00696862:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bho
            case 0x006f6862:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bhu
            case 0x00756862:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bib
            case 0x00626962:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bic
            case 0x00636962:
            {
                MKV_DATA char  data_chars[5]   = "ktae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdd17, // 0.863636 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bid
            case 0x00646962:
            {
                MKV_DATA char  data_chars[7]   = "delswb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9d8a, // 0.615385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bie
            case 0x00656962:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // big
            case 0x00676962:
            {
                MKV_DATA char  data_chars[9]   = "gnobflrh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bil
            case 0x006c6962:
            {
                MKV_DATA char  data_chars[10]   = "lsbdtecmn";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // bin
            case 0x006e6962:
            {
                MKV_DATA char  data_chars[12]   = "gsechtlnfbd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8000, // 0.500000 
                    0x3216, // 0.195652 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bio
            case 0x006f6962:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bir
            case 0x00726962:
            {
                MKV_DATA char  data_chars[8]   = "cdktlms";
                MKV_DATA uint16_t data_weights[7] = {
                    0x772c, // 0.465517 
                    0x308d, // 0.189655 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bis
            case 0x00736962:
            {
                MKV_DATA char  data_chars[8]   = "hcslptb";
                MKV_DATA uint16_t data_weights[7] = {
                    0xaf8b, // 0.685714 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bit
            case 0x00746962:
            {
                MKV_DATA char  data_chars[5]   = "tcos";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9697, // 0.588235 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bjo
            case 0x006f6a62:
            {
                MKV_DATA char  data_chars[3]   = "hb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bla
            case 0x00616c62:
            {
                MKV_DATA char  data_chars[14]   = "cknsgdtiwzbxy";
                MKV_DATA uint16_t data_weights[13] = {
                    0x90cf, // 0.565657 
                    0x2960, // 0.161616 
                    0x14b0, // 0.080808 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                    0x0296, // 0.010101 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ble
            case 0x00656c62:
            {
                MKV_DATA char  data_chars[14]   = "ystadnbrwcgef";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3159, // 0.192771 
                    0x2b2e, // 0.168675 
                    0x21ed, // 0.132530 
                    0x1bc2, // 0.108434 
                    0x18ad, // 0.096386 
                    0x1597, // 0.084337 
                    0x0c56, // 0.048193 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // bli
            case 0x00696c62:
            {
                MKV_DATA char  data_chars[7]   = "nstbcd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8618, // 0.523810 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // blo
            case 0x006f6c62:
            {
                MKV_DATA char  data_chars[11]   = "woxruscdft";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // blu
            case 0x00756c62:
            {
                MKV_DATA char  data_chars[4]   = "ner";
                MKV_DATA uint16_t data_weights[3] = {
                    0xbbbc, // 0.733333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bly
            case 0x00796c62:
            {
                MKV_DATA char  data_chars[5]   = "tmbf";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bma
            case 0x00616d62:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bmi
            case 0x00696d62:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bmo
            case 0x006f6d62:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bna
            case 0x00616e62:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bne
            case 0x00656e62:
            {
                MKV_DATA char  data_chars[4]   = "yls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // boa
            case 0x00616f62:
            {
                MKV_DATA char  data_chars[4]   = "rst";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bob
            case 0x00626f62:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boc
            case 0x00636f62:
            {
                MKV_DATA char  data_chars[4]   = "kao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bod
            case 0x00646f62:
            {
                MKV_DATA char  data_chars[12]   = "iemdluwyshn";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bof
            case 0x00666f62:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bog
            case 0x00676f62:
            {
                MKV_DATA char  data_chars[4]   = "egn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // boh
            case 0x00686f62:
            {
                MKV_DATA char  data_chars[4]   = "eou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // boi
            case 0x00696f62:
            {
                MKV_DATA char  data_chars[3]   = "sg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // boj
            case 0x006a6f62:
            {
                return 'e';
            }
            break;

            // bok
            case 0x006b6f62:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bol
            case 0x006c6f62:
            {
                MKV_DATA char  data_chars[12]   = "dteinshalvb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x49f5, // 0.288889 
                    0x3333, // 0.200000 
                    0x27d2, // 0.155556 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bom
            case 0x006d6f62:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bon
            case 0x006e6f62:
            {
                MKV_DATA char  data_chars[10]   = "densbchit";
                MKV_DATA uint16_t data_weights[9] = {
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // boo
            case 0x006f6f62:
            {
                MKV_DATA char  data_chars[8]   = "tksdlnr";
                MKV_DATA uint16_t data_weights[7] = {
                    0xaaab, // 0.666667 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // boq
            case 0x00716f62:
            {
                return 'u';
            }
            break;

            // bor
            case 0x00726f62:
            {
                MKV_DATA char  data_chars[11]   = "onderswafl";
                MKV_DATA uint16_t data_weights[10] = {
                    0xc068, // 0.751592 
                    0x209d, // 0.127389 
                    0x09c9, // 0.038217 
                    0x0686, // 0.025478 
                    0x0686, // 0.025478 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bos
            case 0x00736f62:
            {
                MKV_DATA char  data_chars[12]   = "cwltskpoubh";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4444, // 0.266667 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // bot
            case 0x00746f62:
            {
                MKV_DATA char  data_chars[11]   = "tshalcouwe";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7b14, // 0.480769 
                    0x3627, // 0.211538 
                    0x189e, // 0.096154 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // bou
            case 0x00756f62:
            {
                MKV_DATA char  data_chars[7]   = "rlgnts";
                MKV_DATA uint16_t data_weights[6] = {
                    0xda3b, // 0.852459 
                    0x0eb0, // 0.057377 
                    0x0a7e, // 0.040984 
                    0x064c, // 0.024590 
                    0x0432, // 0.016393 
                    0x0219, // 0.008197 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // bov
            case 0x00766f62:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bow
            case 0x00776f62:
            {
                MKV_DATA char  data_chars[15]   = "ledbsrmykgtcio";
                MKV_DATA uint16_t data_weights[14] = {
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x26f5, // 0.152174 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // box
            case 0x00786f62:
            {
                MKV_DATA char  data_chars[9]   = "wmstflbg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // boy
            case 0x00796f62:
            {
                MKV_DATA char  data_chars[8]   = "sltnacd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // boz
            case 0x007a6f62:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bpy
            case 0x00797062:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bra
            case 0x00617262:
            {
                MKV_DATA char  data_chars[20]   = "ndmcyitushbzlegwxkf";
                MKV_DATA uint16_t data_weights[19] = {
                    0x39a4, // 0.225166 
                    0x348e, // 0.205298 
                    0x2036, // 0.125828 
                    0x160a, // 0.086093 
                    0x160a, // 0.086093 
                    0x0f42, // 0.059603 
                    0x087a, // 0.033113 
                    0x06c8, // 0.026490 
                    0x06c8, // 0.026490 
                    0x0516, // 0.019868 
                    0x0516, // 0.019868 
                    0x0516, // 0.019868 
                    0x0364, // 0.013245 
                    0x0364, // 0.013245 
                    0x0364, // 0.013245 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                    0x01b2, // 0.006623 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // bre
            case 0x00657262:
            {
                MKV_DATA char  data_chars[15]   = "andtwcelriyoms";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3d71, // 0.240000 
                    0x28f6, // 0.160000 
                    0x258c, // 0.146667 
                    0x1b4f, // 0.106667 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0da7, // 0.053333 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // bri
            case 0x00697262:
            {
                MKV_DATA char  data_chars[13]   = "dngcmsteaxlz";
                MKV_DATA uint16_t data_weights[12] = {
                    0xa980, // 0.662116 
                    0x14f8, // 0.081911 
                    0x1259, // 0.071672 
                    0x0b5c, // 0.044369 
                    0x08bd, // 0.034130 
                    0x06fd, // 0.027304 
                    0x06fd, // 0.027304 
                    0x045e, // 0.017065 
                    0x037f, // 0.013652 
                    0x029f, // 0.010239 
                    0x01bf, // 0.006826 
                    0x00e0, // 0.003413 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // bro
            case 0x006f7262:
            {
                MKV_DATA char  data_chars[15]   = "oacwmkxutnsybg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x8f64, // 0.560117 
                    0x2349, // 0.137830 
                    0x1445, // 0.079179 
                    0x0e44, // 0.055718 
                    0x0d83, // 0.052786 
                    0x0602, // 0.023460 
                    0x0541, // 0.020528 
                    0x0481, // 0.017595 
                    0x03c1, // 0.014663 
                    0x03c1, // 0.014663 
                    0x0301, // 0.011730 
                    0x0180, // 0.005865 
                    0x00c0, // 0.002933 
                    0x00c0, // 0.002933 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // bru
            case 0x00757262:
            {
                MKV_DATA char  data_chars[8]   = "nsecimt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x79e8, // 0.476190 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // bry
            case 0x00797262:
            {
                MKV_DATA char  data_chars[4]   = "anm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x745d, // 0.454545 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bsb
            case 0x00627362:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsc
            case 0x00637362:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsd
            case 0x00647362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bse
            case 0x00657362:
            {
                MKV_DATA char  data_chars[3]   = "ys";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsh
            case 0x00687362:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bsi
            case 0x00697362:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsl
            case 0x006c7362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsm
            case 0x006d7362:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bso
            case 0x006f7362:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bst
            case 0x00747362:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bsw
            case 0x00777362:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bth
            case 0x00687462:
            {
                MKV_DATA char  data_chars[3]   = "ow";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bto
            case 0x006f7462:
            {
                MKV_DATA char  data_chars[3]   = "nf";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // btr
            case 0x00727462:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bub
            case 0x00627562:
            {
                MKV_DATA char  data_chars[3]   = "bn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buc
            case 0x00637562:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf99a, // 0.975000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bud
            case 0x00647562:
            {
                MKV_DATA char  data_chars[10]   = "lbewadgvo";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // bue
            case 0x00657562:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // buf
            case 0x00667562:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bug
            case 0x00677562:
            {
                MKV_DATA char  data_chars[4]   = "lbf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // bui
            case 0x00697562:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bul
            case 0x006c7562:
            {
                MKV_DATA char  data_chars[13]   = "lbkvwfmpstoc";
                MKV_DATA uint16_t data_weights[12] = {
                    0x8000, // 0.500000 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // bum
            case 0x006d7562:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bun
            case 0x006e7562:
            {
                MKV_DATA char  data_chars[9]   = "tbkscnwg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // bur
            case 0x00727562:
            {
                MKV_DATA char  data_chars[18]   = "yngrtlscwbfmdpeih";
                MKV_DATA uint16_t data_weights[17] = {
                    0x8576, // 0.521327 
                    0x2f51, // 0.184834 
                    0x15d7, // 0.085308 
                    0x0d59, // 0.052133 
                    0x0a50, // 0.040284 
                    0x0919, // 0.035545 
                    0x06ac, // 0.026066 
                    0x03a4, // 0.014218 
                    0x0308, // 0.011848 
                    0x0137, // 0.004739 
                    0x0137, // 0.004739 
                    0x0137, // 0.004739 
                    0x0137, // 0.004739 
                    0x009b, // 0.002370 
                    0x009b, // 0.002370 
                    0x009b, // 0.002370 
                    0x009b, // 0.002370 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // bus
            case 0x00737562:
            {
                MKV_DATA char  data_chars[10]   = "htcsbklvy";
                MKV_DATA uint16_t data_weights[9] = {
                    0xaaab, // 0.666667 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // but
            case 0x00747562:
            {
                MKV_DATA char  data_chars[5]   = "tlcs";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb4b5, // 0.705882 
                    0x34b5, // 0.205882 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // bux
            case 0x00787562:
            {
                MKV_DATA char  data_chars[4]   = "thw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // buz
            case 0x007a7562:
            {
                MKV_DATA char  data_chars[3]   = "zd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bwa
            case 0x00617762:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bwe
            case 0x00657762:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bwi
            case 0x00697762:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bwo
            case 0x006f7762:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bya
            case 0x00617962:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byb
            case 0x00627962:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byc
            case 0x00637962:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bye
            case 0x00657962:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byf
            case 0x00667962:
            {
                MKV_DATA char  data_chars[4]   = "ilo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // byg
            case 0x00677962:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byh
            case 0x00687962:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byk
            case 0x006b7962:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byl
            case 0x006c7962:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byn
            case 0x006e7962:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byr
            case 0x00727962:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // bys
            case 0x00737962:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byt
            case 0x00747962:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // byw
            case 0x00777962:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // b
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'c':
        {
            switch ( trigram_u32 )
            {
            // cab
            case 0x00626163:
            {
                MKV_DATA char  data_chars[6]   = "biouy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cac
            case 0x00636163:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cad
            case 0x00646163:
            {
                MKV_DATA char  data_chars[12]   = "endismwlbgj";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // cae
            case 0x00656163:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // caf
            case 0x00666163:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cag
            case 0x00676163:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cai
            case 0x00696163:
            {
                MKV_DATA char  data_chars[4]   = "snt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cak
            case 0x006b6163:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cal
            case 0x006c6163:
            {
                MKV_DATA char  data_chars[17]   = "dlevcftsmornbika";
                MKV_DATA uint16_t data_weights[16] = {
                    0x34b5, // 0.205882 
                    0x30f1, // 0.191176 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // cam
            case 0x006d6163:
            {
                MKV_DATA char  data_chars[7]   = "pbeodm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5307, // 0.324324 
                    0x5307, // 0.324324 
                    0x4530, // 0.270270 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // can
            case 0x006e6163:
            {
                MKV_DATA char  data_chars[13]   = "ntoaedfhgwvl";
                MKV_DATA uint16_t data_weights[12] = {
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x26f5, // 0.152174 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // cap
            case 0x00706163:
            {
                MKV_DATA char  data_chars[6]   = "elths";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // car
            case 0x00726163:
            {
                MKV_DATA char  data_chars[22]   = "nrltdbescgpwhakioyfmz";
                MKV_DATA uint16_t data_weights[21] = {
                    0x233b, // 0.137615 
                    0x20e1, // 0.128440 
                    0x20e1, // 0.128440 
                    0x1c2f, // 0.110092 
                    0x177c, // 0.091743 
                    0x0bbe, // 0.045872 
                    0x0bbe, // 0.045872 
                    0x0bbe, // 0.045872 
                    0x0965, // 0.036697 
                    0x0965, // 0.036697 
                    0x070c, // 0.027523 
                    0x070c, // 0.027523 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // cas
            case 0x00736163:
            {
                MKV_DATA char  data_chars[6]   = "tshwg";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc7ce, // 0.780488 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cat
            case 0x00746163:
            {
                MKV_DATA char  data_chars[13]   = "thcsflmeobwi";
                MKV_DATA uint16_t data_weights[12] = {
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x26f5, // 0.152174 
                    0x26f5, // 0.152174 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // cau
            case 0x00756163:
            {
                MKV_DATA char  data_chars[6]   = "snldt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cav
            case 0x00766163:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // caw
            case 0x00776163:
            {
                MKV_DATA char  data_chars[5]   = "stbk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cax
            case 0x00786163:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cay
            case 0x00796163:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cca
            case 0x00616363:
            {
                MKV_DATA char  data_chars[4]   = "dns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cce
            case 0x00656363:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cch
            case 0x00686363:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ccl
            case 0x006c6363:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cco
            case 0x006f6363:
            {
                MKV_DATA char  data_chars[5]   = "mltn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ccr
            case 0x00726363:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cdo
            case 0x006f6463:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cea
            case 0x00616563:
            {
                MKV_DATA char  data_chars[4]   = "tun";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ceb
            case 0x00626563:
            {
                MKV_DATA char  data_chars[4]   = "yro";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cec
            case 0x00636563:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ced
            case 0x00646563:
            {
                MKV_DATA char  data_chars[3]   = "do";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cef
            case 0x00666563:
            {
                MKV_DATA char  data_chars[4]   = "noi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ceg
            case 0x00676563:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ceh
            case 0x00686563:
            {
                MKV_DATA char  data_chars[4]   = "aou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cel
            case 0x006c6563:
            {
                MKV_DATA char  data_chars[5]   = "leot";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cem
            case 0x006d6563:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cen
            case 0x006e6563:
            {
                MKV_DATA char  data_chars[4]   = "tos";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cep
            case 0x00706563:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cer
            case 0x00726563:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ces
            case 0x00736563:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe1e2, // 0.882353 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cet
            case 0x00746563:
            {
                MKV_DATA char  data_chars[4]   = "tho";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ceu
            case 0x00756563:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cew
            case 0x00776563:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cha
            case 0x00616863:
            {
                MKV_DATA char  data_chars[20]   = "rmldtpncweisvuyfgxz";
                MKV_DATA uint16_t data_weights[19] = {
                    0x4000, // 0.250000 
                    0x2b79, // 0.169811 
                    0x256f, // 0.146226 
                    0x1487, // 0.080189 
                    0x1352, // 0.075472 
                    0x1352, // 0.075472 
                    0x09a9, // 0.037736 
                    0x073f, // 0.028302 
                    0x073f, // 0.028302 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                    0x0135, // 0.004717 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // chb
            case 0x00626863:
            {
                MKV_DATA char  data_chars[6]   = "oreua";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // chc
            case 0x00636863:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chd
            case 0x00646863:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // che
            case 0x00656863:
            {
                MKV_DATA char  data_chars[17]   = "slrtndvayqcgwemb";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4d6d, // 0.302439 
                    0x3473, // 0.204878 
                    0x1cb9, // 0.112195 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x0dbd, // 0.053659 
                    0x09fe, // 0.039024 
                    0x077e, // 0.029268 
                    0x04ff, // 0.019512 
                    0x03bf, // 0.014634 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x0140, // 0.004878 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // chf
            case 0x00666863:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9746, // 0.590909 
                    0x68ba, // 0.409091 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chg
            case 0x00676863:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chh
            case 0x00686863:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chi
            case 0x00696863:
            {
                MKV_DATA char  data_chars[13]   = "lnstpcdvremg";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5867, // 0.345324 
                    0x3aef, // 0.230216 
                    0x1442, // 0.079137 
                    0x126b, // 0.071942 
                    0x1093, // 0.064748 
                    0x1093, // 0.064748 
                    0x0ebc, // 0.057554 
                    0x0586, // 0.021583 
                    0x0586, // 0.021583 
                    0x03af, // 0.014388 
                    0x03af, // 0.014388 
                    0x03af, // 0.014388 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // chl
            case 0x006c6863:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chm
            case 0x006d6863:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9000, // 0.562500 
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // chn
            case 0x006e6863:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cho
            case 0x006f6863:
            {
                MKV_DATA char  data_chars[9]   = "lrvwpoub";
                MKV_DATA uint16_t data_weights[8] = {
                    0x745d, // 0.454545 
                    0x3e10, // 0.242424 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // chr
            case 0x00726863:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chs
            case 0x00736863:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cht
            case 0x00746863:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chu
            case 0x00756863:
            {
                MKV_DATA char  data_chars[8]   = "rcbdlnt";
                MKV_DATA uint16_t data_weights[7] = {
                    0xe4d9, // 0.893939 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // chv
            case 0x00766863:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // chw
            case 0x00776863:
            {
                MKV_DATA char  data_chars[5]   = "oiae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // chy
            case 0x00796863:
            {
                MKV_DATA char  data_chars[5]   = "anvc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cia
            case 0x00616963:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cil
            case 0x006c6963:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cin
            case 0x006e6963:
            {
                MKV_DATA char  data_chars[5]   = "dgnq";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cip
            case 0x00706963:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cir
            case 0x00726963:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cis
            case 0x00736963:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cit
            case 0x00746963:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cka
            case 0x00616b63:
            {
                MKV_DATA char  data_chars[6]   = "rwybm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckb
            case 0x00626b63:
            {
                MKV_DATA char  data_chars[7]   = "ruoeya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x47ae, // 0.280000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ckc
            case 0x00636b63:
            {
                MKV_DATA char  data_chars[4]   = "rel";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ckd
            case 0x00646b63:
            {
                MKV_DATA char  data_chars[6]   = "eyioa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cke
            case 0x00656b63:
            {
                MKV_DATA char  data_chars[6]   = "rntyd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7925, // 0.473214 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x0492, // 0.017857 
                    0x0249, // 0.008929 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckf
            case 0x00666b63:
            {
                MKV_DATA char  data_chars[6]   = "oiaer";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x41a4, // 0.256410 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckg
            case 0x00676b63:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckh
            case 0x00686b63:
            {
                MKV_DATA char  data_chars[6]   = "aoieu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8c63, // 0.548387 
                    0x294a, // 0.161290 
                    0x2529, // 0.145161 
                    0x14a5, // 0.080645 
                    0x1084, // 0.064516 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cki
            case 0x00696b63:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfac7, // 0.979592 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckj
            case 0x006a6b63:
            {
                return 'a';
            }
            break;

            // ckk
            case 0x006b6b63:
            {
                return 'i';
            }
            break;

            // ckl
            case 0x006c6b63:
            {
                MKV_DATA char  data_chars[6]   = "eaiof";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb067, // 0.689076 
                    0x28e0, // 0.159664 
                    0x19d1, // 0.100840 
                    0x0ac2, // 0.042017 
                    0x0227, // 0.008403 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ckm
            case 0x006d6b63:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6f4e, // 0.434783 
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x2164, // 0.130435 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ckn
            case 0x006e6b63:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8c63, // 0.548387 
                    0x4211, // 0.258065 
                    0x318c, // 0.193548 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cko
            case 0x006f6b63:
            {
                MKV_DATA char  data_chars[8]   = "lnosvae";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ckp
            case 0x00706b63:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckr
            case 0x00726b63:
            {
                MKV_DATA char  data_chars[6]   = "ioaeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cks
            case 0x00736b63:
            {
                MKV_DATA char  data_chars[15]   = "thfgabwikldncm";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4c1c, // 0.297297 
                    0x3e45, // 0.243243 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ckt
            case 0x00746b63:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cku
            case 0x00756b63:
            {
                MKV_DATA char  data_chars[3]   = "pg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ckw
            case 0x00776b63:
            {
                MKV_DATA char  data_chars[5]   = "oeai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x61e2, // 0.382353 
                    0x52d3, // 0.323529 
                    0x25a6, // 0.147059 
                    0x25a6, // 0.147059 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cky
            case 0x00796b63:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cla
            case 0x00616c63:
            {
                MKV_DATA char  data_chars[15]   = "yrvpntwxcdzuim";
                MKV_DATA uint16_t data_weights[14] = {
                    0x49b2, // 0.287879 
                    0x2aab, // 0.166667 
                    0x1f08, // 0.121212 
                    0x1b27, // 0.106061 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // cle
            case 0x00656c63:
            {
                MKV_DATA char  data_chars[17]   = "easrvnwmutyodgch";
                MKV_DATA uint16_t data_weights[16] = {
                    0x2925, // 0.160714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x16db, // 0.089286 
                    0x16db, // 0.089286 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // cli
            case 0x00696c63:
            {
                MKV_DATA char  data_chars[12]   = "fptdnvmscxb";
                MKV_DATA uint16_t data_weights[11] = {
                    0xbb7e, // 0.732394 
                    0x1207, // 0.070423 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // clo
            case 0x006f6c63:
            {
                MKV_DATA char  data_chars[11]   = "uswptvdacf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6eb4, // 0.432432 
                    0x375a, // 0.216216 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // clu
            case 0x00756c63:
            {
                MKV_DATA char  data_chars[6]   = "nbmtd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cly
            case 0x00796c63:
            {
                MKV_DATA char  data_chars[3]   = "sf";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // coa
            case 0x00616f63:
            {
                MKV_DATA char  data_chars[7]   = "ltdnrs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7555, // 0.458333 
                    0x6000, // 0.375000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // cob
            case 0x00626f63:
            {
                MKV_DATA char  data_chars[9]   = "bshldenr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // coc
            case 0x00636f63:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cod
            case 0x00646f63:
            {
                MKV_DATA char  data_chars[8]   = "sdrfimn";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // coe
            case 0x00656f63:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cof
            case 0x00666f63:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cog
            case 0x00676f63:
            {
                MKV_DATA char  data_chars[4]   = "geo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cok
            case 0x006b6f63:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // col
            case 0x006c6f63:
            {
                MKV_DATA char  data_chars[21]   = "eldntwsauykvgicomhpb";
                MKV_DATA uint16_t data_weights[20] = {
                    0x38e4, // 0.222222 
                    0x3685, // 0.212963 
                    0x284c, // 0.157407 
                    0x1555, // 0.083333 
                    0x1098, // 0.064815 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // com
            case 0x006d6f63:
            {
                MKV_DATA char  data_chars[9]   = "bmpfehol";
                MKV_DATA uint16_t data_weights[8] = {
                    0xe487, // 0.892683 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x027f, // 0.009756 
                    0x027f, // 0.009756 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                    0x0140, // 0.004878 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // con
            case 0x006e6f63:
            {
                MKV_DATA char  data_chars[17]   = "sgdienhbqtyfwkco";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3333, // 0.200000 
                    0x23d7, // 0.140000 
                    0x1eb8, // 0.120000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // coo
            case 0x006f6f63:
            {
                MKV_DATA char  data_chars[8]   = "kmlpstd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x57c5, // 0.342857 
                    0x57c5, // 0.342857 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // cop
            case 0x00706f63:
            {
                MKV_DATA char  data_chars[14]   = "ptsleydwfinmc";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5307, // 0.324324 
                    0x306f, // 0.189189 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // cor
            case 0x00726f63:
            {
                MKV_DATA char  data_chars[15]   = "nbsryueltdfghp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5ed1, // 0.370370 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // cos
            case 0x00736f63:
            {
                MKV_DATA char  data_chars[11]   = "tsbefgmwch";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // cot
            case 0x00746f63:
            {
                MKV_DATA char  data_chars[16]   = "tehlmswofnbgcyi";
                MKV_DATA uint16_t data_weights[15] = {
                    0x9340, // 0.575188 
                    0x52c4, // 0.323308 
                    0x05c6, // 0.022556 
                    0x02e3, // 0.011278 
                    0x02e3, // 0.011278 
                    0x02e3, // 0.011278 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                    0x00f6, // 0.003759 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // cou
            case 0x00756f63:
            {
                MKV_DATA char  data_chars[9]   = "rnglcpst";
                MKV_DATA uint16_t data_weights[8] = {
                    0x677d, // 0.404255 
                    0x415d, // 0.255319 
                    0x1b3c, // 0.106383 
                    0x1b3c, // 0.106383 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // cov
            case 0x00766f63:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cow
            case 0x00776f63:
            {
                MKV_DATA char  data_chars[11]   = "lepabghdsf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4b4b, // 0.294118 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // cox
            case 0x00786f63:
            {
                MKV_DATA char  data_chars[11]   = "blhptwfsag";
                MKV_DATA uint16_t data_weights[10] = {
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // coy
            case 0x00796f63:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cra
            case 0x00617263:
            {
                MKV_DATA char  data_chars[18]   = "nbciwpsyfdgtkmvhz";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5333, // 0.325000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x099a, // 0.037500 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // cre
            case 0x00657263:
            {
                MKV_DATA char  data_chars[12]   = "sewadnmtilv";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4d48, // 0.301887 
                    0x4d48, // 0.301887 
                    0x1827, // 0.094340 
                    0x1827, // 0.094340 
                    0x1352, // 0.075472 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // cri
            case 0x00697263:
            {
                MKV_DATA char  data_chars[13]   = "cmptvznsbdfg";
                MKV_DATA uint16_t data_weights[12] = {
                    0x41a4, // 0.256410 
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // cro
            case 0x006f7263:
            {
                MKV_DATA char  data_chars[16]   = "sfwocxumpangyez";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4f45, // 0.309645 
                    0x33fb, // 0.203046 
                    0x2c2f, // 0.172589 
                    0x10e5, // 0.065990 
                    0x0e4b, // 0.055838 
                    0x0a65, // 0.040609 
                    0x07cc, // 0.030457 
                    0x07cc, // 0.030457 
                    0x067f, // 0.025381 
                    0x03e6, // 0.015228 
                    0x03e6, // 0.015228 
                    0x0299, // 0.010152 
                    0x0299, // 0.010152 
                    0x0299, // 0.010152 
                    0x014d, // 0.005076 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // cru
            case 0x00757263:
            {
                MKV_DATA char  data_chars[10]   = "mxcdibgnw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // cry
            case 0x00797263:
            {
                MKV_DATA char  data_chars[4]   = "sae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cst
            case 0x00747363:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cti
            case 0x00697463:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cto
            case 0x006f7463:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc4ec, // 0.769231 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cub
            case 0x00627563:
            {
                MKV_DATA char  data_chars[5]   = "libe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // cuc
            case 0x00637563:
            {
                MKV_DATA char  data_chars[3]   = "ku";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cud
            case 0x00647563:
            {
                MKV_DATA char  data_chars[6]   = "dhlwa";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cue
            case 0x00657563:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cuf
            case 0x00667563:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cug
            case 0x00677563:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cui
            case 0x00697563:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cuk
            case 0x006b7563:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cul
            case 0x006c7563:
            {
                MKV_DATA char  data_chars[13]   = "mvlfckpteghw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // cum
            case 0x006d7563:
            {
                MKV_DATA char  data_chars[9]   = "bwademrn";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // cun
            case 0x006e7563:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // cup
            case 0x00707563:
            {
                MKV_DATA char  data_chars[4]   = "eis";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cur
            case 0x00727563:
            {
                MKV_DATA char  data_chars[10]   = "ltrbdegny";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // cus
            case 0x00737563:
            {
                MKV_DATA char  data_chars[6]   = "thovg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // cut
            case 0x00747563:
            {
                MKV_DATA char  data_chars[10]   = "tlmceghns";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6969, // 0.411765 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // cux
            case 0x00787563:
            {
                MKV_DATA char  data_chars[4]   = "htw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // cyr
            case 0x00727963:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // c
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'd':
        {
            switch ( trigram_u32 )
            {
            // dac
            case 0x00636164:
            {
                MKV_DATA char  data_chars[4]   = "ocr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dad
            case 0x00646164:
            {
                MKV_DATA char  data_chars[4]   = "dfl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // daf
            case 0x00666164:
            {
                MKV_DATA char  data_chars[3]   = "fo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dag
            case 0x00676164:
            {
                MKV_DATA char  data_chars[8]   = "deglntw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dai
            case 0x00696164:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dak
            case 0x006b6164:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dal
            case 0x006c6164:
            {
                MKV_DATA char  data_chars[10]   = "elsbmtdhw";
                MKV_DATA uint16_t data_weights[9] = {
                    0xd7e1, // 0.843284 
                    0x16ed, // 0.089552 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x01e9, // 0.007463 
                    0x01e9, // 0.007463 
                    0x01e9, // 0.007463 
                    0x01e9, // 0.007463 
                    0x01e9, // 0.007463 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // dam
            case 0x006d6164:
            {
                MKV_DATA char  data_chars[6]   = "eosag";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dan
            case 0x006e6164:
            {
                MKV_DATA char  data_chars[13]   = "enbcdsziotag";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7777, // 0.466667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // dap
            case 0x00706164:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dar
            case 0x00726164:
            {
                MKV_DATA char  data_chars[17]   = "ltrvwedsbnfcgmyi";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3333, // 0.200000 
                    0x2492, // 0.142857 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // das
            case 0x00736164:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dat
            case 0x00746164:
            {
                MKV_DATA char  data_chars[3]   = "co";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dau
            case 0x00756164:
            {
                MKV_DATA char  data_chars[4]   = "bln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dav
            case 0x00766164:
            {
                MKV_DATA char  data_chars[5]   = "eiyo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // daw
            case 0x00776164:
            {
                MKV_DATA char  data_chars[6]   = "sldep";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // day
            case 0x00796164:
            {
                MKV_DATA char  data_chars[7]   = "wbhrst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dba
            case 0x00616264:
            {
                MKV_DATA char  data_chars[4]   = "nsc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dbe
            case 0x00656264:
            {
                MKV_DATA char  data_chars[5]   = "racn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dbl
            case 0x006c6264:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dbo
            case 0x006f6264:
            {
                MKV_DATA char  data_chars[6]   = "rulta";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7555, // 0.458333 
                    0x6aab, // 0.416667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dbr
            case 0x00726264:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9837, // 0.594595 
                    0x60dd, // 0.378378 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dbu
            case 0x00756264:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe969, // 0.911765 
                    0x1697, // 0.088235 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dby
            case 0x00796264:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dca
            case 0x00616364:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dch
            case 0x00686364:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dcl
            case 0x006c6364:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dco
            case 0x006f6364:
            {
                MKV_DATA char  data_chars[5]   = "tmrc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dcr
            case 0x00726364:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dcu
            case 0x00756364:
            {
                MKV_DATA char  data_chars[3]   = "pt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dda
            case 0x00616464:
            {
                MKV_DATA char  data_chars[9]   = "lmrtvcny";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // dde
            case 0x00656464:
            {
                MKV_DATA char  data_chars[8]   = "nsrtalm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6cf0, // 0.425532 
                    0x46cf, // 0.276596 
                    0x3678, // 0.212766 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ddi
            case 0x00696464:
            {
                MKV_DATA char  data_chars[9]   = "nscltfap";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbdbe, // 0.741176 
                    0x1b1b, // 0.105882 
                    0x1212, // 0.070588 
                    0x0606, // 0.023529 
                    0x0606, // 0.023529 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                    0x0303, // 0.011765 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ddl
            case 0x006c6464:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddo
            case 0x006f6464:
            {
                MKV_DATA char  data_chars[6]   = "ncwxl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9612, // 0.586207 
                    0x3dcb, // 0.241379 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ddr
            case 0x00726464:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dds
            case 0x00736464:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddu
            case 0x00756464:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ddy
            case 0x00796464:
            {
                MKV_DATA char  data_chars[4]   = "wcm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dea
            case 0x00616564:
            {
                MKV_DATA char  data_chars[11]   = "nrtlcdsufh";
                MKV_DATA uint16_t data_weights[10] = {
                    0xaaab, // 0.666667 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // deb
            case 0x00626564:
            {
                MKV_DATA char  data_chars[8]   = "rydloue";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dec
            case 0x00636564:
            {
                MKV_DATA char  data_chars[4]   = "oku";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ded
            case 0x00646564:
            {
                MKV_DATA char  data_chars[4]   = "wdh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dee
            case 0x00656564:
            {
                MKV_DATA char  data_chars[4]   = "pnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // def
            case 0x00666564:
            {
                MKV_DATA char  data_chars[3]   = "of";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // deg
            case 0x00676564:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // deh
            case 0x00686564:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dek
            case 0x006b6564:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // del
            case 0x006c6564:
            {
                MKV_DATA char  data_chars[8]   = "leapvin";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6800, // 0.406250 
                    0x3000, // 0.187500 
                    0x2800, // 0.156250 
                    0x1800, // 0.093750 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dem
            case 0x006d6564:
            {
                MKV_DATA char  data_chars[5]   = "oabe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // den
            case 0x006e6564:
            {
                MKV_DATA char  data_chars[15]   = "hsedbtvnwcfygm";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5295, // 0.322581 
                    0x2ecc, // 0.182796 
                    0x23c9, // 0.139785 
                    0x1606, // 0.086022 
                    0x1084, // 0.064516 
                    0x0b03, // 0.043011 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // deo
            case 0x006f6564:
            {
                MKV_DATA char  data_chars[3]   = "cp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dep
            case 0x00706564:
            {
                MKV_DATA char  data_chars[4]   = "dpt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // der
            case 0x00726564:
            {
                MKV_DATA char  data_chars[15]   = "stbrlnmwhdecfi";
                MKV_DATA uint16_t data_weights[14] = {
                    0x58b1, // 0.346457 
                    0x2449, // 0.141732 
                    0x162c, // 0.086614 
                    0x162c, // 0.086614 
                    0x0e1c, // 0.055118 
                    0x0c18, // 0.047244 
                    0x0c18, // 0.047244 
                    0x0a14, // 0.039370 
                    0x0a14, // 0.039370 
                    0x0810, // 0.031496 
                    0x060c, // 0.023622 
                    0x060c, // 0.023622 
                    0x060c, // 0.023622 
                    0x0204, // 0.007874 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // des
            case 0x00736564:
            {
                MKV_DATA char  data_chars[11]   = "tldbwmhief";
                MKV_DATA uint16_t data_weights[10] = {
                    0x51b4, // 0.319149 
                    0x3678, // 0.212766 
                    0x3105, // 0.191489 
                    0x15ca, // 0.085106 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // det
            case 0x00746564:
            {
                MKV_DATA char  data_chars[5]   = "hclo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // deu
            case 0x00756564:
            {
                MKV_DATA char  data_chars[3]   = "xd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dev
            case 0x00766564:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dew
            case 0x00776564:
            {
                MKV_DATA char  data_chars[6]   = "leyac";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dey
            case 0x00796564:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfa
            case 0x00616664:
            {
                MKV_DATA char  data_chars[4]   = "lis";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dfi
            case 0x00696664:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf45d, // 0.954545 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfo
            case 0x006f6664:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfa0c, // 0.976744 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dfu
            case 0x00756664:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dga
            case 0x00616764:
            {
                MKV_DATA char  data_chars[5]   = "trcl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc5d1, // 0.772727 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dgb
            case 0x00626764:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgc
            case 0x00636764:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgd
            case 0x00646764:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dge
            case 0x00656764:
            {
                MKV_DATA char  data_chars[13]   = "sfhwrbmltyno";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2d2d, // 0.176471 
                    0x2969, // 0.161765 
                    0x21e2, // 0.132353 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // dgf
            case 0x00666764:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgh
            case 0x00686764:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgi
            case 0x00696764:
            {
                MKV_DATA char  data_chars[4]   = "nlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dgl
            case 0x006c6764:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgm
            case 0x006d6764:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgn
            case 0x006e6764:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgr
            case 0x00726764:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dgt
            case 0x00746764:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgu
            case 0x00756764:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgv
            case 0x00766764:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dgw
            case 0x00776764:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dha
            case 0x00616864:
            {
                MKV_DATA char  data_chars[7]   = "mlyrnt";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc798, // 0.779661 
                    0x15b2, // 0.084746 
                    0x115b, // 0.067797 
                    0x08ae, // 0.033898 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dhe
            case 0x00656864:
            {
                MKV_DATA char  data_chars[6]   = "aymdr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dhi
            case 0x00696864:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dho
            case 0x006f6864:
            {
                MKV_DATA char  data_chars[5]   = "leur";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dhu
            case 0x00756864:
            {
                MKV_DATA char  data_chars[4]   = "ris";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdb6e, // 0.857143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dia
            case 0x00616964:
            {
                MKV_DATA char  data_chars[7]   = "ltrcmn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dib
            case 0x00626964:
            {
                MKV_DATA char  data_chars[3]   = "bd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dic
            case 0x00636964:
            {
                MKV_DATA char  data_chars[4]   = "koa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7777, // 0.466667 
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // did
            case 0x00646964:
            {
                MKV_DATA char  data_chars[8]   = "dlcmswb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // die
            case 0x00656964:
            {
                MKV_DATA char  data_chars[3]   = "sv";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dif
            case 0x00666964:
            {
                MKV_DATA char  data_chars[3]   = "of";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dig
            case 0x00676964:
            {
                MKV_DATA char  data_chars[7]   = "bmsagl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dih
            case 0x00686964:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dik
            case 0x006b6964:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dil
            case 0x006c6964:
            {
                MKV_DATA char  data_chars[8]   = "lehstwa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dim
            case 0x006d6964:
            {
                MKV_DATA char  data_chars[6]   = "ospam";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // din
            case 0x006e6964:
            {
                MKV_DATA char  data_chars[12]   = "gentchasdmw";
                MKV_DATA uint16_t data_weights[11] = {
                    0xcccd, // 0.800000 
                    0x18de, // 0.097143 
                    0x08c7, // 0.034286 
                    0x02ed, // 0.011429 
                    0x02ed, // 0.011429 
                    0x02ed, // 0.011429 
                    0x02ed, // 0.011429 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // dip
            case 0x00706964:
            {
                MKV_DATA char  data_chars[6]   = "ptofl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dir
            case 0x00726964:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dis
            case 0x00736964:
            {
                MKV_DATA char  data_chars[12]   = "htcwloebnsf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5e0a, // 0.367347 
                    0x343f, // 0.204082 
                    0x1f59, // 0.122449 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // dit
            case 0x00746964:
            {
                MKV_DATA char  data_chars[5]   = "ctho";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa12f, // 0.629630 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // div
            case 0x00766964:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // diw
            case 0x00776964:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dix
            case 0x00786964:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // diz
            case 0x007a6964:
            {
                MKV_DATA char  data_chars[3]   = "za";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dja
            case 0x00616a64:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dje
            case 0x00656a64:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dke
            case 0x00656b64:
            {
                MKV_DATA char  data_chars[3]   = "yl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dki
            case 0x00696b64:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dla
            case 0x00616c64:
            {
                MKV_DATA char  data_chars[8]   = "nkmrsty";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8ba3, // 0.545455 
                    0x1f08, // 0.121212 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dle
            case 0x00656c64:
            {
                MKV_DATA char  data_chars[15]   = "ystihbwrfmczpd";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5e13, // 0.367470 
                    0x3c25, // 0.234940 
                    0x140c, // 0.078313 
                    0x140c, // 0.078313 
                    0x0c56, // 0.048193 
                    0x0acc, // 0.042169 
                    0x0acc, // 0.042169 
                    0x07b6, // 0.030120 
                    0x062b, // 0.024096 
                    0x04a0, // 0.018072 
                    0x04a0, // 0.018072 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // dli
            case 0x00696c64:
            {
                MKV_DATA char  data_chars[5]   = "npct";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcb09, // 0.793103 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dlo
            case 0x006f6c64:
            {
                MKV_DATA char  data_chars[4]   = "wec";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dly
            case 0x00796c64:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dma
            case 0x00616d64:
            {
                MKV_DATA char  data_chars[6]   = "nrysi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x25ed, // 0.148148 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dme
            case 0x00656d64:
            {
                MKV_DATA char  data_chars[6]   = "ralen";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dmi
            case 0x00696d64:
            {
                MKV_DATA char  data_chars[5]   = "lnsx";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dmo
            case 0x006f6d64:
            {
                MKV_DATA char  data_chars[6]   = "ronsu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7000, // 0.437500 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dmu
            case 0x00756d64:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dna
            case 0x00616e64:
            {
                MKV_DATA char  data_chars[7]   = "lcgmns";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7777, // 0.466667 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dne
            case 0x00656e64:
            {
                MKV_DATA char  data_chars[6]   = "ystwl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x90b2, // 0.565217 
                    0x42c8, // 0.260870 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dni
            case 0x00696e64:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dno
            case 0x006f6e64:
            {
                MKV_DATA char  data_chars[6]   = "rclop";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa2e9, // 0.636364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // doa
            case 0x00616f64:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dob
            case 0x00626f64:
            {
                MKV_DATA char  data_chars[4]   = "bsw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // doc
            case 0x00636f64:
            {
                MKV_DATA char  data_chars[4]   = "kct";
                MKV_DATA uint16_t data_weights[3] = {
                    0xed09, // 0.925926 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dod
            case 0x00646f64:
            {
                MKV_DATA char  data_chars[8]   = "dsmbfil";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7627, // 0.461538 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // doe
            case 0x00656f64:
            {
                MKV_DATA char  data_chars[3]   = "hb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dof
            case 0x00666f64:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dog
            case 0x00676f64:
            {
                MKV_DATA char  data_chars[6]   = "sdgim";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dol
            case 0x006c6f64:
            {
                MKV_DATA char  data_chars[7]   = "epgltv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dom
            case 0x006d6f64:
            {
                MKV_DATA char  data_chars[5]   = "esim";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // don
            case 0x006e6f64:
            {
                MKV_DATA char  data_chars[13]   = "sibhnwtydegk";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // doo
            case 0x006f6f64:
            {
                MKV_DATA char  data_chars[3]   = "mr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dor
            case 0x00726f64:
            {
                MKV_DATA char  data_chars[13]   = "msderckntlva";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // dos
            case 0x00736f64:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dot
            case 0x00746f64:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dou
            case 0x00756f64:
            {
                MKV_DATA char  data_chars[6]   = "rbgls";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dov
            case 0x00766f64:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf0f1, // 0.941176 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dow
            case 0x00776f64:
            {
                MKV_DATA char  data_chars[10]   = "nslbdetaf";
                MKV_DATA uint16_t data_weights[9] = {
                    0xd000, // 0.812500 
                    0x0d55, // 0.052083 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // dox
            case 0x00786f64:
            {
                MKV_DATA char  data_chars[4]   = "hfe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // doy
            case 0x00796f64:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpa
            case 0x00617064:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpi
            case 0x00697064:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpl
            case 0x006c7064:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dpo
            case 0x006f7064:
            {
                MKV_DATA char  data_chars[5]   = "norl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dra
            case 0x00617264:
            {
                MKV_DATA char  data_chars[10]   = "kybgwmsup";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // dre
            case 0x00657264:
            {
                MKV_DATA char  data_chars[9]   = "wsdatlny";
                MKV_DATA uint16_t data_weights[8] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // dri
            case 0x00697264:
            {
                MKV_DATA char  data_chars[12]   = "dnfsvcpzbgm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x63e7, // 0.390244 
                    0x44af, // 0.268293 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // dro
            case 0x006f7264:
            {
                MKV_DATA char  data_chars[11]   = "npivbcowxy";
                MKV_DATA uint16_t data_weights[10] = {
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // dru
            case 0x00757264:
            {
                MKV_DATA char  data_chars[8]   = "mripstg";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dry
            case 0x00797264:
            {
                MKV_DATA char  data_chars[6]   = "mbhnt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dsa
            case 0x00617364:
            {
                MKV_DATA char  data_chars[4]   = "lcn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dsb
            case 0x00627364:
            {
                MKV_DATA char  data_chars[5]   = "uroy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dsc
            case 0x00637364:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsd
            case 0x00647364:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dse
            case 0x00657364:
            {
                MKV_DATA char  data_chars[6]   = "yantl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dsf
            case 0x00667364:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsg
            case 0x00677364:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsh
            case 0x00687364:
            {
                MKV_DATA char  data_chars[6]   = "iaeou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x6276, // 0.384615 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dsi
            case 0x00697364:
            {
                MKV_DATA char  data_chars[4]   = "dnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dsl
            case 0x006c7364:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dsm
            case 0x006d7364:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dso
            case 0x006f7364:
            {
                MKV_DATA char  data_chars[6]   = "rnmcl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // dsp
            case 0x00707364:
            {
                MKV_DATA char  data_chars[4]   = "ear";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dst
            case 0x00747364:
            {
                MKV_DATA char  data_chars[5]   = "oare";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe5e1, // 0.897959 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dsw
            case 0x00777364:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x79e8, // 0.476190 
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dta
            case 0x00617464:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dth
            case 0x00687464:
            {
                MKV_DATA char  data_chars[3]   = "ow";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dto
            case 0x006f7464:
            {
                MKV_DATA char  data_chars[4]   = "nwf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dtw
            case 0x00777464:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dty
            case 0x00797464:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dub
            case 0x00627564:
            {
                MKV_DATA char  data_chars[4]   = "lmw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // duc
            case 0x00637564:
            {
                MKV_DATA char  data_chars[4]   = "kit";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dud
            case 0x00647564:
            {
                MKV_DATA char  data_chars[5]   = "dlsb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // due
            case 0x00657564:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duf
            case 0x00667564:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // duk
            case 0x006b7564:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dul
            case 0x006c7564:
            {
                MKV_DATA char  data_chars[8]   = "povwcfl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // dum
            case 0x006d7564:
            {
                MKV_DATA char  data_chars[4]   = "pbm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dun
            case 0x006e7564:
            {
                MKV_DATA char  data_chars[15]   = "sntchkdgwmblfv";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4b8a, // 0.295082 
                    0x2193, // 0.131148 
                    0x14fc, // 0.081967 
                    0x14fc, // 0.081967 
                    0x10c9, // 0.065574 
                    0x10c9, // 0.065574 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // dur
            case 0x00727564:
            {
                MKV_DATA char  data_chars[11]   = "nlrghswvyd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // dus
            case 0x00737564:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dut
            case 0x00747564:
            {
                MKV_DATA char  data_chars[5]   = "ostc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dux
            case 0x00787564:
            {
                MKV_DATA char  data_chars[3]   = "fm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dva
            case 0x00617664:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dve
            case 0x00657664:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dvi
            case 0x00697664:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dvr
            case 0x00727664:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwa
            case 0x00617764:
            {
                MKV_DATA char  data_chars[7]   = "yltrsd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5f16, // 0.371429 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2492, // 0.142857 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // dwe
            case 0x00657764:
            {
                MKV_DATA char  data_chars[4]   = "lny";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf22a, // 0.945946 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dwh
            case 0x00687764:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwi
            case 0x00697764:
            {
                MKV_DATA char  data_chars[5]   = "cntd";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa12f, // 0.629630 
                    0x425f, // 0.259259 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // dwo
            case 0x006f7764:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xacf9, // 0.675676 
                    0x5307, // 0.324324 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dwy
            case 0x00797764:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dya
            case 0x00617964:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyb
            case 0x00627964:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyc
            case 0x00637964:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dye
            case 0x00657964:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyf
            case 0x00667964:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyg
            case 0x00677964:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyh
            case 0x00687964:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyk
            case 0x006b7964:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyl
            case 0x006c7964:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dym
            case 0x006d7964:
            {
                MKV_DATA char  data_chars[4]   = "opc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // dyo
            case 0x006f7964:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyr
            case 0x00727964:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dyw
            case 0x00777964:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // dzo
            case 0x006f7a64:
            {
                MKV_DATA char  data_chars[3]   = "ry";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // d
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'e':
        {
            switch ( trigram_u32 )
            {
            // eab
            case 0x00626165:
            {
                MKV_DATA char  data_chars[4]   = "ruo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eac
            case 0x00636165:
            {
                MKV_DATA char  data_chars[6]   = "horet";
                MKV_DATA uint16_t data_weights[5] = {
                    0x989e, // 0.596154 
                    0x4000, // 0.250000 
                    0x189e, // 0.096154 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ead
            case 0x00646165:
            {
                MKV_DATA char  data_chars[14]   = "oslyiebmngwcd";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3878, // 0.220588 
                    0x34b5, // 0.205882 
                    0x21e2, // 0.132353 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // eaf
            case 0x00666165:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eag
            case 0x00676165:
            {
                MKV_DATA char  data_chars[6]   = "lreiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eah
            case 0x00686165:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eak
            case 0x006b6165:
            {
                MKV_DATA char  data_chars[6]   = "eslri";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eal
            case 0x006c6165:
            {
                MKV_DATA char  data_chars[14]   = "esdibatmrlohy";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3ca2, // 0.236842 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // eam
            case 0x006d6165:
            {
                MKV_DATA char  data_chars[7]   = "oisbeh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ean
            case 0x006e6165:
            {
                MKV_DATA char  data_chars[11]   = "slteioabfh";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // eap
            case 0x00706165:
            {
                MKV_DATA char  data_chars[7]   = "sghlwf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ear
            case 0x00726165:
            {
                MKV_DATA char  data_chars[15]   = "snedltmhbwciyp";
                MKV_DATA uint16_t data_weights[14] = {
                    0x2d5e, // 0.177215 
                    0x2a20, // 0.164557 
                    0x2068, // 0.126582 
                    0x2068, // 0.126582 
                    0x2068, // 0.126582 
                    0x1d2a, // 0.113924 
                    0x09b9, // 0.037975 
                    0x067b, // 0.025316 
                    0x067b, // 0.025316 
                    0x067b, // 0.025316 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // eas
            case 0x00736165:
            {
                MKV_DATA char  data_chars[13]   = "teliabdhogcm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x8f0f, // 0.558824 
                    0x25a6, // 0.147059 
                    0x1414, // 0.078431 
                    0x0a0a, // 0.039216 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                    0x0283, // 0.009804 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // eat
            case 0x00746165:
            {
                MKV_DATA char  data_chars[14]   = "holfesagnwcim";
                MKV_DATA uint16_t data_weights[13] = {
                    0xa506, // 0.644628 
                    0x30a9, // 0.190083 
                    0x0cb2, // 0.049587 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x043b, // 0.016529 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                    0x021e, // 0.008264 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // eau
            case 0x00756165:
            {
                MKV_DATA char  data_chars[11]   = "cxdgvlsmrw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // eav
            case 0x00766165:
            {
                MKV_DATA char  data_chars[5]   = "eiay";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcccd, // 0.800000 
                    0x2492, // 0.142857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eaw
            case 0x00776165:
            {
                MKV_DATA char  data_chars[4]   = "loi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eaz
            case 0x007a6165:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eba
            case 0x00616265:
            {
                MKV_DATA char  data_chars[7]   = "nrtcsy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x599a, // 0.350000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ebb
            case 0x00626265:
            {
                MKV_DATA char  data_chars[7]   = "eiuyls";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ebc
            case 0x00636265:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebd
            case 0x00646265:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ebe
            case 0x00656265:
            {
                MKV_DATA char  data_chars[7]   = "rclntd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x638e, // 0.388889 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ebf
            case 0x00666265:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebh
            case 0x00686265:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebi
            case 0x00696265:
            {
                MKV_DATA char  data_chars[4]   = "nrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ebl
            case 0x006c6265:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebm
            case 0x006d6265:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebn
            case 0x006e6265:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ebo
            case 0x006f6265:
            {
                MKV_DATA char  data_chars[8]   = "ruwlnti";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ebr
            case 0x00726265:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x6ccd, // 0.425000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ebs
            case 0x00736265:
            {
                MKV_DATA char  data_chars[6]   = "cehiw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ebu
            case 0x00756265:
            {
                MKV_DATA char  data_chars[5]   = "rsdl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe0f8, // 0.878788 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ebw
            case 0x00776265:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eby
            case 0x00796265:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eca
            case 0x00616365:
            {
                MKV_DATA char  data_chars[4]   = "rms";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ecc
            case 0x00636365:
            {
                MKV_DATA char  data_chars[4]   = "loh";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ecd
            case 0x00646365:
            {
                return 'o';
            }
            break;

            // ech
            case 0x00686365:
            {
                MKV_DATA char  data_chars[11]   = "euflmacgiw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // eck
            case 0x006b6365:
            {
                MKV_DATA char  data_chars[15]   = "ieflhnwdcjbtsg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3216, // 0.195652 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ecl
            case 0x006c6365:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eco
            case 0x006f6365:
            {
                MKV_DATA char  data_chars[7]   = "tmnouc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8788, // 0.529412 
                    0x52d3, // 0.323529 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ecr
            case 0x00726365:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ect
            case 0x00746365:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ecu
            case 0x00756365:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eda
            case 0x00616465:
            {
                MKV_DATA char  data_chars[5]   = "lnuv";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcccd, // 0.800000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // edb
            case 0x00626465:
            {
                MKV_DATA char  data_chars[4]   = "uor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edc
            case 0x00636465:
            {
                MKV_DATA char  data_chars[4]   = "hlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edd
            case 0x00646465:
            {
                MKV_DATA char  data_chars[6]   = "ioale";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa222, // 0.633333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ede
            case 0x00656465:
            {
                MKV_DATA char  data_chars[6]   = "nsatr";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb6db, // 0.714286 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edf
            case 0x00666465:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edg
            case 0x00676465:
            {
                MKV_DATA char  data_chars[12]   = "eirwclabmtd";
                MKV_DATA uint16_t data_weights[11] = {
                    0xa81f, // 0.656716 
                    0x0f49, // 0.059701 
                    0x0f49, // 0.059701 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // edh
            case 0x00686465:
            {
                MKV_DATA char  data_chars[4]   = "aui";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edi
            case 0x00696465:
            {
                MKV_DATA char  data_chars[6]   = "ntsac";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa7b9, // 0.655172 
                    0x234f, // 0.137931 
                    0x234f, // 0.137931 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edl
            case 0x006c6465:
            {
                MKV_DATA char  data_chars[6]   = "aeiyo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5b6e, // 0.357143 
                    0x5249, // 0.321429 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edm
            case 0x006d6465:
            {
                MKV_DATA char  data_chars[6]   = "ouaie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6bca, // 0.421053 
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edn
            case 0x006e6465:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // edo
            case 0x006f6465:
            {
                MKV_DATA char  data_chars[6]   = "nwrmc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8348, // 0.512821 
                    0x5be6, // 0.358974 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edr
            case 0x00726465:
            {
                MKV_DATA char  data_chars[4]   = "aiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eds
            case 0x00736465:
            {
                MKV_DATA char  data_chars[6]   = "thfmo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edt
            case 0x00746465:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edu
            case 0x00756465:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edv
            case 0x00766465:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // edw
            case 0x00776465:
            {
                MKV_DATA char  data_chars[6]   = "oeaiy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // edz
            case 0x007a6465:
            {
                return 'o';
            }
            break;

            // eeb
            case 0x00626565:
            {
                MKV_DATA char  data_chars[4]   = "yio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eec
            case 0x00636565:
            {
                MKV_DATA char  data_chars[5]   = "hera";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb8e4, // 0.722222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eed
            case 0x00646565:
            {
                MKV_DATA char  data_chars[10]   = "syolwhiaf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3555, // 0.208333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // eee
            case 0x00656565:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eef
            case 0x00666565:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eeg
            case 0x00676565:
            {
                MKV_DATA char  data_chars[4]   = "beo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eeh
            case 0x00686565:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eek
            case 0x006b6565:
            {
                MKV_DATA char  data_chars[7]   = "mlsibe";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eel
            case 0x006c6565:
            {
                MKV_DATA char  data_chars[7]   = "eaosbt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eem
            case 0x006d6565:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // een
            case 0x006e6565:
            {
                MKV_DATA char  data_chars[17]   = "shwdelbmfgtoraci";
                MKV_DATA uint16_t data_weights[16] = {
                    0x357e, // 0.208955 
                    0x31ac, // 0.194030 
                    0x16ed, // 0.089552 
                    0x131b, // 0.074627 
                    0x131b, // 0.074627 
                    0x131b, // 0.074627 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // eep
            case 0x00706565:
            {
                MKV_DATA char  data_chars[14]   = "ldichswrbtyfe";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // eer
            case 0x00726565:
            {
                MKV_DATA char  data_chars[10]   = "ishatwben";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ees
            case 0x00736565:
            {
                MKV_DATA char  data_chars[10]   = "tadobghwm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // eet
            case 0x00746565:
            {
                MKV_DATA char  data_chars[10]   = "hoeilswbv";
                MKV_DATA uint16_t data_weights[9] = {
                    0x63e7, // 0.390244 
                    0x2bb5, // 0.170732 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // eev
            case 0x00766565:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eew
            case 0x00776565:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eez
            case 0x007a6565:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efa
            case 0x00616665:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eff
            case 0x00666665:
            {
                MKV_DATA char  data_chars[7]   = "oilcer";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // efi
            case 0x00696665:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efl
            case 0x006c6665:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // efo
            case 0x006f6665:
            {
                MKV_DATA char  data_chars[6]   = "roldn";
                MKV_DATA uint16_t data_weights[5] = {
                    0xdc12, // 0.859649 
                    0x11f7, // 0.070175 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // efr
            case 0x00726665:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eft
            case 0x00746665:
            {
                MKV_DATA char  data_chars[3]   = "ow";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ega
            case 0x00616765:
            {
                MKV_DATA char  data_chars[9]   = "trdijmvy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9e7a, // 0.619048 
                    0x30c3, // 0.190476 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // egb
            case 0x00626765:
            {
                MKV_DATA char  data_chars[5]   = "uryo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // egd
            case 0x00646765:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ege
            case 0x00656765:
            {
                MKV_DATA char  data_chars[7]   = "alnrsw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // egf
            case 0x00666765:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egg
            case 0x00676765:
            {
                MKV_DATA char  data_chars[8]   = "alebisy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // egh
            case 0x00686765:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egi
            case 0x00696765:
            {
                MKV_DATA char  data_chars[6]   = "losbd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // egl
            case 0x006c6765:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // egm
            case 0x006d6765:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egn
            case 0x006e6765:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ego
            case 0x006f6765:
            {
                MKV_DATA char  data_chars[8]   = "nrlomsz";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // egr
            case 0x00726765:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // egs
            case 0x00736765:
            {
                MKV_DATA char  data_chars[5]   = "bdow";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // egu
            case 0x00756765:
            {
                MKV_DATA char  data_chars[4]   = "rln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // egw
            case 0x00776765:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // egy
            case 0x00796765:
            {
                MKV_DATA char  data_chars[3]   = "pf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eha
            case 0x00616865:
            {
                MKV_DATA char  data_chars[8]   = "mlynvuw";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb52b, // 0.707692 
                    0x1b92, // 0.107692 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ehe
            case 0x00656865:
            {
                MKV_DATA char  data_chars[5]   = "amly";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc3c4, // 0.764706 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ehi
            case 0x00696865:
            {
                MKV_DATA char  data_chars[5]   = "ldnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xea0f, // 0.914286 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eho
            case 0x006f6865:
            {
                MKV_DATA char  data_chars[9]   = "ulergnpw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x83e1, // 0.515152 
                    0x3e10, // 0.242424 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ehu
            case 0x00756865:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eic
            case 0x00636965:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eif
            case 0x00666965:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eig
            case 0x00676965:
            {
                MKV_DATA char  data_chars[4]   = "hna";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe200, // 0.882812 
                    0x1c00, // 0.109375 
                    0x0200, // 0.007812 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ein
            case 0x006e6965:
            {
                MKV_DATA char  data_chars[4]   = "tig";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eir
            case 0x00726965:
            {
                MKV_DATA char  data_chars[4]   = "bes";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eis
            case 0x00736965:
            {
                MKV_DATA char  data_chars[5]   = "thbd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eit
            case 0x00746965:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eiv
            case 0x00766965:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eje
            case 0x00656a65:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekb
            case 0x00626b65:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eke
            case 0x00656b65:
            {
                MKV_DATA char  data_chars[4]   = "nsi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eki
            case 0x00696b65:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ekl
            case 0x006c6b65:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekm
            case 0x006d6b65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ekn
            case 0x006e6b65:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eks
            case 0x00736b65:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ela
            case 0x00616c65:
            {
                MKV_DATA char  data_chars[14]   = "nhwtmksbruvci";
                MKV_DATA uint16_t data_weights[13] = {
                    0x895e, // 0.536585 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // elb
            case 0x00626c65:
            {
                MKV_DATA char  data_chars[7]   = "oyurea";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5847, // 0.344828 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // elc
            case 0x00636c65:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x89d9, // 0.538462 
                    0x7627, // 0.461538 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eld
            case 0x00646c65:
            {
                MKV_DATA char  data_chars[10]   = "seohwyrbf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8904, // 0.535211 
                    0x2ee0, // 0.183099 
                    0x2073, // 0.126761 
                    0x0e6c, // 0.056338 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ele
            case 0x00656c65:
            {
                MKV_DATA char  data_chars[13]   = "yianrtwbpems";
                MKV_DATA uint16_t data_weights[12] = {
                    0xb60b, // 0.711111 
                    0x1111, // 0.066667 
                    0x0e39, // 0.055556 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // elf
            case 0x00666c65:
            {
                MKV_DATA char  data_chars[6]   = "oiahl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // elg
            case 0x00676c65:
            {
                MKV_DATA char  data_chars[4]   = "roa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // elh
            case 0x00686c65:
            {
                MKV_DATA char  data_chars[5]   = "auoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbbbc, // 0.733333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eli
            case 0x00696c65:
            {
                MKV_DATA char  data_chars[9]   = "gnseolvx";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // elk
            case 0x006b6c65:
            {
                MKV_DATA char  data_chars[5]   = "iesr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ell
            case 0x006c6c65:
            {
                MKV_DATA char  data_chars[17]   = "isaeoybhgtmfwupd";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3dd8, // 0.241573 
                    0x3817, // 0.219101 
                    0x2845, // 0.157303 
                    0x26d5, // 0.151685 
                    0x0e62, // 0.056180 
                    0x0cf2, // 0.050562 
                    0x0731, // 0.028090 
                    0x0451, // 0.016854 
                    0x0451, // 0.016854 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                    0x0170, // 0.005618 
                    0x0170, // 0.005618 
                    0x0170, // 0.005618 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // elm
            case 0x006d6c65:
            {
                MKV_DATA char  data_chars[12]   = "seoiadhltbf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4dea, // 0.304348 
                    0x42c8, // 0.260870 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // eln
            case 0x006e6c65:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elo
            case 0x006f6c65:
            {
                MKV_DATA char  data_chars[7]   = "wrnquc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9c72, // 0.611111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // elp
            case 0x00706c65:
            {
                MKV_DATA char  data_chars[8]   = "hileors";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // elr
            case 0x00726c65:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // els
            case 0x00736c65:
            {
                MKV_DATA char  data_chars[14]   = "thebfolaiwdcm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x576a, // 0.341463 
                    0x18fa, // 0.097561 
                    0x15db, // 0.085366 
                    0x15db, // 0.085366 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x095e, // 0.036585 
                    0x095e, // 0.036585 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // elt
            case 0x00746c65:
            {
                MKV_DATA char  data_chars[7]   = "ohirew";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // elu
            case 0x00756c65:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elv
            case 0x00766c65:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x3555, // 0.208333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // elw
            case 0x00776c65:
            {
                MKV_DATA char  data_chars[6]   = "oiaey";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ely
            case 0x00796c65:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // elz
            case 0x007a6c65:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ema
            case 0x00616d65:
            {
                MKV_DATA char  data_chars[7]   = "rnityc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7555, // 0.458333 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // emb
            case 0x00626d65:
            {
                MKV_DATA char  data_chars[9]   = "lureowyd";
                MKV_DATA uint16_t data_weights[8] = {
                    0x47ae, // 0.280000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eme
            case 0x00656d65:
            {
                MKV_DATA char  data_chars[7]   = "rlndta";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9612, // 0.586207 
                    0x34f7, // 0.206897 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // emf
            case 0x00666d65:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emh
            case 0x00686d65:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emi
            case 0x00696d65:
            {
                MKV_DATA char  data_chars[5]   = "nlsa";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb4b5, // 0.705882 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eml
            case 0x006c6d65:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emm
            case 0x006d6d65:
            {
                MKV_DATA char  data_chars[4]   = "ebi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // emn
            case 0x006e6d65:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // emo
            case 0x006f6d65:
            {
                MKV_DATA char  data_chars[6]   = "rouns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x638e, // 0.388889 
                    0x5555, // 0.333333 
                    0x238e, // 0.138889 
                    0x1c72, // 0.111111 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // emp
            case 0x00706d65:
            {
                MKV_DATA char  data_chars[9]   = "sltenrwi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ems
            case 0x00736d65:
            {
                MKV_DATA char  data_chars[8]   = "twflbci";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // emy
            case 0x00796d65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ena
            case 0x00616e65:
            {
                MKV_DATA char  data_chars[12]   = "rcdnglysupf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // enb
            case 0x00626e65:
            {
                MKV_DATA char  data_chars[7]   = "ouyrea";
                MKV_DATA uint16_t data_weights[6] = {
                    0x43c4, // 0.264706 
                    0x43c4, // 0.264706 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // enc
            case 0x00636e65:
            {
                MKV_DATA char  data_chars[8]   = "heoraul";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x3852, // 0.220000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // end
            case 0x00646e65:
            {
                MKV_DATA char  data_chars[13]   = "eoalriyhcmsw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5234, // 0.321101 
                    0x41c3, // 0.256881 
                    0x19d6, // 0.100917 
                    0x177c, // 0.091743 
                    0x1523, // 0.082569 
                    0x1071, // 0.064220 
                    0x070c, // 0.027523 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // ene
            case 0x00656e65:
            {
                MKV_DATA char  data_chars[12]   = "ysnrvwltafg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5dde, // 0.366667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // enf
            case 0x00666e65:
            {
                MKV_DATA char  data_chars[5]   = "ioel";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x7627, // 0.461538 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eng
            case 0x00676e65:
            {
                MKV_DATA char  data_chars[9]   = "aeloiruh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3a84, // 0.228571 
                    0x3a84, // 0.228571 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // enh
            case 0x00686e65:
            {
                MKV_DATA char  data_chars[6]   = "aoieu";
                MKV_DATA uint16_t data_weights[5] = {
                    0xac9e, // 0.674286 
                    0x1bcb, // 0.108571 
                    0x1a55, // 0.102857 
                    0x1017, // 0.062857 
                    0x0d2a, // 0.051429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eni
            case 0x00696e65:
            {
                MKV_DATA char  data_chars[11]   = "nstelxbcgo";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6c4f, // 0.423077 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // enk
            case 0x006b6e65:
            {
                MKV_DATA char  data_chars[7]   = "ehilnr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // enl
            case 0x006c6e65:
            {
                MKV_DATA char  data_chars[5]   = "eaol";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8618, // 0.523810 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // enm
            case 0x006d6e65:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enn
            case 0x006e6e65:
            {
                MKV_DATA char  data_chars[9]   = "yieafosg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4a34, // 0.289855 
                    0x37a7, // 0.217391 
                    0x33f1, // 0.202899 
                    0x303b, // 0.188406 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eno
            case 0x006f6e65:
            {
                MKV_DATA char  data_chars[9]   = "rwdafvyo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // enp
            case 0x00706e65:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enq
            case 0x00716e65:
            {
                return 'u';
            }
            break;

            // enr
            case 0x00726e65:
            {
                MKV_DATA char  data_chars[6]   = "oiyuh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ens
            case 0x00736e65:
            {
                MKV_DATA char  data_chars[18]   = "thiobwflgadcepmvn";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4daa, // 0.303371 
                    0x2e06, // 0.179775 
                    0x1423, // 0.078652 
                    0x1142, // 0.067416 
                    0x0e62, // 0.056180 
                    0x0b81, // 0.044944 
                    0x0b81, // 0.044944 
                    0x08a1, // 0.033708 
                    0x08a1, // 0.033708 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x05c1, // 0.022472 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ent
            case 0x00746e65:
            {
                MKV_DATA char  data_chars[15]   = "ohirsewlnfmcyg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4000, // 0.250000 
                    0x2762, // 0.153846 
                    0x24ec, // 0.144231 
                    0x1627, // 0.086538 
                    0x13b1, // 0.076923 
                    0x113b, // 0.067308 
                    0x0ec5, // 0.057692 
                    0x0c4f, // 0.048077 
                    0x09d9, // 0.038462 
                    0x0762, // 0.028846 
                    0x04ec, // 0.019231 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                    0x0276, // 0.009615 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // enu
            case 0x00756e65:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // env
            case 0x00766e65:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // enw
            case 0x00776e65:
            {
                MKV_DATA char  data_chars[7]   = "ioeahy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5295, // 0.322581 
                    0x4a53, // 0.290323 
                    0x318c, // 0.193548 
                    0x2108, // 0.129032 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eny
            case 0x00796e65:
            {
                MKV_DATA char  data_chars[4]   = "aos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // enz
            case 0x007a6e65:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eoa
            case 0x00616f65:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eob
            case 0x00626f65:
            {
                MKV_DATA char  data_chars[5]   = "alru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eoc
            case 0x00636f65:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eof
            case 0x00666f65:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eol
            case 0x006c6f65:
            {
                MKV_DATA char  data_chars[4]   = "ems";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eom
            case 0x006d6f65:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eon
            case 0x006e6f65:
            {
                MKV_DATA char  data_chars[4]   = "ais";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eop
            case 0x00706f65:
            {
                MKV_DATA char  data_chars[4]   = "hal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eor
            case 0x00726f65:
            {
                MKV_DATA char  data_chars[3]   = "gt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eot
            case 0x00746f65:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eov
            case 0x00766f65:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epa
            case 0x00617065:
            {
                MKV_DATA char  data_chars[4]   = "lrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epb
            case 0x00627065:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epc
            case 0x00637065:
            {
                MKV_DATA char  data_chars[4]   = "lou";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epd
            case 0x00647065:
            {
                MKV_DATA char  data_chars[4]   = "era";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epe
            case 0x00657065:
            {
                MKV_DATA char  data_chars[5]   = "rant";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // epf
            case 0x00667065:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epg
            case 0x00677065:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eph
            case 0x00687065:
            {
                MKV_DATA char  data_chars[5]   = "aeir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // epi
            case 0x00697065:
            {
                MKV_DATA char  data_chars[4]   = "tns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epl
            case 0x006c7065:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epn
            case 0x006e7065:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // epo
            case 0x006f7065:
            {
                MKV_DATA char  data_chars[5]   = "ortn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // epp
            case 0x00707065:
            {
                MKV_DATA char  data_chars[6]   = "eisla";
                MKV_DATA uint16_t data_weights[5] = {
                    0x79e8, // 0.476190 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // epr
            case 0x00727065:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eps
            case 0x00737065:
            {
                MKV_DATA char  data_chars[5]   = "toch";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ept
            case 0x00747065:
            {
                MKV_DATA char  data_chars[4]   = "ohf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // epw
            case 0x00777065:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // equ
            case 0x00757165:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // era
            case 0x00617265:
            {
                MKV_DATA char  data_chars[9]   = "lrgvbtcw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // erb
            case 0x00627265:
            {
                MKV_DATA char  data_chars[9]   = "yuroeail";
                MKV_DATA uint16_t data_weights[8] = {
                    0x78b0, // 0.471429 
                    0x283b, // 0.157143 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // erc
            case 0x00637265:
            {
                MKV_DATA char  data_chars[10]   = "olhayieru";
                MKV_DATA uint16_t data_weights[9] = {
                    0x70f1, // 0.441176 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // erd
            case 0x00647265:
            {
                MKV_DATA char  data_chars[7]   = "aeoils";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x3b14, // 0.230769 
                    0x313b, // 0.192308 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ere
            case 0x00657265:
            {
                MKV_DATA char  data_chars[12]   = "lsfnthwcpad";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4c1c, // 0.297297 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // erf
            case 0x00667265:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x82b9, // 0.510638 
                    0x77d4, // 0.468085 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erg
            case 0x00677265:
            {
                MKV_DATA char  data_chars[9]   = "aheiorys";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6c4f, // 0.423077 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // erh
            case 0x00687265:
            {
                MKV_DATA char  data_chars[7]   = "aioeuy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x715f, // 0.442857 
                    0x3333, // 0.200000 
                    0x2f8b, // 0.185714 
                    0x1d42, // 0.114286 
                    0x0af9, // 0.042857 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eri
            case 0x00697265:
            {
                MKV_DATA char  data_chars[12]   = "ndstcglfeov";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7d28, // 0.488889 
                    0x360b, // 0.211111 
                    0x1111, // 0.066667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // erk
            case 0x006b7265:
            {
                MKV_DATA char  data_chars[8]   = "eihnsla";
                MKV_DATA uint16_t data_weights[7] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // erl
            case 0x006c7265:
            {
                MKV_DATA char  data_chars[7]   = "eaoiyb";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc08c, // 0.752137 
                    0x2532, // 0.145299 
                    0x0af1, // 0.042735 
                    0x08c1, // 0.034188 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // erm
            case 0x006d7265:
            {
                MKV_DATA char  data_chars[6]   = "oaeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x399a, // 0.225000 
                    0x399a, // 0.225000 
                    0x399a, // 0.225000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ern
            case 0x006e7265:
            {
                MKV_DATA char  data_chars[13]   = "ehoabidwsflm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7c58, // 0.485714 
                    0x2492, // 0.142857 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // ero
            case 0x006f7265:
            {
                MKV_DATA char  data_chars[11]   = "napydersuw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // erp
            case 0x00707265:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // err
            case 0x00727265:
            {
                MKV_DATA char  data_chars[6]   = "yiaoe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6222, // 0.383333 
                    0x5bbc, // 0.358333 
                    0x2000, // 0.125000 
                    0x1dde, // 0.116667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ers
            case 0x00737265:
            {
                MKV_DATA char  data_chars[18]   = "thlebdwfiagopcvmk";
                MKV_DATA uint16_t data_weights[17] = {
                    0x43b4, // 0.264463 
                    0x2e8c, // 0.181818 
                    0x1a72, // 0.103306 
                    0x10ed, // 0.066116 
                    0x0ecf, // 0.057851 
                    0x0cb2, // 0.049587 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0a94, // 0.041322 
                    0x0876, // 0.033058 
                    0x0768, // 0.028926 
                    0x0659, // 0.024793 
                    0x0659, // 0.024793 
                    0x054a, // 0.020661 
                    0x010f, // 0.004132 
                    0x010f, // 0.004132 
                    0x010f, // 0.004132 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ert
            case 0x00747265:
            {
                MKV_DATA char  data_chars[9]   = "ohsfrewi";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd5ba, // 0.834862 
                    0x13f7, // 0.077982 
                    0x0a92, // 0.041284 
                    0x0386, // 0.013761 
                    0x0386, // 0.013761 
                    0x0259, // 0.009174 
                    0x012d, // 0.004587 
                    0x012d, // 0.004587 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // eru
            case 0x00757265:
            {
                MKV_DATA char  data_chars[3]   = "lp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // erv
            case 0x00767265:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // erw
            case 0x00777265:
            {
                MKV_DATA char  data_chars[7]   = "oiaeyh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x62e9, // 0.386364 
                    0x3a2f, // 0.227273 
                    0x3a2f, // 0.227273 
                    0x1d17, // 0.113636 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ery
            case 0x00797265:
            {
                MKV_DATA char  data_chars[5]   = "saeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // esa
            case 0x00617365:
            {
                MKV_DATA char  data_chars[9]   = "yuwlnmrv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // esb
            case 0x00627365:
            {
                MKV_DATA char  data_chars[7]   = "uyorae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5ad7, // 0.354839 
                    0x4e74, // 0.306452 
                    0x2d6b, // 0.177419 
                    0x18c6, // 0.096774 
                    0x0c63, // 0.048387 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // esc
            case 0x00637365:
            {
                MKV_DATA char  data_chars[6]   = "oaelr";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // esd
            case 0x00647365:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8a61, // 0.540541 
                    0x4c1c, // 0.297297 
                    0x2983, // 0.162162 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ese
            case 0x00657365:
            {
                MKV_DATA char  data_chars[9]   = "yanrtvxl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // esf
            case 0x00667365:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8a61, // 0.540541 
                    0x6eb4, // 0.432432 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esg
            case 0x00677365:
            {
                MKV_DATA char  data_chars[4]   = "arw";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esh
            case 0x00687365:
            {
                MKV_DATA char  data_chars[9]   = "aieoufbw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8fc8, // 0.561644 
                    0x3119, // 0.191781 
                    0x188c, // 0.095890 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // esi
            case 0x00697365:
            {
                MKV_DATA char  data_chars[6]   = "dlsan";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa492, // 0.642857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // esk
            case 0x006b7365:
            {
                MKV_DATA char  data_chars[6]   = "ieadh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // esl
            case 0x006c7365:
            {
                MKV_DATA char  data_chars[5]   = "eoiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd555, // 0.833333 
                    0x1c72, // 0.111111 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // esm
            case 0x006d7365:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6276, // 0.384615 
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esn
            case 0x006e7365:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eso
            case 0x006f7365:
            {
                MKV_DATA char  data_chars[4]   = "wnm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // esp
            case 0x00707365:
            {
                MKV_DATA char  data_chars[4]   = "are";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ess
            case 0x00737365:
            {
                MKV_DATA char  data_chars[12]   = "ieaowbchlmn";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6666, // 0.400000 
                    0x6000, // 0.375000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // est
            case 0x00747365:
            {
                MKV_DATA char  data_chars[21]   = "oehrwlbacmiydfvnpsgt";
                MKV_DATA uint16_t data_weights[20] = {
                    0x64c6, // 0.393651 
                    0x3193, // 0.193651 
                    0x1381, // 0.076190 
                    0x0f71, // 0.060317 
                    0x0c31, // 0.047619 
                    0x0a91, // 0.041270 
                    0x0680, // 0.025397 
                    0x0680, // 0.025397 
                    0x0680, // 0.025397 
                    0x05b0, // 0.022222 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x01a0, // 0.006349 
                    0x01a0, // 0.006349 
                    0x00d0, // 0.003175 
                    0x00d0, // 0.003175 
                    0x00d0, // 0.003175 
                    0x00d0, // 0.003175 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // esu
            case 0x00757365:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esv
            case 0x00767365:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // esw
            case 0x00777365:
            {
                MKV_DATA char  data_chars[5]   = "oeai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x679e, // 0.404762 
                    0x5b6e, // 0.357143 
                    0x1e7a, // 0.119048 
                    0x1e7a, // 0.119048 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // esy
            case 0x00797365:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eta
            case 0x00617465:
            {
                MKV_DATA char  data_chars[3]   = "li";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etb
            case 0x00627465:
            {
                MKV_DATA char  data_chars[4]   = "yeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // etc
            case 0x00637465:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ete
            case 0x00657465:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xec4f, // 0.923077 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etf
            case 0x00667465:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etg
            case 0x00677465:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eth
            case 0x00687465:
            {
                MKV_DATA char  data_chars[12]   = "eoawiynrucl";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7dcb, // 0.491379 
                    0x32c2, // 0.198276 
                    0x29ee, // 0.163793 
                    0x0d3e, // 0.051724 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // eti
            case 0x00697465:
            {
                MKV_DATA char  data_chars[5]   = "nrms";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // etl
            case 0x006c7465:
            {
                MKV_DATA char  data_chars[6]   = "eiaoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // etm
            case 0x006d7465:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etn
            case 0x006e7465:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eto
            case 0x006f7465:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdd8a, // 0.865385 
                    0x2276, // 0.134615 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etr
            case 0x00727465:
            {
                MKV_DATA char  data_chars[4]   = "oeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ets
            case 0x00737465:
            {
                MKV_DATA char  data_chars[8]   = "hotiwbe";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ett
            case 0x00747465:
            {
                MKV_DATA char  data_chars[9]   = "lsoeiyab";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3b49, // 0.231579 
                    0x3081, // 0.189474 
                    0x2b1e, // 0.168421 
                    0x286c, // 0.157895 
                    0x25ba, // 0.147368 
                    0x102b, // 0.063158 
                    0x0816, // 0.031579 
                    0x02b2, // 0.010526 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // etu
            case 0x00757465:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etv
            case 0x00767465:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // etw
            case 0x00777465:
            {
                MKV_DATA char  data_chars[5]   = "oaey";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eud
            case 0x00647565:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eug
            case 0x00677565:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eus
            case 0x00737565:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eux
            case 0x00787565:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eva
            case 0x00617665:
            {
                MKV_DATA char  data_chars[6]   = "nrlgd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5000, // 0.312500 
                    0x5000, // 0.312500 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eve
            case 0x00657665:
            {
                MKV_DATA char  data_chars[13]   = "rnlsdaogmthi";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6c17, // 0.422222 
                    0x49f5, // 0.288889 
                    0x199a, // 0.100000 
                    0x0e39, // 0.055556 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // evi
            case 0x00697665:
            {
                MKV_DATA char  data_chars[12]   = "lnstageozcd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5555, // 0.333333 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // evo
            case 0x006f7665:
            {
                MKV_DATA char  data_chars[6]   = "nrwil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // evu
            case 0x00757665:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewa
            case 0x00617765:
            {
                MKV_DATA char  data_chars[7]   = "rytlns";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4859, // 0.282609 
                    0x42c8, // 0.260870 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1bd3, // 0.108696 
                    0x1643, // 0.086957 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ewb
            case 0x00627765:
            {
                MKV_DATA char  data_chars[7]   = "uoaryi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ewc
            case 0x00637765:
            {
                MKV_DATA char  data_chars[4]   = "hoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewd
            case 0x00647765:
            {
                MKV_DATA char  data_chars[5]   = "oeil";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ewe
            case 0x00657765:
            {
                MKV_DATA char  data_chars[9]   = "lnrtysbe";
                MKV_DATA uint16_t data_weights[8] = {
                    0x829d, // 0.510204 
                    0x1f59, // 0.122449 
                    0x1f59, // 0.122449 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ewf
            case 0x00667765:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewg
            case 0x00677765:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewh
            case 0x00687765:
            {
                MKV_DATA char  data_chars[5]   = "aeiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ewi
            case 0x00697765:
            {
                MKV_DATA char  data_chars[7]   = "cntsdp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6186, // 0.380952 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ewk
            case 0x006b7765:
            {
                MKV_DATA char  data_chars[4]   = "eln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewl
            case 0x006c7765:
            {
                MKV_DATA char  data_chars[5]   = "eaiy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ewm
            case 0x006d7765:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewn
            case 0x006e7765:
            {
                MKV_DATA char  data_chars[4]   = "eht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewo
            case 0x006f7765:
            {
                MKV_DATA char  data_chars[4]   = "rol";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x7b96, // 0.482759 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ewp
            case 0x00707765:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ewq
            case 0x00717765:
            {
                return 'u';
            }
            break;

            // ews
            case 0x00737765:
            {
                MKV_DATA char  data_chars[8]   = "tebhlog";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ewt
            case 0x00747765:
            {
                MKV_DATA char  data_chars[6]   = "ohrea";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ewy
            case 0x00797765:
            {
                MKV_DATA char  data_chars[5]   = "aekn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // exa
            case 0x00617865:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exb
            case 0x00627865:
            {
                MKV_DATA char  data_chars[4]   = "uoy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // exc
            case 0x00637865:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exd
            case 0x00647865:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exe
            case 0x00657865:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exf
            case 0x00667865:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exh
            case 0x00687865:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exi
            case 0x00697865:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exl
            case 0x006c7865:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exm
            case 0x006d7865:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exn
            case 0x006e7865:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // exo
            case 0x006f7865:
            {
                MKV_DATA char  data_chars[3]   = "nv";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ext
            case 0x00747865:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // exw
            case 0x00777865:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eya
            case 0x00617965:
            {
                MKV_DATA char  data_chars[3]   = "rm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyb
            case 0x00627965:
            {
                MKV_DATA char  data_chars[5]   = "ruao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eyc
            case 0x00637965:
            {
                MKV_DATA char  data_chars[5]   = "roeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eyd
            case 0x00647965:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eye
            case 0x00657965:
            {
                MKV_DATA char  data_chars[4]   = "wns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eyf
            case 0x00667965:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyg
            case 0x00677965:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyh
            case 0x00687965:
            {
                MKV_DATA char  data_chars[6]   = "iaeou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // eyk
            case 0x006b7965:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyl
            case 0x006c7965:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eym
            case 0x006d7965:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eyn
            case 0x006e7965:
            {
                MKV_DATA char  data_chars[7]   = "esahio";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eyp
            case 0x00707965:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // eyr
            case 0x00727965:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eys
            case 0x00737965:
            {
                MKV_DATA char  data_chars[7]   = "tehiof";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7333, // 0.450000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // eyt
            case 0x00747965:
            {
                MKV_DATA char  data_chars[5]   = "ohre";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eyw
            case 0x00777965:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // eza
            case 0x00617a65:
            {
                MKV_DATA char  data_chars[5]   = "cinr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // eze
            case 0x00657a65:
            {
                MKV_DATA char  data_chars[4]   = "lrs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ezi
            case 0x00697a65:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ezo
            case 0x006f7a65:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // e
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'f':
        {
            switch ( trigram_u32 )
            {
            // fab
            case 0x00626166:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fac
            case 0x00636166:
            {
                MKV_DATA char  data_chars[7]   = "ehiktc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // fad
            case 0x00646166:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fai
            case 0x00696166:
            {
                MKV_DATA char  data_chars[5]   = "rlnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd70a, // 0.840000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fak
            case 0x006b6166:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fal
            case 0x006c6166:
            {
                MKV_DATA char  data_chars[9]   = "lcmdsfko";
                MKV_DATA uint16_t data_weights[8] = {
                    0x79e8, // 0.476190 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // fam
            case 0x006d6166:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fan
            case 0x006e6166:
            {
                MKV_DATA char  data_chars[6]   = "nstcg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // far
            case 0x00726166:
            {
                MKV_DATA char  data_chars[13]   = "nlmtdreicfhw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2e14, // 0.180000 
                    0x23d7, // 0.140000 
                    0x23d7, // 0.140000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // fas
            case 0x00736166:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fat
            case 0x00746166:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fau
            case 0x00756166:
            {
                MKV_DATA char  data_chars[4]   = "ldg";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fav
            case 0x00766166:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // faw
            case 0x00776166:
            {
                MKV_DATA char  data_chars[5]   = "lfkd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // fay
            case 0x00796166:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // faz
            case 0x007a6166:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fbo
            case 0x006f6266:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fch
            case 0x00686366:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fco
            case 0x006f6366:
            {
                MKV_DATA char  data_chars[4]   = "tcm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fcu
            case 0x00756366:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fdo
            case 0x006f6466:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fea
            case 0x00616566:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fec
            case 0x00636566:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fee
            case 0x00656566:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // feg
            case 0x00676566:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // feh
            case 0x00686566:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fel
            case 0x006c6566:
            {
                MKV_DATA char  data_chars[11]   = "ltdmsbipch";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4bda, // 0.296296 
                    0x2f68, // 0.185185 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fen
            case 0x006e6566:
            {
                MKV_DATA char  data_chars[12]   = "hcinsltdbgw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x2f68, // 0.185185 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // feo
            case 0x006f6566:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fer
            case 0x00726566:
            {
                MKV_DATA char  data_chars[9]   = "nrtslwdi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5c29, // 0.360000 
                    0x3d71, // 0.240000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // fet
            case 0x00746566:
            {
                MKV_DATA char  data_chars[4]   = "tcs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // few
            case 0x00776566:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffa
            case 0x00616666:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffc
            case 0x00636666:
            {
                MKV_DATA char  data_chars[4]   = "ohu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ffe
            case 0x00656666:
            {
                MKV_DATA char  data_chars[6]   = "rnety";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ffh
            case 0x00686666:
            {
                return 'a';
            }
            break;

            // ffi
            case 0x00696666:
            {
                MKV_DATA char  data_chars[4]   = "enc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7878, // 0.470588 
                    0x7878, // 0.470588 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ffk
            case 0x006b6666:
            {
                return 'e';
            }
            break;

            // ffl
            case 0x006c6666:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ffm
            case 0x006d6666:
            {
                return 'o';
            }
            break;

            // ffo
            case 0x006f6666:
            {
                MKV_DATA char  data_chars[5]   = "rlen";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ffp
            case 0x00706666:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffr
            case 0x00726666:
            {
                MKV_DATA char  data_chars[4]   = "oyi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fft
            case 0x00746666:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffw
            case 0x00776666:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ffy
            case 0x00796666:
            {
                MKV_DATA char  data_chars[3]   = "df";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fha
            case 0x00616866:
            {
                MKV_DATA char  data_chars[3]   = "ml";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fic
            case 0x00636966:
            {
                MKV_DATA char  data_chars[3]   = "ek";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fid
            case 0x00646966:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fie
            case 0x00656966:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fif
            case 0x00666966:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fig
            case 0x00676966:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fil
            case 0x006c6966:
            {
                MKV_DATA char  data_chars[12]   = "lkwbfghmtac";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // fin
            case 0x006e6966:
            {
                MKV_DATA char  data_chars[11]   = "gcsdnehmwb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4a1b, // 0.289474 
                    0x35e5, // 0.210526 
                    0x2f28, // 0.184211 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fir
            case 0x00726966:
            {
                MKV_DATA char  data_chars[7]   = "sbgltw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // fis
            case 0x00736966:
            {
                MKV_DATA char  data_chars[3]   = "hk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf333, // 0.950000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fit
            case 0x00746966:
            {
                MKV_DATA char  data_chars[4]   = "ztc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fiv
            case 0x00766966:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fke
            case 0x00656b66:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fla
            case 0x00616c66:
            {
                MKV_DATA char  data_chars[13]   = "xctgmnuvdswy";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // fle
            case 0x00656c66:
            {
                MKV_DATA char  data_chars[9]   = "eytmxcdr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x71c7, // 0.444444 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x16c1, // 0.088889 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // fli
            case 0x00696c66:
            {
                MKV_DATA char  data_chars[6]   = "ntmxs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7000, // 0.437500 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // flo
            case 0x006f6c66:
            {
                MKV_DATA char  data_chars[7]   = "orwdtu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4b4b, // 0.294118 
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // flu
            case 0x00756c66:
            {
                MKV_DATA char  data_chars[3]   = "sx";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fly
            case 0x00796c66:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fmo
            case 0x006f6d66:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fna
            case 0x00616e66:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fne
            case 0x00656e66:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // foa
            case 0x00616f66:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fob
            case 0x00626f66:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fod
            case 0x00646f66:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fog
            case 0x00676f66:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fol
            case 0x006c6f66:
            {
                MKV_DATA char  data_chars[7]   = "dkeliv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9069, // 0.564103 
                    0x3483, // 0.205128 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // fon
            case 0x006e6f66:
            {
                MKV_DATA char  data_chars[4]   = "tes";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // foo
            case 0x006f6f66:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf333, // 0.950000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // for
            case 0x00726f66:
            {
                MKV_DATA char  data_chars[14]   = "dtesnwgmchkru";
                MKV_DATA uint16_t data_weights[13] = {
                    0xe908, // 0.910277 
                    0x0adc, // 0.042414 
                    0x0503, // 0.019576 
                    0x01ac, // 0.006525 
                    0x0141, // 0.004894 
                    0x00d6, // 0.003263 
                    0x00d6, // 0.003263 
                    0x006b, // 0.001631 
                    0x006b, // 0.001631 
                    0x006b, // 0.001631 
                    0x006b, // 0.001631 
                    0x006b, // 0.001631 
                    0x006b, // 0.001631 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // fos
            case 0x00736f66:
            {
                MKV_DATA char  data_chars[6]   = "tscbd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // fot
            case 0x00746f66:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fou
            case 0x00756f66:
            {
                MKV_DATA char  data_chars[4]   = "lrn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fov
            case 0x00766f66:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fow
            case 0x00776f66:
            {
                MKV_DATA char  data_chars[4]   = "lne";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fox
            case 0x00786f66:
            {
                MKV_DATA char  data_chars[11]   = "hecfltwabd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fpe
            case 0x00657066:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fpu
            case 0x00757066:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fra
            case 0x00617266:
            {
                MKV_DATA char  data_chars[6]   = "nmdtc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x72c2, // 0.448276 
                    0x469f, // 0.275862 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // fre
            case 0x00657266:
            {
                MKV_DATA char  data_chars[11]   = "enstcdyaim";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x2aab, // 0.166667 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fri
            case 0x00697266:
            {
                MKV_DATA char  data_chars[11]   = "teanszlcmd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4ba3, // 0.295455 
                    0x28ba, // 0.159091 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // fro
            case 0x006f7266:
            {
                MKV_DATA char  data_chars[10]   = "gmsndcxyl";
                MKV_DATA uint16_t data_weights[9] = {
                    0x64d9, // 0.393939 
                    0x2e8c, // 0.181818 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // fry
            case 0x00797266:
            {
                MKV_DATA char  data_chars[4]   = "ent";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // fte
            case 0x00657466:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fth
            case 0x00687466:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fti
            case 0x00697466:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftl
            case 0x006c7466:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fto
            case 0x006f7466:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf4df, // 0.956522 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftr
            case 0x00727466:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ftw
            case 0x00777466:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fug
            case 0x00677566:
            {
                MKV_DATA char  data_chars[3]   = "ag";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ful
            case 0x006c7566:
            {
                MKV_DATA char  data_chars[12]   = "lbfnswmrthk";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4aab, // 0.291667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // fun
            case 0x006e7566:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fur
            case 0x00727566:
            {
                MKV_DATA char  data_chars[6]   = "znlty";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6186, // 0.380952 
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // fwa
            case 0x00617766:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fwe
            case 0x00657766:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyd
            case 0x00647966:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyf
            case 0x00667966:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyl
            case 0x006c7966:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // fyn
            case 0x006e7966:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // f
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'g':
        {
            switch ( trigram_u32 )
            {
            // gab
            case 0x00626167:
            {
                MKV_DATA char  data_chars[4]   = "rlw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gac
            case 0x00636167:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gad
            case 0x00646167:
            {
                MKV_DATA char  data_chars[11]   = "fdosaegibl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gaf
            case 0x00666167:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gag
            case 0x00676167:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gai
            case 0x00696167:
            {
                MKV_DATA char  data_chars[5]   = "ntls";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gaj
            case 0x006a6167:
            {
                return 'o';
            }
            break;

            // gak
            case 0x006b6167:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gal
            case 0x006c6167:
            {
                MKV_DATA char  data_chars[6]   = "lemhg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x79e8, // 0.476190 
                    0x5555, // 0.333333 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gam
            case 0x006d6167:
            {
                MKV_DATA char  data_chars[7]   = "belams";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gan
            case 0x006e6167:
            {
                MKV_DATA char  data_chars[11]   = "gadhnsbftw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gap
            case 0x00706167:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gar
            case 0x00726167:
            {
                MKV_DATA char  data_chars[15]   = "trlsdnembwkvgf";
                MKV_DATA uint16_t data_weights[14] = {
                    0x33f1, // 0.202899 
                    0x251a, // 0.144928 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x128d, // 0.072464 
                    0x0b21, // 0.043478 
                    0x076c, // 0.028986 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // gas
            case 0x00736167:
            {
                MKV_DATA char  data_chars[4]   = "thp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gat
            case 0x00746167:
            {
                MKV_DATA char  data_chars[10]   = "ehtoliwac";
                MKV_DATA uint16_t data_weights[9] = {
                    0xed5c, // 0.927184 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // gau
            case 0x00756167:
            {
                MKV_DATA char  data_chars[4]   = "nlt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gav
            case 0x00766167:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gaw
            case 0x00776167:
            {
                MKV_DATA char  data_chars[4]   = "cst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gay
            case 0x00796167:
            {
                MKV_DATA char  data_chars[5]   = "dhtw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gaz
            case 0x007a6167:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gba
            case 0x00616267:
            {
                MKV_DATA char  data_chars[5]   = "nrst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gbe
            case 0x00656267:
            {
                MKV_DATA char  data_chars[5]   = "antr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gbo
            case 0x006f6267:
            {
                MKV_DATA char  data_chars[3]   = "ur";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gbr
            case 0x00726267:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gbu
            case 0x00756267:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf000, // 0.937500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gca
            case 0x00616367:
            {
                MKV_DATA char  data_chars[3]   = "mu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gcl
            case 0x006c6367:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gco
            case 0x006f6367:
            {
                MKV_DATA char  data_chars[3]   = "tm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gcr
            case 0x00726367:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gcu
            case 0x00756367:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gda
            case 0x00616467:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gde
            case 0x00656467:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gdo
            case 0x006f6467:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd89e, // 0.846154 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gdy
            case 0x00796467:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gea
            case 0x00616567:
            {
                MKV_DATA char  data_chars[4]   = "rtn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // geb
            case 0x00626567:
            {
                MKV_DATA char  data_chars[6]   = "aeoru";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ged
            case 0x00646567:
            {
                MKV_DATA char  data_chars[5]   = "dgln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gee
            case 0x00656567:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gef
            case 0x00666567:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // geg
            case 0x00676567:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // geh
            case 0x00686567:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gel
            case 0x006c6567:
            {
                MKV_DATA char  data_chars[7]   = "elsobd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gem
            case 0x006d6567:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gen
            case 0x006e6567:
            {
                MKV_DATA char  data_chars[7]   = "hednts";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // geo
            case 0x006f6567:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ger
            case 0x00726567:
            {
                MKV_DATA char  data_chars[16]   = "stmrlhybfpwauno";
                MKV_DATA uint16_t data_weights[15] = {
                    0x7333, // 0.450000 
                    0x199a, // 0.100000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ges
            case 0x00736567:
            {
                MKV_DATA char  data_chars[7]   = "thisef";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // get
            case 0x00746567:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gew
            case 0x00776567:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gfi
            case 0x00696667:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfl
            case 0x006c6667:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfo
            case 0x006f6667:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf8b0, // 0.971429 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gfr
            case 0x00726667:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gga
            case 0x00616767:
            {
                MKV_DATA char  data_chars[5]   = "rtns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ggb
            case 0x00626767:
            {
                MKV_DATA char  data_chars[5]   = "rueo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gge
            case 0x00656767:
            {
                MKV_DATA char  data_chars[7]   = "srdtna";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ggi
            case 0x00696767:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggl
            case 0x006c6767:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggo
            case 0x006f6767:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggr
            case 0x00726767:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggs
            case 0x00736767:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ggy
            case 0x00796767:
            {
                MKV_DATA char  data_chars[3]   = "fp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gha
            case 0x00616867:
            {
                MKV_DATA char  data_chars[5]   = "mlyn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe969, // 0.911765 
                    0x0d8e, // 0.052941 
                    0x0606, // 0.023529 
                    0x0303, // 0.011765 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ghb
            case 0x00626867:
            {
                MKV_DATA char  data_chars[5]   = "oruy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ghc
            case 0x00636867:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghe
            case 0x00656867:
            {
                MKV_DATA char  data_chars[6]   = "rdlna";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ghf
            case 0x00666867:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghg
            case 0x00676867:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghi
            case 0x00696867:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ghl
            case 0x006c6867:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9d8a, // 0.615385 
                    0x6276, // 0.384615 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghm
            case 0x006d6867:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghn
            case 0x006e6867:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gho
            case 0x006f6867:
            {
                MKV_DATA char  data_chars[8]   = "leuprao";
                MKV_DATA uint16_t data_weights[7] = {
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ghp
            case 0x00706867:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghr
            case 0x00726867:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghs
            case 0x00736867:
            {
                MKV_DATA char  data_chars[5]   = "tipw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ght
            case 0x00746867:
            {
                MKV_DATA char  data_chars[15]   = "oeswlihmfcparg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x7e98, // 0.494505 
                    0x1952, // 0.098901 
                    0x1952, // 0.098901 
                    0x13b1, // 0.076923 
                    0x0e11, // 0.054945 
                    0x0871, // 0.032967 
                    0x0871, // 0.032967 
                    0x05a0, // 0.021978 
                    0x05a0, // 0.021978 
                    0x05a0, // 0.021978 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                    0x02d0, // 0.010989 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ghu
            case 0x00756867:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ghw
            case 0x00776867:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ghy
            case 0x00796867:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gib
            case 0x00626967:
            {
                MKV_DATA char  data_chars[5]   = "brsn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gid
            case 0x00646967:
            {
                MKV_DATA char  data_chars[4]   = "del";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gif
            case 0x00666967:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gig
            case 0x00676967:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gil
            case 0x006c6967:
            {
                MKV_DATA char  data_chars[13]   = "lsbecfvgmntw";
                MKV_DATA uint16_t data_weights[12] = {
                    0xadb7, // 0.678571 
                    0x1249, // 0.071429 
                    0x0db7, // 0.053571 
                    0x0db7, // 0.053571 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // gim
            case 0x006d6967:
            {
                MKV_DATA char  data_chars[3]   = "ip";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gin
            case 0x006e6967:
            {
                MKV_DATA char  data_chars[8]   = "gstcein";
                MKV_DATA uint16_t data_weights[7] = {
                    0x69ee, // 0.413793 
                    0x3dcb, // 0.241379 
                    0x34f7, // 0.206897 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // gio
            case 0x006f6967:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gip
            case 0x00706967:
            {
                MKV_DATA char  data_chars[3]   = "sp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gir
            case 0x00726967:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gis
            case 0x00736967:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // git
            case 0x00746967:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // giv
            case 0x00766967:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gkn
            case 0x006e6b67:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gla
            case 0x00616c67:
            {
                MKV_DATA char  data_chars[8]   = "nszpktw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6b5b, // 0.419355 
                    0x4211, // 0.258065 
                    0x2108, // 0.129032 
                    0x18c6, // 0.096774 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // gle
            case 0x00656c67:
            {
                MKV_DATA char  data_chars[14]   = "ystnbawdimfpv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x611a, // 0.379310 
                    0x3206, // 0.195402 
                    0x1a7c, // 0.103448 
                    0x1499, // 0.080460 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // gli
            case 0x00696c67:
            {
                MKV_DATA char  data_chars[5]   = "nsdo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // glo
            case 0x006f6c67:
            {
                MKV_DATA char  data_chars[9]   = "suwerbdo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // glu
            case 0x00756c67:
            {
                MKV_DATA char  data_chars[3]   = "vt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gly
            case 0x00796c67:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gma
            case 0x00616d67:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gme
            case 0x00656d67:
            {
                MKV_DATA char  data_chars[3]   = "re";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmi
            case 0x00696d67:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gmo
            case 0x006f6d67:
            {
                MKV_DATA char  data_chars[5]   = "rnos";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gna
            case 0x00616e67:
            {
                MKV_DATA char  data_chars[5]   = "lbns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gnb
            case 0x00626e67:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gne
            case 0x00656e67:
            {
                MKV_DATA char  data_chars[6]   = "ysltw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gng
            case 0x00676e67:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gnh
            case 0x00686e67:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gnm
            case 0x006d6e67:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gno
            case 0x006f6e67:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gnt
            case 0x00746e67:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goa
            case 0x00616f67:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gob
            case 0x00626f67:
            {
                MKV_DATA char  data_chars[4]   = "loi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // god
            case 0x00646f67:
            {
                MKV_DATA char  data_chars[10]   = "sdmwlaobn";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // goe
            case 0x00656f67:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gof
            case 0x00666f67:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goi
            case 0x00696f67:
            {
                MKV_DATA char  data_chars[3]   = "sg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gol
            case 0x006c6f67:
            {
                MKV_DATA char  data_chars[8]   = "dlabfgs";
                MKV_DATA uint16_t data_weights[7] = {
                    0xa529, // 0.645161 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // gom
            case 0x006d6f67:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gon
            case 0x006e6f67:
            {
                MKV_DATA char  data_chars[9]   = "aebnshcy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // goo
            case 0x006f6f67:
            {
                MKV_DATA char  data_chars[6]   = "dsntm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6186, // 0.380952 
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gor
            case 0x00726f67:
            {
                MKV_DATA char  data_chars[13]   = "senrdcltyghi";
                MKV_DATA uint16_t data_weights[12] = {
                    0x52d3, // 0.323529 
                    0x4b4b, // 0.294118 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // gos
            case 0x00736f67:
            {
                MKV_DATA char  data_chars[9]   = "sflmpbce";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // got
            case 0x00746f67:
            {
                MKV_DATA char  data_chars[5]   = "htes";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gou
            case 0x00756f67:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gov
            case 0x00766f67:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gow
            case 0x00776f67:
            {
                MKV_DATA char  data_chars[4]   = "teh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gox
            case 0x00786f67:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // goz
            case 0x007a6f67:
            {
                MKV_DATA char  data_chars[3]   = "ez";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpa
            case 0x00617067:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpi
            case 0x00697067:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpo
            case 0x006f7067:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gpu
            case 0x00757067:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gra
            case 0x00617267:
            {
                MKV_DATA char  data_chars[15]   = "vnsyfictmdbzpl";
                MKV_DATA uint16_t data_weights[14] = {
                    0x66f5, // 0.402174 
                    0x26f5, // 0.152174 
                    0x1bd3, // 0.108696 
                    0x10b2, // 0.065217 
                    0x10b2, // 0.065217 
                    0x0dea, // 0.054348 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // gre
            case 0x00657267:
            {
                MKV_DATA char  data_chars[13]   = "eaysgntbimhv";
                MKV_DATA uint16_t data_weights[12] = {
                    0xa5a6, // 0.647059 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0969, // 0.036765 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                    0x01e2, // 0.007353 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // gri
            case 0x00697267:
            {
                MKV_DATA char  data_chars[11]   = "mngstdflzc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5050, // 0.313726 
                    0x3c3c, // 0.235294 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gro
            case 0x006f7267:
            {
                MKV_DATA char  data_chars[11]   = "vuscnowbmt";
                MKV_DATA uint16_t data_weights[10] = {
                    0xc37e, // 0.763636 
                    0x129e, // 0.072727 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // gru
            case 0x00757267:
            {
                MKV_DATA char  data_chars[4]   = "bmn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gsa
            case 0x00617367:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsb
            case 0x00627367:
            {
                MKV_DATA char  data_chars[4]   = "yur";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gsc
            case 0x00637367:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsd
            case 0x00647367:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gse
            case 0x00657367:
            {
                MKV_DATA char  data_chars[4]   = "tay";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gsf
            case 0x00667367:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsg
            case 0x00677367:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsh
            case 0x00687367:
            {
                MKV_DATA char  data_chars[6]   = "aeiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8788, // 0.529412 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gsi
            case 0x00697367:
            {
                MKV_DATA char  data_chars[3]   = "dg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsk
            case 0x006b7367:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsl
            case 0x006c7367:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gsm
            case 0x006d7367:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gsn
            case 0x006e7367:
            {
                MKV_DATA char  data_chars[3]   = "oy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gso
            case 0x006f7367:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gst
            case 0x00747367:
            {
                MKV_DATA char  data_chars[7]   = "oheayr";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb13b, // 0.692308 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gsw
            case 0x00777367:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gta
            case 0x00617467:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gth
            case 0x00687467:
            {
                MKV_DATA char  data_chars[4]   = "owa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xddde, // 0.866667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gto
            case 0x006f7467:
            {
                MKV_DATA char  data_chars[5]   = "nfwp";
                MKV_DATA uint16_t data_weights[4] = {
                    0xfbed, // 0.984091 
                    0x0254, // 0.009091 
                    0x012a, // 0.004545 
                    0x0095, // 0.002273 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gtr
            case 0x00727467:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gua
            case 0x00617567:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gub
            case 0x00627567:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gue
            case 0x00657567:
            {
                MKV_DATA char  data_chars[5]   = "stvg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gui
            case 0x00697567:
            {
                MKV_DATA char  data_chars[6]   = "lstdn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gul
            case 0x006c7567:
            {
                MKV_DATA char  data_chars[6]   = "levwd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gum
            case 0x006d7567:
            {
                MKV_DATA char  data_chars[5]   = "blmp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gun
            case 0x006e7567:
            {
                MKV_DATA char  data_chars[10]   = "ntsdevwfb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5e51, // 0.368421 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // gup
            case 0x00707567:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gur
            case 0x00727567:
            {
                MKV_DATA char  data_chars[5]   = "nrst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // gus
            case 0x00737567:
            {
                MKV_DATA char  data_chars[4]   = "ths";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gut
            case 0x00747567:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // guy
            case 0x00797567:
            {
                MKV_DATA char  data_chars[4]   = "hsz";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gva
            case 0x00617667:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gvi
            case 0x00697667:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gwa
            case 0x00617767:
            {
                MKV_DATA char  data_chars[7]   = "yrltsv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gwe
            case 0x00657767:
            {
                MKV_DATA char  data_chars[7]   = "lendrs";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa1af, // 0.631579 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // gwi
            case 0x00697767:
            {
                MKV_DATA char  data_chars[6]   = "tcgln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // gwo
            case 0x006f7767:
            {
                MKV_DATA char  data_chars[4]   = "rou";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb13b, // 0.692308 
                    0x4835, // 0.282051 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // gwy
            case 0x00797767:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyf
            case 0x00667967:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // gyp
            case 0x00707967:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // g
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'h':
        {
            switch ( trigram_u32 )
            {
            // hab
            case 0x00626168:
            {
                MKV_DATA char  data_chars[5]   = "beri";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hac
            case 0x00636168:
            {
                MKV_DATA char  data_chars[8]   = "koerhtc";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9e1e, // 0.617647 
                    0x25a6, // 0.147059 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // had
            case 0x00646168:
            {
                MKV_DATA char  data_chars[15]   = "dslwefohzkinyb";
                MKV_DATA uint16_t data_weights[14] = {
                    0x512c, // 0.317073 
                    0x31f4, // 0.195122 
                    0x18fa, // 0.097561 
                    0x12bb, // 0.073171 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // hae
            case 0x00656168:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // haf
            case 0x00666168:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hag
            case 0x00676168:
            {
                MKV_DATA char  data_chars[9]   = "glbnwfmu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hai
            case 0x00696168:
            {
                MKV_DATA char  data_chars[4]   = "nlg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7943, // 0.473684 
                    0x5e51, // 0.368421 
                    0x286c, // 0.157895 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hak
            case 0x006b6168:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hal
            case 0x006c6168:
            {
                MKV_DATA char  data_chars[17]   = "lesktfvmdgwabcun";
                MKV_DATA uint16_t data_weights[16] = {
                    0xa92d, // 0.660839 
                    0x1102, // 0.066434 
                    0x0ba3, // 0.045455 
                    0x08f3, // 0.034965 
                    0x08f3, // 0.034965 
                    0x08f3, // 0.034965 
                    0x055f, // 0.020979 
                    0x047a, // 0.017483 
                    0x047a, // 0.017483 
                    0x047a, // 0.017483 
                    0x0395, // 0.013986 
                    0x02af, // 0.010490 
                    0x02af, // 0.010490 
                    0x01ca, // 0.006993 
                    0x00e5, // 0.003497 
                    0x00e5, // 0.003497 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ham
            case 0x006d6168:
            {
                MKV_DATA char  data_chars[15]   = "psbmelwhfndcar";
                MKV_DATA uint16_t data_weights[14] = {
                    0x90f7, // 0.566265 
                    0x2819, // 0.156626 
                    0x1282, // 0.072289 
                    0x1282, // 0.072289 
                    0x07b6, // 0.030120 
                    0x062b, // 0.024096 
                    0x04a0, // 0.018072 
                    0x04a0, // 0.018072 
                    0x0316, // 0.012048 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // han
            case 0x006e6168:
            {
                MKV_DATA char  data_chars[16]   = "gdntkwscblfyihe";
                MKV_DATA uint16_t data_weights[15] = {
                    0x42a1, // 0.260274 
                    0x3119, // 0.191781 
                    0x1f90, // 0.123288 
                    0x150b, // 0.082192 
                    0x1189, // 0.068493 
                    0x0e07, // 0.054795 
                    0x0e07, // 0.054795 
                    0x0a85, // 0.041096 
                    0x0a85, // 0.041096 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // hap
            case 0x00706168:
            {
                MKV_DATA char  data_chars[9]   = "emprstwl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8000, // 0.500000 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // har
            case 0x00726168:
            {
                MKV_DATA char  data_chars[20]   = "tdlprebnmfivwscgoka";
                MKV_DATA uint16_t data_weights[19] = {
                    0x2aab, // 0.166667 
                    0x2492, // 0.142857 
                    0x228a, // 0.134921 
                    0x1b6e, // 0.107143 
                    0x1659, // 0.087302 
                    0x0f3d, // 0.059524 
                    0x0f3d, // 0.059524 
                    0x0e39, // 0.055556 
                    0x0821, // 0.031746 
                    0x0618, // 0.023810 
                    0x0514, // 0.019841 
                    0x0514, // 0.019841 
                    0x0514, // 0.019841 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x0104, // 0.003968 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // has
            case 0x00736168:
            {
                MKV_DATA char  data_chars[10]   = "tlsekfwbc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x31c7, // 0.194444 
                    0x31c7, // 0.194444 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hat
            case 0x00746168:
            {
                MKV_DATA char  data_chars[11]   = "tchflesbwm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x56db, // 0.339286 
                    0x3249, // 0.196429 
                    0x3249, // 0.196429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hau
            case 0x00756168:
            {
                MKV_DATA char  data_chars[6]   = "glxnt";
                MKV_DATA uint16_t data_weights[5] = {
                    0xae8c, // 0.681818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hav
            case 0x00766168:
            {
                MKV_DATA char  data_chars[6]   = "eaiyo";
                MKV_DATA uint16_t data_weights[5] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // haw
            case 0x00776168:
            {
                MKV_DATA char  data_chars[14]   = "kbtesflcnoadg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6969, // 0.411765 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // hax
            case 0x00786168:
            {
                MKV_DATA char  data_chars[4]   = "teh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hay
            case 0x00796168:
            {
                MKV_DATA char  data_chars[12]   = "entldsgwfbm";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3b14, // 0.230769 
                    0x2df3, // 0.179487 
                    0x20d2, // 0.128205 
                    0x20d2, // 0.128205 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // haz
            case 0x007a6168:
            {
                MKV_DATA char  data_chars[5]   = "eloa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9c72, // 0.611111 
                    0x471c, // 0.277778 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hba
            case 0x00616268:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hbe
            case 0x00656268:
            {
                MKV_DATA char  data_chars[4]   = "erc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hbo
            case 0x006f6268:
            {
                MKV_DATA char  data_chars[5]   = "rucl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7878, // 0.470588 
                    0x6969, // 0.411765 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hbr
            case 0x00726268:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb4b5, // 0.705882 
                    0x4b4b, // 0.294118 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hbu
            case 0x00756268:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hca
            case 0x00616368:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hch
            case 0x00686368:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hcl
            case 0x006c6368:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hco
            case 0x006f6368:
            {
                MKV_DATA char  data_chars[5]   = "tmuo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8f5c, // 0.560000 
                    0x51ec, // 0.320000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hcr
            case 0x00726368:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hcu
            case 0x00756368:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hda
            case 0x00616468:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hde
            case 0x00656468:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hdo
            case 0x006f6468:
            {
                MKV_DATA char  data_chars[3]   = "wn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hea
            case 0x00616568:
            {
                MKV_DATA char  data_chars[12]   = "dtlrsnvpmgc";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6e8c, // 0.431818 
                    0x55d1, // 0.335227 
                    0x12e9, // 0.073864 
                    0x0a2f, // 0.039773 
                    0x0746, // 0.028409 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x0174, // 0.005682 
                    0x0174, // 0.005682 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // heb
            case 0x00626568:
            {
                MKV_DATA char  data_chars[8]   = "bdeirsa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hec
            case 0x00636568:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hed
            case 0x00646568:
            {
                MKV_DATA char  data_chars[12]   = "gdilwzbefns";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5c72, // 0.361111 
                    0x471c, // 0.277778 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hee
            case 0x00656568:
            {
                MKV_DATA char  data_chars[8]   = "pltrsen";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x3d71, // 0.240000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hef
            case 0x00666568:
            {
                MKV_DATA char  data_chars[3]   = "fo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // heg
            case 0x00676568:
            {
                MKV_DATA char  data_chars[4]   = "glw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hei
            case 0x00696568:
            {
                MKV_DATA char  data_chars[4]   = "gnm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hel
            case 0x006c6568:
            {
                MKV_DATA char  data_chars[18]   = "lsmfdpevtnwihbcoy";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1dde, // 0.116667 
                    0x1555, // 0.083333 
                    0x1111, // 0.066667 
                    0x0eef, // 0.058333 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0aab, // 0.041667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0444, // 0.016667 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                    0x0222, // 0.008333 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // hem
            case 0x006d6568:
            {
                MKV_DATA char  data_chars[9]   = "pibsefly";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2e8c, // 0.181818 
                    0x26ca, // 0.151515 
                    0x26ca, // 0.151515 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hen
            case 0x006e6568:
            {
                MKV_DATA char  data_chars[17]   = "dslfnghtibwaorme";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4ad5, // 0.292308 
                    0x2372, // 0.138462 
                    0x2372, // 0.138462 
                    0x1b92, // 0.107692 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // heo
            case 0x006f6568:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hep
            case 0x00706568:
            {
                MKV_DATA char  data_chars[9]   = "spwhterb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // heq
            case 0x00716568:
            {
                return 'u';
            }
            break;

            // her
            case 0x00726568:
            {
                MKV_DATA char  data_chars[21]   = "sitnlrbwofehdmcgyavu";
                MKV_DATA uint16_t data_weights[20] = {
                    0x2f3f, // 0.184549 
                    0x1fdd, // 0.124464 
                    0x182c, // 0.094421 
                    0x14e0, // 0.081545 
                    0x13c7, // 0.077253 
                    0x107b, // 0.064378 
                    0x0f62, // 0.060086 
                    0x0c16, // 0.047210 
                    0x0afd, // 0.042918 
                    0x09e3, // 0.038627 
                    0x08ca, // 0.034335 
                    0x0698, // 0.025751 
                    0x0698, // 0.025751 
                    0x057e, // 0.021459 
                    0x057e, // 0.021459 
                    0x0465, // 0.017167 
                    0x034c, // 0.012876 
                    0x034c, // 0.012876 
                    0x0233, // 0.008584 
                    0x0119, // 0.004292 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // hes
            case 0x00736568:
            {
                MKV_DATA char  data_chars[9]   = "tslhwkei";
                MKV_DATA uint16_t data_weights[8] = {
                    0xa800, // 0.656250 
                    0x1400, // 0.078125 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0c00, // 0.046875 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // het
            case 0x00746568:
            {
                MKV_DATA char  data_chars[9]   = "thswflno";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6b5b, // 0.419355 
                    0x5295, // 0.322581 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // heu
            case 0x00756568:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hev
            case 0x00766568:
            {
                MKV_DATA char  data_chars[4]   = "eiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9000, // 0.562500 
                    0x6000, // 0.375000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hew
            case 0x00776568:
            {
                MKV_DATA char  data_chars[8]   = "eliosta";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hex
            case 0x00786568:
            {
                MKV_DATA char  data_chars[4]   = "thw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hey
            case 0x00796568:
            {
                MKV_DATA char  data_chars[12]   = "sdblthefnwr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hfi
            case 0x00696668:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf800, // 0.968750 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfl
            case 0x006c6668:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hfo
            case 0x006f6668:
            {
                MKV_DATA char  data_chars[4]   = "rln";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdd17, // 0.863636 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hga
            case 0x00616768:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgi
            case 0x00696768:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgr
            case 0x00726768:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hgw
            case 0x00776768:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hha
            case 0x00616868:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hhi
            case 0x00696868:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hia
            case 0x00616968:
            {
                MKV_DATA char  data_chars[4]   = "nlm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hib
            case 0x00626968:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hic
            case 0x00636968:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcaab, // 0.791667 
                    0x3555, // 0.208333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hid
            case 0x00646968:
            {
                MKV_DATA char  data_chars[8]   = "edoycgh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x5000, // 0.312500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hie
            case 0x00656968:
            {
                MKV_DATA char  data_chars[6]   = "lsvwf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hif
            case 0x00666968:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hig
            case 0x00676968:
            {
                MKV_DATA char  data_chars[5]   = "hgnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xedb7, // 0.928571 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hil
            case 0x006c6968:
            {
                MKV_DATA char  data_chars[16]   = "ldtcsbmhwgvpaif";
                MKV_DATA uint16_t data_weights[15] = {
                    0xd82a, // 0.844388 
                    0x0bc1, // 0.045918 
                    0x05e1, // 0.022959 
                    0x03eb, // 0.015306 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x01f6, // 0.007653 
                    0x01f6, // 0.007653 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                    0x014e, // 0.005102 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // him
            case 0x006d6968:
            {
                MKV_DATA char  data_chars[5]   = "bpnl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hin
            case 0x006e6968:
            {
                MKV_DATA char  data_chars[14]   = "gdcntfesxhwlk";
                MKV_DATA uint16_t data_weights[13] = {
                    0x8ac4, // 0.542056 
                    0x1f1a, // 0.121495 
                    0x10bf, // 0.065421 
                    0x0bf6, // 0.046729 
                    0x0bf6, // 0.046729 
                    0x0992, // 0.037383 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x072d, // 0.028037 
                    0x04c9, // 0.018692 
                    0x04c9, // 0.018692 
                    0x0264, // 0.009346 
                    0x0264, // 0.009346 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // hio
            case 0x006f6968:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hip
            case 0x00706968:
            {
                MKV_DATA char  data_chars[11]   = "pslhtmbcdn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x44ec, // 0.269231 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hir
            case 0x00726968:
            {
                MKV_DATA char  data_chars[12]   = "elsbkdotnrw";
                MKV_DATA uint16_t data_weights[11] = {
                    0xac38, // 0.672727 
                    0x1746, // 0.090909 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // his
            case 0x00736968:
            {
                MKV_DATA char  data_chars[10]   = "twelbsohc";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6276, // 0.384615 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hit
            case 0x00746968:
            {
                MKV_DATA char  data_chars[16]   = "etcbhwnslmfgair";
                MKV_DATA uint16_t data_weights[15] = {
                    0x674c, // 0.403509 
                    0x3824, // 0.219298 
                    0x11f7, // 0.070175 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x08fc, // 0.035088 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x047e, // 0.017544 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // hiv
            case 0x00766968:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hix
            case 0x00786968:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hla
            case 0x00616c68:
            {
                MKV_DATA char  data_chars[6]   = "ndkrw";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbbbc, // 0.733333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hle
            case 0x00656c68:
            {
                MKV_DATA char  data_chars[8]   = "yiatwev";
                MKV_DATA uint16_t data_weights[7] = {
                    0xaca7, // 0.674419 
                    0x1dc4, // 0.116279 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hli
            case 0x00696c68:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hlo
            case 0x006f6c68:
            {
                MKV_DATA char  data_chars[4]   = "eow";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hma
            case 0x00616d68:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hme
            case 0x00656d68:
            {
                MKV_DATA char  data_chars[4]   = "rao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa492, // 0.642857 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hmi
            case 0x00696d68:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hmo
            case 0x006f6d68:
            {
                MKV_DATA char  data_chars[5]   = "orns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hna
            case 0x00616e68:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hnb
            case 0x00626e68:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hne
            case 0x00656e68:
            {
                MKV_DATA char  data_chars[3]   = "yl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hno
            case 0x006f6e68:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hns
            case 0x00736e68:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoa
            case 0x00616f68:
            {
                MKV_DATA char  data_chars[5]   = "rtdk";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hob
            case 0x00626f68:
            {
                MKV_DATA char  data_chars[11]   = "brsyadehln";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hoc
            case 0x00636f68:
            {
                MKV_DATA char  data_chars[5]   = "kloc";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd000, // 0.812500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hod
            case 0x00646f68:
            {
                MKV_DATA char  data_chars[8]   = "gesdnrt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hoe
            case 0x00656f68:
            {
                MKV_DATA char  data_chars[3]   = "bn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hof
            case 0x00666f68:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hog
            case 0x00676f68:
            {
                MKV_DATA char  data_chars[7]   = "gsbhnp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hol
            case 0x006c6f68:
            {
                MKV_DATA char  data_chars[18]   = "mletdbywanskcovif";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4e96, // 0.306977 
                    0x3202, // 0.195349 
                    0x2026, // 0.125581 
                    0x1ef5, // 0.120930 
                    0x0e4a, // 0.055814 
                    0x0e4a, // 0.055814 
                    0x0987, // 0.037209 
                    0x04c3, // 0.018605 
                    0x0392, // 0.013953 
                    0x0392, // 0.013953 
                    0x0392, // 0.013953 
                    0x0262, // 0.009302 
                    0x0262, // 0.009302 
                    0x0262, // 0.009302 
                    0x0131, // 0.004651 
                    0x0131, // 0.004651 
                    0x0131, // 0.004651 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // hom
            case 0x006d6f68:
            {
                MKV_DATA char  data_chars[6]   = "epail";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hon
            case 0x006e6f68:
            {
                MKV_DATA char  data_chars[8]   = "eigynor";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5174, // 0.318182 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hoo
            case 0x006f6f68:
            {
                MKV_DATA char  data_chars[9]   = "ktldpbhe";
                MKV_DATA uint16_t data_weights[8] = {
                    0x611a, // 0.379310 
                    0x3dcb, // 0.241379 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hop
            case 0x00706f68:
            {
                MKV_DATA char  data_chars[13]   = "estwgclpbdfn";
                MKV_DATA uint16_t data_weights[12] = {
                    0x8569, // 0.521127 
                    0x2ee0, // 0.183099 
                    0x15a2, // 0.084507 
                    0x15a2, // 0.084507 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // hor
            case 0x00726f68:
            {
                MKV_DATA char  data_chars[22]   = "pnstelrdwkaohviucmfgb";
                MKV_DATA uint16_t data_weights[21] = {
                    0x6b4f, // 0.419178 
                    0x4e8e, // 0.306849 
                    0x1672, // 0.087671 
                    0x0e07, // 0.054795 
                    0x091e, // 0.035616 
                    0x059c, // 0.021918 
                    0x0435, // 0.016438 
                    0x021b, // 0.008219 
                    0x021b, // 0.008219 
                    0x0167, // 0.005479 
                    0x0167, // 0.005479 
                    0x0167, // 0.005479 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                    0x00b4, // 0.002740 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // hos
            case 0x00736f68:
            {
                MKV_DATA char  data_chars[7]   = "eckwya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hot
            case 0x00746f68:
            {
                MKV_DATA char  data_chars[9]   = "tlwgaeho";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9d8a, // 0.615385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hou
            case 0x00756f68:
            {
                MKV_DATA char  data_chars[5]   = "sgnl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb90f, // 0.722892 
                    0x1ed8, // 0.120482 
                    0x18ad, // 0.096386 
                    0x0f6c, // 0.060241 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hov
            case 0x00766f68:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // how
            case 0x00776f68:
            {
                MKV_DATA char  data_chars[11]   = "eltdsagbin";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3d71, // 0.240000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hox
            case 0x00786f68:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hoy
            case 0x00796f68:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpa
            case 0x00617068:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpe
            case 0x00657068:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hpo
            case 0x006f7068:
            {
                MKV_DATA char  data_chars[4]   = "nor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hpr
            case 0x00727068:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hra
            case 0x00617268:
            {
                MKV_DATA char  data_chars[7]   = "wilmnp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hre
            case 0x00657268:
            {
                MKV_DATA char  data_chars[10]   = "ewpasydil";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // hri
            case 0x00697268:
            {
                MKV_DATA char  data_chars[8]   = "sdgpfnv";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7000, // 0.437500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hro
            case 0x006f7268:
            {
                MKV_DATA char  data_chars[9]   = "pcwstuoa";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7555, // 0.458333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // hru
            case 0x00757268:
            {
                MKV_DATA char  data_chars[8]   = "bpsmnxg";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hsd
            case 0x00647368:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hse
            case 0x00657368:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsi
            case 0x00697368:
            {
                MKV_DATA char  data_chars[3]   = "dk";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hsp
            case 0x00707368:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hst
            case 0x00747368:
            {
                MKV_DATA char  data_chars[5]   = "oera";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hsw
            case 0x00777368:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hta
            case 0x00617468:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htc
            case 0x00637468:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hte
            case 0x00657468:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htf
            case 0x00667468:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htg
            case 0x00677468:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hth
            case 0x00687468:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hti
            case 0x00697468:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htl
            case 0x006c7468:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htm
            case 0x006d7468:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hto
            case 0x006f7468:
            {
                MKV_DATA char  data_chars[6]   = "nwfpr";
                MKV_DATA uint16_t data_weights[5] = {
                    0xddde, // 0.866667 
                    0x1555, // 0.083333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // htp
            case 0x00707468:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htr
            case 0x00727468:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hts
            case 0x00737468:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // htw
            case 0x00777468:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // hub
            case 0x00627568:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // huc
            case 0x00637568:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hud
            case 0x00647568:
            {
                MKV_DATA char  data_chars[6]   = "dnyls";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hug
            case 0x00677568:
            {
                MKV_DATA char  data_chars[4]   = "hgu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hui
            case 0x00697568:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hul
            case 0x006c7568:
            {
                MKV_DATA char  data_chars[8]   = "lmtvcsh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x70a4, // 0.440000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // hum
            case 0x006d7568:
            {
                MKV_DATA char  data_chars[4]   = "bms";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hun
            case 0x006e7568:
            {
                MKV_DATA char  data_chars[11]   = "tdgsncwiae";
                MKV_DATA uint16_t data_weights[10] = {
                    0x68eb, // 0.409836 
                    0x29f8, // 0.163934 
                    0x25c5, // 0.147541 
                    0x2193, // 0.131148 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // hur
            case 0x00727568:
            {
                MKV_DATA char  data_chars[12]   = "sclntdgwrmv";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8a23, // 0.539604 
                    0x46f8, // 0.277228 
                    0x11be, // 0.069307 
                    0x0a23, // 0.039604 
                    0x0656, // 0.024752 
                    0x0512, // 0.019802 
                    0x0289, // 0.009901 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                    0x0144, // 0.004950 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // hus
            case 0x00737568:
            {
                MKV_DATA char  data_chars[4]   = "bts";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hut
            case 0x00747568:
            {
                MKV_DATA char  data_chars[7]   = "tefhcl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9436, // 0.578947 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hux
            case 0x00787568:
            {
                MKV_DATA char  data_chars[4]   = "hlt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // huy
            case 0x00797568:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hvi
            case 0x00697668:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hvo
            case 0x006f7668:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwa
            case 0x00617768:
            {
                MKV_DATA char  data_chars[6]   = "iyrtl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbdcb, // 0.741379 
                    0x1ee6, // 0.120690 
                    0x11a8, // 0.068966 
                    0x0d3e, // 0.051724 
                    0x046a, // 0.017241 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // hwe
            case 0x00657768:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwi
            case 0x00697768:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hwo
            case 0x006f7768:
            {
                MKV_DATA char  data_chars[4]   = "orl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa222, // 0.633333 
                    0x4444, // 0.266667 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hya
            case 0x00617968:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyb
            case 0x00627968:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyc
            case 0x00637968:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyd
            case 0x00647968:
            {
                MKV_DATA char  data_chars[7]   = "eodisy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // hyf
            case 0x00667968:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyg
            case 0x00677968:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyh
            case 0x00687968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyk
            case 0x006b7968:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyl
            case 0x006c7968:
            {
                MKV_DATA char  data_chars[4]   = "tel";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hym
            case 0x006d7968:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyn
            case 0x006e7968:
            {
                MKV_DATA char  data_chars[4]   = "dho";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hyp
            case 0x00707968:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyr
            case 0x00727968:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hys
            case 0x00737968:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyt
            case 0x00747968:
            {
                MKV_DATA char  data_chars[4]   = "heo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // hyv
            case 0x00767968:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // hyw
            case 0x00777968:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // h
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'i':
        {
            switch ( trigram_u32 )
            {
            // iac
            case 0x00636169:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iam
            case 0x006d6169:
            {
                MKV_DATA char  data_chars[4]   = "set";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ian
            case 0x006e6169:
            {
                MKV_DATA char  data_chars[4]   = "sgt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iar
            case 0x00726169:
            {
                MKV_DATA char  data_chars[6]   = "dsnty";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // iat
            case 0x00746169:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iav
            case 0x00766169:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iba
            case 0x00616269:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibb
            case 0x00626269:
            {
                MKV_DATA char  data_chars[8]   = "elsiaoy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7333, // 0.450000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ibc
            case 0x00636269:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibd
            case 0x00646269:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibe
            case 0x00656269:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibf
            case 0x00666269:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibl
            case 0x006c6269:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibn
            case 0x006e6269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibo
            case 0x006f6269:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibr
            case 0x00726269:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibs
            case 0x00736269:
            {
                MKV_DATA char  data_chars[9]   = "tmoebhil";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ibt
            case 0x00746269:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibu
            case 0x00756269:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ibw
            case 0x00776269:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ica
            case 0x00616369:
            {
                MKV_DATA char  data_chars[5]   = "rnpy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // icc
            case 0x00636369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ice
            case 0x00656369:
            {
                MKV_DATA char  data_chars[7]   = "stghln";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ich
            case 0x00686369:
            {
                MKV_DATA char  data_chars[10]   = "aemobfsil";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ccd, // 0.300000 
                    0x4444, // 0.266667 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ick
            case 0x006b6369:
            {
                MKV_DATA char  data_chars[17]   = "lehsfnwmtiobaruk";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4302, // 0.261745 
                    0x3c22, // 0.234899 
                    0x1b7d, // 0.107383 
                    0x1656, // 0.087248 
                    0x12e6, // 0.073826 
                    0x0f77, // 0.060403 
                    0x0dbf, // 0.053691 
                    0x0a4f, // 0.040268 
                    0x0528, // 0.020134 
                    0x0528, // 0.020134 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                    0x01b8, // 0.006711 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ico
            case 0x006f6369:
            {
                MKV_DATA char  data_chars[5]   = "tmlr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8788, // 0.529412 
                    0x5a5a, // 0.352941 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // icr
            case 0x00726369:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ict
            case 0x00746369:
            {
                MKV_DATA char  data_chars[3]   = "os";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ida
            case 0x00616469:
            {
                MKV_DATA char  data_chars[4]   = "lny";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // idb
            case 0x00626469:
            {
                MKV_DATA char  data_chars[4]   = "ruo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // idc
            case 0x00636469:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idd
            case 0x00646469:
            {
                MKV_DATA char  data_chars[10]   = "lieyaorsu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x745d, // 0.454545 
                    0x3f2b, // 0.246753 
                    0x2492, // 0.142857 
                    0x0d4c, // 0.051948 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ide
            case 0x00656469:
            {
                MKV_DATA char  data_chars[14]   = "nsmfrwogbckla";
                MKV_DATA uint16_t data_weights[13] = {
                    0x638e, // 0.388889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // idf
            case 0x00666469:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idg
            case 0x00676469:
            {
                MKV_DATA char  data_chars[9]   = "ehawflmn";
                MKV_DATA uint16_t data_weights[8] = {
                    0xf5c3, // 0.960000 
                    0x02cb, // 0.010909 
                    0x01dd, // 0.007273 
                    0x01dd, // 0.007273 
                    0x00ee, // 0.003636 
                    0x00ee, // 0.003636 
                    0x00ee, // 0.003636 
                    0x00ee, // 0.003636 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // idh
            case 0x00686469:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idi
            case 0x00696469:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idl
            case 0x006c6469:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x638e, // 0.388889 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // idm
            case 0x006d6469:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // idn
            case 0x006e6469:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ido
            case 0x006f6469:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idp
            case 0x00706469:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idr
            case 0x00726469:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ids
            case 0x00736469:
            {
                MKV_DATA char  data_chars[8]   = "tegiobd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8000, // 0.500000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // idv
            case 0x00766469:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // idw
            case 0x00776469:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iec
            case 0x00636569:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iel
            case 0x006c6569:
            {
                MKV_DATA char  data_chars[4]   = "dgs";
                MKV_DATA uint16_t data_weights[3] = {
                    0xfea4, // 0.994695 
                    0x00ae, // 0.002653 
                    0x00ae, // 0.002653 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ien
            case 0x006e6569:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ier
            case 0x00726569:
            {
                MKV_DATA char  data_chars[11]   = "tcsylefnpr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ies
            case 0x00736569:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iet
            case 0x00746569:
            {
                MKV_DATA char  data_chars[3]   = "hs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ieu
            case 0x00756569:
            {
                MKV_DATA char  data_chars[3]   = "sx";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iev
            case 0x00766569:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iew
            case 0x00776569:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iez
            case 0x007a6569:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ife
            case 0x00656669:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iff
            case 0x00666669:
            {
                MKV_DATA char  data_chars[11]   = "eoislahkyt";
                MKV_DATA uint16_t data_weights[10] = {
                    0xaaab, // 0.666667 
                    0x17b4, // 0.092593 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ifi
            case 0x00696669:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifn
            case 0x006e6669:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ifo
            case 0x006f6669:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeaab, // 0.916667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ift
            case 0x00746669:
            {
                MKV_DATA char  data_chars[4]   = "ois";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iga
            case 0x00616769:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igb
            case 0x00626769:
            {
                MKV_DATA char  data_chars[5]   = "yeuo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // igd
            case 0x00646769:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ige
            case 0x00656769:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igf
            case 0x00666769:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igg
            case 0x00676769:
            {
                MKV_DATA char  data_chars[7]   = "isaeol";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // igh
            case 0x00686769:
            {
                MKV_DATA char  data_chars[17]   = "tlaswebfcmoinprg";
                MKV_DATA uint16_t data_weights[16] = {
                    0x9387, // 0.576271 
                    0x1387, // 0.076271 
                    0x0f30, // 0.059322 
                    0x0f30, // 0.059322 
                    0x0ad9, // 0.042373 
                    0x0ad9, // 0.042373 
                    0x08ae, // 0.033898 
                    0x0682, // 0.025424 
                    0x0457, // 0.016949 
                    0x0457, // 0.016949 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                    0x022b, // 0.008475 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // igi
            case 0x00696769:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igl
            case 0x006c6769:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // igm
            case 0x006d6769:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ign
            case 0x006e6769:
            {
                MKV_DATA char  data_chars[10]   = "teahygmob";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // igo
            case 0x006f6769:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igr
            case 0x00726769:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igs
            case 0x00736769:
            {
                MKV_DATA char  data_chars[6]   = "tlbiw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // igt
            case 0x00746769:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // igw
            case 0x00776769:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iha
            case 0x00616869:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iho
            case 0x006f6869:
            {
                MKV_DATA char  data_chars[3]   = "pr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ihu
            case 0x00756869:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ike
            case 0x00656b69:
            {
                MKV_DATA char  data_chars[6]   = "nshrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ikt
            case 0x00746b69:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ila
            case 0x00616c69:
            {
                MKV_DATA char  data_chars[6]   = "nsdmr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ilb
            case 0x00626c69:
            {
                MKV_DATA char  data_chars[7]   = "oeruya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3e10, // 0.242424 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ilc
            case 0x00636c69:
            {
                MKV_DATA char  data_chars[4]   = "ohr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb8e4, // 0.722222 
                    0x38e4, // 0.222222 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ild
            case 0x00646c69:
            {
                MKV_DATA char  data_chars[12]   = "eswirhmoabf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x7a2f, // 0.477273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ile
            case 0x00656c69:
            {
                MKV_DATA char  data_chars[12]   = "yshebiwgkcd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ilf
            case 0x00666c69:
            {
                MKV_DATA char  data_chars[5]   = "oira";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ilg
            case 0x00676c69:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa000, // 0.625000 
                    0x6000, // 0.375000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilh
            case 0x00686c69:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ili
            case 0x00696c69:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ilk
            case 0x006b6c69:
            {
                MKV_DATA char  data_chars[6]   = "esiwh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ill
            case 0x006c6c69:
            {
                MKV_DATA char  data_chars[19]   = "eisaohbmywgfcptdnv";
                MKV_DATA uint16_t data_weights[18] = {
                    0x5156, // 0.317726 
                    0x31a9, // 0.193980 
                    0x1c41, // 0.110368 
                    0x148c, // 0.080268 
                    0x1044, // 0.063545 
                    0x0a46, // 0.040134 
                    0x096b, // 0.036789 
                    0x06d9, // 0.026756 
                    0x06d9, // 0.026756 
                    0x0523, // 0.020067 
                    0x0448, // 0.016722 
                    0x0448, // 0.016722 
                    0x0448, // 0.016722 
                    0x0292, // 0.010033 
                    0x0292, // 0.010033 
                    0x01b6, // 0.006689 
                    0x00db, // 0.003344 
                    0x00db, // 0.003344 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // ilm
            case 0x006d6c69:
            {
                MKV_DATA char  data_chars[7]   = "iaeosc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // iln
            case 0x006e6c69:
            {
                MKV_DATA char  data_chars[9]   = "esthirdo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7627, // 0.461538 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ilo
            case 0x006f6c69:
            {
                MKV_DATA char  data_chars[4]   = "dew";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilp
            case 0x00706c69:
            {
                MKV_DATA char  data_chars[4]   = "eos";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilr
            case 0x00726c69:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ils
            case 0x00736c69:
            {
                MKV_DATA char  data_chars[14]   = "towhbldfeigcm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4a53, // 0.290323 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0c63, // 0.048387 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                    0x0421, // 0.016129 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ilt
            case 0x00746c69:
            {
                MKV_DATA char  data_chars[10]   = "oihbdeusy";
                MKV_DATA uint16_t data_weights[9] = {
                    0xa800, // 0.656250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ilv
            case 0x00766c69:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc3c4, // 0.764706 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ilw
            case 0x00776c69:
            {
                MKV_DATA char  data_chars[5]   = "oeyi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ily
            case 0x00796c69:
            {
                MKV_DATA char  data_chars[3]   = "vh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ima
            case 0x00616d69:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imb
            case 0x00626d69:
            {
                MKV_DATA char  data_chars[8]   = "lerouyi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // imc
            case 0x00636d69:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imd
            case 0x00646d69:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ime
            case 0x00656d69:
            {
                MKV_DATA char  data_chars[8]   = "rsfhtbk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // imf
            case 0x00666d69:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imh
            case 0x00686d69:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imi
            case 0x00696d69:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iml
            case 0x006c6d69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imm
            case 0x006d6d69:
            {
                MKV_DATA char  data_chars[5]   = "esio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // imn
            case 0x006e6d69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // imo
            case 0x006f6d69:
            {
                MKV_DATA char  data_chars[4]   = "nrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x745d, // 0.454545 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // imp
            case 0x00706d69:
            {
                MKV_DATA char  data_chars[8]   = "sletiow";
                MKV_DATA uint16_t data_weights[7] = {
                    0x44ec, // 0.269231 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // imr
            case 0x00726d69:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ims
            case 0x00736d69:
            {
                MKV_DATA char  data_chars[9]   = "tcbldhoa";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // imw
            case 0x00776d69:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ina
            case 0x00616e69:
            {
                MKV_DATA char  data_chars[5]   = "clsu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // inb
            case 0x00626e69:
            {
                MKV_DATA char  data_chars[5]   = "uroy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // inc
            case 0x00636e69:
            {
                MKV_DATA char  data_chars[7]   = "hoelka";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8af9, // 0.542857 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x1249, // 0.071429 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ind
            case 0x00646e69:
            {
                MKV_DATA char  data_chars[16]   = "leosrafmhiwygcp";
                MKV_DATA uint16_t data_weights[15] = {
                    0x399a, // 0.225000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1333, // 0.075000 
                    0x1000, // 0.062500 
                    0x099a, // 0.037500 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ine
            case 0x00656e69:
            {
                MKV_DATA char  data_chars[12]   = "shytdwavfbg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5b06, // 0.355556 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // inf
            case 0x00666e69:
            {
                MKV_DATA char  data_chars[6]   = "oialr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8d3e, // 0.551724 
                    0x469f, // 0.275862 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ing
            case 0x00676e69:
            {
                MKV_DATA char  data_chars[17]   = "thslfewbdarocmik";
                MKV_DATA uint16_t data_weights[16] = {
                    0x7329, // 0.449848 
                    0x293d, // 0.161094 
                    0x206c, // 0.126646 
                    0x0c73, // 0.048632 
                    0x0bac, // 0.045593 
                    0x09db, // 0.038501 
                    0x0956, // 0.036474 
                    0x06be, // 0.026342 
                    0x0572, // 0.021277 
                    0x03a2, // 0.014184 
                    0x0256, // 0.009119 
                    0x0256, // 0.009119 
                    0x018e, // 0.006079 
                    0x010a, // 0.004053 
                    0x0085, // 0.002026 
                    0x0042, // 0.001013 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // inh
            case 0x00686e69:
            {
                MKV_DATA char  data_chars[5]   = "oaui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7a6f, // 0.478261 
                    0x4dea, // 0.304348 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ini
            case 0x00696e69:
            {
                MKV_DATA char  data_chars[6]   = "noact";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ink
            case 0x006b6e69:
            {
                MKV_DATA char  data_chars[13]   = "lehsbfinwprt";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2be3, // 0.171429 
                    0x2be3, // 0.171429 
                    0x1d42, // 0.114286 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // inl
            case 0x006c6e69:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inm
            case 0x006d6e69:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inn
            case 0x006e6e69:
            {
                MKV_DATA char  data_chars[7]   = "eioasy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5c29, // 0.360000 
                    0x51ec, // 0.320000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ino
            case 0x006f6e69:
            {
                MKV_DATA char  data_chars[4]   = "wru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // inq
            case 0x00716e69:
            {
                return 'u';
            }
            break;

            // ins
            case 0x00736e69:
            {
                MKV_DATA char  data_chars[16]   = "twclhfoebdkigav";
                MKV_DATA uint16_t data_weights[15] = {
                    0x6b2a, // 0.418605 
                    0x17d0, // 0.093023 
                    0x15d4, // 0.085271 
                    0x0fe0, // 0.062016 
                    0x0fe0, // 0.062016 
                    0x0de4, // 0.054264 
                    0x0de4, // 0.054264 
                    0x0be8, // 0.046512 
                    0x09ec, // 0.038760 
                    0x07f0, // 0.031008 
                    0x03f8, // 0.015504 
                    0x03f8, // 0.015504 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // int
            case 0x00746e69:
            {
                MKV_DATA char  data_chars[14]   = "oesrhizwbanlm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6b1a, // 0.418367 
                    0x2f05, // 0.183673 
                    0x14e6, // 0.081633 
                    0x1249, // 0.071429 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // inv
            case 0x00766e69:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // inw
            case 0x00776e69:
            {
                MKV_DATA char  data_chars[5]   = "oaie";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // inx
            case 0x00786e69:
            {
                MKV_DATA char  data_chars[4]   = "thw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iny
            case 0x00796e69:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ioc
            case 0x00636f69:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ion
            case 0x006e6f69:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ior
            case 0x00726f69:
            {
                MKV_DATA char  data_chars[3]   = "sy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iot
            case 0x00746f69:
            {
                MKV_DATA char  data_chars[3]   = "ts";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iow
            case 0x00776f69:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipb
            case 0x00627069:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipc
            case 0x00637069:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipd
            case 0x00647069:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipe
            case 0x00657069:
            {
                MKV_DATA char  data_chars[5]   = "rhsw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ipf
            case 0x00667069:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iph
            case 0x00687069:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipi
            case 0x00697069:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipl
            case 0x006c7069:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ipm
            case 0x006d7069:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipn
            case 0x006e7069:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipo
            case 0x006f7069:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipp
            case 0x00707069:
            {
                MKV_DATA char  data_chars[7]   = "eiloas";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5307, // 0.324324 
                    0x4530, // 0.270270 
                    0x375a, // 0.216216 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ipr
            case 0x00727069:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ips
            case 0x00737069:
            {
                MKV_DATA char  data_chars[12]   = "tdobeilnhwy";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ipt
            case 0x00747069:
            {
                MKV_DATA char  data_chars[4]   = "orf";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ipu
            case 0x00757069:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ipy
            case 0x00797069:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irb
            case 0x00627269:
            {
                MKV_DATA char  data_chars[7]   = "ruyeoa";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // irc
            case 0x00637269:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf72c, // 0.965517 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ird
            case 0x00647269:
            {
                MKV_DATA char  data_chars[8]   = "sbhlfiw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ire
            case 0x00657269:
            {
                MKV_DATA char  data_chars[9]   = "lsbhnomt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // irf
            case 0x00667269:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irg
            case 0x00677269:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irk
            case 0x006b7269:
            {
                MKV_DATA char  data_chars[12]   = "hblsdeonwac";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3bbc, // 0.233333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // irl
            case 0x006c7269:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irm
            case 0x006d7269:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // irn
            case 0x006e7269:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iro
            case 0x006f7269:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irr
            case 0x00727269:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // irs
            case 0x00737269:
            {
                MKV_DATA char  data_chars[6]   = "twbde";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // irt
            case 0x00747269:
            {
                MKV_DATA char  data_chars[5]   = "hlos";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5000, // 0.312500 
                    0x5000, // 0.312500 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // irv
            case 0x00767269:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // irw
            case 0x00777269:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // isa
            case 0x00617369:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isb
            case 0x00627369:
            {
                MKV_DATA char  data_chars[6]   = "uyeor";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // isc
            case 0x00637369:
            {
                MKV_DATA char  data_chars[4]   = "oal";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc235, // 0.758621 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // isd
            case 0x00647369:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ise
            case 0x00657369:
            {
                MKV_DATA char  data_chars[12]   = "lrwhtdemagn";
                MKV_DATA uint16_t data_weights[11] = {
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // isf
            case 0x00667369:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9d8a, // 0.615385 
                    0x6276, // 0.384615 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isg
            case 0x00677369:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ish
            case 0x00687369:
            {
                MKV_DATA char  data_chars[13]   = "aoeiltpbfcmw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x62e9, // 0.386364 
                    0x4000, // 0.250000 
                    0x1d17, // 0.113636 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // isi
            case 0x00697369:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isk
            case 0x006b7369:
            {
                MKV_DATA char  data_chars[4]   = "eni";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // isl
            case 0x006c7369:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x31c7, // 0.194444 
                    0x31c7, // 0.194444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ism
            case 0x006d7369:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isn
            case 0x006e7369:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iso
            case 0x006f7369:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // isp
            case 0x00707369:
            {
                MKV_DATA char  data_chars[4]   = "ehi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iss
            case 0x00737369:
            {
                MKV_DATA char  data_chars[6]   = "eoinf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x70a4, // 0.440000 
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ist
            case 0x00747369:
            {
                MKV_DATA char  data_chars[12]   = "oelahircmns";
                MKV_DATA uint16_t data_weights[11] = {
                    0x895e, // 0.536585 
                    0x2577, // 0.146341 
                    0x2257, // 0.134146 
                    0x0c7d, // 0.048780 
                    0x095e, // 0.036585 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // isw
            case 0x00777369:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // isy
            case 0x00797369:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ita
            case 0x00617469:
            {
                MKV_DATA char  data_chars[6]   = "lgcin";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // itb
            case 0x00627469:
            {
                MKV_DATA char  data_chars[6]   = "yoeru";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // itc
            case 0x00637469:
            {
                MKV_DATA char  data_chars[4]   = "hol";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd9cb, // 0.850746 
                    0x2263, // 0.134328 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ite
            case 0x00657469:
            {
                MKV_DATA char  data_chars[16]   = "hsclwmpabngfdok";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3000, // 0.187500 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // itf
            case 0x00667469:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itg
            case 0x00677469:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ith
            case 0x00687469:
            {
                MKV_DATA char  data_chars[18]   = "eiyaowblsnucdmrvf";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4925, // 0.285714 
                    0x2c68, // 0.173469 
                    0x21f6, // 0.132653 
                    0x1783, // 0.091837 
                    0x0d10, // 0.051020 
                    0x0d10, // 0.051020 
                    0x0a73, // 0.040816 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x07d6, // 0.030612 
                    0x0539, // 0.020408 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                    0x029d, // 0.010204 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // iti
            case 0x00697469:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itl
            case 0x006c7469:
            {
                MKV_DATA char  data_chars[6]   = "eioya";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // itm
            case 0x006d7469:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // itn
            case 0x006e7469:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ito
            case 0x006f7469:
            {
                MKV_DATA char  data_chars[4]   = "ntw";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // itr
            case 0x00727469:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // its
            case 0x00737469:
            {
                MKV_DATA char  data_chars[8]   = "etfbglo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // itt
            case 0x00747469:
            {
                MKV_DATA char  data_chars[10]   = "leoisyawv";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6200, // 0.382812 
                    0x3400, // 0.203125 
                    0x3000, // 0.187500 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0600, // 0.023438 
                    0x0200, // 0.007812 
                    0x0200, // 0.007812 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // itw
            case 0x00777469:
            {
                MKV_DATA char  data_chars[5]   = "eioa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ity
            case 0x00797469:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // itz
            case 0x007a7469:
            {
                MKV_DATA char  data_chars[4]   = "hpw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // iva
            case 0x00617669:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ive
            case 0x00657669:
            {
                MKV_DATA char  data_chars[9]   = "rlstncgh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x74df, // 0.456522 
                    0x26f5, // 0.152174 
                    0x1bd3, // 0.108696 
                    0x1bd3, // 0.108696 
                    0x1bd3, // 0.108696 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ivi
            case 0x00697669:
            {
                MKV_DATA char  data_chars[4]   = "ncd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ivo
            case 0x006f7669:
            {
                MKV_DATA char  data_chars[5]   = "clns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ivy
            case 0x00797669:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iwa
            case 0x00617769:
            {
                MKV_DATA char  data_chars[3]   = "dy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iwe
            case 0x00657769:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iwi
            case 0x00697769:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iwo
            case 0x006f7769:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixa
            case 0x00617869:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixb
            case 0x00627869:
            {
                MKV_DATA char  data_chars[4]   = "ouy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ixf
            case 0x00667869:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixh
            case 0x00687869:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixl
            case 0x006c7869:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixm
            case 0x006d7869:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixo
            case 0x006f7869:
            {
                MKV_DATA char  data_chars[4]   = "nev";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ixp
            case 0x00707869:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixs
            case 0x00737869:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixt
            case 0x00747869:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ixw
            case 0x00777869:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // iza
            case 0x00617a69:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ize
            case 0x00657a69:
            {
                MKV_DATA char  data_chars[7]   = "wybdls";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // izi
            case 0x00697a69:
            {
                MKV_DATA char  data_chars[3]   = "ne";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // izz
            case 0x007a7a69:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // i
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'j':
        {
            switch ( trigram_u32 )
            {
            // jab
            case 0x0062616a:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jac
            case 0x0063616a:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jak
            case 0x006b616a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jam
            case 0x006d616a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jan
            case 0x006e616a:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jar
            case 0x0072616a:
            {
                MKV_DATA char  data_chars[3]   = "rv";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jas
            case 0x0073616a:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jay
            case 0x0079616a:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jea
            case 0x0061656a:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jef
            case 0x0066656a:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jen
            case 0x006e656a:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jer
            case 0x0072656a:
            {
                MKV_DATA char  data_chars[4]   = "air";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jes
            case 0x0073656a:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jet
            case 0x0074656a:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jev
            case 0x0076656a:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jew
            case 0x0077656a:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jid
            case 0x0064696a:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // job
            case 0x00626f6a:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // joc
            case 0x00636f6a:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jod
            case 0x00646f6a:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // joh
            case 0x00686f6a:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jol
            case 0x006c6f6a:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jon
            case 0x006e6f6a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jop
            case 0x00706f6a:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jor
            case 0x00726f6a:
            {
                MKV_DATA char  data_chars[4]   = "dsr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // joy
            case 0x00796f6a:
            {
                MKV_DATA char  data_chars[4]   = "fsc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // jub
            case 0x0062756a:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jud
            case 0x0064756a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jug
            case 0x0067756a:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jul
            case 0x006c756a:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jum
            case 0x006d756a:
            {
                MKV_DATA char  data_chars[3]   = "bp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jun
            case 0x006e756a:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jur
            case 0x0072756a:
            {
                MKV_DATA char  data_chars[3]   = "sy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jus
            case 0x0073756a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // jux
            case 0x0078756a:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // j
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'k':
        {
            switch ( trigram_u32 )
            {
            // kab
            case 0x0062616b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kac
            case 0x0063616b:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kad
            case 0x0064616b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kai
            case 0x0069616b:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kal
            case 0x006c616b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kam
            case 0x006d616b:
            {
                MKV_DATA char  data_chars[4]   = "ios";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kar
            case 0x0072616b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kat
            case 0x0074616b:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kaw
            case 0x0077616b:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kay
            case 0x0079616b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kba
            case 0x0061626b:
            {
                MKV_DATA char  data_chars[3]   = "mr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbe
            case 0x0065626b:
            {
                MKV_DATA char  data_chars[6]   = "acegr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kbo
            case 0x006f626b:
            {
                MKV_DATA char  data_chars[5]   = "ruyw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kbr
            case 0x0072626b:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kbu
            case 0x0075626b:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kca
            case 0x0061636b:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kce
            case 0x0065636b:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kch
            case 0x0068636b:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kcl
            case 0x006c636b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kco
            case 0x006f636b:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kcr
            case 0x0072636b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kcu
            case 0x0075636b:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kda
            case 0x0061646b:
            {
                MKV_DATA char  data_chars[3]   = "lk";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kde
            case 0x0065646b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdi
            case 0x0069646b:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdo
            case 0x006f646b:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kdy
            case 0x0079646b:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kea
            case 0x0061656b:
            {
                MKV_DATA char  data_chars[5]   = "rtdl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // keb
            case 0x0062656b:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kec
            case 0x0063656b:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ked
            case 0x0064656b:
            {
                MKV_DATA char  data_chars[6]   = "odiln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kee
            case 0x0065656b:
            {
                MKV_DATA char  data_chars[7]   = "lntvkr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kef
            case 0x0066656b:
            {
                MKV_DATA char  data_chars[4]   = "oif";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // keg
            case 0x0067656b:
            {
                MKV_DATA char  data_chars[5]   = "bnow";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // keh
            case 0x0068656b:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kei
            case 0x0069656b:
            {
                MKV_DATA char  data_chars[5]   = "nvst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kel
            case 0x006c656b:
            {
                MKV_DATA char  data_chars[15]   = "lsedaomyfwhtvb";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4646, // 0.274510 
                    0x2828, // 0.156863 
                    0x2323, // 0.137255 
                    0x1919, // 0.098039 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // kem
            case 0x006d656b:
            {
                MKV_DATA char  data_chars[7]   = "pasbei";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7943, // 0.473684 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ken
            case 0x006e656b:
            {
                MKV_DATA char  data_chars[17]   = "htndcbswafeglryi";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4000, // 0.250000 
                    0x25ed, // 0.148148 
                    0x212f, // 0.129630 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0bda, // 0.046296 
                    0x0bda, // 0.046296 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // kep
            case 0x0070656b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ker
            case 0x0072656b:
            {
                MKV_DATA char  data_chars[17]   = "stilrnyemdhfbgkv";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4e39, // 0.305556 
                    0x284c, // 0.157407 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x1098, // 0.064815 
                    0x1098, // 0.064815 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // kes
            case 0x0073656b:
            {
                MKV_DATA char  data_chars[12]   = "tlbdwhfgais";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4d93, // 0.303030 
                    0x26ca, // 0.151515 
                    0x1f08, // 0.121212 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // ket
            case 0x0074656b:
            {
                MKV_DATA char  data_chars[11]   = "tshlwycfgo";
                MKV_DATA uint16_t data_weights[10] = {
                    0xa222, // 0.633333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // kev
            case 0x0076656b:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kew
            case 0x0077656b:
            {
                MKV_DATA char  data_chars[5]   = "aeos";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kex
            case 0x0078656b:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // key
            case 0x0079656b:
            {
                MKV_DATA char  data_chars[10]   = "nshcfmtwb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // kfa
            case 0x0061666b:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfe
            case 0x0065666b:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfi
            case 0x0069666b:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kfo
            case 0x006f666b:
            {
                MKV_DATA char  data_chars[5]   = "rols";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd800, // 0.843750 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kfr
            case 0x0072666b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kga
            case 0x0061676b:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kgr
            case 0x0072676b:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kha
            case 0x0061686b:
            {
                MKV_DATA char  data_chars[6]   = "mlnry";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd111, // 0.816667 
                    0x1dde, // 0.116667 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // khe
            case 0x0065686b:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // khi
            case 0x0069686b:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf555, // 0.958333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kho
            case 0x006f686b:
            {
                MKV_DATA char  data_chars[5]   = "lupr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7ae1, // 0.480000 
                    0x51ec, // 0.320000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // khu
            case 0x0075686b:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kib
            case 0x0062696b:
            {
                MKV_DATA char  data_chars[3]   = "bw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kid
            case 0x0064696b:
            {
                MKV_DATA char  data_chars[7]   = "dblmns";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kie
            case 0x0065696b:
            {
                MKV_DATA char  data_chars[3]   = "fl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kif
            case 0x0066696b:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kil
            case 0x006c696b:
            {
                MKV_DATA char  data_chars[14]   = "lnmhbvckwtpsg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x59f2, // 0.351351 
                    0x2983, // 0.162162 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // kim
            case 0x006d696b:
            {
                MKV_DATA char  data_chars[6]   = "bmpwc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kin
            case 0x006e696b:
            {
                MKV_DATA char  data_chars[14]   = "gsntwvlbefhko";
                MKV_DATA uint16_t data_weights[13] = {
                    0xcdce, // 0.803922 
                    0x1268, // 0.071895 
                    0x0a0a, // 0.039216 
                    0x06b1, // 0.026144 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // kip
            case 0x0070696b:
            {
                MKV_DATA char  data_chars[3]   = "pr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kir
            case 0x0072696b:
            {
                MKV_DATA char  data_chars[8]   = "kmtbdsw";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb6db, // 0.714286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kis
            case 0x0073696b:
            {
                MKV_DATA char  data_chars[3]   = "kl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kit
            case 0x0074696b:
            {
                MKV_DATA char  data_chars[8]   = "tehblsw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7000, // 0.437500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kiv
            case 0x0076696b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kix
            case 0x0078696b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kja
            case 0x00616a6b:
            {
                MKV_DATA char  data_chars[3]   = "cy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kki
            case 0x00696b6b:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kla
            case 0x00616c6b:
            {
                MKV_DATA char  data_chars[6]   = "ndwkc";
                MKV_DATA uint16_t data_weights[5] = {
                    0xce74, // 0.806452 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // kle
            case 0x00656c6b:
            {
                MKV_DATA char  data_chars[17]   = "ytsibfhrwacgoenp";
                MKV_DATA uint16_t data_weights[16] = {
                    0x7182, // 0.443396 
                    0x1f65, // 0.122642 
                    0x15bc, // 0.084906 
                    0x1352, // 0.075472 
                    0x0e7e, // 0.056604 
                    0x0c13, // 0.047170 
                    0x073f, // 0.028302 
                    0x073f, // 0.028302 
                    0x073f, // 0.028302 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                    0x026a, // 0.009434 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // klf
            case 0x00666c6b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kli
            case 0x00696c6b:
            {
                MKV_DATA char  data_chars[3]   = "nf";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeeef, // 0.933333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // klo
            case 0x006f6c6b:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kly
            case 0x00796c6b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kma
            case 0x00616d6b:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kme
            case 0x00656d6b:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmi
            case 0x00696d6b:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kmo
            case 0x006f6d6b:
            {
                MKV_DATA char  data_chars[5]   = "ornu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9000, // 0.562500 
                    0x5000, // 0.312500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kna
            case 0x00616e6b:
            {
                MKV_DATA char  data_chars[8]   = "plvcirt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // kne
            case 0x00656e6b:
            {
                MKV_DATA char  data_chars[10]   = "ytselnrwb";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7777, // 0.466667 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // kni
            case 0x00696e6b:
            {
                MKV_DATA char  data_chars[7]   = "gpltvf";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa5a6, // 0.647059 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // kno
            case 0x006f6e6b:
            {
                MKV_DATA char  data_chars[13]   = "wcltrybdexos";
                MKV_DATA uint16_t data_weights[12] = {
                    0x69bd, // 0.413043 
                    0x2c86, // 0.173913 
                    0x1bd3, // 0.108696 
                    0x1bd3, // 0.108696 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // knu
            case 0x00756e6b:
            {
                MKV_DATA char  data_chars[4]   = "tzs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kny
            case 0x00796e6b:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // koa
            case 0x00616f6b:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kok
            case 0x006b6f6b:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kol
            case 0x006c6f6b:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kor
            case 0x00726f6b:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kos
            case 0x00736f6b:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kov
            case 0x00766f6b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpe
            case 0x0065706b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpi
            case 0x0069706b:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kpo
            case 0x006f706b:
            {
                MKV_DATA char  data_chars[4]   = "lor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kra
            case 0x0061726b:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kre
            case 0x0065726b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kri
            case 0x0069726b:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kro
            case 0x006f726b:
            {
                MKV_DATA char  data_chars[5]   = "cdwb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kru
            case 0x0075726b:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksa
            case 0x0061736b:
            {
                MKV_DATA char  data_chars[3]   = "nv";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksb
            case 0x0062736b:
            {
                MKV_DATA char  data_chars[5]   = "oryu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ksc
            case 0x0063736b:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksd
            case 0x0064736b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kse
            case 0x0065736b:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksf
            case 0x0066736b:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksg
            case 0x0067736b:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksh
            case 0x0068736b:
            {
                MKV_DATA char  data_chars[6]   = "iaoue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ksi
            case 0x0069736b:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksk
            case 0x006b736b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksl
            case 0x006c736b:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksm
            case 0x006d736b:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ksn
            case 0x006e736b:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kso
            case 0x006f736b:
            {
                MKV_DATA char  data_chars[5]   = "lmnp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ksp
            case 0x0070736b:
            {
                MKV_DATA char  data_chars[4]   = "aeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kst
            case 0x0074736b:
            {
                MKV_DATA char  data_chars[5]   = "oerh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ccd, // 0.550000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ksw
            case 0x0077736b:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kth
            case 0x0068746b:
            {
                MKV_DATA char  data_chars[3]   = "ow";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe666, // 0.900000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kto
            case 0x006f746b:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kug
            case 0x0067756b:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kur
            case 0x0072756b:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kva
            case 0x0061766b:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kvi
            case 0x0069766b:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwa
            case 0x0061776b:
            {
                MKV_DATA char  data_chars[5]   = "yrlt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kwe
            case 0x0065776b:
            {
                MKV_DATA char  data_chars[4]   = "lai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe50d, // 0.894737 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kwh
            case 0x0068776b:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kwi
            case 0x0069776b:
            {
                MKV_DATA char  data_chars[4]   = "tcl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kwo
            case 0x006f776b:
            {
                MKV_DATA char  data_chars[4]   = "orl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8591, // 0.521739 
                    0x6f4e, // 0.434783 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // kwr
            case 0x0072776b:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kya
            case 0x0061796b:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyb
            case 0x0062796b:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kym
            case 0x006d796b:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // kyn
            case 0x006e796b:
            {
                MKV_DATA char  data_chars[5]   = "sagn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // kyr
            case 0x0072796b:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // k
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'l':
        {
            switch ( trigram_u32 )
            {
            // lab
            case 0x0062616c:
            {
                MKV_DATA char  data_chars[5]   = "yoer";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lac
            case 0x0063616c:
            {
                MKV_DATA char  data_chars[8]   = "koehtyr";
                MKV_DATA uint16_t data_weights[7] = {
                    0xba68, // 0.728155 
                    0x18db, // 0.097087 
                    0x1166, // 0.067961 
                    0x0eea, // 0.058252 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lad
            case 0x0064616c:
            {
                MKV_DATA char  data_chars[11]   = "eybidormsw";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7777, // 0.466667 
                    0x38e4, // 0.222222 
                    0x16c1, // 0.088889 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // laf
            case 0x0066616c:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lag
            case 0x0067616c:
            {
                MKV_DATA char  data_chars[7]   = "geinud";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lai
            case 0x0069616c:
            {
                MKV_DATA char  data_chars[6]   = "nstdr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6186, // 0.380952 
                    0x4925, // 0.285714 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lak
            case 0x006b616c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lal
            case 0x006c616c:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lam
            case 0x006d616c:
            {
                MKV_DATA char  data_chars[11]   = "beoapsmylv";
                MKV_DATA uint16_t data_weights[10] = {
                    0x594d, // 0.348837 
                    0x29ad, // 0.162791 
                    0x1dc4, // 0.116279 
                    0x1dc4, // 0.116279 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lan
            case 0x006e616c:
            {
                MKV_DATA char  data_chars[20]   = "dgetcksvfljinroawyh";
                MKV_DATA uint16_t data_weights[19] = {
                    0xad7d, // 0.677686 
                    0x18af, // 0.096419 
                    0x18af, // 0.096419 
                    0x0659, // 0.024793 
                    0x04f0, // 0.019284 
                    0x0387, // 0.013774 
                    0x0387, // 0.013774 
                    0x02d2, // 0.011019 
                    0x021e, // 0.008264 
                    0x0169, // 0.005510 
                    0x0169, // 0.005510 
                    0x0169, // 0.005510 
                    0x0169, // 0.005510 
                    0x00b5, // 0.002755 
                    0x00b5, // 0.002755 
                    0x00b5, // 0.002755 
                    0x00b5, // 0.002755 
                    0x00b5, // 0.002755 
                    0x00b5, // 0.002755 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // lap
            case 0x0070616c:
            {
                MKV_DATA char  data_chars[10]   = "twpfglaeh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lar
            case 0x0072616c:
            {
                MKV_DATA char  data_chars[16]   = "kdsehabgrltnpcy";
                MKV_DATA uint16_t data_weights[15] = {
                    0x38e4, // 0.222222 
                    0x3333, // 0.200000 
                    0x27d2, // 0.155556 
                    0x1c72, // 0.111111 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // las
            case 0x0073616c:
            {
                MKV_DATA char  data_chars[10]   = "thskacbef";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7287, // 0.447368 
                    0x3ca2, // 0.236842 
                    0x21af, // 0.131579 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lat
            case 0x0074616c:
            {
                MKV_DATA char  data_chars[11]   = "tochefswir";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x3eb2, // 0.244898 
                    0x2f05, // 0.183673 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lau
            case 0x0075616c:
            {
                MKV_DATA char  data_chars[3]   = "gn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9697, // 0.588235 
                    0x6969, // 0.411765 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lav
            case 0x0076616c:
            {
                MKV_DATA char  data_chars[5]   = "eiar";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb852, // 0.720000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // law
            case 0x0077616c:
            {
                MKV_DATA char  data_chars[13]   = "nstalobefrhi";
                MKV_DATA uint16_t data_weights[12] = {
                    0x44ec, // 0.269231 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // lax
            case 0x0078616c:
            {
                MKV_DATA char  data_chars[7]   = "thlpbf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lay
            case 0x0079616c:
            {
                MKV_DATA char  data_chars[14]   = "hdtpibnlswefg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3bbc, // 0.233333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // laz
            case 0x007a616c:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lba
            case 0x0061626c:
            {
                MKV_DATA char  data_chars[5]   = "nryt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lbe
            case 0x0065626c:
            {
                MKV_DATA char  data_chars[7]   = "rcadnt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8c63, // 0.548387 
                    0x39ce, // 0.225806 
                    0x2108, // 0.129032 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lbi
            case 0x0069626c:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lbo
            case 0x006f626c:
            {
                MKV_DATA char  data_chars[5]   = "rutl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x599a, // 0.350000 
                    0x2000, // 0.125000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lbr
            case 0x0072626c:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x5f16, // 0.371429 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lbu
            case 0x0075626c:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf627, // 0.961538 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lby
            case 0x0079626c:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lca
            case 0x0061636c:
            {
                MKV_DATA char  data_chars[5]   = "nrst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lce
            case 0x0065636c:
            {
                MKV_DATA char  data_chars[3]   = "bs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lch
            case 0x0068636c:
            {
                MKV_DATA char  data_chars[6]   = "eabfu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lci
            case 0x0069636c:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lcl
            case 0x006c636c:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lco
            case 0x006f636c:
            {
                MKV_DATA char  data_chars[8]   = "tmncfuv";
                MKV_DATA uint16_t data_weights[7] = {
                    0x70a4, // 0.440000 
                    0x5c29, // 0.360000 
                    0x199a, // 0.100000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lcr
            case 0x0072636c:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lcu
            case 0x0075636c:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lda
            case 0x0061646c:
            {
                MKV_DATA char  data_chars[3]   = "ly";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldb
            case 0x0062646c:
            {
                MKV_DATA char  data_chars[8]   = "oeuyalr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ldc
            case 0x0063646c:
            {
                MKV_DATA char  data_chars[5]   = "ralo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lde
            case 0x0065646c:
            {
                MKV_DATA char  data_chars[10]   = "rnascbtvf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8fd9, // 0.561905 
                    0x46b4, // 0.276190 
                    0x0c31, // 0.047619 
                    0x09c1, // 0.038095 
                    0x0750, // 0.028571 
                    0x04e0, // 0.019048 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ldf
            case 0x0066646c:
            {
                MKV_DATA char  data_chars[5]   = "ioau";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldg
            case 0x0067646c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldh
            case 0x0068646c:
            {
                MKV_DATA char  data_chars[5]   = "auei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaf28, // 0.684211 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldi
            case 0x0069646c:
            {
                MKV_DATA char  data_chars[4]   = "nst";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ldl
            case 0x006c646c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldm
            case 0x006d646c:
            {
                MKV_DATA char  data_chars[5]   = "eoia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldn
            case 0x006e646c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldo
            case 0x006f646c:
            {
                MKV_DATA char  data_chars[5]   = "ntwc";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe000, // 0.875000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ldp
            case 0x0070646c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldr
            case 0x0072646c:
            {
                MKV_DATA char  data_chars[5]   = "ieoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lds
            case 0x0073646c:
            {
                MKV_DATA char  data_chars[6]   = "wtbil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ldt
            case 0x0074646c:
            {
                MKV_DATA char  data_chars[3]   = "hw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldv
            case 0x0076646c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ldw
            case 0x0077646c:
            {
                MKV_DATA char  data_chars[6]   = "iaoey";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5c29, // 0.360000 
                    0x3d71, // 0.240000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ldy
            case 0x0079646c:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lea
            case 0x0061656c:
            {
                MKV_DATA char  data_chars[17]   = "sdtmcvzrgfpkbuln";
                MKV_DATA uint16_t data_weights[16] = {
                    0x2c23, // 0.172414 
                    0x2641, // 0.149425 
                    0x1a7c, // 0.103448 
                    0x178a, // 0.091954 
                    0x1499, // 0.080460 
                    0x1499, // 0.080460 
                    0x0eb6, // 0.057471 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // leb
            case 0x0062656c:
            {
                MKV_DATA char  data_chars[7]   = "uyroae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3ef3, // 0.245902 
                    0x3ac1, // 0.229508 
                    0x325c, // 0.196721 
                    0x2193, // 0.131148 
                    0x2193, // 0.131148 
                    0x10c9, // 0.065574 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lec
            case 0x0063656c:
            {
                MKV_DATA char  data_chars[7]   = "okrhdl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6eef, // 0.433333 
                    0x4444, // 0.266667 
                    0x2aab, // 0.166667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // led
            case 0x0064656c:
            {
                MKV_DATA char  data_chars[12]   = "ogerbswiuld";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4666, // 0.275000 
                    0x2ccd, // 0.175000 
                    0x2666, // 0.150000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lee
            case 0x0065656c:
            {
                MKV_DATA char  data_chars[15]   = "tscdrhkmgpnvbf";
                MKV_DATA uint16_t data_weights[14] = {
                    0x745d, // 0.454545 
                    0x3333, // 0.200000 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // lef
            case 0x0066656c:
            {
                MKV_DATA char  data_chars[4]   = "oit";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x4aab, // 0.291667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // leg
            case 0x0067656c:
            {
                MKV_DATA char  data_chars[9]   = "agbrehis";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7ae1, // 0.480000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // leh
            case 0x0068656c:
            {
                MKV_DATA char  data_chars[6]   = "aouie";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x3333, // 0.200000 
                    0x2d83, // 0.177778 
                    0x2222, // 0.133333 
                    0x0b61, // 0.044444 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lei
            case 0x0069656c:
            {
                MKV_DATA char  data_chars[6]   = "gcnrs";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf116, // 0.941748 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lek
            case 0x006b656c:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lel
            case 0x006c656c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lem
            case 0x006d656c:
            {
                MKV_DATA char  data_chars[8]   = "oeaisph";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5dde, // 0.366667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // len
            case 0x006e656c:
            {
                MKV_DATA char  data_chars[18]   = "dschtabnwgklmrfoi";
                MKV_DATA uint16_t data_weights[17] = {
                    0x28a3, // 0.158730 
                    0x28a3, // 0.158730 
                    0x2492, // 0.142857 
                    0x2082, // 0.126984 
                    0x2082, // 0.126984 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // leo
            case 0x006f656c:
            {
                MKV_DATA char  data_chars[6]   = "nvmrb";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lep
            case 0x0070656c:
            {
                MKV_DATA char  data_chars[6]   = "oeiah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // leq
            case 0x0071656c:
            {
                return 'u';
            }
            break;

            // ler
            case 0x0072656c:
            {
                MKV_DATA char  data_chars[13]   = "stiebcdfkrnh";
                MKV_DATA uint16_t data_weights[12] = {
                    0x78b0, // 0.471429 
                    0x2be3, // 0.171429 
                    0x0ea1, // 0.057143 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // les
            case 0x0073656c:
            {
                MKV_DATA char  data_chars[19]   = "thbdwscfelmignpaov";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4952, // 0.286408 
                    0x2686, // 0.150485 
                    0x1dd3, // 0.116505 
                    0x1166, // 0.067961 
                    0x1166, // 0.067961 
                    0x1166, // 0.067961 
                    0x1028, // 0.063107 
                    0x0dab, // 0.053398 
                    0x08b3, // 0.033981 
                    0x0637, // 0.024272 
                    0x04f9, // 0.019417 
                    0x03ba, // 0.014563 
                    0x027c, // 0.009709 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                    0x013e, // 0.004854 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // let
            case 0x0074656c:
            {
                MKV_DATA char  data_chars[9]   = "othcrsbu";
                MKV_DATA uint16_t data_weights[8] = {
                    0x847e, // 0.517544 
                    0x2aab, // 0.166667 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x023f, // 0.008772 
                    0x023f, // 0.008772 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // leu
            case 0x0075656c:
            {
                MKV_DATA char  data_chars[3]   = "gd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lev
            case 0x0076656c:
            {
                MKV_DATA char  data_chars[5]   = "eaiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc30c, // 0.761905 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lew
            case 0x0077656c:
            {
                MKV_DATA char  data_chars[12]   = "oeiatshkbcd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5555, // 0.333333 
                    0x3000, // 0.187500 
                    0x2555, // 0.145833 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lex
            case 0x0078656c:
            {
                MKV_DATA char  data_chars[7]   = "htabdf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ley
            case 0x0079656c:
            {
                MKV_DATA char  data_chars[15]   = "shbwmtfcgelrda";
                MKV_DATA uint16_t data_weights[14] = {
                    0x567d, // 0.337838 
                    0x260e, // 0.148649 
                    0x1f23, // 0.121622 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0a61, // 0.040541 
                    0x0a61, // 0.040541 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // lez
            case 0x007a656c:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lfa
            case 0x0061666c:
            {
                MKV_DATA char  data_chars[5]   = "rncl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lfe
            case 0x0065666c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfh
            case 0x0068666c:
            {
                return 'a';
            }
            break;

            // lfi
            case 0x0069666c:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf1c7, // 0.944444 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfl
            case 0x006c666c:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfo
            case 0x006f666c:
            {
                MKV_DATA char  data_chars[5]   = "rlno";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe762, // 0.903846 
                    0x0ec5, // 0.057692 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lfp
            case 0x0070666c:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lfr
            case 0x0072666c:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lfw
            case 0x0077666c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lga
            case 0x0061676c:
            {
                MKV_DATA char  data_chars[8]   = "trybikn";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9249, // 0.571429 
                    0x30c3, // 0.190476 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lge
            case 0x0065676c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgh
            case 0x0068676c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgi
            case 0x0069676c:
            {
                MKV_DATA char  data_chars[3]   = "lg";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgo
            case 0x006f676c:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lgr
            case 0x0072676c:
            {
                MKV_DATA char  data_chars[5]   = "aeoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6bca, // 0.421053 
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lgu
            case 0x0075676c:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lha
            case 0x0061686c:
            {
                MKV_DATA char  data_chars[4]   = "mly";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe000, // 0.875000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lhe
            case 0x0065686c:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lhi
            case 0x0069686c:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lho
            case 0x006f686c:
            {
                MKV_DATA char  data_chars[5]   = "ulrp";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lhu
            case 0x0075686c:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lia
            case 0x0061696c:
            {
                MKV_DATA char  data_chars[5]   = "mnrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lib
            case 0x0062696c:
            {
                MKV_DATA char  data_chars[4]   = "uyb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lic
            case 0x0063696c:
            {
                MKV_DATA char  data_chars[5]   = "koeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ccd, // 0.550000 
                    0x599a, // 0.350000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lid
            case 0x0064696c:
            {
                MKV_DATA char  data_chars[10]   = "gsdeohnwl";
                MKV_DATA uint16_t data_weights[9] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lie
            case 0x0065696c:
            {
                MKV_DATA char  data_chars[4]   = "rus";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lif
            case 0x0066696c:
            {
                MKV_DATA char  data_chars[4]   = "fto";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe222, // 0.883333 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lig
            case 0x0067696c:
            {
                MKV_DATA char  data_chars[4]   = "hgi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe000, // 0.875000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lih
            case 0x0068696c:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lil
            case 0x006c696c:
            {
                MKV_DATA char  data_chars[7]   = "lybfos";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7777, // 0.466667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lim
            case 0x006d696c:
            {
                MKV_DATA char  data_chars[8]   = "epboswi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x590b, // 0.347826 
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lin
            case 0x006e696c:
            {
                MKV_DATA char  data_chars[16]   = "gtdcskeflbwnaih";
                MKV_DATA uint16_t data_weights[15] = {
                    0xc28f, // 0.760000 
                    0x0c6f, // 0.048571 
                    0x0bb4, // 0.045714 
                    0x0af9, // 0.042857 
                    0x0750, // 0.028571 
                    0x051f, // 0.020000 
                    0x02ed, // 0.011429 
                    0x0232, // 0.008571 
                    0x0232, // 0.008571 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x0176, // 0.005714 
                    0x00bb, // 0.002857 
                    0x00bb, // 0.002857 
                    0x00bb, // 0.002857 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // lio
            case 0x006f696c:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lip
            case 0x0070696c:
            {
                MKV_DATA char  data_chars[9]   = "spthlyru";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // lis
            case 0x0073696c:
            {
                MKV_DATA char  data_chars[11]   = "htsflcwkbd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x2aab, // 0.166667 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // lit
            case 0x0074696c:
            {
                MKV_DATA char  data_chars[9]   = "thcolwmy";
                MKV_DATA uint16_t data_weights[8] = {
                    0xa5ed, // 0.648148 
                    0x212f, // 0.129630 
                    0x17b4, // 0.092593 
                    0x0e39, // 0.055556 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // liv
            case 0x0076696c:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // liw
            case 0x0077696c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lix
            case 0x0078696c:
            {
                MKV_DATA char  data_chars[4]   = "bst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // liz
            case 0x007a696c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkb
            case 0x00626b6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkd
            case 0x00646b6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lke
            case 0x00656b6c:
            {
                MKV_DATA char  data_chars[7]   = "rslnty";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8591, // 0.521739 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lkf
            case 0x00666b6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkh
            case 0x00686b6c:
            {
                MKV_DATA char  data_chars[4]   = "aoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lki
            case 0x00696b6c:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xeeef, // 0.933333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkl
            case 0x006c6b6c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkm
            case 0x006d6b6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lkr
            case 0x00726b6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lks
            case 0x00736b6c:
            {
                MKV_DATA char  data_chars[6]   = "htwbo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lkw
            case 0x00776b6c:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lla
            case 0x00616c6c:
            {
                MKV_DATA char  data_chars[15]   = "ncrtsmwdfblugv";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6757, // 0.403670 
                    0x1e88, // 0.119266 
                    0x1c2f, // 0.110092 
                    0x1523, // 0.082569 
                    0x12ca, // 0.073394 
                    0x0e17, // 0.055046 
                    0x0965, // 0.036697 
                    0x070c, // 0.027523 
                    0x070c, // 0.027523 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // llb
            case 0x00626c6c:
            {
                MKV_DATA char  data_chars[6]   = "raueo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x72c2, // 0.448276 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // llc
            case 0x00636c6c:
            {
                MKV_DATA char  data_chars[4]   = "rlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lld
            case 0x00646c6c:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lle
            case 0x00656c6c:
            {
                MKV_DATA char  data_chars[14]   = "rnsytivgawlxc";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4a53, // 0.290323 
                    0x3681, // 0.212903 
                    0x318c, // 0.193548 
                    0x25fd, // 0.148387 
                    0x1579, // 0.083871 
                    0x04f4, // 0.019355 
                    0x034e, // 0.012903 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // llf
            case 0x00666c6c:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // llg
            case 0x00676c6c:
            {
                MKV_DATA char  data_chars[5]   = "ariu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // llh
            case 0x00686c6c:
            {
                MKV_DATA char  data_chars[6]   = "aeiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x599a, // 0.350000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lli
            case 0x00696c6c:
            {
                MKV_DATA char  data_chars[17]   = "nscaotedmplhvwgf";
                MKV_DATA uint16_t data_weights[16] = {
                    0xab97, // 0.670270 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x0b12, // 0.043243 
                    0x09b0, // 0.037838 
                    0x0589, // 0.021622 
                    0x0589, // 0.021622 
                    0x0427, // 0.016216 
                    0x02c4, // 0.010811 
                    0x02c4, // 0.010811 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                    0x0162, // 0.005405 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // llm
            case 0x006d6c6c:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lln
            case 0x006e6c6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llo
            case 0x006f6c6c:
            {
                MKV_DATA char  data_chars[14]   = "wncmutroesxpg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x79c2, // 0.475610 
                    0x1f38, // 0.121951 
                    0x1f38, // 0.121951 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x095e, // 0.036585 
                    0x095e, // 0.036585 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // llp
            case 0x00706c6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llr
            case 0x00726c6c:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lls
            case 0x00736c6c:
            {
                MKV_DATA char  data_chars[13]   = "thpwacibeluf";
                MKV_DATA uint16_t data_weights[12] = {
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // llt
            case 0x00746c6c:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llu
            case 0x00756c6c:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llv
            case 0x00766c6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // llw
            case 0x00776c6c:
            {
                MKV_DATA char  data_chars[5]   = "oaey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8788, // 0.529412 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lly
            case 0x00796c6c:
            {
                MKV_DATA char  data_chars[10]   = "wbdhcnpsf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lma
            case 0x00616d6c:
            {
                MKV_DATA char  data_chars[6]   = "rnscg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lmb
            case 0x00626d6c:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmc
            case 0x00636d6c:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmd
            case 0x00646d6c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lme
            case 0x00656d6c:
            {
                MKV_DATA char  data_chars[10]   = "rsbelntwa";
                MKV_DATA uint16_t data_weights[9] = {
                    0xa72f, // 0.653061 
                    0x343f, // 0.204082 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lmf
            case 0x00666d6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmh
            case 0x00686d6c:
            {
                MKV_DATA char  data_chars[3]   = "au";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmi
            case 0x00696d6c:
            {
                MKV_DATA char  data_chars[4]   = "nlc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd99a, // 0.850000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lml
            case 0x006c6d6c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmo
            case 0x006f6d6c:
            {
                MKV_DATA char  data_chars[7]   = "rnouds";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5c29, // 0.360000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lmp
            case 0x00706d6c:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmr
            case 0x00726d6c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lms
            case 0x00736d6c:
            {
                MKV_DATA char  data_chars[12]   = "tlhicfmewdg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lmt
            case 0x00746d6c:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lmw
            case 0x00776d6c:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lna
            case 0x00616e6c:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnb
            case 0x00626e6c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnd
            case 0x00646e6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lne
            case 0x00656e6c:
            {
                MKV_DATA char  data_chars[7]   = "ystrcf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8f5c, // 0.560000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lnh
            case 0x00686e6c:
            {
                MKV_DATA char  data_chars[4]   = "uai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lni
            case 0x00696e6c:
            {
                MKV_DATA char  data_chars[4]   = "cen";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lnm
            case 0x006d6e6c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lno
            case 0x006f6e6c:
            {
                MKV_DATA char  data_chars[3]   = "rw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnr
            case 0x00726e6c:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lns
            case 0x00736e6c:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnt
            case 0x00746e6c:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnu
            case 0x00756e6c:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lnw
            case 0x00776e6c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loa
            case 0x00616f6c:
            {
                MKV_DATA char  data_chars[4]   = "dnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lob
            case 0x00626f6c:
            {
                MKV_DATA char  data_chars[6]   = "ltbeh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // loc
            case 0x00636f6c:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf970, // 0.974359 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lod
            case 0x00646f6c:
            {
                MKV_DATA char  data_chars[7]   = "edgwos";
                MKV_DATA uint16_t data_weights[6] = {
                    0x50d8, // 0.315789 
                    0x35e5, // 0.210526 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // loe
            case 0x00656f6c:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lof
            case 0x00666f6c:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // log
            case 0x00676f6c:
            {
                MKV_DATA char  data_chars[5]   = "gamu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // loi
            case 0x00696f6c:
            {
                MKV_DATA char  data_chars[3]   = "sg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lol
            case 0x006c6f6c:
            {
                MKV_DATA char  data_chars[3]   = "ew";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lom
            case 0x006d6f6c:
            {
                MKV_DATA char  data_chars[4]   = "eap";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lon
            case 0x006e6f6c:
            {
                MKV_DATA char  data_chars[8]   = "gdbsacy";
                MKV_DATA uint16_t data_weights[7] = {
                    0xe128, // 0.879518 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // loo
            case 0x006f6f6c:
            {
                MKV_DATA char  data_chars[8]   = "dsmekvt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x435e, // 0.263158 
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lop
            case 0x00706f6c:
            {
                MKV_DATA char  data_chars[7]   = "ehpitw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // loq
            case 0x00716f6c:
            {
                return 'u';
            }
            break;

            // lor
            case 0x00726f6c:
            {
                MKV_DATA char  data_chars[9]   = "denisoty";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // los
            case 0x00736f6c:
            {
                MKV_DATA char  data_chars[8]   = "etschwk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lot
            case 0x00746f6c:
            {
                MKV_DATA char  data_chars[4]   = "thm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lou
            case 0x00756f6c:
            {
                MKV_DATA char  data_chars[7]   = "gndcrt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lov
            case 0x00766f6c:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // low
            case 0x00776f6c:
            {
                MKV_DATA char  data_chars[14]   = "esfitdcmbaghn";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4ad5, // 0.292308 
                    0x3333, // 0.200000 
                    0x17a1, // 0.092308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0fc1, // 0.061538 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // lox
            case 0x00786f6c:
            {
                MKV_DATA char  data_chars[8]   = "htwfglb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // loy
            case 0x00796f6c:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // loz
            case 0x007a6f6c:
            {
                MKV_DATA char  data_chars[3]   = "ez";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpa
            case 0x0061706c:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpe
            case 0x0065706c:
            {
                MKV_DATA char  data_chars[5]   = "rnco";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lph
            case 0x0068706c:
            {
                MKV_DATA char  data_chars[6]   = "aieos";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lpi
            case 0x0069706c:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpl
            case 0x006c706c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpo
            case 0x006f706c:
            {
                MKV_DATA char  data_chars[7]   = "orlntu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lpr
            case 0x0072706c:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lps
            case 0x0073706c:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lpu
            case 0x0075706c:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lre
            case 0x0065726c:
            {
                MKV_DATA char  data_chars[4]   = "wsa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lri
            case 0x0069726c:
            {
                MKV_DATA char  data_chars[5]   = "dgnc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lro
            case 0x006f726c:
            {
                MKV_DATA char  data_chars[4]   = "dfw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lru
            case 0x0075726c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsa
            case 0x0061736c:
            {
                MKV_DATA char  data_chars[6]   = "lgnmy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lsb
            case 0x0062736c:
            {
                MKV_DATA char  data_chars[6]   = "yorau";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lsc
            case 0x0063736c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsd
            case 0x0064736c:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lse
            case 0x0065736c:
            {
                MKV_DATA char  data_chars[8]   = "ayncrth";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lsf
            case 0x0066736c:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9d8a, // 0.615385 
                    0x6276, // 0.384615 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsg
            case 0x0067736c:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsh
            case 0x0068736c:
            {
                MKV_DATA char  data_chars[6]   = "aeowi";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc71c, // 0.777778 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lsi
            case 0x0069736c:
            {
                MKV_DATA char  data_chars[5]   = "ndcz";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lsk
            case 0x006b736c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsl
            case 0x006c736c:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lsm
            case 0x006d736c:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsn
            case 0x006e736c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lso
            case 0x006f736c:
            {
                MKV_DATA char  data_chars[8]   = "nepvkmr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x999a, // 0.600000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lsp
            case 0x0070736c:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lst
            case 0x0074736c:
            {
                MKV_DATA char  data_chars[7]   = "oerahy";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb174, // 0.693182 
                    0x28ba, // 0.159091 
                    0x0e8c, // 0.056818 
                    0x08ba, // 0.034091 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lsu
            case 0x0075736c:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lsw
            case 0x0077736c:
            {
                MKV_DATA char  data_chars[5]   = "oiea";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa1af, // 0.631579 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lta
            case 0x0061746c:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltb
            case 0x0062746c:
            {
                MKV_DATA char  data_chars[4]   = "yro";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ltc
            case 0x0063746c:
            {
                MKV_DATA char  data_chars[4]   = "oal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ltd
            case 0x0064746c:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lte
            case 0x0065746c:
            {
                MKV_DATA char  data_chars[4]   = "rns";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe79e, // 0.904762 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ltf
            case 0x0066746c:
            {
                MKV_DATA char  data_chars[3]   = "lo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lth
            case 0x0068746c:
            {
                MKV_DATA char  data_chars[6]   = "oawyr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x5555, // 0.333333 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lti
            case 0x0069746c:
            {
                MKV_DATA char  data_chars[4]   = "nsm";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ltl
            case 0x006c746c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltm
            case 0x006d746c:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lto
            case 0x006f746c:
            {
                MKV_DATA char  data_chars[5]   = "nwfp";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe8f6, // 0.910000 
                    0x0f5c, // 0.060000 
                    0x051f, // 0.020000 
                    0x028f, // 0.010000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ltr
            case 0x0072746c:
            {
                MKV_DATA char  data_chars[4]   = "iae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lts
            case 0x0073746c:
            {
                MKV_DATA char  data_chars[3]   = "hp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltu
            case 0x0075746c:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ltw
            case 0x0077746c:
            {
                MKV_DATA char  data_chars[5]   = "eiho";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lty
            case 0x0079746c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lub
            case 0x0062756c:
            {
                MKV_DATA char  data_chars[5]   = "bemw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // luc
            case 0x0063756c:
            {
                MKV_DATA char  data_chars[6]   = "katyc";
                MKV_DATA uint16_t data_weights[5] = {
                    0xaaab, // 0.666667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lud
            case 0x0064756c:
            {
                MKV_DATA char  data_chars[10]   = "dswbglnhf";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lue
            case 0x0065756c:
            {
                MKV_DATA char  data_chars[3]   = "bt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // luf
            case 0x0066756c:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lug
            case 0x0067756c:
            {
                MKV_DATA char  data_chars[5]   = "ghsw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lui
            case 0x0069756c:
            {
                MKV_DATA char  data_chars[3]   = "cd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // luk
            case 0x006b756c:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lul
            case 0x006c756c:
            {
                MKV_DATA char  data_chars[5]   = "lshw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lum
            case 0x006d756c:
            {
                MKV_DATA char  data_chars[7]   = "bplstf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7000, // 0.437500 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // lun
            case 0x006e756c:
            {
                MKV_DATA char  data_chars[8]   = "tdsgybh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5174, // 0.318182 
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // lup
            case 0x0070756c:
            {
                MKV_DATA char  data_chars[6]   = "thipr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lur
            case 0x0072756c:
            {
                MKV_DATA char  data_chars[5]   = "gilt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lus
            case 0x0073756c:
            {
                MKV_DATA char  data_chars[5]   = "htbo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lut
            case 0x0074756c:
            {
                MKV_DATA char  data_chars[6]   = "tolsh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // luv
            case 0x0076756c:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lux
            case 0x0078756c:
            {
                MKV_DATA char  data_chars[5]   = "tblu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // luz
            case 0x007a756c:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lva
            case 0x0061766c:
            {
                MKV_DATA char  data_chars[5]   = "dnsl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lve
            case 0x0065766c:
            {
                MKV_DATA char  data_chars[13]   = "rsdytclnowah";
                MKV_DATA uint16_t data_weights[12] = {
                    0xa86c, // 0.657895 
                    0x1436, // 0.078947 
                    0x10d8, // 0.065789 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // lvi
            case 0x0069766c:
            {
                MKV_DATA char  data_chars[6]   = "nldes";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // lvo
            case 0x006f766c:
            {
                MKV_DATA char  data_chars[3]   = "is";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwa
            case 0x0061776c:
            {
                MKV_DATA char  data_chars[4]   = "ylr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8ba3, // 0.545455 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lwe
            case 0x0065776c:
            {
                MKV_DATA char  data_chars[4]   = "lsy";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdb6e, // 0.857143 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lwh
            case 0x0068776c:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwi
            case 0x0069776c:
            {
                MKV_DATA char  data_chars[5]   = "cntl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lwo
            case 0x006f776c:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9000, // 0.562500 
                    0x7000, // 0.437500 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lwy
            case 0x0079776c:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lya
            case 0x0061796c:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyb
            case 0x0062796c:
            {
                MKV_DATA char  data_chars[5]   = "uoer";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // lyc
            case 0x0063796c:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyd
            case 0x0064796c:
            {
                MKV_DATA char  data_chars[12]   = "iedbghmcfln";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // lye
            case 0x0065796c:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyf
            case 0x0066796c:
            {
                MKV_DATA char  data_chars[4]   = "oif";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lyg
            case 0x0067796c:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyh
            case 0x0068796c:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lym
            case 0x006d796c:
            {
                MKV_DATA char  data_chars[10]   = "poiebshmt";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // lyn
            case 0x006e796c:
            {
                MKV_DATA char  data_chars[13]   = "ecdsgmtafwbn";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // lyo
            case 0x006f796c:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyp
            case 0x0070796c:
            {
                MKV_DATA char  data_chars[4]   = "ohi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lys
            case 0x0073796c:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyt
            case 0x0074796c:
            {
                MKV_DATA char  data_chars[4]   = "hoc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lyv
            case 0x0076796c:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // lyw
            case 0x0077796c:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // lze
            case 0x00657a6c:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // l
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'm':
        {
            switch ( trigram_u32 )
            {
            // mab
            case 0x0062616d:
            {
                MKV_DATA char  data_chars[4]   = "lye";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mac
            case 0x0063616d:
            {
                MKV_DATA char  data_chars[6]   = "korce";
                MKV_DATA uint16_t data_weights[5] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mad
            case 0x0064616d:
            {
                MKV_DATA char  data_chars[9]   = "erdofijl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mae
            case 0x0065616d:
            {
                MKV_DATA char  data_chars[4]   = "snr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mag
            case 0x0067616d:
            {
                MKV_DATA char  data_chars[7]   = "ehdgnp";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mai
            case 0x0069616d:
            {
                MKV_DATA char  data_chars[7]   = "dnstzl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // maj
            case 0x006a616d:
            {
                return 'o';
            }
            break;

            // mak
            case 0x006b616d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mal
            case 0x006c616d:
            {
                MKV_DATA char  data_chars[17]   = "ltebdvhmsrcigfkp";
                MKV_DATA uint16_t data_weights[16] = {
                    0x745d, // 0.454545 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // mam
            case 0x006d616d:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // man
            case 0x006e616d:
            {
                MKV_DATA char  data_chars[16]   = "stncdhagbelowuv";
                MKV_DATA uint16_t data_weights[15] = {
                    0x8555, // 0.520833 
                    0x1aab, // 0.104167 
                    0x12ab, // 0.072917 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // map
            case 0x0070616d:
            {
                MKV_DATA char  data_chars[4]   = "lpe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9555, // 0.583333 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mar
            case 0x0072616d:
            {
                MKV_DATA char  data_chars[18]   = "stlkycdgeihnrpawb";
                MKV_DATA uint16_t data_weights[17] = {
                    0x5cd2, // 0.362573 
                    0x26ed, // 0.152047 
                    0x1af3, // 0.105263 
                    0x1675, // 0.087719 
                    0x0bfa, // 0.046784 
                    0x0a7b, // 0.040936 
                    0x0a7b, // 0.040936 
                    0x077c, // 0.029240 
                    0x077c, // 0.029240 
                    0x05fd, // 0.023392 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x017f, // 0.005848 
                    0x017f, // 0.005848 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // mas
            case 0x0073616d:
            {
                MKV_DATA char  data_chars[8]   = "tschkow";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // mat
            case 0x0074616d:
            {
                MKV_DATA char  data_chars[9]   = "tlorhcfs";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mau
            case 0x0075616d:
            {
                MKV_DATA char  data_chars[7]   = "dlnrtg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mav
            case 0x0076616d:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // maw
            case 0x0077616d:
            {
                MKV_DATA char  data_chars[9]   = "bdegrlnt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // max
            case 0x0078616d:
            {
                MKV_DATA char  data_chars[5]   = "twes";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // may
            case 0x0079616d:
            {
                MKV_DATA char  data_chars[10]   = "nefblospt";
                MKV_DATA uint16_t data_weights[9] = {
                    0x37a7, // 0.217391 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mba
            case 0x0061626d:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbd
            case 0x0064626d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbe
            case 0x0065626d:
            {
                MKV_DATA char  data_chars[9]   = "rsltcmbi";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd249, // 0.821429 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mbf
            case 0x0066626d:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbi
            case 0x0069626d:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbj
            case 0x006a626d:
            {
                return 'o';
            }
            break;

            // mbl
            case 0x006c626d:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe23c, // 0.883721 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mbo
            case 0x006f626d:
            {
                MKV_DATA char  data_chars[5]   = "rult";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mbp
            case 0x0070626d:
            {
                return 'y';
            }
            break;

            // mbr
            case 0x0072626d:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x430c, // 0.261905 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mbs
            case 0x0073626d:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbt
            case 0x0074626d:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbu
            case 0x0075626d:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc3c4, // 0.764706 
                    0x3c3c, // 0.235294 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mbw
            case 0x0077626d:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mch
            case 0x0068636d:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mco
            case 0x006f636d:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mcr
            case 0x0072636d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mde
            case 0x0065646d:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdi
            case 0x0069646d:
            {
                MKV_DATA char  data_chars[3]   = "va";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mdo
            case 0x006f646d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mea
            case 0x0061656d:
            {
                MKV_DATA char  data_chars[8]   = "drltvbf";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb2b8, // 0.698113 
                    0x1827, // 0.094340 
                    0x1352, // 0.075472 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // meb
            case 0x0062656d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // med
            case 0x0064656d:
            {
                MKV_DATA char  data_chars[10]   = "lebodhsgm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mee
            case 0x0065656d:
            {
                MKV_DATA char  data_chars[6]   = "trcsn";
                MKV_DATA uint16_t data_weights[5] = {
                    0x638e, // 0.388889 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mef
            case 0x0066656d:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // meg
            case 0x0067656d:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // meh
            case 0x0068656d:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mei
            case 0x0069656d:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mek
            case 0x006b656d:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mel
            case 0x006c656d:
            {
                MKV_DATA char  data_chars[16]   = "lkdbsoetfcivmzp";
                MKV_DATA uint16_t data_weights[15] = {
                    0x5c99, // 0.361702 
                    0x15ca, // 0.085106 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // mem
            case 0x006d656d:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // men
            case 0x006e656d:
            {
                MKV_DATA char  data_chars[9]   = "tahdnsig";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // meo
            case 0x006f656d:
            {
                MKV_DATA char  data_chars[5]   = "lrnp";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mep
            case 0x0070656d:
            {
                MKV_DATA char  data_chars[3]   = "ap";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // meq
            case 0x0071656d:
            {
                return 'u';
            }
            break;

            // mer
            case 0x0072656d:
            {
                MKV_DATA char  data_chars[19]   = "esrtylifchdbwgpaov";
                MKV_DATA uint16_t data_weights[18] = {
                    0x4f67, // 0.310160 
                    0x4058, // 0.251337 
                    0x15e7, // 0.085561 
                    0x1489, // 0.080214 
                    0x0995, // 0.037433 
                    0x0995, // 0.037433 
                    0x0837, // 0.032086 
                    0x06d8, // 0.026738 
                    0x06d8, // 0.026738 
                    0x06d8, // 0.026738 
                    0x041b, // 0.016043 
                    0x041b, // 0.016043 
                    0x041b, // 0.016043 
                    0x02bd, // 0.010695 
                    0x02bd, // 0.010695 
                    0x015e, // 0.005348 
                    0x015e, // 0.005348 
                    0x015e, // 0.005348 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // mes
            case 0x0073656d:
            {
                MKV_DATA char  data_chars[11]   = "tswbhlnmdf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // met
            case 0x0074656d:
            {
                MKV_DATA char  data_chars[6]   = "htacf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mev
            case 0x0076656d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mew
            case 0x0077656d:
            {
                MKV_DATA char  data_chars[4]   = "oas";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mey
            case 0x0079656d:
            {
                MKV_DATA char  data_chars[4]   = "str";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mfi
            case 0x0069666d:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfo
            case 0x006f666d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mfu
            case 0x0075666d:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mga
            case 0x0061676d:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mha
            case 0x0061686d:
            {
                MKV_DATA char  data_chars[4]   = "mlu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mhi
            case 0x0069686d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mho
            case 0x006f686d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mhu
            case 0x0075686d:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mic
            case 0x0063696d:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9697, // 0.588235 
                    0x6969, // 0.411765 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mid
            case 0x0064696d:
            {
                MKV_DATA char  data_chars[10]   = "dgsvfhwae";
                MKV_DATA uint16_t data_weights[9] = {
                    0xb26d, // 0.696970 
                    0x1746, // 0.090909 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // mig
            case 0x0067696d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mil
            case 0x006c696d:
            {
                MKV_DATA char  data_chars[14]   = "lebnsdktfcwov";
                MKV_DATA uint16_t data_weights[13] = {
                    0x9f11, // 0.621359 
                    0x1b57, // 0.106796 
                    0x0eea, // 0.058252 
                    0x09f1, // 0.038835 
                    0x0775, // 0.029126 
                    0x0775, // 0.029126 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // mim
            case 0x006d696d:
            {
                MKV_DATA char  data_chars[3]   = "bm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // min
            case 0x006e696d:
            {
                MKV_DATA char  data_chars[12]   = "gsteiconwdv";
                MKV_DATA uint16_t data_weights[11] = {
                    0x8000, // 0.500000 
                    0x44be, // 0.268519 
                    0x1098, // 0.064815 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x071c, // 0.027778 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // mir
            case 0x0072696d:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mis
            case 0x0073696d:
            {
                MKV_DATA char  data_chars[7]   = "tsebch";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mit
            case 0x0074696d:
            {
                MKV_DATA char  data_chars[7]   = "hceaft";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9bd3, // 0.608696 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mix
            case 0x0078696d:
            {
                MKV_DATA char  data_chars[4]   = "bot";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mla
            case 0x00616c6d:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mle
            case 0x00656c6d:
            {
                MKV_DATA char  data_chars[6]   = "ytids";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc800, // 0.781250 
                    0x1800, // 0.093750 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mli
            case 0x00696c6d:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mlo
            case 0x006f6c6d:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mma
            case 0x00616d6d:
            {
                MKV_DATA char  data_chars[3]   = "ct";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mmb
            case 0x00626d6d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mme
            case 0x00656d6d:
            {
                MKV_DATA char  data_chars[4]   = "rts";
                MKV_DATA uint16_t data_weights[3] = {
                    0xeaab, // 0.916667 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mmi
            case 0x00696d6d:
            {
                MKV_DATA char  data_chars[4]   = "nlt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mmo
            case 0x006f6d6d:
            {
                MKV_DATA char  data_chars[4]   = "nwo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mmu
            case 0x00756d6d:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mne
            case 0x00656e6d:
            {
                MKV_DATA char  data_chars[3]   = "yt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mni
            case 0x00696e6d:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mno
            case 0x006f6e6d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moa
            case 0x00616f6d:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mob
            case 0x00626f6d:
            {
                MKV_DATA char  data_chars[4]   = "lwb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // moc
            case 0x00636f6d:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mod
            case 0x00646f6d:
            {
                MKV_DATA char  data_chars[4]   = "ebd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mog
            case 0x00676f6d:
            {
                MKV_DATA char  data_chars[4]   = "aew";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // moi
            case 0x00696f6d:
            {
                MKV_DATA char  data_chars[3]   = "gr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mok
            case 0x006b6f6d:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mol
            case 0x006c6f6d:
            {
                MKV_DATA char  data_chars[7]   = "eladit";
                MKV_DATA uint16_t data_weights[6] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mon
            case 0x006e6f6d:
            {
                MKV_DATA char  data_chars[15]   = "dtksebmgcwnxya";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4f89, // 0.310680 
                    0x36ae, // 0.213592 
                    0x31b5, // 0.194175 
                    0x13e2, // 0.077670 
                    0x0eea, // 0.058252 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // moo
            case 0x006f6f6d:
            {
                MKV_DATA char  data_chars[4]   = "rnl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf8bd, // 0.971631 
                    0x0572, // 0.021277 
                    0x01d1, // 0.007092 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mor
            case 0x00726f6d:
            {
                MKV_DATA char  data_chars[17]   = "etlrdsvcinwgakpb";
                MKV_DATA uint16_t data_weights[16] = {
                    0xb0b9, // 0.690323 
                    0x122b, // 0.070968 
                    0x09e9, // 0.038710 
                    0x0842, // 0.032258 
                    0x069b, // 0.025806 
                    0x04f4, // 0.019355 
                    0x04f4, // 0.019355 
                    0x04f4, // 0.019355 
                    0x04f4, // 0.019355 
                    0x04f4, // 0.019355 
                    0x034e, // 0.012903 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                    0x01a7, // 0.006452 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // mos
            case 0x00736f6d:
            {
                MKV_DATA char  data_chars[6]   = "setlb";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9bd3, // 0.608696 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mot
            case 0x00746f6d:
            {
                MKV_DATA char  data_chars[5]   = "thcs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mou
            case 0x00756f6d:
            {
                MKV_DATA char  data_chars[6]   = "tnlsr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x3333, // 0.200000 
                    0x2095, // 0.127273 
                    0x1746, // 0.090909 
                    0x094f, // 0.036364 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mow
            case 0x00776f6d:
            {
                MKV_DATA char  data_chars[5]   = "sbdm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mox
            case 0x00786f6d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // moy
            case 0x00796f6d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpa
            case 0x0061706d:
            {
                MKV_DATA char  data_chars[3]   = "sr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpc
            case 0x0063706d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpd
            case 0x0064706d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpe
            case 0x0065706d:
            {
                MKV_DATA char  data_chars[5]   = "rnts";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb000, // 0.687500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpf
            case 0x0066706d:
            {
                MKV_DATA char  data_chars[5]   = "oily";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mph
            case 0x0068706d:
            {
                MKV_DATA char  data_chars[3]   = "il";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpi
            case 0x0069706d:
            {
                MKV_DATA char  data_chars[5]   = "nosa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpk
            case 0x006b706d:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpl
            case 0x006c706d:
            {
                MKV_DATA char  data_chars[4]   = "eiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb4b5, // 0.705882 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mpm
            case 0x006d706d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpn
            case 0x006e706d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mpo
            case 0x006f706d:
            {
                MKV_DATA char  data_chars[5]   = "roul";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpr
            case 0x0072706d:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mps
            case 0x0073706d:
            {
                MKV_DATA char  data_chars[9]   = "tfhoeiab";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8555, // 0.520833 
                    0x2555, // 0.145833 
                    0x2000, // 0.125000 
                    0x1aab, // 0.104167 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // mpt
            case 0x0074706d:
            {
                MKV_DATA char  data_chars[5]   = "ohiw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xf852, // 0.970000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mpv
            case 0x0076706d:
            {
                return 'i';
            }
            break;

            // mpw
            case 0x0077706d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mre
            case 0x0065726d:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mro
            case 0x006f726d:
            {
                MKV_DATA char  data_chars[4]   = "osw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // msa
            case 0x0061736d:
            {
                MKV_DATA char  data_chars[5]   = "lmrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // msb
            case 0x0062736d:
            {
                MKV_DATA char  data_chars[5]   = "uyeo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // msc
            case 0x0063736d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msd
            case 0x0064736d:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mse
            case 0x0065736d:
            {
                MKV_DATA char  data_chars[3]   = "yt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msf
            case 0x0066736d:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msg
            case 0x0067736d:
            {
                MKV_DATA char  data_chars[4]   = "ari";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // msh
            case 0x0068736d:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // msi
            case 0x0069736d:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msk
            case 0x006b736d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msl
            case 0x006c736d:
            {
                MKV_DATA char  data_chars[5]   = "eaoy";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // msm
            case 0x006d736d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // msn
            case 0x006e736d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mso
            case 0x006f736d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mst
            case 0x0074736d:
            {
                MKV_DATA char  data_chars[6]   = "oeahr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6eb4, // 0.432432 
                    0x59f2, // 0.351351 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // msw
            case 0x0077736d:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mth
            case 0x0068746d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mto
            case 0x006f746d:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mtr
            case 0x0072746d:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // muc
            case 0x0063756d:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb333, // 0.700000 
                    0x4ccd, // 0.300000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mud
            case 0x0064756d:
            {
                MKV_DATA char  data_chars[6]   = "daefg";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mue
            case 0x0065756d:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mug
            case 0x0067756d:
            {
                MKV_DATA char  data_chars[3]   = "gs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mul
            case 0x006c756d:
            {
                MKV_DATA char  data_chars[4]   = "lbf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mum
            case 0x006d756d:
            {
                MKV_DATA char  data_chars[3]   = "bp";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mun
            case 0x006e756d:
            {
                MKV_DATA char  data_chars[5]   = "dsgi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb8e4, // 0.722222 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // mur
            case 0x0072756d:
            {
                MKV_DATA char  data_chars[6]   = "rcstd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // mus
            case 0x0073756d:
            {
                MKV_DATA char  data_chars[7]   = "tcgkwb";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // mut
            case 0x0074756d:
            {
                MKV_DATA char  data_chars[4]   = "tfl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // mux
            case 0x0078756d:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mvi
            case 0x0069766d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwe
            case 0x0065776d:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwh
            case 0x0068776d:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwi
            case 0x0069776d:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwo
            case 0x006f776d:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mwr
            case 0x0072776d:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mya
            case 0x0061796d:
            {
                MKV_DATA char  data_chars[3]   = "tr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myd
            case 0x0064796d:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mye
            case 0x0065796d:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myl
            case 0x006c796d:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myn
            case 0x006e796d:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myo
            case 0x006f796d:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // mys
            case 0x0073796d:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // myt
            case 0x0074796d:
            {
                MKV_DATA char  data_chars[5]   = "hcot";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // m
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'n':
        {
            switch ( trigram_u32 )
            {
            // nab
            case 0x0062616e:
            {
                MKV_DATA char  data_chars[4]   = "yas";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nac
            case 0x0063616e:
            {
                MKV_DATA char  data_chars[9]   = "krohcelt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x2f68, // 0.185185 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nad
            case 0x0064616e:
            {
                MKV_DATA char  data_chars[8]   = "aeudilo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // naf
            case 0x0066616e:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nag
            case 0x0067616e:
            {
                MKV_DATA char  data_chars[4]   = "esi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nai
            case 0x0069616e:
            {
                MKV_DATA char  data_chars[4]   = "lts";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nak
            case 0x006b616e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nal
            case 0x006c616e:
            {
                MKV_DATA char  data_chars[7]   = "ldseiw";
                MKV_DATA uint16_t data_weights[6] = {
                    0xd555, // 0.833333 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nam
            case 0x006d616e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nan
            case 0x006e616e:
            {
                MKV_DATA char  data_chars[8]   = "ctpgnqs";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nap
            case 0x0070616e:
            {
                MKV_DATA char  data_chars[9]   = "thpelswc";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nar
            case 0x0072616e:
            {
                MKV_DATA char  data_chars[11]   = "derfgbwyks";
                MKV_DATA uint16_t data_weights[10] = {
                    0x83a8, // 0.514286 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // nas
            case 0x0073616e:
            {
                MKV_DATA char  data_chars[6]   = "theis";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7878, // 0.470588 
                    0x5a5a, // 0.352941 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nat
            case 0x0074616e:
            {
                MKV_DATA char  data_chars[6]   = "etclo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nau
            case 0x0075616e:
            {
                MKV_DATA char  data_chars[4]   = "ngl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nav
            case 0x0076616e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // naw
            case 0x0077616e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nay
            case 0x0079616e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // naz
            case 0x007a616e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nba
            case 0x0061626e:
            {
                MKV_DATA char  data_chars[4]   = "ncl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nbe
            case 0x0065626e:
            {
                MKV_DATA char  data_chars[4]   = "ral";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nbi
            case 0x0069626e:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbl
            case 0x006c626e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nbo
            case 0x006f626e:
            {
                MKV_DATA char  data_chars[5]   = "rwuo";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcec5, // 0.807692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nbr
            case 0x0072626e:
            {
                MKV_DATA char  data_chars[4]   = "ioe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x846a, // 0.517241 
                    0x72c2, // 0.448276 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nbu
            case 0x0075626e:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nca
            case 0x0061636e:
            {
                MKV_DATA char  data_chars[5]   = "srkn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nce
            case 0x0065636e:
            {
                MKV_DATA char  data_chars[14]   = "srtnhpabdfglm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3555, // 0.208333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // nch
            case 0x0068636e:
            {
                MKV_DATA char  data_chars[15]   = "eawuiolmbcsgfd";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3ef3, // 0.245902 
                    0x29f8, // 0.163934 
                    0x14fc, // 0.081967 
                    0x14fc, // 0.081967 
                    0x14fc, // 0.081967 
                    0x10c9, // 0.065574 
                    0x10c9, // 0.065574 
                    0x10c9, // 0.065574 
                    0x0c97, // 0.049180 
                    0x0865, // 0.032787 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                    0x0432, // 0.016393 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // nci
            case 0x0069636e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nck
            case 0x006b636e:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ncl
            case 0x006c636e:
            {
                MKV_DATA char  data_chars[5]   = "eioy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nco
            case 0x006f636e:
            {
                MKV_DATA char  data_chars[11]   = "tmlarowycg";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6e8c, // 0.431818 
                    0x45d1, // 0.272727 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ncr
            case 0x0072636e:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nct
            case 0x0074636e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ncu
            case 0x0075636e:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nda
            case 0x0061646e:
            {
                MKV_DATA char  data_chars[4]   = "lry";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdcb1, // 0.862069 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndb
            case 0x0062646e:
            {
                MKV_DATA char  data_chars[7]   = "raouye";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ndc
            case 0x0063646e:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nde
            case 0x0065646e:
            {
                MKV_DATA char  data_chars[10]   = "rnlsvabef";
                MKV_DATA uint16_t data_weights[9] = {
                    0x738a, // 0.451327 
                    0x585b, // 0.345133 
                    0x1220, // 0.070796 
                    0x0d98, // 0.053097 
                    0x06cc, // 0.026549 
                    0x06cc, // 0.026549 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                    0x0244, // 0.008850 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ndf
            case 0x0066646e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndg
            case 0x0067646e:
            {
                MKV_DATA char  data_chars[5]   = "aeru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ndh
            case 0x0068646e:
            {
                MKV_DATA char  data_chars[6]   = "aieou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7943, // 0.473684 
                    0x35e5, // 0.210526 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ndi
            case 0x0069646e:
            {
                MKV_DATA char  data_chars[11]   = "sntaceklwp";
                MKV_DATA uint16_t data_weights[10] = {
                    0x611a, // 0.379310 
                    0x3dcb, // 0.241379 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ndk
            case 0x006b646e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndl
            case 0x006c646e:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcbda, // 0.796296 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ndm
            case 0x006d646e:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndo
            case 0x006f646e:
            {
                MKV_DATA char  data_chars[9]   = "nwvcglmu";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbf31, // 0.746835 
                    0x1d2a, // 0.113924 
                    0x1371, // 0.075949 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ndp
            case 0x0070646e:
            {
                MKV_DATA char  data_chars[4]   = "oil";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndr
            case 0x0072646e:
            {
                MKV_DATA char  data_chars[7]   = "iaeouy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5ad7, // 0.354839 
                    0x39ce, // 0.225806 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nds
            case 0x0073646e:
            {
                MKV_DATA char  data_chars[14]   = "bwoethilcamgf";
                MKV_DATA uint16_t data_weights[13] = {
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ndt
            case 0x0074646e:
            {
                MKV_DATA char  data_chars[4]   = "hoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ndu
            case 0x0075646e:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ndw
            case 0x0077646e:
            {
                MKV_DATA char  data_chars[6]   = "eioah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ndy
            case 0x0079646e:
            {
                MKV_DATA char  data_chars[7]   = "lfkwgh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nea
            case 0x0061656e:
            {
                MKV_DATA char  data_chars[9]   = "trcdlsfm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x425f, // 0.259259 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // neb
            case 0x0062656e:
            {
                MKV_DATA char  data_chars[7]   = "arosuw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nec
            case 0x0063656e:
            {
                MKV_DATA char  data_chars[6]   = "orthl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ned
            case 0x0064656e:
            {
                MKV_DATA char  data_chars[5]   = "gaos";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nee
            case 0x0065656e:
            {
                MKV_DATA char  data_chars[5]   = "dnst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nef
            case 0x0066656e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // neg
            case 0x0067656e:
            {
                MKV_DATA char  data_chars[5]   = "argl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // neh
            case 0x0068656e:
            {
                MKV_DATA char  data_chars[6]   = "aioeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x69ee, // 0.413793 
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nei
            case 0x0069656e:
            {
                MKV_DATA char  data_chars[4]   = "gnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nel
            case 0x006c656e:
            {
                MKV_DATA char  data_chars[5]   = "lesy";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nem
            case 0x006d656e:
            {
                MKV_DATA char  data_chars[3]   = "op";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nen
            case 0x006e656e:
            {
                MKV_DATA char  data_chars[5]   = "dteh";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // neo
            case 0x006f656e:
            {
                MKV_DATA char  data_chars[3]   = "tp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nep
            case 0x0070656e:
            {
                MKV_DATA char  data_chars[4]   = "cgi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // neq
            case 0x0071656e:
            {
                return 'u';
            }
            break;

            // ner
            case 0x0072656e:
            {
                MKV_DATA char  data_chars[11]   = "sltdhcvwyb";
                MKV_DATA uint16_t data_weights[10] = {
                    0x9069, // 0.564103 
                    0x1a42, // 0.102564 
                    0x1a42, // 0.102564 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // nes
            case 0x0073656e:
            {
                MKV_DATA char  data_chars[12]   = "stfbhielmwc";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6400, // 0.390625 
                    0x3000, // 0.187500 
                    0x1c00, // 0.109375 
                    0x1800, // 0.093750 
                    0x1400, // 0.078125 
                    0x0c00, // 0.046875 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // net
            case 0x0074656e:
            {
                MKV_DATA char  data_chars[8]   = "thobcls";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7915, // 0.472973 
                    0x67c9, // 0.405405 
                    0x0a61, // 0.040541 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // neu
            case 0x0075656e:
            {
                MKV_DATA char  data_chars[3]   = "xd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nev
            case 0x0076656e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // new
            case 0x0077656e:
            {
                MKV_DATA char  data_chars[19]   = "btaeshcndplimgfyqo";
                MKV_DATA uint16_t data_weights[18] = {
                    0x369d, // 0.213333 
                    0x258c, // 0.146667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0da7, // 0.053333 
                    0x0da7, // 0.053333 
                    0x0da7, // 0.053333 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // nex
            case 0x0078656e:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ney
            case 0x0079656e:
            {
                MKV_DATA char  data_chars[12]   = "shcfgwdrabl";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // nfa
            case 0x0061666e:
            {
                MKV_DATA char  data_chars[4]   = "ril";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nfe
            case 0x0065666e:
            {
                MKV_DATA char  data_chars[3]   = "lw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfi
            case 0x0069666e:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf9c2, // 0.975610 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfl
            case 0x006c666e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfo
            case 0x006f666e:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xed09, // 0.925926 
                    0x12f7, // 0.074074 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nfr
            case 0x0072666e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nga
            case 0x0061676e:
            {
                MKV_DATA char  data_chars[8]   = "trlyfgi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x82b9, // 0.510638 
                    0x2b93, // 0.170213 
                    0x2b93, // 0.170213 
                    0x15ca, // 0.085106 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ngb
            case 0x0062676e:
            {
                MKV_DATA char  data_chars[7]   = "ouryae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6c9b, // 0.424242 
                    0x45d1, // 0.272727 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ngc
            case 0x0063676e:
            {
                MKV_DATA char  data_chars[5]   = "oral";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngd
            case 0x0064676e:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa800, // 0.656250 
                    0x3800, // 0.218750 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nge
            case 0x0065676e:
            {
                MKV_DATA char  data_chars[14]   = "rwlnmsyaghfto";
                MKV_DATA uint16_t data_weights[13] = {
                    0xa4d2, // 0.643836 
                    0x150b, // 0.082192 
                    0x1189, // 0.068493 
                    0x0a85, // 0.041096 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ngf
            case 0x0066676e:
            {
                MKV_DATA char  data_chars[5]   = "oilr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x84be, // 0.518519 
                    0x6d09, // 0.425926 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngh
            case 0x0068676e:
            {
                MKV_DATA char  data_chars[6]   = "aouie";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd359, // 0.825581 
                    0x17d0, // 0.093023 
                    0x0a6b, // 0.040698 
                    0x08ee, // 0.034884 
                    0x017d, // 0.005814 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngi
            case 0x0069676e:
            {
                MKV_DATA char  data_chars[5]   = "lnme";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngk
            case 0x006b676e:
            {
                return 'n';
            }
            break;

            // ngl
            case 0x006c676e:
            {
                MKV_DATA char  data_chars[6]   = "eaioy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb982, // 0.724638 
                    0x2164, // 0.130435 
                    0x0ed7, // 0.057971 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ngm
            case 0x006d676e:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngn
            case 0x006e676e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngo
            case 0x006f676e:
            {
                MKV_DATA char  data_chars[8]   = "lroetvn";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ngp
            case 0x0070676e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngr
            case 0x0072676e:
            {
                MKV_DATA char  data_chars[5]   = "ioae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4800, // 0.281250 
                    0x4800, // 0.281250 
                    0x3800, // 0.218750 
                    0x3800, // 0.218750 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngs
            case 0x0073676e:
            {
                MKV_DATA char  data_chars[17]   = "thwbeldfcnimagko";
                MKV_DATA uint16_t data_weights[16] = {
                    0x5555, // 0.333333 
                    0x1f4a, // 0.122222 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0e39, // 0.055556 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ngt
            case 0x0074676e:
            {
                MKV_DATA char  data_chars[5]   = "ohra";
                MKV_DATA uint16_t data_weights[4] = {
                    0xf5da, // 0.960352 
                    0x06c4, // 0.026432 
                    0x02d2, // 0.011013 
                    0x0090, // 0.002203 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ngu
            case 0x0075676e:
            {
                MKV_DATA char  data_chars[4]   = "eni";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ngv
            case 0x0076676e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ngw
            case 0x0077676e:
            {
                MKV_DATA char  data_chars[5]   = "oeai";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2aab, // 0.166667 
                    0x2555, // 0.145833 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nha
            case 0x0061686e:
            {
                MKV_DATA char  data_chars[8]   = "mlyunsv";
                MKV_DATA uint16_t data_weights[7] = {
                    0xaf15, // 0.683908 
                    0x3dcb, // 0.241379 
                    0x08d4, // 0.034483 
                    0x046a, // 0.017241 
                    0x02f1, // 0.011494 
                    0x0179, // 0.005747 
                    0x0179, // 0.005747 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nhe
            case 0x0065686e:
            {
                MKV_DATA char  data_chars[7]   = "ailnry";
                MKV_DATA uint16_t data_weights[6] = {
                    0xc5d1, // 0.772727 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nhi
            case 0x0069686e:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfa50, // 0.977778 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nho
            case 0x006f686e:
            {
                MKV_DATA char  data_chars[9]   = "elpurotw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5f41, // 0.372093 
                    0x5359, // 0.325581 
                    0x1dc4, // 0.116279 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nhu
            case 0x0075686e:
            {
                MKV_DATA char  data_chars[5]   = "rlns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaf28, // 0.684211 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nib
            case 0x0062696e:
            {
                MKV_DATA char  data_chars[6]   = "ulost";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nic
            case 0x0063696e:
            {
                MKV_DATA char  data_chars[4]   = "koh";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb852, // 0.720000 
                    0x3333, // 0.200000 
                    0x147b, // 0.080000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nie
            case 0x0065696e:
            {
                MKV_DATA char  data_chars[4]   = "rsl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nif
            case 0x0066696e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nig
            case 0x0067696e:
            {
                MKV_DATA char  data_chars[4]   = "hos";
                MKV_DATA uint16_t data_weights[3] = {
                    0xdb6e, // 0.857143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nih
            case 0x0068696e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nil
            case 0x006c696e:
            {
                MKV_DATA char  data_chars[4]   = "elw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nim
            case 0x006d696e:
            {
                MKV_DATA char  data_chars[4]   = "blm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nin
            case 0x006e696e:
            {
                MKV_DATA char  data_chars[7]   = "genvcf";
                MKV_DATA uint16_t data_weights[6] = {
                    0xe8f0, // 0.909910 
                    0x093a, // 0.036036 
                    0x06eb, // 0.027027 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                    0x024e, // 0.009009 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nio
            case 0x006f696e:
            {
                MKV_DATA char  data_chars[4]   = "nut";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nip
            case 0x0070696e:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nis
            case 0x0073696e:
            {
                MKV_DATA char  data_chars[7]   = "htclsi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nit
            case 0x0074696e:
            {
                MKV_DATA char  data_chars[7]   = "thoyse";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // niv
            case 0x0076696e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // niw
            case 0x0077696e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nje
            case 0x00656a6e:
            {
                MKV_DATA char  data_chars[4]   = "wrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nkb
            case 0x00626b6e:
            {
                MKV_DATA char  data_chars[4]   = "euy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nke
            case 0x00656b6e:
            {
                MKV_DATA char  data_chars[8]   = "rnystvl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6f4e, // 0.434783 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nkf
            case 0x00666b6e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkg
            case 0x00676b6e:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkh
            case 0x00686b6e:
            {
                MKV_DATA char  data_chars[5]   = "iuao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nki
            case 0x00696b6e:
            {
                MKV_DATA char  data_chars[4]   = "ner";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nkl
            case 0x006c6b6e:
            {
                MKV_DATA char  data_chars[6]   = "eaioy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nkm
            case 0x006d6b6e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkn
            case 0x006e6b6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nko
            case 0x006f6b6e:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkp
            case 0x00706b6e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkr
            case 0x00726b6e:
            {
                MKV_DATA char  data_chars[3]   = "iy";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nks
            case 0x00736b6e:
            {
                MKV_DATA char  data_chars[10]   = "tecophimw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // nkt
            case 0x00746b6e:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nkw
            case 0x00776b6e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nky
            case 0x00796b6e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nla
            case 0x00616c6e:
            {
                MKV_DATA char  data_chars[7]   = "nkdstz";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nle
            case 0x00656c6e:
            {
                MKV_DATA char  data_chars[5]   = "yiat";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdb6e, // 0.857143 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nli
            case 0x00696c6e:
            {
                MKV_DATA char  data_chars[4]   = "gpv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nll
            case 0x006c6c6e:
            {
                MKV_DATA char  data_chars[3]   = "ew";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nlo
            case 0x006f6c6e:
            {
                MKV_DATA char  data_chars[4]   = "woc";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nma
            case 0x00616d6e:
            {
                MKV_DATA char  data_chars[4]   = "rny";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nme
            case 0x00656d6e:
            {
                MKV_DATA char  data_chars[4]   = "ral";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nmi
            case 0x00696d6e:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nmo
            case 0x006f6d6e:
            {
                MKV_DATA char  data_chars[5]   = "ruow";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9746, // 0.590909 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nna
            case 0x00616e6e:
            {
                MKV_DATA char  data_chars[10]   = "rhlcmfnps";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // nne
            case 0x00656e6e:
            {
                MKV_DATA char  data_chars[8]   = "rytlsgn";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7333, // 0.450000 
                    0x2aab, // 0.166667 
                    0x2222, // 0.133333 
                    0x1dde, // 0.116667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nnf
            case 0x00666e6e:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nng
            case 0x00676e6e:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nni
            case 0x00696e6e:
            {
                MKV_DATA char  data_chars[9]   = "nscbtwao";
                MKV_DATA uint16_t data_weights[8] = {
                    0xabd6, // 0.671233 
                    0x2312, // 0.136986 
                    0x1f90, // 0.123288 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nno
            case 0x006f6e6e:
            {
                MKV_DATA char  data_chars[9]   = "cnrwpstx";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // nns
            case 0x00736e6e:
            {
                MKV_DATA char  data_chars[5]   = "wych";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nnw
            case 0x00776e6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nny
            case 0x00796e6e:
            {
                MKV_DATA char  data_chars[11]   = "mscpthklwg";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // noa
            case 0x00616f6e:
            {
                MKV_DATA char  data_chars[4]   = "kdh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nob
            case 0x00626f6e:
            {
                MKV_DATA char  data_chars[5]   = "olsu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // noc
            case 0x00636f6e:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nod
            case 0x00646f6e:
            {
                MKV_DATA char  data_chars[8]   = "seilmdh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // noe
            case 0x00656f6e:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nof
            case 0x00666f6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nog
            case 0x00676f6e:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nok
            case 0x006b6f6e:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nol
            case 0x006c6f6e:
            {
                MKV_DATA char  data_chars[4]   = "lde";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nom
            case 0x006d6f6e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // non
            case 0x006e6f6e:
            {
                MKV_DATA char  data_chars[6]   = "sbice";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // noo
            case 0x006f6f6e:
            {
                MKV_DATA char  data_chars[4]   = "knt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nop
            case 0x00706f6e:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nor
            case 0x00726f6e:
            {
                MKV_DATA char  data_chars[14]   = "tmwdcblrenifk";
                MKV_DATA uint16_t data_weights[13] = {
                    0x9883, // 0.595745 
                    0x1883, // 0.095745 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x082c, // 0.031915 
                    0x0572, // 0.021277 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                    0x02b9, // 0.010638 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // nos
            case 0x00736f6e:
            {
                MKV_DATA char  data_chars[5]   = "esta";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // not
            case 0x00746f6e:
            {
                MKV_DATA char  data_chars[6]   = "tbghl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb6db, // 0.714286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nou
            case 0x00756f6e:
            {
                MKV_DATA char  data_chars[4]   = "lnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nov
            case 0x00766f6e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // now
            case 0x00776f6e:
            {
                MKV_DATA char  data_chars[8]   = "lesbdnt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x84be, // 0.518519 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // noy
            case 0x00796f6e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npa
            case 0x0061706e:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npe
            case 0x0065706e:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // npi
            case 0x0069706e:
            {
                MKV_DATA char  data_chars[4]   = "ltp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // npo
            case 0x006f706e:
            {
                MKV_DATA char  data_chars[5]   = "rlno";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // npu
            case 0x0075706e:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nqu
            case 0x0075716e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nre
            case 0x0065726e:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nrh
            case 0x0068726e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nri
            case 0x0069726e:
            {
                MKV_DATA char  data_chars[5]   = "gdst";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nro
            case 0x006f726e:
            {
                MKV_DATA char  data_chars[4]   = "wds";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nru
            case 0x0075726e:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nry
            case 0x0079726e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsa
            case 0x0061736e:
            {
                MKV_DATA char  data_chars[6]   = "lwnxy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsb
            case 0x0062736e:
            {
                MKV_DATA char  data_chars[6]   = "uyoar";
                MKV_DATA uint16_t data_weights[5] = {
                    0x590b, // 0.347826 
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsc
            case 0x0063736e:
            {
                MKV_DATA char  data_chars[5]   = "oarl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nsd
            case 0x0064736e:
            {
                MKV_DATA char  data_chars[4]   = "oae";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6bca, // 0.421053 
                    0x50d8, // 0.315789 
                    0x435e, // 0.263158 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nse
            case 0x0065736e:
            {
                MKV_DATA char  data_chars[8]   = "yltcnra";
                MKV_DATA uint16_t data_weights[7] = {
                    0x642d, // 0.391304 
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nsf
            case 0x0066736e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc71c, // 0.777778 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsg
            case 0x0067736e:
            {
                MKV_DATA char  data_chars[4]   = "rao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nsh
            case 0x0068736e:
            {
                MKV_DATA char  data_chars[6]   = "aiueo";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa367, // 0.638298 
                    0x3105, // 0.191489 
                    0x15ca, // 0.085106 
                    0x1057, // 0.063830 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsi
            case 0x0069736e:
            {
                MKV_DATA char  data_chars[6]   = "dnloc";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa1af, // 0.631579 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nsk
            case 0x006b736e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsl
            case 0x006c736e:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9837, // 0.594595 
                    0x3e45, // 0.243243 
                    0x2983, // 0.162162 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nsm
            case 0x006d736e:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsn
            case 0x006e736e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nso
            case 0x006f736e:
            {
                MKV_DATA char  data_chars[7]   = "nrlpuv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9612, // 0.586207 
                    0x34f7, // 0.206897 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nsp
            case 0x0070736e:
            {
                MKV_DATA char  data_chars[4]   = "lor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nsr
            case 0x0072736e:
            {
                return 'i';
            }
            break;

            // nst
            case 0x0074736e:
            {
                MKV_DATA char  data_chars[8]   = "oearhyi";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6555, // 0.395833 
                    0x5aab, // 0.354167 
                    0x21c7, // 0.131944 
                    0x1000, // 0.062500 
                    0x08e4, // 0.034722 
                    0x038e, // 0.013889 
                    0x01c7, // 0.006944 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nsu
            case 0x0075736e:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsv
            case 0x0076736e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nsw
            case 0x0077736e:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa7b9, // 0.655172 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nsy
            case 0x0079736e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nta
            case 0x0061746e:
            {
                MKV_DATA char  data_chars[6]   = "gcint";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ntb
            case 0x0062746e:
            {
                MKV_DATA char  data_chars[3]   = "ur";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntc
            case 0x0063746e:
            {
                MKV_DATA char  data_chars[4]   = "hlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nte
            case 0x0065746e:
            {
                MKV_DATA char  data_chars[8]   = "rslinwg";
                MKV_DATA uint16_t data_weights[7] = {
                    0xbbbc, // 0.733333 
                    0x1c72, // 0.111111 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ntf
            case 0x0066746e:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntg
            case 0x0067746e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nth
            case 0x0068746e:
            {
                MKV_DATA char  data_chars[8]   = "oaweiru";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6555, // 0.395833 
                    0x4555, // 0.270833 
                    0x2aab, // 0.166667 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // nti
            case 0x0069746e:
            {
                MKV_DATA char  data_chars[10]   = "nsrokltce";
                MKV_DATA uint16_t data_weights[9] = {
                    0x8348, // 0.512821 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ntj
            case 0x006a746e:
            {
                return 'o';
            }
            break;

            // ntl
            case 0x006c746e:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa5a6, // 0.647059 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ntm
            case 0x006d746e:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ntn
            case 0x006e746e:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nto
            case 0x006f746e:
            {
                MKV_DATA char  data_chars[7]   = "nwrxbc";
                MKV_DATA uint16_t data_weights[6] = {
                    0xf378, // 0.951049 
                    0x0395, // 0.013986 
                    0x0395, // 0.013986 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ntp
            case 0x0070746e:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntr
            case 0x0072746e:
            {
                MKV_DATA char  data_chars[5]   = "eiyo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6f4e, // 0.434783 
                    0x42c8, // 0.260870 
                    0x42c8, // 0.260870 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nts
            case 0x0073746e:
            {
                MKV_DATA char  data_chars[9]   = "hfptaceo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ntu
            case 0x0075746e:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntw
            case 0x0077746e:
            {
                MKV_DATA char  data_chars[5]   = "oiae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nty
            case 0x0079746e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ntz
            case 0x007a746e:
            {
                MKV_DATA char  data_chars[3]   = "gf";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nud
            case 0x0064756e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nuf
            case 0x0066756e:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nun
            case 0x006e756e:
            {
                MKV_DATA char  data_chars[7]   = "ecnsht";
                MKV_DATA uint16_t data_weights[6] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nup
            case 0x0070756e:
            {
                MKV_DATA char  data_chars[5]   = "edpt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nur
            case 0x0072756e:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nus
            case 0x0073756e:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nut
            case 0x0074756e:
            {
                MKV_DATA char  data_chars[7]   = "htbsfl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // nuz
            case 0x007a756e:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nva
            case 0x0061766e:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nve
            case 0x0065766e:
            {
                MKV_DATA char  data_chars[6]   = "ryant";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nvi
            case 0x0069766e:
            {
                MKV_DATA char  data_chars[4]   = "len";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe000, // 0.875000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nvo
            case 0x006f766e:
            {
                MKV_DATA char  data_chars[3]   = "su";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nvr
            case 0x0072766e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwa
            case 0x0061776e:
            {
                MKV_DATA char  data_chars[6]   = "lrydt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // nwe
            case 0x0065776e:
            {
                MKV_DATA char  data_chars[4]   = "lan";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe148, // 0.880000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nwh
            case 0x0068776e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwi
            case 0x0069776e:
            {
                MKV_DATA char  data_chars[4]   = "ctx";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc859, // 0.782609 
                    0x2c86, // 0.173913 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nwo
            case 0x006f776e:
            {
                MKV_DATA char  data_chars[4]   = "ord";
                MKV_DATA uint16_t data_weights[3] = {
                    0x989e, // 0.596154 
                    0x6276, // 0.384615 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nwr
            case 0x0072776e:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nwy
            case 0x0079776e:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nxh
            case 0x0068786e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nxt
            case 0x0074786e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nxw
            case 0x0077786e:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nya
            case 0x0061796e:
            {
                MKV_DATA char  data_chars[4]   = "rts";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyb
            case 0x0062796e:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyc
            case 0x0063796e:
            {
                MKV_DATA char  data_chars[4]   = "lor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nye
            case 0x0065796e:
            {
                MKV_DATA char  data_chars[4]   = "rtw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyf
            case 0x0066796e:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyg
            case 0x0067796e:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyh
            case 0x0068796e:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyk
            case 0x006b796e:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyl
            case 0x006c796e:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nym
            case 0x006d796e:
            {
                MKV_DATA char  data_chars[5]   = "epoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // nyn
            case 0x006e796e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyo
            case 0x006f796e:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyp
            case 0x0070796e:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nys
            case 0x0073796e:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nyt
            case 0x0074796e:
            {
                MKV_DATA char  data_chars[4]   = "ioh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // nyw
            case 0x0077796e:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nza
            case 0x00617a6e:
            {
                MKV_DATA char  data_chars[3]   = "bn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nze
            case 0x00657a6e:
            {
                MKV_DATA char  data_chars[3]   = "ty";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // nzo
            case 0x006f7a6e:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // n
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'o':
        {
            switch ( trigram_u32 )
            {
            // oac
            case 0x0063616f:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oad
            case 0x0064616f:
            {
                MKV_DATA char  data_chars[14]   = "whsbmlegfcorp";
                MKV_DATA uint16_t data_weights[13] = {
                    0x3167, // 0.192982 
                    0x286c, // 0.157895 
                    0x23ee, // 0.140351 
                    0x1f70, // 0.122807 
                    0x1af3, // 0.105263 
                    0x11f7, // 0.070175 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x08fc, // 0.035088 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // oah
            case 0x0068616f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oak
            case 0x006b616f:
            {
                MKV_DATA char  data_chars[14]   = "eshlfwagrcdmi";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // oal
            case 0x006c616f:
            {
                MKV_DATA char  data_chars[10]   = "bpcevwhms";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // oan
            case 0x006e616f:
            {
                MKV_DATA char  data_chars[4]   = "fsw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oar
            case 0x0072616f:
            {
                MKV_DATA char  data_chars[6]   = "scehw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oas
            case 0x0073616f:
            {
                MKV_DATA char  data_chars[5]   = "tlbd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oat
            case 0x0074616f:
            {
                MKV_DATA char  data_chars[6]   = "hslea";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6bca, // 0.421053 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oba
            case 0x0061626f:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obb
            case 0x0062626f:
            {
                MKV_DATA char  data_chars[7]   = "ilseya";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // obd
            case 0x0064626f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obe
            case 0x0065626f:
            {
                MKV_DATA char  data_chars[4]   = "rls";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // obh
            case 0x0068626f:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // obi
            case 0x0069626f:
            {
                MKV_DATA char  data_chars[4]   = "noe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // obl
            case 0x006c626f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obn
            case 0x006e626f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obo
            case 0x006f626f:
            {
                MKV_DATA char  data_chars[5]   = "rtwl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // obr
            case 0x0072626f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obs
            case 0x0073626f:
            {
                MKV_DATA char  data_chars[5]   = "tocw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // obt
            case 0x0074626f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // obu
            case 0x0075626f:
            {
                MKV_DATA char  data_chars[4]   = "rst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // obw
            case 0x0077626f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oby
            case 0x0079626f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oca
            case 0x0061636f:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // occ
            case 0x0063636f:
            {
                MKV_DATA char  data_chars[4]   = "oal";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oce
            case 0x0065636f:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // och
            case 0x0068636f:
            {
                MKV_DATA char  data_chars[4]   = "edf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ock
            case 0x006b636f:
            {
                MKV_DATA char  data_chars[19]   = "eslhiwbftmdrcapnyg";
                MKV_DATA uint16_t data_weights[18] = {
                    0x316d, // 0.193069 
                    0x2ee4, // 0.183168 
                    0x1faf, // 0.123762 
                    0x1e6a, // 0.118812 
                    0x1447, // 0.079208 
                    0x107a, // 0.064356 
                    0x0df1, // 0.054455 
                    0x0a23, // 0.039604 
                    0x079b, // 0.029703 
                    0x0656, // 0.024752 
                    0x0512, // 0.019802 
                    0x03cd, // 0.014851 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                    0x0144, // 0.004950 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // ocl
            case 0x006c636f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oco
            case 0x006f636f:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ocs
            case 0x0073636f:
            {
                return 't';
            }
            break;

            // oct
            case 0x0074636f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oda
            case 0x0061646f:
            {
                MKV_DATA char  data_chars[4]   = "lmc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odb
            case 0x0062646f:
            {
                MKV_DATA char  data_chars[7]   = "uaorey";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // odc
            case 0x0063646f:
            {
                MKV_DATA char  data_chars[5]   = "ohru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odd
            case 0x0064646f:
            {
                MKV_DATA char  data_chars[8]   = "ieasylo";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6c9b, // 0.424242 
                    0x4d93, // 0.303030 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ode
            case 0x0065646f:
            {
                MKV_DATA char  data_chars[7]   = "nrslah";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4dea, // 0.304348 
                    0x37a7, // 0.217391 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // odf
            case 0x0066646f:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odg
            case 0x0067646f:
            {
                MKV_DATA char  data_chars[4]   = "ear";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8889, // 0.533333 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odh
            case 0x0068646f:
            {
                MKV_DATA char  data_chars[6]   = "aioue";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // odi
            case 0x0069646f:
            {
                MKV_DATA char  data_chars[11]   = "ncmtesaghl";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7943, // 0.473684 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // odk
            case 0x006b646f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odl
            case 0x006c646f:
            {
                MKV_DATA char  data_chars[5]   = "eaoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9746, // 0.590909 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odm
            case 0x006d646f:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8591, // 0.521739 
                    0x2c86, // 0.173913 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // odn
            case 0x006e646f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odo
            case 0x006f646f:
            {
                MKV_DATA char  data_chars[4]   = "clm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odp
            case 0x0070646f:
            {
                MKV_DATA char  data_chars[4]   = "alo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // odr
            case 0x0072646f:
            {
                MKV_DATA char  data_chars[5]   = "ieoa";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ods
            case 0x0073646f:
            {
                MKV_DATA char  data_chars[15]   = "ethfiowpblmdac";
                MKV_DATA uint16_t data_weights[14] = {
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // odt
            case 0x0074646f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odu
            case 0x0075646f:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odv
            case 0x0076646f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // odw
            case 0x0077646f:
            {
                MKV_DATA char  data_chars[5]   = "aeio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5a5a, // 0.352941 
                    0x5a5a, // 0.352941 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ody
            case 0x0079646f:
            {
                MKV_DATA char  data_chars[6]   = "aehlm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oeb
            case 0x0062656f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oed
            case 0x0064656f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oeh
            case 0x0068656f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oen
            case 0x006e656f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oes
            case 0x0073656f:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ofa
            case 0x0061666f:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ofe
            case 0x0065666f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // off
            case 0x0066666f:
            {
                MKV_DATA char  data_chars[10]   = "elicotwhs";
                MKV_DATA uint16_t data_weights[9] = {
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ofi
            case 0x0069666f:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ofo
            case 0x006f666f:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oft
            case 0x0074666f:
            {
                MKV_DATA char  data_chars[7]   = "sowhlr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oga
            case 0x0061676f:
            {
                MKV_DATA char  data_chars[4]   = "tdn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ogb
            case 0x0062676f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogd
            case 0x0064676f:
            {
                MKV_DATA char  data_chars[4]   = "eay";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oge
            case 0x0065676f:
            {
                MKV_DATA char  data_chars[4]   = "rns";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ogg
            case 0x0067676f:
            {
                MKV_DATA char  data_chars[7]   = "aeibrs";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ogh
            case 0x0068676f:
            {
                MKV_DATA char  data_chars[4]   = "oat";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ogi
            case 0x0069676f:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogl
            case 0x006c676f:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ogm
            case 0x006d676f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogn
            case 0x006e676f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogp
            case 0x0070676f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogs
            case 0x0073676f:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ogu
            case 0x0075676f:
            {
                MKV_DATA char  data_chars[5]   = "emrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ogw
            case 0x0077676f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oha
            case 0x0061686f:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohe
            case 0x0065686f:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohi
            case 0x0069686f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohn
            case 0x006e686f:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oho
            case 0x006f686f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ohu
            case 0x0075686f:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oig
            case 0x0067696f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oin
            case 0x006e696f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oir
            case 0x0072696f:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ois
            case 0x0073696f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oit
            case 0x0074696f:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oje
            case 0x00656a6f:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okb
            case 0x00626b6f:
            {
                MKV_DATA char  data_chars[3]   = "uy";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okd
            case 0x00646b6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oke
            case 0x00656b6f:
            {
                MKV_DATA char  data_chars[11]   = "nrshfgmiyd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4ccd, // 0.300000 
                    0x4444, // 0.266667 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // okf
            case 0x00666b6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okg
            case 0x00676b6f:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okh
            case 0x00686b6f:
            {
                MKV_DATA char  data_chars[5]   = "aoiu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oki
            case 0x00696b6f:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okl
            case 0x006c6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okm
            case 0x006d6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okn
            case 0x006e6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oko
            case 0x006f6b6f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okp
            case 0x00706b6f:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okr
            case 0x00726b6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oks
            case 0x00736b6f:
            {
                MKV_DATA char  data_chars[10]   = "bemlogiwh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // okt
            case 0x00746b6f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oku
            case 0x00756b6f:
            {
                MKV_DATA char  data_chars[3]   = "sg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okv
            case 0x00766b6f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // okw
            case 0x00776b6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oky
            case 0x00796b6f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ola
            case 0x00616c6f:
            {
                MKV_DATA char  data_chars[9]   = "snvcmrtg";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // olb
            case 0x00626c6f:
            {
                MKV_DATA char  data_chars[7]   = "eoruay";
                MKV_DATA uint16_t data_weights[6] = {
                    0x642d, // 0.391304 
                    0x42c8, // 0.260870 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // olc
            case 0x00636c6f:
            {
                MKV_DATA char  data_chars[4]   = "hoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // old
            case 0x00646c6f:
            {
                MKV_DATA char  data_chars[17]   = "esfihbwrmcovglpt";
                MKV_DATA uint16_t data_weights[16] = {
                    0x346f, // 0.204819 
                    0x21ed, // 0.132530 
                    0x18ad, // 0.096386 
                    0x18ad, // 0.096386 
                    0x18ad, // 0.096386 
                    0x1597, // 0.084337 
                    0x1282, // 0.072289 
                    0x0c56, // 0.048193 
                    0x0c56, // 0.048193 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ole
            case 0x00656c6f:
            {
                MKV_DATA char  data_chars[14]   = "symhbgrnotfew";
                MKV_DATA uint16_t data_weights[13] = {
                    0x61e2, // 0.382353 
                    0x2969, // 0.161765 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x12d3, // 0.073529 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // olf
            case 0x00666c6f:
            {
                MKV_DATA char  data_chars[5]   = "oeah";
                MKV_DATA uint16_t data_weights[4] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // olg
            case 0x00676c6f:
            {
                MKV_DATA char  data_chars[7]   = "aoreiu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // olh
            case 0x00686c6f:
            {
                MKV_DATA char  data_chars[6]   = "aouei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oli
            case 0x00696c6f:
            {
                MKV_DATA char  data_chars[8]   = "nvfhota";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8889, // 0.533333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // olk
            case 0x006b6c6f:
            {
                MKV_DATA char  data_chars[5]   = "eihs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oll
            case 0x006c6c6f:
            {
                MKV_DATA char  data_chars[10]   = "ieayosbhr";
                MKV_DATA uint16_t data_weights[9] = {
                    0x50f5, // 0.316239 
                    0x3d44, // 0.239316 
                    0x36b3, // 0.213675 
                    0x1ea2, // 0.119658 
                    0x0f51, // 0.059829 
                    0x0690, // 0.025641 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // olm
            case 0x006d6c6f:
            {
                MKV_DATA char  data_chars[11]   = "esawboicrl";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb448, // 0.704225 
                    0x0e6c, // 0.056338 
                    0x0e6c, // 0.056338 
                    0x0ad1, // 0.042254 
                    0x0ad1, // 0.042254 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // oln
            case 0x006e6c6f:
            {
                MKV_DATA char  data_chars[7]   = "esobhi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x999a, // 0.600000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // olo
            case 0x006f6c6f:
            {
                MKV_DATA char  data_chars[5]   = "mnpw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // olp
            case 0x00706c6f:
            {
                MKV_DATA char  data_chars[6]   = "heiua";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // olr
            case 0x00726c6f:
            {
                MKV_DATA char  data_chars[3]   = "iu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ols
            case 0x00736c6f:
            {
                MKV_DATA char  data_chars[12]   = "tobcheigwkl";
                MKV_DATA uint16_t data_weights[11] = {
                    0x83e1, // 0.515152 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // olt
            case 0x00746c6f:
            {
                MKV_DATA char  data_chars[7]   = "osehiy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x89d9, // 0.538462 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // olu
            case 0x00756c6f:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // olv
            case 0x00766c6f:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0xca1b, // 0.789474 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // olw
            case 0x00776c6f:
            {
                MKV_DATA char  data_chars[6]   = "eioah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oly
            case 0x00796c6f:
            {
                MKV_DATA char  data_chars[9]   = "fmpwbgst";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // olz
            case 0x007a6c6f:
            {
                return 'e';
            }
            break;

            // oma
            case 0x00616d6f:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omb
            case 0x00626d6f:
            {
                MKV_DATA char  data_chars[11]   = "ersoualpwy";
                MKV_DATA uint16_t data_weights[10] = {
                    0xe6cc, // 0.901554 
                    0x07f5, // 0.031088 
                    0x054e, // 0.020725 
                    0x03fb, // 0.015544 
                    0x0154, // 0.005181 
                    0x0154, // 0.005181 
                    0x0154, // 0.005181 
                    0x0154, // 0.005181 
                    0x0154, // 0.005181 
                    0x0154, // 0.005181 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // omd
            case 0x00646d6f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ome
            case 0x00656d6f:
            {
                MKV_DATA char  data_chars[11]   = "rsdwbfnqly";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb29b, // 0.697674 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // omf
            case 0x00666d6f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8ba3, // 0.545455 
                    0x745d, // 0.454545 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omh
            case 0x00686d6f:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // omi
            case 0x00696d6f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oml
            case 0x006c6d6f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omm
            case 0x006d6d6f:
            {
                MKV_DATA char  data_chars[4]   = "oeu";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // omn
            case 0x006e6d6f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omo
            case 0x006f6d6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omp
            case 0x00706d6f:
            {
                MKV_DATA char  data_chars[7]   = "tsaehk";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7777, // 0.466667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oms
            case 0x00736d6f:
            {
                MKV_DATA char  data_chars[12]   = "tglbaefhowd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // omt
            case 0x00746d6f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omv
            case 0x00766d6f:
            {
                return 'i';
            }
            break;

            // omw
            case 0x00776d6f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // omy
            case 0x00796d6f:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ona
            case 0x00616e6f:
            {
                MKV_DATA char  data_chars[8]   = "rbcdglm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // onb
            case 0x00626e6f:
            {
                MKV_DATA char  data_chars[7]   = "yuarei";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8925, // 0.535714 
                    0x36db, // 0.214286 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // onc
            case 0x00636e6f:
            {
                MKV_DATA char  data_chars[6]   = "ohrel";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ond
            case 0x00646e6f:
            {
                MKV_DATA char  data_chars[13]   = "seoialtruwhm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x521d, // 0.320755 
                    0x39f6, // 0.226415 
                    0x26a4, // 0.150943 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // one
            case 0x00656e6f:
            {
                MKV_DATA char  data_chars[18]   = "yshrlcbtangfdwpmq";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4d1c, // 0.301205 
                    0x2819, // 0.156626 
                    0x1bc2, // 0.108434 
                    0x0f6c, // 0.060241 
                    0x0f6c, // 0.060241 
                    0x0c56, // 0.048193 
                    0x0c56, // 0.048193 
                    0x0941, // 0.036145 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x062b, // 0.024096 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // onf
            case 0x00666e6f:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ong
            case 0x00676e6f:
            {
                MKV_DATA char  data_chars[19]   = "shadelwcbrftupnvim";
                MKV_DATA uint16_t data_weights[18] = {
                    0x1aab, // 0.104167 
                    0x1800, // 0.093750 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x12ab, // 0.072917 
                    0x12ab, // 0.072917 
                    0x12ab, // 0.072917 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0d55, // 0.052083 
                    0x0d55, // 0.052083 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0555, // 0.020833 
                    0x02ab, // 0.010417 
                    0x02ab, // 0.010417 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // onh
            case 0x00686e6f:
            {
                MKV_DATA char  data_chars[6]   = "aiueo";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6276, // 0.384615 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oni
            case 0x00696e6f:
            {
                MKV_DATA char  data_chars[11]   = "nscftxbloa";
                MKV_DATA uint16_t data_weights[10] = {
                    0x68ba, // 0.409091 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // onj
            case 0x006a6e6f:
            {
                return 'e';
            }
            break;

            // onk
            case 0x006b6e6f:
            {
                MKV_DATA char  data_chars[9]   = "sehwlotm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x590b, // 0.347826 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // onl
            case 0x006c6e6f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onm
            case 0x006d6e6f:
            {
                MKV_DATA char  data_chars[4]   = "oai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onn
            case 0x006e6e6f:
            {
                MKV_DATA char  data_chars[5]   = "iaoe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ono
            case 0x006f6e6f:
            {
                MKV_DATA char  data_chars[5]   = "racw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // onp
            case 0x00706e6f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // onq
            case 0x00716e6f:
            {
                return 'u';
            }
            break;

            // onr
            case 0x00726e6f:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ons
            case 0x00736e6f:
            {
                MKV_DATA char  data_chars[15]   = "thoabeflgidwup";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4000, // 0.250000 
                    0x1d17, // 0.113636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // ont
            case 0x00746e6f:
            {
                MKV_DATA char  data_chars[15]   = "ohgseriapmlfwc";
                MKV_DATA uint16_t data_weights[14] = {
                    0x41d4, // 0.257143 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // onv
            case 0x00766e6f:
            {
                MKV_DATA char  data_chars[4]   = "iar";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // onw
            case 0x00776e6f:
            {
                MKV_DATA char  data_chars[5]   = "oehi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // onx
            case 0x00786e6f:
            {
                MKV_DATA char  data_chars[3]   = "th";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ony
            case 0x00796e6f:
            {
                MKV_DATA char  data_chars[8]   = "aefglms";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // onz
            case 0x007a6e6f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oob
            case 0x00626f6f:
            {
                MKV_DATA char  data_chars[4]   = "ruy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ood
            case 0x00646f6f:
            {
                MKV_DATA char  data_chars[21]   = "slhcmwbgretyfnvipkda";
                MKV_DATA uint16_t data_weights[20] = {
                    0x3723, // 0.215385 
                    0x1b92, // 0.107692 
                    0x15a9, // 0.084615 
                    0x13b1, // 0.076923 
                    0x11b9, // 0.069231 
                    0x0fc1, // 0.061538 
                    0x0dc9, // 0.053846 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // oof
            case 0x00666f6f:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ooh
            case 0x00686f6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ook
            case 0x006b6f6f:
            {
                MKV_DATA char  data_chars[17]   = "eshlwgbdfvinpmtr";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4d65, // 0.302326 
                    0x388f, // 0.220930 
                    0x23b9, // 0.139535 
                    0x14d6, // 0.081395 
                    0x0be8, // 0.046512 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ool
            case 0x006c6f6f:
            {
                MKV_DATA char  data_chars[18]   = "sehlmfavgwtbipdor";
                MKV_DATA uint16_t data_weights[17] = {
                    0x34b5, // 0.205882 
                    0x1e1e, // 0.117647 
                    0x1a5a, // 0.102941 
                    0x1697, // 0.088235 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x0f0f, // 0.058824 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // oom
            case 0x006d6f6f:
            {
                MKV_DATA char  data_chars[9]   = "bsehfylp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5e51, // 0.368421 
                    0x2f28, // 0.184211 
                    0x21af, // 0.131579 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // oon
            case 0x006e6f6f:
            {
                MKV_DATA char  data_chars[11]   = "svhltabope";
                MKV_DATA uint16_t data_weights[10] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // oop
            case 0x00706f6f:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oor
            case 0x00726f6f:
            {
                MKV_DATA char  data_chars[12]   = "hslegtbcfad";
                MKV_DATA uint16_t data_weights[11] = {
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x1c72, // 0.111111 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // oos
            case 0x00736f6f:
            {
                MKV_DATA char  data_chars[5]   = "etln";
                MKV_DATA uint16_t data_weights[4] = {
                    0xcec5, // 0.807692 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oot
            case 0x00746f6f:
            {
                MKV_DATA char  data_chars[11]   = "heotisablr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x8376, // 0.513514 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // oov
            case 0x00766f6f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ooz
            case 0x007a6f6f:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opa
            case 0x0061706f:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opb
            case 0x0062706f:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opc
            case 0x0063706f:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opd
            case 0x0064706f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ope
            case 0x0065706f:
            {
                MKV_DATA char  data_chars[9]   = "srnwbdfl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x42c8, // 0.260870 
                    0x37a7, // 0.217391 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // opf
            case 0x0066706f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opg
            case 0x0067706f:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oph
            case 0x0068706f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opi
            case 0x0069706f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opl
            case 0x006c706f:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // opm
            case 0x006d706f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opn
            case 0x006e706f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // opp
            case 0x0070706f:
            {
                MKV_DATA char  data_chars[7]   = "iealus";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // opr
            case 0x0072706f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ops
            case 0x0073706f:
            {
                MKV_DATA char  data_chars[10]   = "tghwlafbe";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6db7, // 0.428571 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // opt
            case 0x0074706f:
            {
                MKV_DATA char  data_chars[4]   = "ohi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9697, // 0.588235 
                    0x4b4b, // 0.294118 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // opw
            case 0x0077706f:
            {
                MKV_DATA char  data_chars[6]   = "eoaiy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // opy
            case 0x0079706f:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oqu
            case 0x0075716f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ora
            case 0x0061726f:
            {
                MKV_DATA char  data_chars[7]   = "nsmvyg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // orb
            case 0x0062726f:
            {
                MKV_DATA char  data_chars[9]   = "raeyiulo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x435e, // 0.263158 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // orc
            case 0x0063726f:
            {
                MKV_DATA char  data_chars[7]   = "ohearl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5c29, // 0.360000 
                    0x47ae, // 0.280000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ord
            case 0x0064726f:
            {
                MKV_DATA char  data_chars[14]   = "sebalwohimtcg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4daa, // 0.303371 
                    0x1fa4, // 0.123596 
                    0x1fa4, // 0.123596 
                    0x1703, // 0.089888 
                    0x1423, // 0.078652 
                    0x1423, // 0.078652 
                    0x0e62, // 0.056180 
                    0x0e62, // 0.056180 
                    0x0b81, // 0.044944 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                    0x02e0, // 0.011236 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ore
            case 0x0065726f:
            {
                MKV_DATA char  data_chars[15]   = "sthnldbiycwgmf";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2276, // 0.134615 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // orf
            case 0x0066726f:
            {
                MKV_DATA char  data_chars[6]   = "ioter";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // org
            case 0x0067726f:
            {
                MKV_DATA char  data_chars[5]   = "eari";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6bca, // 0.421053 
                    0x5e51, // 0.368421 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // orh
            case 0x0068726f:
            {
                MKV_DATA char  data_chars[5]   = "aoei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ori
            case 0x0069726f:
            {
                MKV_DATA char  data_chars[6]   = "ncdea";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ork
            case 0x006b726f:
            {
                MKV_DATA char  data_chars[6]   = "sielh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // orl
            case 0x006c726f:
            {
                MKV_DATA char  data_chars[7]   = "eaidto";
                MKV_DATA uint16_t data_weights[6] = {
                    0x82b9, // 0.510638 
                    0x3105, // 0.191489 
                    0x20ae, // 0.127660 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // orm
            case 0x006d726f:
            {
                MKV_DATA char  data_chars[9]   = "aseilboh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4a1b, // 0.289474 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // orn
            case 0x006e726f:
            {
                MKV_DATA char  data_chars[15]   = "eicsbhawdftgrl";
                MKV_DATA uint16_t data_weights[14] = {
                    0x80e8, // 0.503546 
                    0x196b, // 0.099291 
                    0x1228, // 0.070922 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0914, // 0.035461 
                    0x0743, // 0.028369 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x03a2, // 0.014184 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // oro
            case 0x006f726f:
            {
                MKV_DATA char  data_chars[6]   = "ulnrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf79b, // 0.967213 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // orp
            case 0x0070726f:
            {
                MKV_DATA char  data_chars[6]   = "eilou";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf637, // 0.961783 
                    0x0343, // 0.012739 
                    0x0343, // 0.012739 
                    0x01a1, // 0.006369 
                    0x01a1, // 0.006369 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // orq
            case 0x0071726f:
            {
                return 'u';
            }
            break;

            // orr
            case 0x0072726f:
            {
                MKV_DATA char  data_chars[7]   = "ieaoys";
                MKV_DATA uint16_t data_weights[6] = {
                    0x831f, // 0.512195 
                    0x2bb5, // 0.170732 
                    0x1f38, // 0.121951 
                    0x1f38, // 0.121951 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ors
            case 0x0073726f:
            {
                MKV_DATA char  data_chars[14]   = "etlhiwpabcmgf";
                MKV_DATA uint16_t data_weights[13] = {
                    0x542a, // 0.328767 
                    0x3f20, // 0.246575 
                    0x2a15, // 0.164384 
                    0x150b, // 0.082192 
                    0x0e07, // 0.054795 
                    0x0704, // 0.027397 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                    0x0382, // 0.013699 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ort
            case 0x0074726f:
            {
                MKV_DATA char  data_chars[19]   = "hoilswemafbrugycqn";
                MKV_DATA uint16_t data_weights[18] = {
                    0xcc3d, // 0.797802 
                    0x1321, // 0.074725 
                    0x05a0, // 0.021978 
                    0x0480, // 0.017582 
                    0x03f0, // 0.015385 
                    0x0360, // 0.013187 
                    0x02d0, // 0.010989 
                    0x0240, // 0.008791 
                    0x01b0, // 0.006593 
                    0x01b0, // 0.006593 
                    0x0120, // 0.004396 
                    0x0120, // 0.004396 
                    0x0120, // 0.004396 
                    0x0120, // 0.004396 
                    0x0090, // 0.002198 
                    0x0090, // 0.002198 
                    0x0090, // 0.002198 
                    0x0090, // 0.002198 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // oru
            case 0x0075726f:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // orv
            case 0x0076726f:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // orw
            case 0x0077726f:
            {
                MKV_DATA char  data_chars[5]   = "eoia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ory
            case 0x0079726f:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osa
            case 0x0061736f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osb
            case 0x0062736f:
            {
                MKV_DATA char  data_chars[7]   = "eaouyr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // osc
            case 0x0063736f:
            {
                MKV_DATA char  data_chars[5]   = "oare";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // osd
            case 0x0064736f:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ose
            case 0x0065736f:
            {
                MKV_DATA char  data_chars[16]   = "lmdnvwhsygbacfr";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2f05, // 0.183673 
                    0x1a1f, // 0.102041 
                    0x14e6, // 0.081633 
                    0x14e6, // 0.081633 
                    0x14e6, // 0.081633 
                    0x14e6, // 0.081633 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // osf
            case 0x0066736f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osg
            case 0x0067736f:
            {
                MKV_DATA char  data_chars[5]   = "orai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // osh
            case 0x0068736f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osi
            case 0x0069736f:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osk
            case 0x006b736f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osl
            case 0x006c736f:
            {
                MKV_DATA char  data_chars[6]   = "eiaoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // osm
            case 0x006d736f:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // osn
            case 0x006e736f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oso
            case 0x006f736f:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osp
            case 0x0070736f:
            {
                MKV_DATA char  data_chars[5]   = "eoir";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oss
            case 0x0073736f:
            {
                MKV_DATA char  data_chars[16]   = "eiogbalwcmytpdh";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2e14, // 0.180000 
                    0x28f6, // 0.160000 
                    0x1eb8, // 0.120000 
                    0x199a, // 0.100000 
                    0x147b, // 0.080000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // ost
            case 0x0074736f:
            {
                MKV_DATA char  data_chars[12]   = "oehlwacibfr";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5c99, // 0.361702 
                    0x46cf, // 0.276596 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // osu
            case 0x0075736f:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osv
            case 0x0076736f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // osw
            case 0x0077736f:
            {
                MKV_DATA char  data_chars[6]   = "ieoay";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // osy
            case 0x0079736f:
            {
                MKV_DATA char  data_chars[3]   = "gt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ota
            case 0x0061746f:
            {
                MKV_DATA char  data_chars[5]   = "slnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // otb
            case 0x0062746f:
            {
                MKV_DATA char  data_chars[4]   = "yru";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // otc
            case 0x0063746f:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ote
            case 0x0065746f:
            {
                MKV_DATA char  data_chars[7]   = "srlnbh";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa5a6, // 0.647059 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // otf
            case 0x0066746f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otg
            case 0x0067746f:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oth
            case 0x0068746f:
            {
                MKV_DATA char  data_chars[14]   = "eaisbwoylfgdv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x7a18, // 0.476923 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // oti
            case 0x0069746f:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otl
            case 0x006c746f:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa492, // 0.642857 
                    0x4925, // 0.285714 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // otm
            case 0x006d746f:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // otn
            case 0x006e746f:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oto
            case 0x006f746f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otr
            case 0x0072746f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ots
            case 0x0073746f:
            {
                MKV_DATA char  data_chars[10]   = "hwflbgptk";
                MKV_DATA uint16_t data_weights[9] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ott
            case 0x0074746f:
            {
                MKV_DATA char  data_chars[11]   = "eoilsrawhy";
                MKV_DATA uint16_t data_weights[10] = {
                    0x6aab, // 0.416667 
                    0x2aab, // 0.166667 
                    0x24d9, // 0.143939 
                    0x1b27, // 0.106061 
                    0x1746, // 0.090909 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // otu
            case 0x0075746f:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // otw
            case 0x0077746f:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oub
            case 0x0062756f:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ouc
            case 0x0063756f:
            {
                MKV_DATA char  data_chars[4]   = "hes";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb13b, // 0.692308 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oud
            case 0x0064756f:
            {
                MKV_DATA char  data_chars[7]   = "ehlswy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oug
            case 0x0067756f:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfea9, // 0.994764 
                    0x0157, // 0.005236 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oul
            case 0x006c756f:
            {
                MKV_DATA char  data_chars[11]   = "dtsbrcfgmn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x521d, // 0.320755 
                    0x439f, // 0.264151 
                    0x39f6, // 0.226415 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // oun
            case 0x006e756f:
            {
                MKV_DATA char  data_chars[5]   = "dtsg";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x1666, // 0.087500 
                    0x099a, // 0.037500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oup
            case 0x0070756f:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // our
            case 0x0072756f:
            {
                MKV_DATA char  data_chars[11]   = "ntslpabgim";
                MKV_DATA uint16_t data_weights[10] = {
                    0xc07f, // 0.751938 
                    0x25b5, // 0.147287 
                    0x09ec, // 0.038760 
                    0x03f8, // 0.015504 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ous
            case 0x0073756f:
            {
                MKV_DATA char  data_chars[7]   = "eltdhb";
                MKV_DATA uint16_t data_weights[6] = {
                    0xdaf3, // 0.855263 
                    0x0a1b, // 0.039474 
                    0x0a1b, // 0.039474 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x035e, // 0.013158 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // out
            case 0x0074756f:
            {
                MKV_DATA char  data_chars[11]   = "hwseblacgm";
                MKV_DATA uint16_t data_weights[10] = {
                    0xdf1f, // 0.871560 
                    0x0965, // 0.036697 
                    0x04b2, // 0.018349 
                    0x04b2, // 0.018349 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                    0x0259, // 0.009174 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ova
            case 0x0061766f:
            {
                MKV_DATA char  data_chars[6]   = "tclns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ove
            case 0x0065766f:
            {
                MKV_DATA char  data_chars[10]   = "rntsyhlcd";
                MKV_DATA uint16_t data_weights[9] = {
                    0xb595, // 0.709302 
                    0x1dc4, // 0.116279 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x08ee, // 0.034884 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x02fa, // 0.011628 
                    0x02fa, // 0.011628 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ovi
            case 0x0069766f:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ovo
            case 0x006f766f:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owa
            case 0x0061776f:
            {
                MKV_DATA char  data_chars[6]   = "nrysh";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6bca, // 0.421053 
                    0x435e, // 0.263158 
                    0x35e5, // 0.210526 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // owb
            case 0x0062776f:
            {
                MKV_DATA char  data_chars[8]   = "reauioy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6492, // 0.392857 
                    0x2db7, // 0.178571 
                    0x2db7, // 0.178571 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // owc
            case 0x0063776f:
            {
                MKV_DATA char  data_chars[7]   = "roaehl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // owd
            case 0x0064776f:
            {
                MKV_DATA char  data_chars[7]   = "eohlya";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa529, // 0.645161 
                    0x2108, // 0.129032 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // owe
            case 0x0065776f:
            {
                MKV_DATA char  data_chars[10]   = "rslntdyfg";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6a57, // 0.415385 
                    0x2f43, // 0.184615 
                    0x2372, // 0.138462 
                    0x17a1, // 0.092308 
                    0x13b1, // 0.076923 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // owf
            case 0x0066776f:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8889, // 0.533333 
                    0x7777, // 0.466667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owg
            case 0x0067776f:
            {
                MKV_DATA char  data_chars[4]   = "ari";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9555, // 0.583333 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // owh
            case 0x0068776f:
            {
                MKV_DATA char  data_chars[6]   = "iouae";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // owi
            case 0x0069776f:
            {
                MKV_DATA char  data_chars[5]   = "cnta";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // owk
            case 0x006b776f:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owl
            case 0x006c776f:
            {
                MKV_DATA char  data_chars[13]   = "eaiostydhpcm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x9697, // 0.588235 
                    0x21e2, // 0.132353 
                    0x1a5a, // 0.102941 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // owm
            case 0x006d776f:
            {
                MKV_DATA char  data_chars[4]   = "abo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // own
            case 0x006e776f:
            {
                MKV_DATA char  data_chars[14]   = "shetlabgifpdw";
                MKV_DATA uint16_t data_weights[13] = {
                    0x4000, // 0.250000 
                    0x3777, // 0.216667 
                    0x2666, // 0.150000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // owo
            case 0x006f776f:
            {
                MKV_DATA char  data_chars[3]   = "ob";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owp
            case 0x0070776f:
            {
                MKV_DATA char  data_chars[5]   = "eloi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // owr
            case 0x0072776f:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ows
            case 0x0073776f:
            {
                MKV_DATA char  data_chars[11]   = "thledobgmn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3c3c, // 0.235294 
                    0x34b5, // 0.205882 
                    0x34b5, // 0.205882 
                    0x25a6, // 0.147059 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // owt
            case 0x0074776f:
            {
                MKV_DATA char  data_chars[6]   = "ohsei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x5174, // 0.318182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // owu
            case 0x0075776f:
            {
                MKV_DATA char  data_chars[3]   = "pe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // owy
            case 0x0079776f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxa
            case 0x0061786f:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxb
            case 0x0062786f:
            {
                MKV_DATA char  data_chars[7]   = "uoyaer";
                MKV_DATA uint16_t data_weights[6] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // oxc
            case 0x0063786f:
            {
                MKV_DATA char  data_chars[4]   = "olr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oxd
            case 0x0064786f:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oxe
            case 0x0065786f:
            {
                MKV_DATA char  data_chars[5]   = "ntay";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9555, // 0.583333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // oxf
            case 0x0066786f:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxg
            case 0x0067786f:
            {
                return 'r';
            }
            break;

            // oxh
            case 0x0068786f:
            {
                MKV_DATA char  data_chars[6]   = "ioaeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // oxl
            case 0x006c786f:
            {
                MKV_DATA char  data_chars[4]   = "eoy";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oxm
            case 0x006d786f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxn
            case 0x006e786f:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxp
            case 0x0070786f:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxs
            case 0x0073786f:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oxt
            case 0x0074786f:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa666, // 0.650000 
                    0x4ccd, // 0.300000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oxw
            case 0x0077786f:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oya
            case 0x0061796f:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyc
            case 0x0063796f:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyd
            case 0x0064796f:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyf
            case 0x0066796f:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyl
            case 0x006c796f:
            {
                MKV_DATA char  data_chars[4]   = "eas";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oyn
            case 0x006e796f:
            {
                MKV_DATA char  data_chars[4]   = "tei";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oys
            case 0x0073796f:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // oyt
            case 0x0074796f:
            {
                MKV_DATA char  data_chars[4]   = "eoh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // oze
            case 0x00657a6f:
            {
                MKV_DATA char  data_chars[5]   = "nalw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ozl
            case 0x006c7a6f:
            {
                return 'e';
            }
            break;

            // ozz
            case 0x007a7a6f:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // o
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'p':
        {
            switch ( trigram_u32 )
            {
            // pac
            case 0x00636170:
            {
                MKV_DATA char  data_chars[5]   = "koeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pad
            case 0x00646170:
            {
                MKV_DATA char  data_chars[10]   = "dsibfglwh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // paf
            case 0x00666170:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pag
            case 0x00676170:
            {
                MKV_DATA char  data_chars[6]   = "eahln";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pai
            case 0x00696170:
            {
                MKV_DATA char  data_chars[4]   = "ngl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pak
            case 0x006b6170:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pal
            case 0x006c6170:
            {
                MKV_DATA char  data_chars[9]   = "lmeadfgt";
                MKV_DATA uint16_t data_weights[8] = {
                    0x44ec, // 0.269231 
                    0x3b14, // 0.230769 
                    0x313b, // 0.192308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pam
            case 0x006d6170:
            {
                MKV_DATA char  data_chars[4]   = "pib";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pan
            case 0x006e6170:
            {
                MKV_DATA char  data_chars[13]   = "tcsbefikpgnx";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // pap
            case 0x00706170:
            {
                MKV_DATA char  data_chars[6]   = "celpw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // par
            case 0x00726170:
            {
                MKV_DATA char  data_chars[16]   = "ksrdtnalhcibmwv";
                MKV_DATA uint16_t data_weights[15] = {
                    0x63be, // 0.389610 
                    0x1a99, // 0.103896 
                    0x1746, // 0.090909 
                    0x10a0, // 0.064935 
                    0x10a0, // 0.064935 
                    0x0d4c, // 0.051948 
                    0x09f9, // 0.038961 
                    0x09f9, // 0.038961 
                    0x09f9, // 0.038961 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x06a6, // 0.025974 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                    0x0353, // 0.012987 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // pas
            case 0x00736170:
            {
                MKV_DATA char  data_chars[4]   = "stf";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pat
            case 0x00746170:
            {
                MKV_DATA char  data_chars[10]   = "hctreimns";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4d93, // 0.303030 
                    0x364e, // 0.212121 
                    0x2e8c, // 0.181818 
                    0x1f08, // 0.121212 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // pau
            case 0x00756170:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pav
            case 0x00766170:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // paw
            case 0x00776170:
            {
                MKV_DATA char  data_chars[4]   = "lst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pax
            case 0x00786170:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pay
            case 0x00796170:
            {
                MKV_DATA char  data_chars[5]   = "ntdh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pbo
            case 0x006f6270:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pbr
            case 0x00726270:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pbu
            case 0x00756270:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pca
            case 0x00616370:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pch
            case 0x00686370:
            {
                MKV_DATA char  data_chars[4]   = "eiu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pcl
            case 0x006c6370:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pco
            case 0x006f6370:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pcr
            case 0x00726370:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pcu
            case 0x00756370:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pda
            case 0x00616470:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pde
            case 0x00656470:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pdh
            case 0x00686470:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pdo
            case 0x006f6470:
            {
                MKV_DATA char  data_chars[3]   = "wc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pdr
            case 0x00726470:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pea
            case 0x00616570:
            {
                MKV_DATA char  data_chars[8]   = "srcntku";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5847, // 0.344828 
                    0x34f7, // 0.206897 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // peb
            case 0x00626570:
            {
                MKV_DATA char  data_chars[6]   = "suwem";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pec
            case 0x00636570:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ped
            case 0x00646570:
            {
                MKV_DATA char  data_chars[7]   = "alnwhm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pee
            case 0x00656570:
            {
                MKV_DATA char  data_chars[4]   = "ndl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pef
            case 0x00666570:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // peg
            case 0x00676570:
            {
                MKV_DATA char  data_chars[4]   = "sgw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // peh
            case 0x00686570:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pek
            case 0x006b6570:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pel
            case 0x006c6570:
            {
                MKV_DATA char  data_chars[12]   = "tshladyiegu";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // pem
            case 0x006d6570:
            {
                MKV_DATA char  data_chars[3]   = "bp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pen
            case 0x006e6570:
            {
                MKV_DATA char  data_chars[19]   = "nhdtscgwpkrbemqazy";
                MKV_DATA uint16_t data_weights[18] = {
                    0x28ba, // 0.159091 
                    0x24d9, // 0.143939 
                    0x1f08, // 0.121212 
                    0x1936, // 0.098485 
                    0x1936, // 0.098485 
                    0x0f84, // 0.060606 
                    0x0d93, // 0.053030 
                    0x0d93, // 0.053030 
                    0x0ba3, // 0.045455 
                    0x09b2, // 0.037879 
                    0x09b2, // 0.037879 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x03e1, // 0.015152 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                    0x01f0, // 0.007576 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // peo
            case 0x006f6570:
            {
                MKV_DATA char  data_chars[4]   = "prv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pep
            case 0x00706570:
            {
                MKV_DATA char  data_chars[3]   = "pe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // per
            case 0x00726570:
            {
                MKV_DATA char  data_chars[16]   = "strlndckfmhigbw";
                MKV_DATA uint16_t data_weights[15] = {
                    0x41fb, // 0.257732 
                    0x34c9, // 0.206186 
                    0x2f81, // 0.185567 
                    0x1279, // 0.072165 
                    0x0d32, // 0.051546 
                    0x0a8f, // 0.041237 
                    0x0a8f, // 0.041237 
                    0x07eb, // 0.030928 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x0547, // 0.020619 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // pes
            case 0x00736570:
            {
                MKV_DATA char  data_chars[8]   = "tabfghw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pet
            case 0x00746570:
            {
                MKV_DATA char  data_chars[10]   = "hterciosw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x471c, // 0.277778 
                    0x471c, // 0.277778 
                    0x4000, // 0.250000 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // pev
            case 0x00766570:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pew
            case 0x00776570:
            {
                MKV_DATA char  data_chars[6]   = "efost";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pex
            case 0x00786570:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfi
            case 0x00696670:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfl
            case 0x006c6670:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfo
            case 0x006f6670:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pfy
            case 0x00796670:
            {
                MKV_DATA char  data_chars[3]   = "ld";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pga
            case 0x00616770:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pgi
            case 0x00696770:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pgo
            case 0x006f6770:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pha
            case 0x00616870:
            {
                MKV_DATA char  data_chars[6]   = "mnlry";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb555, // 0.708333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // phe
            case 0x00656870:
            {
                MKV_DATA char  data_chars[8]   = "anrmopt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // phi
            case 0x00696870:
            {
                MKV_DATA char  data_chars[4]   = "lna";
                MKV_DATA uint16_t data_weights[3] = {
                    0xca1b, // 0.789474 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // phl
            case 0x006c6870:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pho
            case 0x006f6870:
            {
                MKV_DATA char  data_chars[5]   = "ceou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // phr
            case 0x00726870:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pia
            case 0x00616970:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pib
            case 0x00626970:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pic
            case 0x00636970:
            {
                MKV_DATA char  data_chars[6]   = "ketca";
                MKV_DATA uint16_t data_weights[5] = {
                    0xae8c, // 0.681818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pid
            case 0x00646970:
            {
                MKV_DATA char  data_chars[5]   = "dngl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pie
            case 0x00656970:
            {
                MKV_DATA char  data_chars[4]   = "rcl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pif
            case 0x00666970:
            {
                MKV_DATA char  data_chars[3]   = "fe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pig
            case 0x00676970:
            {
                MKV_DATA char  data_chars[5]   = "ohsd";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pik
            case 0x006b6970:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pil
            case 0x006c6970:
            {
                MKV_DATA char  data_chars[9]   = "lsthefgn";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8000, // 0.500000 
                    0x2db7, // 0.178571 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pim
            case 0x006d6970:
            {
                MKV_DATA char  data_chars[4]   = "hlp";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pin
            case 0x006e6970:
            {
                MKV_DATA char  data_chars[14]   = "gknfcsewlhdxv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x83e1, // 0.515152 
                    0x1746, // 0.090909 
                    0x1365, // 0.075758 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // pio
            case 0x006f6970:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pip
            case 0x00706970:
            {
                MKV_DATA char  data_chars[4]   = "eps";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pir
            case 0x00726970:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pis
            case 0x00736970:
            {
                MKV_DATA char  data_chars[6]   = "hbcft";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pit
            case 0x00746970:
            {
                MKV_DATA char  data_chars[9]   = "stcayhmn";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5333, // 0.325000 
                    0x4000, // 0.250000 
                    0x2ccd, // 0.175000 
                    0x199a, // 0.100000 
                    0x1333, // 0.075000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pix
            case 0x00786970:
            {
                MKV_DATA char  data_chars[4]   = "hlw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // piz
            case 0x007a6970:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pki
            case 0x00696b70:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pky
            case 0x00796b70:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pla
            case 0x00616c70:
            {
                MKV_DATA char  data_chars[11]   = "intysrckwx";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3678, // 0.212766 
                    0x3678, // 0.212766 
                    0x2b93, // 0.170213 
                    0x20ae, // 0.127660 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ple
            case 0x00656c70:
            {
                MKV_DATA char  data_chars[17]   = "ystahdfcmbrgwnpi";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4990, // 0.287356 
                    0x234f, // 0.137931 
                    0x205e, // 0.126437 
                    0x1499, // 0.080460 
                    0x11a8, // 0.068966 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // pli
            case 0x00696c70:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // plo
            case 0x006f6c70:
            {
                MKV_DATA char  data_chars[7]   = "wdxetu";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // plu
            case 0x00756c70:
            {
                MKV_DATA char  data_chars[7]   = "mscndg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7333, // 0.450000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ply
            case 0x00796c70:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pma
            case 0x00616d70:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pme
            case 0x00656d70:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pmi
            case 0x00696d70:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pmo
            case 0x006f6d70:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pna
            case 0x00616e70:
            {
                MKV_DATA char  data_chars[4]   = "lsg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pne
            case 0x00656e70:
            {
                MKV_DATA char  data_chars[5]   = "ytrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pno
            case 0x006f6e70:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poc
            case 0x00636f70:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pod
            case 0x00646f70:
            {
                MKV_DATA char  data_chars[5]   = "imse";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pof
            case 0x00666f70:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pog
            case 0x00676f70:
            {
                MKV_DATA char  data_chars[3]   = "eg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poi
            case 0x00696f70:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pok
            case 0x006b6f70:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pol
            case 0x006c6f70:
            {
                MKV_DATA char  data_chars[17]   = "elmpsgbtyozikdwr";
                MKV_DATA uint16_t data_weights[16] = {
                    0x589e, // 0.346154 
                    0x2276, // 0.134615 
                    0x13b1, // 0.076923 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x0ec5, // 0.057692 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                    0x04ec, // 0.019231 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // pom
            case 0x006d6f70:
            {
                MKV_DATA char  data_chars[3]   = "ep";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pon
            case 0x006e6f70:
            {
                MKV_DATA char  data_chars[6]   = "tdsij";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6800, // 0.406250 
                    0x6000, // 0.375000 
                    0x2800, // 0.156250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // poo
            case 0x006f6f70:
            {
                MKV_DATA char  data_chars[6]   = "lnkrt";
                MKV_DATA uint16_t data_weights[5] = {
                    0xe23c, // 0.883721 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pop
            case 0x00706f70:
            {
                MKV_DATA char  data_chars[5]   = "leph";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // por
            case 0x00726f70:
            {
                MKV_DATA char  data_chars[6]   = "tlcik";
                MKV_DATA uint16_t data_weights[5] = {
                    0xe3e7, // 0.890244 
                    0x0c7d, // 0.048780 
                    0x095e, // 0.036585 
                    0x031f, // 0.012195 
                    0x031f, // 0.012195 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pos
            case 0x00736f70:
            {
                MKV_DATA char  data_chars[5]   = "tlbe";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc000, // 0.750000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pot
            case 0x00746f70:
            {
                MKV_DATA char  data_chars[7]   = "tsablm";
                MKV_DATA uint16_t data_weights[6] = {
                    0xaaab, // 0.666667 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pou
            case 0x00756f70:
            {
                MKV_DATA char  data_chars[5]   = "nlcg";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbca2, // 0.736842 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pov
            case 0x00766f70:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pow
            case 0x00776f70:
            {
                MKV_DATA char  data_chars[8]   = "denhilb";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pox
            case 0x00786f70:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // poy
            case 0x00796f70:
            {
                MKV_DATA char  data_chars[4]   = "nls";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ppa
            case 0x00617070:
            {
                MKV_DATA char  data_chars[5]   = "chrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ppe
            case 0x00657070:
            {
                MKV_DATA char  data_chars[6]   = "rnstl";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb000, // 0.687500 
                    0x3aab, // 0.229167 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ppi
            case 0x00697070:
            {
                MKV_DATA char  data_chars[5]   = "ntcs";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc4ec, // 0.769231 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ppl
            case 0x006c7070:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppo
            case 0x006f7070:
            {
                MKV_DATA char  data_chars[5]   = "owln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ppp
            case 0x00707070:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppr
            case 0x00727070:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ppu
            case 0x00757070:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pra
            case 0x00617270:
            {
                MKV_DATA char  data_chars[6]   = "twzah";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pre
            case 0x00657270:
            {
                MKV_DATA char  data_chars[8]   = "setnyad";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8889, // 0.533333 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // pri
            case 0x00697270:
            {
                MKV_DATA char  data_chars[12]   = "nedomscgxtv";
                MKV_DATA uint16_t data_weights[11] = {
                    0x745d, // 0.454545 
                    0x1bed, // 0.109091 
                    0x1bed, // 0.109091 
                    0x1746, // 0.090909 
                    0x0df7, // 0.054545 
                    0x0df7, // 0.054545 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // pro
            case 0x006f7270:
            {
                MKV_DATA char  data_chars[7]   = "swbuvx";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // pru
            case 0x00757270:
            {
                MKV_DATA char  data_chars[4]   = "nsd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // psa
            case 0x00617370:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psb
            case 0x00627370:
            {
                MKV_DATA char  data_chars[4]   = "ruo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // psc
            case 0x00637370:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psd
            case 0x00647370:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pse
            case 0x00657370:
            {
                MKV_DATA char  data_chars[3]   = "yt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psf
            case 0x00667370:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8e39, // 0.555556 
                    0x71c7, // 0.444444 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psg
            case 0x00677370:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psh
            case 0x00687370:
            {
                MKV_DATA char  data_chars[6]   = "iaeoy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // psi
            case 0x00697370:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psl
            case 0x006c7370:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // psn
            case 0x006e7370:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pso
            case 0x006f7370:
            {
                MKV_DATA char  data_chars[3]   = "nm";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pst
            case 0x00747370:
            {
                MKV_DATA char  data_chars[5]   = "oear";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7aab, // 0.479167 
                    0x7000, // 0.437500 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // psw
            case 0x00777370:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pta
            case 0x00617470:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ptf
            case 0x00667470:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pth
            case 0x00687470:
            {
                MKV_DATA char  data_chars[6]   = "oiwau";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9555, // 0.583333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pti
            case 0x00697470:
            {
                MKV_DATA char  data_chars[5]   = "dnsv";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pto
            case 0x006f7470:
            {
                MKV_DATA char  data_chars[6]   = "nwfer";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf507, // 0.957143 
                    0x03a8, // 0.014286 
                    0x03a8, // 0.014286 
                    0x01d4, // 0.007143 
                    0x01d4, // 0.007143 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ptr
            case 0x00727470:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ptw
            case 0x00777470:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pub
            case 0x00627570:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // puc
            case 0x00637570:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pud
            case 0x00647570:
            {
                MKV_DATA char  data_chars[3]   = "dl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd89e, // 0.846154 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pue
            case 0x00657570:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pui
            case 0x00697570:
            {
                MKV_DATA char  data_chars[3]   = "zc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pul
            case 0x006c7570:
            {
                MKV_DATA char  data_chars[9]   = "lbfhdesv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7627, // 0.461538 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // pun
            case 0x006e7570:
            {
                MKV_DATA char  data_chars[5]   = "chnt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pur
            case 0x00727570:
            {
                MKV_DATA char  data_chars[13]   = "lsytbcfheinw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1b6e, // 0.107143 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // pus
            case 0x00737570:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // put
            case 0x00747570:
            {
                MKV_DATA char  data_chars[6]   = "tslnf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // pux
            case 0x00787570:
            {
                MKV_DATA char  data_chars[4]   = "elt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pvi
            case 0x00697670:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwa
            case 0x00617770:
            {
                MKV_DATA char  data_chars[5]   = "yslr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // pwe
            case 0x00657770:
            {
                MKV_DATA char  data_chars[4]   = "lya";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd89e, // 0.846154 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pwi
            case 0x00697770:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwo
            case 0x006f7770:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xba2f, // 0.727273 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pwy
            case 0x00797770:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyc
            case 0x00637970:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pye
            case 0x00657970:
            {
                MKV_DATA char  data_chars[4]   = "wac";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pyl
            case 0x006c7970:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pym
            case 0x006d7970:
            {
                MKV_DATA char  data_chars[3]   = "om";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyn
            case 0x006e7970:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyo
            case 0x006f7970:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyp
            case 0x00707970:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyr
            case 0x00727970:
            {
                MKV_DATA char  data_chars[4]   = "flt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // pyt
            case 0x00747970:
            {
                MKV_DATA char  data_chars[3]   = "ch";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // pyw
            case 0x00777970:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // p
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'q':
        {
            switch ( trigram_u32 )
            {
            // qua
            case 0x00617571:
            {
                MKV_DATA char  data_chars[11]   = "rybtgiklnd";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7555, // 0.458333 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // que
            case 0x00657571:
            {
                MKV_DATA char  data_chars[9]   = "ernsdbtm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3555, // 0.208333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // qui
            case 0x00697571:
            {
                MKV_DATA char  data_chars[8]   = "ndtcorx";
                MKV_DATA uint16_t data_weights[7] = {
                    0x638e, // 0.388889 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // quo
            case 0x006f7571:
            {
                MKV_DATA char  data_chars[4]   = "rid";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // q
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'r':
        {
            switch ( trigram_u32 )
            {
            // rab
            case 0x00626172:
            {
                MKV_DATA char  data_chars[11]   = "yborlsgntu";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4925, // 0.285714 
                    0x3cf4, // 0.238095 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rac
            case 0x00636172:
            {
                MKV_DATA char  data_chars[6]   = "keorc";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8889, // 0.533333 
                    0x4444, // 0.266667 
                    0x27d2, // 0.155556 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rad
            case 0x00646172:
            {
                MKV_DATA char  data_chars[16]   = "lwdsnfeibmcovap";
                MKV_DATA uint16_t data_weights[15] = {
                    0x2000, // 0.125000 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x18e4, // 0.097222 
                    0x1555, // 0.083333 
                    0x11c7, // 0.069444 
                    0x11c7, // 0.069444 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // rae
            case 0x00656172:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // raf
            case 0x00666172:
            {
                MKV_DATA char  data_chars[6]   = "tfbhi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rag
            case 0x00676172:
            {
                MKV_DATA char  data_chars[11]   = "ehgbnodilm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rah
            case 0x00686172:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rai
            case 0x00696172:
            {
                MKV_DATA char  data_chars[7]   = "nsgltm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7c8a, // 0.486486 
                    0x2983, // 0.162162 
                    0x2298, // 0.135135 
                    0x1bad, // 0.108108 
                    0x14c2, // 0.081081 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rak
            case 0x006b6172:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ral
            case 0x006c6172:
            {
                MKV_DATA char  data_chars[6]   = "letap";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ram
            case 0x006d6172:
            {
                MKV_DATA char  data_chars[14]   = "splfbiewodcha";
                MKV_DATA uint16_t data_weights[13] = {
                    0x638e, // 0.388889 
                    0x2f68, // 0.185185 
                    0x17b4, // 0.092593 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ran
            case 0x006e6172:
            {
                MKV_DATA char  data_chars[20]   = "dstgkbcwmefhlapuzxo";
                MKV_DATA uint16_t data_weights[19] = {
                    0x3399, // 0.201550 
                    0x23b9, // 0.139535 
                    0x21bd, // 0.131783 
                    0x1dc4, // 0.116279 
                    0x13d8, // 0.077519 
                    0x11dc, // 0.069767 
                    0x0fe0, // 0.062016 
                    0x0be8, // 0.046512 
                    0x07f0, // 0.031008 
                    0x05f4, // 0.023256 
                    0x03f8, // 0.015504 
                    0x03f8, // 0.015504 
                    0x03f8, // 0.015504 
                    0x03f8, // 0.015504 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                    0x01fc, // 0.007752 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // rap
            case 0x00706172:
            {
                MKV_DATA char  data_chars[6]   = "sptek";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rar
            case 0x00726172:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ras
            case 0x00736172:
            {
                MKV_DATA char  data_chars[10]   = "sthwebcfm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x745d, // 0.454545 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rat
            case 0x00746172:
            {
                MKV_DATA char  data_chars[12]   = "tolfcebsirw";
                MKV_DATA uint16_t data_weights[11] = {
                    0x512c, // 0.317073 
                    0x2577, // 0.146341 
                    0x1f38, // 0.121951 
                    0x1f38, // 0.121951 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rau
            case 0x00756172:
            {
                MKV_DATA char  data_chars[4]   = "ngc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rav
            case 0x00766172:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0xece5, // 0.925373 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // raw
            case 0x00776172:
            {
                MKV_DATA char  data_chars[12]   = "lbsracndfgt";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rax
            case 0x00786172:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ray
            case 0x00796172:
            {
                MKV_DATA char  data_chars[13]   = "sfnctlmdiwrb";
                MKV_DATA uint16_t data_weights[12] = {
                    0x43c4, // 0.264706 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // raz
            case 0x007a6172:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rba
            case 0x00616272:
            {
                MKV_DATA char  data_chars[7]   = "rctgny";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rbe
            case 0x00656272:
            {
                MKV_DATA char  data_chars[6]   = "rctna";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3000, // 0.187500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rbi
            case 0x00696272:
            {
                MKV_DATA char  data_chars[5]   = "stce";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rbl
            case 0x006c6272:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rbo
            case 0x006f6272:
            {
                MKV_DATA char  data_chars[8]   = "rulnyct";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7507, // 0.457143 
                    0x57c5, // 0.342857 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rbr
            case 0x00726272:
            {
                MKV_DATA char  data_chars[5]   = "ioey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7b96, // 0.482759 
                    0x611a, // 0.379310 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rbs
            case 0x00736272:
            {
                MKV_DATA char  data_chars[3]   = "tb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rbu
            case 0x00756272:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rby
            case 0x00796272:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rca
            case 0x00616372:
            {
                MKV_DATA char  data_chars[5]   = "srln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rce
            case 0x00656372:
            {
                MKV_DATA char  data_chars[6]   = "slbtw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rch
            case 0x00686372:
            {
                MKV_DATA char  data_chars[17]   = "eaifswdoutglbmyh";
                MKV_DATA uint16_t data_weights[16] = {
                    0x40f5, // 0.253731 
                    0x2a08, // 0.164179 
                    0x1abf, // 0.104478 
                    0x16ed, // 0.089552 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // rci
            case 0x00696372:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rcl
            case 0x006c6372:
            {
                MKV_DATA char  data_chars[5]   = "oaie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rco
            case 0x006f6372:
            {
                MKV_DATA char  data_chars[9]   = "tmuporsa";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7ce1, // 0.487805 
                    0x4aed, // 0.292683 
                    0x12bb, // 0.073171 
                    0x0c7d, // 0.048780 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rcr
            case 0x00726372:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rcu
            case 0x00756372:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rda
            case 0x00616472:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x3333, // 0.200000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rdb
            case 0x00626472:
            {
                MKV_DATA char  data_chars[5]   = "ryue";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rdc
            case 0x00636472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rde
            case 0x00656472:
            {
                MKV_DATA char  data_chars[8]   = "nrswlae";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb3bf, // 0.702128 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rdf
            case 0x00666472:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdg
            case 0x00676472:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdh
            case 0x00686472:
            {
                MKV_DATA char  data_chars[6]   = "aoeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rdi
            case 0x00696472:
            {
                MKV_DATA char  data_chars[7]   = "nstfwm";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa8da, // 0.659574 
                    0x3678, // 0.212766 
                    0x0ae5, // 0.042553 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rdl
            case 0x006c6472:
            {
                MKV_DATA char  data_chars[6]   = "eoaiy";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc859, // 0.782609 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rdm
            case 0x006d6472:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdn
            case 0x006e6472:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdo
            case 0x006f6472:
            {
                MKV_DATA char  data_chars[6]   = "nwclu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9d8a, // 0.615385 
                    0x44ec, // 0.269231 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rdr
            case 0x00726472:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rds
            case 0x00736472:
            {
                MKV_DATA char  data_chars[12]   = "htlewabfgmp";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4bda, // 0.296296 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rdt
            case 0x00746472:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdu
            case 0x00756472:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rdw
            case 0x00776472:
            {
                MKV_DATA char  data_chars[5]   = "oiea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rdy
            case 0x00796472:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rea
            case 0x00616572:
            {
                MKV_DATA char  data_chars[17]   = "tdvmskcnulpgybwr";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1e7a, // 0.119048 
                    0x1555, // 0.083333 
                    0x1249, // 0.071429 
                    0x0f3d, // 0.059524 
                    0x0c31, // 0.047619 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // reb
            case 0x00626572:
            {
                MKV_DATA char  data_chars[10]   = "uyareobil";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4aab, // 0.291667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rec
            case 0x00636572:
            {
                MKV_DATA char  data_chars[9]   = "khuctalo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // red
            case 0x00646572:
            {
                MKV_DATA char  data_chars[20]   = "ebimoldwhafygscrtvn";
                MKV_DATA uint16_t data_weights[19] = {
                    0x1eb8, // 0.120000 
                    0x17e5, // 0.093333 
                    0x17e5, // 0.093333 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // ree
            case 0x00656572:
            {
                MKV_DATA char  data_chars[17]   = "ntdskzvlbgmchfwp";
                MKV_DATA uint16_t data_weights[16] = {
                    0x855e, // 0.520958 
                    0x3296, // 0.197605 
                    0x13ee, // 0.077844 
                    0x0abb, // 0.041916 
                    0x0abb, // 0.041916 
                    0x0499, // 0.017964 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0311, // 0.011976 
                    0x0188, // 0.005988 
                    0x0188, // 0.005988 
                    0x0188, // 0.005988 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // ref
            case 0x00666572:
            {
                MKV_DATA char  data_chars[7]   = "oirafl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // reg
            case 0x00676572:
            {
                MKV_DATA char  data_chars[8]   = "aoeiurs";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5726, // 0.340426 
                    0x4c41, // 0.297872 
                    0x20ae, // 0.127660 
                    0x15ca, // 0.085106 
                    0x15ca, // 0.085106 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // reh
            case 0x00686572:
            {
                MKV_DATA char  data_chars[6]   = "aeiou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x90b2, // 0.565217 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x2164, // 0.130435 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rei
            case 0x00696572:
            {
                MKV_DATA char  data_chars[4]   = "gns";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rej
            case 0x006a6572:
            {
                return 'e';
            }
            break;

            // rek
            case 0x006b6572:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rel
            case 0x006c6572:
            {
                MKV_DATA char  data_chars[10]   = "leiaoshku";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6fb6, // 0.436364 
                    0x29e4, // 0.163636 
                    0x2095, // 0.127273 
                    0x1bed, // 0.109091 
                    0x129e, // 0.072727 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rem
            case 0x006d6572:
            {
                MKV_DATA char  data_chars[8]   = "aoebhip";
                MKV_DATA uint16_t data_weights[7] = {
                    0x599a, // 0.350000 
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ren
            case 0x006e6572:
            {
                MKV_DATA char  data_chars[17]   = "tdciseaohzwgkbfn";
                MKV_DATA uint16_t data_weights[16] = {
                    0x33cf, // 0.202381 
                    0x33cf, // 0.202381 
                    0x2db7, // 0.178571 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0925, // 0.035714 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // reo
            case 0x006f6572:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rep
            case 0x00706572:
            {
                MKV_DATA char  data_chars[5]   = "polt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // req
            case 0x00716572:
            {
                return 'u';
            }
            break;

            // rer
            case 0x00726572:
            {
                MKV_DATA char  data_chars[6]   = "eiosu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // res
            case 0x00736572:
            {
                MKV_DATA char  data_chars[18]   = "tschfbalkwideopum";
                MKV_DATA uint16_t data_weights[17] = {
                    0x437e, // 0.263636 
                    0x253d, // 0.145455 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x104a, // 0.063636 
                    0x0df7, // 0.054545 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x094f, // 0.036364 
                    0x094f, // 0.036364 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x04a8, // 0.018182 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                    0x0254, // 0.009091 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ret
            case 0x00746572:
            {
                MKV_DATA char  data_chars[12]   = "htofsiceaub";
                MKV_DATA uint16_t data_weights[11] = {
                    0x46e4, // 0.276923 
                    0x3b14, // 0.230769 
                    0x3723, // 0.215385 
                    0x0fc1, // 0.061538 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                    0x03f0, // 0.015385 
                    0x03f0, // 0.015385 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rev
            case 0x00766572:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x69bd, // 0.413043 
                    0x3d38, // 0.239130 
                    0x37a7, // 0.217391 
                    0x2164, // 0.130435 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rew
            case 0x00776572:
            {
                MKV_DATA char  data_chars[12]   = "eoaisthklyg";
                MKV_DATA uint16_t data_weights[11] = {
                    0x471c, // 0.277778 
                    0x425f, // 0.259259 
                    0x25ed, // 0.148148 
                    0x17b4, // 0.092593 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rex
            case 0x00786572:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rey
            case 0x00796572:
            {
                MKV_DATA char  data_chars[12]   = "sfltwnhambd";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5174, // 0.318182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rez
            case 0x007a6572:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfa
            case 0x00616672:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfd
            case 0x00646672:
            {
                return 'o';
            }
            break;

            // rfe
            case 0x00656672:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfi
            case 0x00696672:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf7be, // 0.967742 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfl
            case 0x006c6672:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfm
            case 0x006d6672:
            {
                return 'o';
            }
            break;

            // rfo
            case 0x006f6672:
            {
                MKV_DATA char  data_chars[5]   = "rlou";
                MKV_DATA uint16_t data_weights[4] = {
                    0xeccd, // 0.925000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rfr
            case 0x00726672:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rft
            case 0x00746672:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rfu
            case 0x00756672:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rga
            case 0x00616772:
            {
                MKV_DATA char  data_chars[5]   = "trns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaf28, // 0.684211 
                    0x21af, // 0.131579 
                    0x21af, // 0.131579 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rge
            case 0x00656772:
            {
                MKV_DATA char  data_chars[7]   = "sehrty";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rgh
            case 0x00686772:
            {
                MKV_DATA char  data_chars[7]   = "aocefi";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rgi
            case 0x00696772:
            {
                MKV_DATA char  data_chars[6]   = "naels";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rgo
            case 0x006f6772:
            {
                MKV_DATA char  data_chars[6]   = "rseil";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rgr
            case 0x00726772:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rgu
            case 0x00756772:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rha
            case 0x00616872:
            {
                MKV_DATA char  data_chars[8]   = "mylnirs";
                MKV_DATA uint16_t data_weights[7] = {
                    0xb2b8, // 0.698113 
                    0x26a4, // 0.150943 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rhe
            case 0x00656872:
            {
                MKV_DATA char  data_chars[4]   = "ayw";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rhi
            case 0x00696872:
            {
                MKV_DATA char  data_chars[4]   = "lte";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe50d, // 0.894737 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rho
            case 0x006f6872:
            {
                MKV_DATA char  data_chars[7]   = "ulpdsn";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x313b, // 0.192308 
                    0x2762, // 0.153846 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rhu
            case 0x00756872:
            {
                MKV_DATA char  data_chars[5]   = "rdln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rhy
            case 0x00796872:
            {
                MKV_DATA char  data_chars[4]   = "dnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ria
            case 0x00616972:
            {
                MKV_DATA char  data_chars[5]   = "rnvl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8788, // 0.529412 
                    0x5a5a, // 0.352941 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rib
            case 0x00626972:
            {
                MKV_DATA char  data_chars[7]   = "bylcde";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ric
            case 0x00636972:
            {
                MKV_DATA char  data_chars[7]   = "kheora";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb852, // 0.720000 
                    0x2c60, // 0.173333 
                    0x1111, // 0.066667 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rid
            case 0x00646972:
            {
                MKV_DATA char  data_chars[12]   = "gdeilafspmw";
                MKV_DATA uint16_t data_weights[11] = {
                    0xe666, // 0.900000 
                    0x0710, // 0.027586 
                    0x046a, // 0.017241 
                    0x02a6, // 0.010345 
                    0x02a6, // 0.010345 
                    0x02a6, // 0.010345 
                    0x01c4, // 0.006897 
                    0x01c4, // 0.006897 
                    0x00e2, // 0.003448 
                    0x00e2, // 0.003448 
                    0x00e2, // 0.003448 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rie
            case 0x00656972:
            {
                MKV_DATA char  data_chars[7]   = "srtzul";
                MKV_DATA uint16_t data_weights[6] = {
                    0x70a4, // 0.440000 
                    0x51ec, // 0.320000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rif
            case 0x00666972:
            {
                MKV_DATA char  data_chars[5]   = "ftio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5b6e, // 0.357143 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rig
            case 0x00676972:
            {
                MKV_DATA char  data_chars[8]   = "ghsmbil";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8283, // 0.509804 
                    0x5050, // 0.313726 
                    0x1919, // 0.098039 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ril
            case 0x006c6972:
            {
                MKV_DATA char  data_chars[7]   = "lesafo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9697, // 0.588235 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rim
            case 0x006d6972:
            {
                MKV_DATA char  data_chars[13]   = "splebdiracfo";
                MKV_DATA uint16_t data_weights[12] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x16c1, // 0.088889 
                    0x1111, // 0.066667 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rin
            case 0x006e6972:
            {
                MKV_DATA char  data_chars[12]   = "gsdekcitaon";
                MKV_DATA uint16_t data_weights[11] = {
                    0xbba8, // 0.733032 
                    0x1038, // 0.063348 
                    0x0de7, // 0.054299 
                    0x0b95, // 0.045249 
                    0x0a6d, // 0.040724 
                    0x05cb, // 0.022624 
                    0x037a, // 0.013575 
                    0x0251, // 0.009050 
                    0x0251, // 0.009050 
                    0x0129, // 0.004525 
                    0x0129, // 0.004525 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // rio
            case 0x006f6972:
            {
                MKV_DATA char  data_chars[5]   = "rtnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rip
            case 0x00706972:
            {
                MKV_DATA char  data_chars[6]   = "peltn";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ris
            case 0x00736972:
            {
                MKV_DATA char  data_chars[14]   = "tehbslicokpwd";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1f08, // 0.121212 
                    0x1b27, // 0.106061 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0f84, // 0.060606 
                    0x0ba3, // 0.045455 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // rit
            case 0x00746972:
            {
                MKV_DATA char  data_chars[12]   = "htocaewlyfi";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x27d2, // 0.155556 
                    0x16c1, // 0.088889 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x0b61, // 0.044444 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // riv
            case 0x00766972:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xca1b, // 0.789474 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rix
            case 0x00786972:
            {
                MKV_DATA char  data_chars[7]   = "towbfh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // riz
            case 0x007a6972:
            {
                MKV_DATA char  data_chars[4]   = "ezi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rka
            case 0x00616b72:
            {
                MKV_DATA char  data_chars[3]   = "cm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkb
            case 0x00626b72:
            {
                MKV_DATA char  data_chars[6]   = "yreao";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rkc
            case 0x00636b72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkd
            case 0x00646b72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rke
            case 0x00656b72:
            {
                MKV_DATA char  data_chars[9]   = "nsrtlaey";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3d71, // 0.240000 
                    0x3d71, // 0.240000 
                    0x28f6, // 0.160000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rkf
            case 0x00666b72:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkg
            case 0x00676b72:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkh
            case 0x00686b72:
            {
                MKV_DATA char  data_chars[6]   = "aoieu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x68ba, // 0.409091 
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rki
            case 0x00696b72:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkl
            case 0x006c6b72:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4444, // 0.266667 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rkn
            case 0x006e6b72:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rko
            case 0x006f6b72:
            {
                MKV_DATA char  data_chars[3]   = "as";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rks
            case 0x00736b72:
            {
                MKV_DATA char  data_chars[9]   = "thwbeioa";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rkt
            case 0x00746b72:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rku
            case 0x00756b72:
            {
                MKV_DATA char  data_chars[3]   = "rg";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rkw
            case 0x00776b72:
            {
                MKV_DATA char  data_chars[7]   = "aehior";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rky
            case 0x00796b72:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rla
            case 0x00616c72:
            {
                MKV_DATA char  data_chars[11]   = "nswmykvbcx";
                MKV_DATA uint16_t data_weights[10] = {
                    0xa12f, // 0.629630 
                    0x212f, // 0.129630 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rlb
            case 0x00626c72:
            {
                MKV_DATA char  data_chars[6]   = "youer";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rlc
            case 0x00636c72:
            {
                MKV_DATA char  data_chars[4]   = "ulo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rld
            case 0x00646c72:
            {
                MKV_DATA char  data_chars[4]   = "osh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rle
            case 0x00656c72:
            {
                MKV_DATA char  data_chars[15]   = "ysitecbndgwmqa";
                MKV_DATA uint16_t data_weights[14] = {
                    0xa645, // 0.649485 
                    0x1fac, // 0.123711 
                    0x1bb6, // 0.108247 
                    0x093d, // 0.036082 
                    0x0699, // 0.025773 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                    0x0152, // 0.005155 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // rlf
            case 0x00666c72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlh
            case 0x00686c72:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rli
            case 0x00696c72:
            {
                MKV_DATA char  data_chars[10]   = "nescdfpga";
                MKV_DATA uint16_t data_weights[9] = {
                    0xbc15, // 0.734694 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rlo
            case 0x006f6c72:
            {
                MKV_DATA char  data_chars[13]   = "wcgnoexprsua";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5ed1, // 0.370370 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rlp
            case 0x00706c72:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rls
            case 0x00736c72:
            {
                MKV_DATA char  data_chars[7]   = "tcdfiw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rlt
            case 0x00746c72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlu
            case 0x00756c72:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rlw
            case 0x00776c72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rly
            case 0x00796c72:
            {
                MKV_DATA char  data_chars[3]   = "no";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rma
            case 0x00616d72:
            {
                MKV_DATA char  data_chars[6]   = "nrstc";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa3d7, // 0.640000 
                    0x28f6, // 0.160000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rmb
            case 0x00626d72:
            {
                MKV_DATA char  data_chars[4]   = "roy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rmc
            case 0x00636d72:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rme
            case 0x00656d72:
            {
                MKV_DATA char  data_chars[7]   = "ratlsg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6db7, // 0.428571 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rmh
            case 0x00686d72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmi
            case 0x00696d72:
            {
                MKV_DATA char  data_chars[5]   = "nltg";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rml
            case 0x006c6d72:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmo
            case 0x006f6d72:
            {
                MKV_DATA char  data_chars[8]   = "ounirse";
                MKV_DATA uint16_t data_weights[7] = {
                    0x589e, // 0.346154 
                    0x44ec, // 0.269231 
                    0x3b14, // 0.230769 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rmp
            case 0x00706d72:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rms
            case 0x00736d72:
            {
                MKV_DATA char  data_chars[9]   = "tdhgikbl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rmu
            case 0x00756d72:
            {
                MKV_DATA char  data_chars[3]   = "dc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rmw
            case 0x00776d72:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rna
            case 0x00616e72:
            {
                MKV_DATA char  data_chars[9]   = "rlcgbsnh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rnb
            case 0x00626e72:
            {
                MKV_DATA char  data_chars[6]   = "ryoul";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rnc
            case 0x00636e72:
            {
                MKV_DATA char  data_chars[7]   = "ohlrea";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rnd
            case 0x00646e72:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9000, // 0.562500 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rne
            case 0x00656e72:
            {
                MKV_DATA char  data_chars[13]   = "sytrlhbmnudf";
                MKV_DATA uint16_t data_weights[12] = {
                    0x40f5, // 0.253731 
                    0x3d22, // 0.238806 
                    0x2dda, // 0.179104 
                    0x2263, // 0.134328 
                    0x0f49, // 0.059701 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rnf
            case 0x00666e72:
            {
                MKV_DATA char  data_chars[4]   = "oia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x5b6e, // 0.357143 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rng
            case 0x00676e72:
            {
                MKV_DATA char  data_chars[3]   = "ir";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnh
            case 0x00686e72:
            {
                MKV_DATA char  data_chars[6]   = "aioeu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7943, // 0.473684 
                    0x3ca2, // 0.236842 
                    0x21af, // 0.131579 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rni
            case 0x00696e72:
            {
                MKV_DATA char  data_chars[7]   = "ncsael";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9612, // 0.586207 
                    0x34f7, // 0.206897 
                    0x1a7c, // 0.103448 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rnk
            case 0x006b6e72:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnl
            case 0x006c6e72:
            {
                MKV_DATA char  data_chars[4]   = "eay";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rnm
            case 0x006d6e72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rno
            case 0x006f6e72:
            {
                MKV_DATA char  data_chars[7]   = "ncleps";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5a5a, // 0.352941 
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rnr
            case 0x00726e72:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rns
            case 0x00736e72:
            {
                MKV_DATA char  data_chars[15]   = "tibeomapgcfhld";
                MKV_DATA uint16_t data_weights[14] = {
                    0x38e4, // 0.222222 
                    0x25ed, // 0.148148 
                    0x25ed, // 0.148148 
                    0x1c72, // 0.111111 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // rnt
            case 0x00746e72:
            {
                MKV_DATA char  data_chars[5]   = "ohcw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rnu
            case 0x00756e72:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnv
            case 0x00766e72:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rnw
            case 0x00776e72:
            {
                MKV_DATA char  data_chars[5]   = "oera";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9d8a, // 0.615385 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rny
            case 0x00796e72:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // roa
            case 0x00616f72:
            {
                MKV_DATA char  data_chars[7]   = "dnckst";
                MKV_DATA uint16_t data_weights[6] = {
                    0xcccd, // 0.800000 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x0bd1, // 0.046154 
                    0x07e0, // 0.030769 
                    0x07e0, // 0.030769 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rob
            case 0x00626f72:
            {
                MKV_DATA char  data_chars[7]   = "iuyeoh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // roc
            case 0x00636f72:
            {
                MKV_DATA char  data_chars[7]   = "kheost";
                MKV_DATA uint16_t data_weights[6] = {
                    0xe000, // 0.875000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rod
            case 0x00646f72:
            {
                MKV_DATA char  data_chars[13]   = "edbmiswlgnfh";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // roe
            case 0x00656f72:
            {
                MKV_DATA char  data_chars[4]   = "sdh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rof
            case 0x00666f72:
            {
                MKV_DATA char  data_chars[4]   = "tfo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf3cf, // 0.952381 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rog
            case 0x00676f72:
            {
                MKV_DATA char  data_chars[13]   = "heglsampuwbn";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // roi
            case 0x00696f72:
            {
                MKV_DATA char  data_chars[3]   = "tn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rok
            case 0x006b6f72:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rol
            case 0x006c6f72:
            {
                MKV_DATA char  data_chars[6]   = "ldesv";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rom
            case 0x006d6f72:
            {
                MKV_DATA char  data_chars[14]   = "sefhilpwanbdy";
                MKV_DATA uint16_t data_weights[13] = {
                    0x375a, // 0.216216 
                    0x375a, // 0.216216 
                    0x2298, // 0.135135 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // ron
            case 0x006e6f72:
            {
                MKV_DATA char  data_chars[11]   = "sdtfgkyvwc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // roo
            case 0x006f6f72:
            {
                MKV_DATA char  data_chars[10]   = "kmtspdbfn";
                MKV_DATA uint16_t data_weights[9] = {
                    0xd3ac, // 0.826840 
                    0x197d, // 0.099567 
                    0x058b, // 0.021645 
                    0x046f, // 0.017316 
                    0x0353, // 0.012987 
                    0x0237, // 0.008658 
                    0x011c, // 0.004329 
                    0x011c, // 0.004329 
                    0x011c, // 0.004329 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rop
            case 0x00706f72:
            {
                MKV_DATA char  data_chars[8]   = "esthlrw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ror
            case 0x00726f72:
            {
                MKV_DATA char  data_chars[3]   = "ur";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ros
            case 0x00736f72:
            {
                MKV_DATA char  data_chars[15]   = "setlpkcvghbwud";
                MKV_DATA uint16_t data_weights[14] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1cb1, // 0.112069 
                    0x069f, // 0.025862 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x046a, // 0.017241 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                    0x0235, // 0.008621 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // rot
            case 0x00746f72:
            {
                MKV_DATA char  data_chars[6]   = "htocs";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8ba3, // 0.545455 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rou
            case 0x00756f72:
            {
                MKV_DATA char  data_chars[7]   = "gndsct";
                MKV_DATA uint16_t data_weights[6] = {
                    0xd197, // 0.818713 
                    0x14f6, // 0.081871 
                    0x077c, // 0.029240 
                    0x077c, // 0.029240 
                    0x077c, // 0.029240 
                    0x02ff, // 0.011696 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rov
            case 0x00766f72:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfa50, // 0.977778 
                    0x05b0, // 0.022222 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // row
            case 0x00776f72:
            {
                MKV_DATA char  data_chars[17]   = "nslbdhatfegpcmri";
                MKV_DATA uint16_t data_weights[16] = {
                    0x33a1, // 0.201681 
                    0x26b9, // 0.151261 
                    0x2045, // 0.126050 
                    0x1583, // 0.084034 
                    0x135d, // 0.075630 
                    0x1136, // 0.067227 
                    0x1136, // 0.067227 
                    0x0ce8, // 0.050420 
                    0x0ac2, // 0.042017 
                    0x0ac2, // 0.042017 
                    0x089b, // 0.033613 
                    0x044d, // 0.016807 
                    0x044d, // 0.016807 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                    0x0227, // 0.008403 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // rox
            case 0x00786f72:
            {
                MKV_DATA char  data_chars[10]   = "tbhwfadel";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5295, // 0.322581 
                    0x294a, // 0.161290 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // roy
            case 0x00796f72:
            {
                MKV_DATA char  data_chars[6]   = "dlast";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // roz
            case 0x007a6f72:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpa
            case 0x00617072:
            {
                MKV_DATA char  data_chars[4]   = "ril";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rpe
            case 0x00657072:
            {
                MKV_DATA char  data_chars[5]   = "nrts";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rpf
            case 0x00667072:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rph
            case 0x00687072:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpi
            case 0x00697072:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpl
            case 0x006c7072:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpn
            case 0x006e7072:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpo
            case 0x006f7072:
            {
                MKV_DATA char  data_chars[7]   = "oilrts";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rps
            case 0x00737072:
            {
                MKV_DATA char  data_chars[6]   = "wbdgt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rpt
            case 0x00747072:
            {
                MKV_DATA char  data_chars[4]   = "orh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rpu
            case 0x00757072:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rpw
            case 0x00777072:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rqu
            case 0x00757172:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rra
            case 0x00617272:
            {
                MKV_DATA char  data_chars[10]   = "ncstbrdlh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2555, // 0.145833 
                    0x1555, // 0.083333 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rrb
            case 0x00627272:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rre
            case 0x00657272:
            {
                MKV_DATA char  data_chars[8]   = "ltnyprx";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rrg
            case 0x00677272:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rrh
            case 0x00687272:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rri
            case 0x00697272:
            {
                MKV_DATA char  data_chars[15]   = "ncsdoeafltvbpg";
                MKV_DATA uint16_t data_weights[14] = {
                    0x6a75, // 0.415842 
                    0x1959, // 0.099010 
                    0x1959, // 0.099010 
                    0x16d0, // 0.089109 
                    0x0cac, // 0.049505 
                    0x0cac, // 0.049505 
                    0x0cac, // 0.049505 
                    0x079b, // 0.029703 
                    0x079b, // 0.029703 
                    0x079b, // 0.029703 
                    0x0512, // 0.019802 
                    0x0512, // 0.019802 
                    0x0289, // 0.009901 
                    0x0289, // 0.009901 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // rro
            case 0x006f7272:
            {
                MKV_DATA char  data_chars[9]   = "wcltugnp";
                MKV_DATA uint16_t data_weights[8] = {
                    0xcd85, // 0.802817 
                    0x1207, // 0.070423 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x0736, // 0.028169 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rrs
            case 0x00737272:
            {
                MKV_DATA char  data_chars[4]   = "whv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rru
            case 0x00757272:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rrv
            case 0x00767272:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rry
            case 0x00797272:
            {
                MKV_DATA char  data_chars[10]   = "sfnhbmtlw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x45d1, // 0.272727 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // rsa
            case 0x00617372:
            {
                MKV_DATA char  data_chars[5]   = "lgns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb333, // 0.700000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsb
            case 0x00627372:
            {
                MKV_DATA char  data_chars[5]   = "ryua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsc
            case 0x00637372:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsd
            case 0x00647372:
            {
                MKV_DATA char  data_chars[4]   = "aoe";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rse
            case 0x00657372:
            {
                MKV_DATA char  data_chars[13]   = "yatlwbmdhnpc";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4835, // 0.282051 
                    0x2df3, // 0.179487 
                    0x2762, // 0.153846 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rsf
            case 0x00667372:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc925, // 0.785714 
                    0x36db, // 0.214286 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsg
            case 0x00677372:
            {
                MKV_DATA char  data_chars[4]   = "air";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rsh
            case 0x00687372:
            {
                MKV_DATA char  data_chars[13]   = "aioebgswcflm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x9837, // 0.594595 
                    0x1f23, // 0.121622 
                    0x1bad, // 0.108108 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rsi
            case 0x00697372:
            {
                MKV_DATA char  data_chars[6]   = "dntcl";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8788, // 0.529412 
                    0x4b4b, // 0.294118 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rsk
            case 0x006b7372:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsl
            case 0x006c7372:
            {
                MKV_DATA char  data_chars[5]   = "eaoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0xade3, // 0.679245 
                    0x2b79, // 0.169811 
                    0x21d0, // 0.132075 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rsm
            case 0x006d7372:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rso
            case 0x006f7372:
            {
                MKV_DATA char  data_chars[4]   = "npe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rsp
            case 0x00707372:
            {
                MKV_DATA char  data_chars[6]   = "ouaei";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rst
            case 0x00747372:
            {
                MKV_DATA char  data_chars[13]   = "oeayhrwbpclm";
                MKV_DATA uint16_t data_weights[12] = {
                    0xad4b, // 0.676923 
                    0x1d8a, // 0.115385 
                    0x15a9, // 0.084615 
                    0x05e8, // 0.023077 
                    0x05e8, // 0.023077 
                    0x05e8, // 0.023077 
                    0x03f0, // 0.015385 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                    0x01f8, // 0.007692 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // rsv
            case 0x00767372:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rsw
            case 0x00777372:
            {
                MKV_DATA char  data_chars[5]   = "oaei";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rta
            case 0x00617472:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtb
            case 0x00627472:
            {
                MKV_DATA char  data_chars[5]   = "ruay";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rtc
            case 0x00637472:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rte
            case 0x00657472:
            {
                MKV_DATA char  data_chars[9]   = "rnsiaehl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6db7, // 0.428571 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rtf
            case 0x00667472:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xba2f, // 0.727273 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtg
            case 0x00677472:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rth
            case 0x00687472:
            {
                MKV_DATA char  data_chars[21]   = "yaoiwelcbmfgupstdrhn";
                MKV_DATA uint16_t data_weights[20] = {
                    0x442d, // 0.266304 
                    0x2859, // 0.157609 
                    0x1bd3, // 0.108696 
                    0x1bd3, // 0.108696 
                    0x1216, // 0.070652 
                    0x1216, // 0.070652 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x06f5, // 0.027174 
                    0x0591, // 0.021739 
                    0x042d, // 0.016304 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                    0x0164, // 0.005435 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // rti
            case 0x00697472:
            {
                MKV_DATA char  data_chars[6]   = "nsmce";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rtl
            case 0x006c7472:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rtm
            case 0x006d7472:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rtn
            case 0x006e7472:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rto
            case 0x006f7472:
            {
                MKV_DATA char  data_chars[7]   = "nwfpbc";
                MKV_DATA uint16_t data_weights[6] = {
                    0xebf1, // 0.921642 
                    0x0b76, // 0.044776 
                    0x05bb, // 0.022388 
                    0x00f5, // 0.003731 
                    0x00f5, // 0.003731 
                    0x00f5, // 0.003731 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rtp
            case 0x00707472:
            {
                MKV_DATA char  data_chars[3]   = "ue";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtq
            case 0x00717472:
            {
                return 'u';
            }
            break;

            // rtr
            case 0x00727472:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rts
            case 0x00737472:
            {
                MKV_DATA char  data_chars[11]   = "htwemgbclo";
                MKV_DATA uint16_t data_weights[10] = {
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // rtu
            case 0x00757472:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rtw
            case 0x00777472:
            {
                MKV_DATA char  data_chars[5]   = "oear";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rty
            case 0x00797472:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rua
            case 0x00617572:
            {
                MKV_DATA char  data_chars[4]   = "nrs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rub
            case 0x00627572:
            {
                MKV_DATA char  data_chars[5]   = "besw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ruc
            case 0x00637572:
            {
                MKV_DATA char  data_chars[6]   = "kehit";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb13b, // 0.692308 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rud
            case 0x00647572:
            {
                MKV_DATA char  data_chars[9]   = "hgdlowfy";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3c3c, // 0.235294 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rue
            case 0x00657572:
            {
                MKV_DATA char  data_chars[4]   = "rmw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ruf
            case 0x00667572:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rug
            case 0x00677572:
            {
                MKV_DATA char  data_chars[6]   = "gbelm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rui
            case 0x00697572:
            {
                MKV_DATA char  data_chars[4]   = "sdt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rul
            case 0x006c7572:
            {
                MKV_DATA char  data_chars[4]   = "elo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rum
            case 0x006d7572:
            {
                MKV_DATA char  data_chars[8]   = "pbmswef";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7943, // 0.473684 
                    0x435e, // 0.263158 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // run
            case 0x006e7572:
            {
                MKV_DATA char  data_chars[9]   = "dsntchwf";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3dcb, // 0.241379 
                    0x34f7, // 0.206897 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x1a7c, // 0.103448 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // rup
            case 0x00707572:
            {
                MKV_DATA char  data_chars[3]   = "ep";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rur
            case 0x00727572:
            {
                MKV_DATA char  data_chars[4]   = "yio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rus
            case 0x00737572:
            {
                MKV_DATA char  data_chars[8]   = "hsltcpk";
                MKV_DATA uint16_t data_weights[7] = {
                    0x97b4, // 0.592593 
                    0x25ed, // 0.148148 
                    0x12f7, // 0.074074 
                    0x12f7, // 0.074074 
                    0x0e39, // 0.055556 
                    0x097b, // 0.037037 
                    0x04be, // 0.018519 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rut
            case 0x00747572:
            {
                MKV_DATA char  data_chars[4]   = "hlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ruw
            case 0x00777572:
            {
                MKV_DATA char  data_chars[3]   = "yo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rux
            case 0x00787572:
            {
                MKV_DATA char  data_chars[3]   = "tl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rva
            case 0x00617672:
            {
                MKV_DATA char  data_chars[5]   = "shln";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rve
            case 0x00657672:
            {
                MKV_DATA char  data_chars[8]   = "srcltya";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // rvi
            case 0x00697672:
            {
                MKV_DATA char  data_chars[5]   = "lnes";
                MKV_DATA uint16_t data_weights[4] = {
                    0xae8c, // 0.681818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // rwa
            case 0x00617772:
            {
                MKV_DATA char  data_chars[7]   = "rystcl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5e51, // 0.368421 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // rwe
            case 0x00657772:
            {
                MKV_DATA char  data_chars[4]   = "lns";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcaab, // 0.791667 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rwh
            case 0x00687772:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwi
            case 0x00697772:
            {
                MKV_DATA char  data_chars[4]   = "ctn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb555, // 0.708333 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rwo
            case 0x006f7772:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rwy
            case 0x00797772:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rya
            case 0x00617972:
            {
                MKV_DATA char  data_chars[6]   = "nlrst";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ryb
            case 0x00627972:
            {
                MKV_DATA char  data_chars[5]   = "aeru";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ryc
            case 0x00637972:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryd
            case 0x00647972:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // rye
            case 0x00657972:
            {
                MKV_DATA char  data_chars[9]   = "rcdfilwb";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ryf
            case 0x00667972:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryh
            case 0x00687972:
            {
                MKV_DATA char  data_chars[4]   = "iao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryl
            case 0x006c7972:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rym
            case 0x006d7972:
            {
                MKV_DATA char  data_chars[3]   = "ep";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ryn
            case 0x006e7972:
            {
                MKV_DATA char  data_chars[8]   = "saehino";
                MKV_DATA uint16_t data_weights[7] = {
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ryp
            case 0x00707972:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rys
            case 0x00737972:
            {
                MKV_DATA char  data_chars[5]   = "htbu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ryt
            case 0x00747972:
            {
                MKV_DATA char  data_chars[4]   = "hor";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ryw
            case 0x00777972:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rze
            case 0x00657a72:
            {
                MKV_DATA char  data_chars[6]   = "bdhly";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // rzi
            case 0x00697a72:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // rzl
            case 0x006c7a72:
            {
                return 'e';
            }
            break;

            // rzt
            case 0x00747a72:
            {
                return 'o';
            }
            break;

            } // switch _u32
        } // r
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 's':
        {
            switch ( trigram_u32 )
            {
            // saa
            case 0x00616173:
            {
                return 'c';
            }
            break;

            // sab
            case 0x00626173:
            {
                MKV_DATA char  data_chars[4]   = "dei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sac
            case 0x00636173:
            {
                MKV_DATA char  data_chars[4]   = "rko";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sad
            case 0x00646173:
            {
                MKV_DATA char  data_chars[4]   = "dbg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // saf
            case 0x00666173:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sag
            case 0x00676173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sah
            case 0x00686173:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sai
            case 0x00696173:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sal
            case 0x006c6173:
            {
                MKV_DATA char  data_chars[15]   = "tlewcpifmkovhd";
                MKV_DATA uint16_t data_weights[14] = {
                    0x5333, // 0.325000 
                    0x5333, // 0.325000 
                    0x2333, // 0.137500 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                    0x0333, // 0.012500 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // sam
            case 0x006d6173:
            {
                MKV_DATA char  data_chars[5]   = "blpu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // san
            case 0x006e6173:
            {
                MKV_DATA char  data_chars[9]   = "dtkchoes";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd34d, // 0.825397 
                    0x1041, // 0.063492 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sap
            case 0x00706173:
            {
                MKV_DATA char  data_chars[6]   = "ceilp";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sar
            case 0x00726173:
            {
                MKV_DATA char  data_chars[10]   = "rdestagin";
                MKV_DATA uint16_t data_weights[9] = {
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sas
            case 0x00736173:
            {
                MKV_DATA char  data_chars[3]   = "hc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sat
            case 0x00746173:
            {
                MKV_DATA char  data_chars[6]   = "tclmw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sau
            case 0x00756173:
            {
                MKV_DATA char  data_chars[5]   = "ngls";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sav
            case 0x00766173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // saw
            case 0x00776173:
            {
                MKV_DATA char  data_chars[7]   = "sblrty";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sax
            case 0x00786173:
            {
                MKV_DATA char  data_chars[9]   = "otbhilem";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // say
            case 0x00796173:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sba
            case 0x00616273:
            {
                MKV_DATA char  data_chars[7]   = "ntsycl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sbe
            case 0x00656273:
            {
                MKV_DATA char  data_chars[4]   = "acr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x4ccd, // 0.300000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sbo
            case 0x006f6273:
            {
                MKV_DATA char  data_chars[4]   = "rut";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9b27, // 0.606061 
                    0x4d93, // 0.303030 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sbr
            case 0x00726273:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8348, // 0.512821 
                    0x7cb8, // 0.487179 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sbu
            case 0x00756273:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfc65, // 0.985915 
                    0x039b, // 0.014085 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sca
            case 0x00616373:
            {
                MKV_DATA char  data_chars[14]   = "rlsftnmwdbyiv";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6000, // 0.375000 
                    0x4555, // 0.270833 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // sce
            case 0x00656373:
            {
                MKV_DATA char  data_chars[4]   = "uan";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sch
            case 0x00686373:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sci
            case 0x00696373:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // scl
            case 0x006c6373:
            {
                MKV_DATA char  data_chars[4]   = "ieo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sco
            case 0x006f6373:
            {
                MKV_DATA char  data_chars[11]   = "tmuerpwvlf";
                MKV_DATA uint16_t data_weights[10] = {
                    0x87f2, // 0.531034 
                    0x4317, // 0.262069 
                    0x0fe4, // 0.062069 
                    0x08d4, // 0.034483 
                    0x0710, // 0.027586 
                    0x054c, // 0.020690 
                    0x054c, // 0.020690 
                    0x054c, // 0.020690 
                    0x0388, // 0.013793 
                    0x01c4, // 0.006897 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // scr
            case 0x00726373:
            {
                MKV_DATA char  data_chars[6]   = "oaeiu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7000, // 0.437500 
                    0x4800, // 0.281250 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // scu
            case 0x00756373:
            {
                MKV_DATA char  data_chars[6]   = "dglnr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sda
            case 0x00616473:
            {
                MKV_DATA char  data_chars[4]   = "lny";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf287, // 0.947368 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sde
            case 0x00656473:
            {
                MKV_DATA char  data_chars[4]   = "nal";
                MKV_DATA uint16_t data_weights[3] = {
                    0xec4f, // 0.923077 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sdi
            case 0x00696473:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sdo
            case 0x006f6473:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xba2f, // 0.727273 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sdy
            case 0x00796473:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sea
            case 0x00616573:
            {
                MKV_DATA char  data_chars[15]   = "tlcsbvhfgrdwun";
                MKV_DATA uint16_t data_weights[14] = {
                    0x4000, // 0.250000 
                    0x1d17, // 0.113636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // seb
            case 0x00626573:
            {
                MKV_DATA char  data_chars[6]   = "erouy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // sec
            case 0x00636573:
            {
                MKV_DATA char  data_chars[5]   = "oakt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sed
            case 0x00646573:
            {
                MKV_DATA char  data_chars[10]   = "goalrbdei";
                MKV_DATA uint16_t data_weights[9] = {
                    0x7a6f, // 0.478261 
                    0x2c86, // 0.173913 
                    0x1643, // 0.086957 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // see
            case 0x00656573:
            {
                MKV_DATA char  data_chars[5]   = "dnrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sef
            case 0x00666573:
            {
                MKV_DATA char  data_chars[3]   = "ot";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // seg
            case 0x00676573:
            {
                MKV_DATA char  data_chars[3]   = "ah";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // seh
            case 0x00686573:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sei
            case 0x00696573:
            {
                MKV_DATA char  data_chars[4]   = "gsf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sel
            case 0x006c6573:
            {
                MKV_DATA char  data_chars[13]   = "lsebahwodgmf";
                MKV_DATA uint16_t data_weights[12] = {
                    0x5400, // 0.328125 
                    0x2c00, // 0.171875 
                    0x2800, // 0.156250 
                    0x1c00, // 0.109375 
                    0x1400, // 0.078125 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // sem
            case 0x006d6573:
            {
                MKV_DATA char  data_chars[8]   = "eoailps";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sen
            case 0x006e6573:
            {
                MKV_DATA char  data_chars[11]   = "dhbfseinta";
                MKV_DATA uint16_t data_weights[10] = {
                    0x8a61, // 0.540541 
                    0x306f, // 0.189189 
                    0x0dd6, // 0.054054 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // sep
            case 0x00706573:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ser
            case 0x00726573:
            {
                MKV_DATA char  data_chars[9]   = "ysdltbgr";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ses
            case 0x00736573:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // set
            case 0x00746573:
            {
                MKV_DATA char  data_chars[7]   = "tolchs";
                MKV_DATA uint16_t data_weights[6] = {
                    0xbbbc, // 0.733333 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sev
            case 0x00766573:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xa2e9, // 0.636364 
                    0x5d17, // 0.363636 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sew
            case 0x00776573:
            {
                MKV_DATA char  data_chars[5]   = "aoes";
                MKV_DATA uint16_t data_weights[4] = {
                    0x7000, // 0.437500 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sey
            case 0x00796573:
            {
                MKV_DATA char  data_chars[3]   = "bm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sez
            case 0x007a6573:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfe
            case 0x00656673:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfi
            case 0x00696673:
            {
                MKV_DATA char  data_chars[3]   = "en";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfc2e, // 0.985075 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfl
            case 0x006c6673:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sfo
            case 0x006f6673:
            {
                MKV_DATA char  data_chars[5]   = "rlno";
                MKV_DATA uint16_t data_weights[4] = {
                    0xf216, // 0.945652 
                    0x0859, // 0.032609 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sga
            case 0x00616773:
            {
                MKV_DATA char  data_chars[3]   = "tr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd800, // 0.843750 
                    0x2800, // 0.156250 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sgi
            case 0x00696773:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sgo
            case 0x006f6773:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sgr
            case 0x00726773:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x6db7, // 0.428571 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sgw
            case 0x00776773:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sha
            case 0x00616873:
            {
                MKV_DATA char  data_chars[17]   = "mwlryncdftpbkugv";
                MKV_DATA uint16_t data_weights[16] = {
                    0x6312, // 0.386997 
                    0x3911, // 0.222910 
                    0x2acc, // 0.167183 
                    0x149b, // 0.080495 
                    0x0722, // 0.027864 
                    0x058c, // 0.021672 
                    0x04c1, // 0.018576 
                    0x03f6, // 0.015480 
                    0x0261, // 0.009288 
                    0x0261, // 0.009288 
                    0x0261, // 0.009288 
                    0x0261, // 0.009288 
                    0x0261, // 0.009288 
                    0x0196, // 0.006192 
                    0x00cb, // 0.003096 
                    0x00cb, // 0.003096 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // shb
            case 0x00626873:
            {
                MKV_DATA char  data_chars[7]   = "uroyae";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5174, // 0.318182 
                    0x45d1, // 0.272727 
                    0x3a2f, // 0.227273 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // shc
            case 0x00636873:
            {
                MKV_DATA char  data_chars[6]   = "ohulr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // shd
            case 0x00646873:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // she
            case 0x00656873:
            {
                MKV_DATA char  data_chars[15]   = "rlaenpsydfbtvi";
                MKV_DATA uint16_t data_weights[14] = {
                    0x406f, // 0.251701 
                    0x2b8a, // 0.170068 
                    0x22d4, // 0.136054 
                    0x1bdd, // 0.108844 
                    0x16a4, // 0.088435 
                    0x1328, // 0.074830 
                    0x0fac, // 0.061224 
                    0x06f7, // 0.027211 
                    0x0539, // 0.020408 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x037c, // 0.013605 
                    0x01be, // 0.006803 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // shf
            case 0x00666873:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8788, // 0.529412 
                    0x7878, // 0.470588 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shg
            case 0x00676873:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shi
            case 0x00696873:
            {
                MKV_DATA char  data_chars[9]   = "lrnpedfm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x67e2, // 0.405797 
                    0x5730, // 0.340580 
                    0x1f89, // 0.123188 
                    0x1468, // 0.079710 
                    0x076c, // 0.028986 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // shl
            case 0x006c6873:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // shm
            case 0x006d6873:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sho
            case 0x006f6873:
            {
                MKV_DATA char  data_chars[15]   = "rtpluebowvcdns";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3b5d, // 0.231884 
                    0x3982, // 0.224638 
                    0x33f1, // 0.202899 
                    0x1bd3, // 0.108696 
                    0x0cfc, // 0.050725 
                    0x0b21, // 0.043478 
                    0x0946, // 0.036232 
                    0x0946, // 0.036232 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                    0x01db, // 0.007246 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // shp
            case 0x00706873:
            {
                MKV_DATA char  data_chars[4]   = "oer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // shr
            case 0x00726873:
            {
                MKV_DATA char  data_chars[6]   = "eiaou";
                MKV_DATA uint16_t data_weights[5] = {
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // shs
            case 0x00736873:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sht
            case 0x00746873:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // shu
            case 0x00756873:
            {
                MKV_DATA char  data_chars[9]   = "trlncsid";
                MKV_DATA uint16_t data_weights[8] = {
                    0x67c9, // 0.405405 
                    0x4c1c, // 0.297297 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // shw
            case 0x00776873:
            {
                MKV_DATA char  data_chars[5]   = "oiea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6276, // 0.384615 
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // shy
            case 0x00796873:
            {
                MKV_DATA char  data_chars[3]   = "df";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sib
            case 0x00626973:
            {
                MKV_DATA char  data_chars[8]   = "lstbdef";
                MKV_DATA uint16_t data_weights[7] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sic
            case 0x00636973:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sid
            case 0x00646973:
            {
                MKV_DATA char  data_chars[10]   = "edlbcgfmw";
                MKV_DATA uint16_t data_weights[9] = {
                    0xd3dd, // 0.827586 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sig
            case 0x00676973:
            {
                MKV_DATA char  data_chars[5]   = "hfnw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sik
            case 0x006b6973:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sil
            case 0x006c6973:
            {
                MKV_DATA char  data_chars[10]   = "vlkefstcd";
                MKV_DATA uint16_t data_weights[9] = {
                    0x70a4, // 0.440000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sim
            case 0x006d6973:
            {
                MKV_DATA char  data_chars[5]   = "omip";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sin
            case 0x006e6973:
            {
                MKV_DATA char  data_chars[8]   = "gdektfn";
                MKV_DATA uint16_t data_weights[7] = {
                    0xe186, // 0.880952 
                    0x0925, // 0.035714 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                    0x030c, // 0.011905 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sio
            case 0x006f6973:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sip
            case 0x00706973:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sis
            case 0x00736973:
            {
                MKV_DATA char  data_chars[4]   = "lst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sit
            case 0x00746973:
            {
                MKV_DATA char  data_chars[4]   = "hty";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // six
            case 0x00786973:
            {
                MKV_DATA char  data_chars[4]   = "mph";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // siz
            case 0x007a6973:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ska
            case 0x00616b73:
            {
                MKV_DATA char  data_chars[5]   = "dimy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // skd
            case 0x00646b73:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ske
            case 0x00656b73:
            {
                MKV_DATA char  data_chars[13]   = "rltaegnyfidw";
                MKV_DATA uint16_t data_weights[12] = {
                    0x4e39, // 0.305556 
                    0x2aab, // 0.166667 
                    0x238e, // 0.138889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // skh
            case 0x00686b73:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ski
            case 0x00696b73:
            {
                MKV_DATA char  data_chars[7]   = "lntprd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3dcb, // 0.241379 
                    0x3dcb, // 0.241379 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // skn
            case 0x006e6b73:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sko
            case 0x006f6b73:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sky
            case 0x00796b73:
            {
                MKV_DATA char  data_chars[3]   = "be";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sla
            case 0x00616c73:
            {
                MKV_DATA char  data_chars[12]   = "ndcuktpglwb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6358, // 0.388060 
                    0x357e, // 0.208955 
                    0x2635, // 0.149254 
                    0x0f49, // 0.059701 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // sle
            case 0x00656c73:
            {
                MKV_DATA char  data_chars[14]   = "yiaedhtmswrbp";
                MKV_DATA uint16_t data_weights[13] = {
                    0xc71c, // 0.777778 
                    0x0ccd, // 0.050000 
                    0x09f5, // 0.038889 
                    0x0889, // 0.033333 
                    0x05b0, // 0.022222 
                    0x05b0, // 0.022222 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x02d8, // 0.011111 
                    0x016c, // 0.005556 
                    0x016c, // 0.005556 
                    0x016c, // 0.005556 
                    0x016c, // 0.005556 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // sli
            case 0x00696c73:
            {
                MKV_DATA char  data_chars[7]   = "npstdm";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa492, // 0.642857 
                    0x36db, // 0.214286 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // slo
            case 0x006f6c73:
            {
                MKV_DATA char  data_chars[11]   = "wecplostun";
                MKV_DATA uint16_t data_weights[10] = {
                    0xb13b, // 0.692308 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // slu
            case 0x00756c73:
            {
                MKV_DATA char  data_chars[3]   = "ci";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sly
            case 0x00796c73:
            {
                MKV_DATA char  data_chars[5]   = "nefm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sma
            case 0x00616d73:
            {
                MKV_DATA char  data_chars[5]   = "lrns";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2000, // 0.125000 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sme
            case 0x00656d73:
            {
                MKV_DATA char  data_chars[6]   = "raets";
                MKV_DATA uint16_t data_weights[5] = {
                    0x68ba, // 0.409091 
                    0x5174, // 0.318182 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // smi
            case 0x00696d73:
            {
                MKV_DATA char  data_chars[5]   = "tlsn";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x45d1, // 0.272727 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // smo
            case 0x006f6d73:
            {
                MKV_DATA char  data_chars[7]   = "ornuck";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5f16, // 0.371429 
                    0x5f16, // 0.371429 
                    0x15f1, // 0.085714 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // smu
            case 0x00756d73:
            {
                MKV_DATA char  data_chars[3]   = "gc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // smy
            case 0x00796d73:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sna
            case 0x00616e73:
            {
                MKV_DATA char  data_chars[7]   = "ripvdg";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5000, // 0.312500 
                    0x5000, // 0.312500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // snd
            case 0x00646e73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sne
            case 0x00656e73:
            {
                MKV_DATA char  data_chars[9]   = "asytlwdi";
                MKV_DATA uint16_t data_weights[8] = {
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x30c3, // 0.190476 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // sni
            case 0x00696e73:
            {
                MKV_DATA char  data_chars[5]   = "tpbg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sno
            case 0x006f6e73:
            {
                MKV_DATA char  data_chars[5]   = "dwra";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x45d1, // 0.272727 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sny
            case 0x00796e73:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soa
            case 0x00616f73:
            {
                MKV_DATA char  data_chars[3]   = "kr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sob
            case 0x00626f73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // soc
            case 0x00636f73:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sod
            case 0x00646f73:
            {
                MKV_DATA char  data_chars[4]   = "oyb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // soh
            case 0x00686f73:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sok
            case 0x006b6f73:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sol
            case 0x006c6f73:
            {
                MKV_DATA char  data_chars[6]   = "eldin";
                MKV_DATA uint16_t data_weights[5] = {
                    0x86bd, // 0.526316 
                    0x35e5, // 0.210526 
                    0x286c, // 0.157895 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // som
            case 0x006d6f73:
            {
                MKV_DATA char  data_chars[7]   = "ebvflp";
                MKV_DATA uint16_t data_weights[6] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // son
            case 0x006e6f73:
            {
                MKV_DATA char  data_chars[9]   = "sbgacfhn";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7333, // 0.450000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // soo
            case 0x006f6f73:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sop
            case 0x00706f73:
            {
                MKV_DATA char  data_chars[5]   = "wlps";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sor
            case 0x00726f73:
            {
                MKV_DATA char  data_chars[4]   = "erl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sos
            case 0x00736f73:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sot
            case 0x00746f73:
            {
                MKV_DATA char  data_chars[5]   = "hstb";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sou
            case 0x00756f73:
            {
                MKV_DATA char  data_chars[7]   = "tlrgnd";
                MKV_DATA uint16_t data_weights[6] = {
                    0xd3a0, // 0.826667 
                    0x0da7, // 0.053333 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sov
            case 0x00766f73:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sow
            case 0x00776f73:
            {
                MKV_DATA char  data_chars[4]   = "elt";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // spa
            case 0x00617073:
            {
                MKV_DATA char  data_chars[6]   = "rltnx";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8925, // 0.535714 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // spe
            case 0x00657073:
            {
                MKV_DATA char  data_chars[10]   = "nrleatckx";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4925, // 0.285714 
                    0x3333, // 0.200000 
                    0x2492, // 0.142857 
                    0x1d42, // 0.114286 
                    0x15f1, // 0.085714 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sph
            case 0x00687073:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spi
            case 0x00697073:
            {
                MKV_DATA char  data_chars[9]   = "tnlrdexo";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4925, // 0.285714 
                    0x3cf4, // 0.238095 
                    0x2492, // 0.142857 
                    0x1862, // 0.095238 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // spl
            case 0x006c7073:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // spo
            case 0x006f7073:
            {
                MKV_DATA char  data_chars[6]   = "onrts";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4ec5, // 0.307692 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // spr
            case 0x00727073:
            {
                MKV_DATA char  data_chars[6]   = "ioeau";
                MKV_DATA uint16_t data_weights[5] = {
                    0xb08d, // 0.689655 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // spu
            case 0x00757073:
            {
                MKV_DATA char  data_chars[5]   = "rndl";
                MKV_DATA uint16_t data_weights[4] = {
                    0xba2f, // 0.727273 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // spy
            case 0x00797073:
            {
                MKV_DATA char  data_chars[3]   = "wc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // squ
            case 0x00757173:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sri
            case 0x00697273:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssa
            case 0x00617373:
            {
                MKV_DATA char  data_chars[5]   = "glrc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ssb
            case 0x00627373:
            {
                MKV_DATA char  data_chars[5]   = "ruao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ssc
            case 0x00637373:
            {
                MKV_DATA char  data_chars[4]   = "lra";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ssd
            case 0x00647373:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sse
            case 0x00657373:
            {
                MKV_DATA char  data_chars[11]   = "ntlyxsrdbm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4db7, // 0.303571 
                    0x2db7, // 0.178571 
                    0x2925, // 0.160714 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x0db7, // 0.053571 
                    0x0925, // 0.035714 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ssf
            case 0x00667373:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssg
            case 0x00677373:
            {
                MKV_DATA char  data_chars[4]   = "ari";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ssh
            case 0x00687373:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssi
            case 0x00697373:
            {
                MKV_DATA char  data_chars[5]   = "ncae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xe9bd, // 0.913043 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ssl
            case 0x006c7373:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssm
            case 0x006d7373:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssn
            case 0x006e7373:
            {
                MKV_DATA char  data_chars[3]   = "ed";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sso
            case 0x006f7373:
            {
                MKV_DATA char  data_chars[7]   = "npmcel";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6969, // 0.411765 
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ssp
            case 0x00707373:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sst
            case 0x00747373:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssu
            case 0x00757373:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ssw
            case 0x00777373:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sta
            case 0x00617473:
            {
                MKV_DATA char  data_chars[19]   = "nlrpictbgmdfskuvyw";
                MKV_DATA uint16_t data_weights[18] = {
                    0x5098, // 0.314815 
                    0x25ed, // 0.148148 
                    0x18e4, // 0.097222 
                    0x1555, // 0.083333 
                    0x0e39, // 0.055556 
                    0x0bda, // 0.046296 
                    0x097b, // 0.037037 
                    0x084c, // 0.032407 
                    0x084c, // 0.032407 
                    0x084c, // 0.032407 
                    0x05ed, // 0.023148 
                    0x05ed, // 0.023148 
                    0x04be, // 0.018519 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // stb
            case 0x00627473:
            {
                MKV_DATA char  data_chars[7]   = "oruaey";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // stc
            case 0x00637473:
            {
                MKV_DATA char  data_chars[5]   = "ohlr";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb8e4, // 0.722222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // std
            case 0x00647473:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ste
            case 0x00657473:
            {
                MKV_DATA char  data_chars[17]   = "radnepvwlyisbmct";
                MKV_DATA uint16_t data_weights[16] = {
                    0x6be1, // 0.421405 
                    0x43a4, // 0.264214 
                    0x1b66, // 0.107023 
                    0x1120, // 0.066890 
                    0x0890, // 0.033445 
                    0x0523, // 0.020067 
                    0x0523, // 0.020067 
                    0x0448, // 0.016722 
                    0x036d, // 0.013378 
                    0x0292, // 0.010033 
                    0x0292, // 0.010033 
                    0x00db, // 0.003344 
                    0x00db, // 0.003344 
                    0x00db, // 0.003344 
                    0x00db, // 0.003344 
                    0x00db, // 0.003344 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // stf
            case 0x00667473:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stg
            case 0x00677473:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sth
            case 0x00687473:
            {
                MKV_DATA char  data_chars[7]   = "oaweiu";
                MKV_DATA uint16_t data_weights[6] = {
                    0xafc3, // 0.686567 
                    0x2dda, // 0.179104 
                    0x0b76, // 0.044776 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sti
            case 0x00697473:
            {
                MKV_DATA char  data_chars[14]   = "nclftbrspadvx";
                MKV_DATA uint16_t data_weights[13] = {
                    0x51ec, // 0.320000 
                    0x2e14, // 0.180000 
                    0x23d7, // 0.140000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0f5c, // 0.060000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                    0x051f, // 0.020000 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // stl
            case 0x006c7473:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc11f, // 0.754386 
                    0x23ee, // 0.140351 
                    0x1675, // 0.087719 
                    0x047e, // 0.017544 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // stm
            case 0x006d7473:
            {
                MKV_DATA char  data_chars[5]   = "oaie";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // stn
            case 0x006e7473:
            {
                MKV_DATA char  data_chars[5]   = "eoua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sto
            case 0x006f7473:
            {
                MKV_DATA char  data_chars[19]   = "ncwkrubpfvoldategm";
                MKV_DATA uint16_t data_weights[18] = {
                    0xb46a, // 0.704750 
                    0x1a4a, // 0.102696 
                    0x1659, // 0.087291 
                    0x088b, // 0.033376 
                    0x0446, // 0.016688 
                    0x02a1, // 0.010270 
                    0x01a5, // 0.006418 
                    0x01a5, // 0.006418 
                    0x0151, // 0.005135 
                    0x00fc, // 0.003851 
                    0x00fc, // 0.003851 
                    0x00fc, // 0.003851 
                    0x00fc, // 0.003851 
                    0x00a8, // 0.002567 
                    0x00a8, // 0.002567 
                    0x00a8, // 0.002567 
                    0x00a8, // 0.002567 
                    0x0054, // 0.001284 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // stp
            case 0x00707473:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // str
            case 0x00727473:
            {
                MKV_DATA char  data_chars[7]   = "eaoiuy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x797e, // 0.474576 
                    0x2fbb, // 0.186441 
                    0x2d8f, // 0.177966 
                    0x15b2, // 0.084746 
                    0x0ad9, // 0.042373 
                    0x08ae, // 0.033898 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // sts
            case 0x00737473:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stt
            case 0x00747473:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stu
            case 0x00757473:
            {
                MKV_DATA char  data_chars[10]   = "brdnckstm";
                MKV_DATA uint16_t data_weights[9] = {
                    0x638e, // 0.388889 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x0e39, // 0.055556 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // stv
            case 0x00767473:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // stw
            case 0x00777473:
            {
                MKV_DATA char  data_chars[5]   = "ioea";
                MKV_DATA uint16_t data_weights[4] = {
                    0x76db, // 0.464286 
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sty
            case 0x00797473:
            {
                MKV_DATA char  data_chars[8]   = "ealrcdh";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // sub
            case 0x00627573:
            {
                MKV_DATA char  data_chars[4]   = "ceu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // suc
            case 0x00637573:
            {
                MKV_DATA char  data_chars[4]   = "kch";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sud
            case 0x00647573:
            {
                MKV_DATA char  data_chars[4]   = "bgd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa000, // 0.625000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // suf
            case 0x00667573:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sug
            case 0x00677573:
            {
                MKV_DATA char  data_chars[4]   = "gnw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sul
            case 0x006c7573:
            {
                MKV_DATA char  data_chars[4]   = "lhg";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sum
            case 0x006d7573:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sun
            case 0x006e7573:
            {
                MKV_DATA char  data_chars[10]   = "ndbklrsth";
                MKV_DATA uint16_t data_weights[9] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // sur
            case 0x00727573:
            {
                MKV_DATA char  data_chars[5]   = "rbfl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sus
            case 0x00737573:
            {
                MKV_DATA char  data_chars[5]   = "pstw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sut
            case 0x00747573:
            {
                MKV_DATA char  data_chars[4]   = "tco";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // sve
            case 0x00657673:
            {
                MKV_DATA char  data_chars[4]   = "oan";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // svi
            case 0x00697673:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // swa
            case 0x00617773:
            {
                MKV_DATA char  data_chars[12]   = "lnyrtidfmvb";
                MKV_DATA uint16_t data_weights[11] = {
                    0x3e10, // 0.242424 
                    0x326d, // 0.196970 
                    0x2aab, // 0.166667 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                    0x03e1, // 0.015152 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // swe
            case 0x00657773:
            {
                MKV_DATA char  data_chars[10]   = "leafrtdps";
                MKV_DATA uint16_t data_weights[9] = {
                    0xc000, // 0.750000 
                    0x238e, // 0.138889 
                    0x071c, // 0.027778 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // swi
            case 0x00697773:
            {
                MKV_DATA char  data_chars[8]   = "ncltefm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6eef, // 0.433333 
                    0x6aab, // 0.416667 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // swo
            case 0x006f7773:
            {
                MKV_DATA char  data_chars[4]   = "rol";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa4ec, // 0.644231 
                    0x4ec5, // 0.307692 
                    0x0c4f, // 0.048077 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // swy
            case 0x00797773:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sya
            case 0x00617973:
            {
                MKV_DATA char  data_chars[3]   = "rd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syc
            case 0x00637973:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syd
            case 0x00647973:
            {
                MKV_DATA char  data_chars[5]   = "enlm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // sye
            case 0x00657973:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syg
            case 0x00677973:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syk
            case 0x006b7973:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syl
            case 0x006c7973:
            {
                MKV_DATA char  data_chars[3]   = "ev";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sym
            case 0x006d7973:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syn
            case 0x006e7973:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syr
            case 0x00727973:
            {
                MKV_DATA char  data_chars[3]   = "ef";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // sys
            case 0x00737973:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syt
            case 0x00747973:
            {
                MKV_DATA char  data_chars[3]   = "ch";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // syw
            case 0x00777973:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // s
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 't':
        {
            switch ( trigram_u32 )
            {
            // tab
            case 0x00626174:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tac
            case 0x00636174:
            {
                MKV_DATA char  data_chars[7]   = "okrueh";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6aab, // 0.416667 
                    0x4000, // 0.250000 
                    0x3555, // 0.208333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tad
            case 0x00646174:
            {
                MKV_DATA char  data_chars[9]   = "dhlmweon";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5000, // 0.312500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // taf
            case 0x00666174:
            {
                MKV_DATA char  data_chars[3]   = "fo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tag
            case 0x00676174:
            {
                MKV_DATA char  data_chars[6]   = "esdub";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa492, // 0.642857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tai
            case 0x00696174:
            {
                MKV_DATA char  data_chars[5]   = "nlrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaf28, // 0.684211 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tak
            case 0x006b6174:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tal
            case 0x006c6174:
            {
                MKV_DATA char  data_chars[13]   = "lbekmhfisyao";
                MKV_DATA uint16_t data_weights[12] = {
                    0x9643, // 0.586957 
                    0x1643, // 0.086957 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // tam
            case 0x006d6174:
            {
                MKV_DATA char  data_chars[6]   = "befws";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tan
            case 0x006e6174:
            {
                MKV_DATA char  data_chars[17]   = "dtsnwglbfhkyimap";
                MKV_DATA uint16_t data_weights[16] = {
                    0x2f15, // 0.183908 
                    0x234f, // 0.137931 
                    0x1d6d, // 0.114943 
                    0x1a7c, // 0.103448 
                    0x178a, // 0.091954 
                    0x0eb6, // 0.057471 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x05e3, // 0.022989 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // tap
            case 0x00706174:
            {
                MKV_DATA char  data_chars[6]   = "lehnt";
                MKV_DATA uint16_t data_weights[5] = {
                    0xba2f, // 0.727273 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tar
            case 0x00726174:
            {
                MKV_DATA char  data_chars[14]   = "dnlrtvpkbsceg";
                MKV_DATA uint16_t data_weights[13] = {
                    0x399a, // 0.225000 
                    0x2666, // 0.150000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1333, // 0.075000 
                    0x1333, // 0.075000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // tas
            case 0x00736174:
            {
                MKV_DATA char  data_chars[5]   = "thbl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tat
            case 0x00746174:
            {
                MKV_DATA char  data_chars[9]   = "theilwbs";
                MKV_DATA uint16_t data_weights[8] = {
                    0x589e, // 0.346154 
                    0x44ec, // 0.269231 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tau
            case 0x00756174:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tav
            case 0x00766174:
            {
                MKV_DATA char  data_chars[4]   = "eiy";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // taw
            case 0x00776174:
            {
                MKV_DATA char  data_chars[7]   = "aelnst";
                MKV_DATA uint16_t data_weights[6] = {
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tax
            case 0x00786174:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tay
            case 0x00796174:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tba
            case 0x00616274:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbe
            case 0x00656274:
            {
                MKV_DATA char  data_chars[3]   = "cr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tbo
            case 0x006f6274:
            {
                MKV_DATA char  data_chars[4]   = "uri";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tbr
            case 0x00726274:
            {
                MKV_DATA char  data_chars[4]   = "ioa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9d8a, // 0.615385 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tbu
            case 0x00756274:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tby
            case 0x00796274:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tca
            case 0x00616374:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tch
            case 0x00686374:
            {
                MKV_DATA char  data_chars[16]   = "eiafwlbcmuogthv";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3e70, // 0.243902 
                    0x29a0, // 0.162602 
                    0x214d, // 0.130081 
                    0x14d0, // 0.081301 
                    0x12bb, // 0.073171 
                    0x10a7, // 0.065041 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0c7d, // 0.048780 
                    0x0a68, // 0.040650 
                    0x042a, // 0.016260 
                    0x042a, // 0.016260 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                    0x0215, // 0.008130 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // tcl
            case 0x006c6374:
            {
                MKV_DATA char  data_chars[4]   = "ieo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tco
            case 0x006f6374:
            {
                MKV_DATA char  data_chars[5]   = "mtua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x85d1, // 0.522727 
                    0x68ba, // 0.409091 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tcr
            case 0x00726374:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tcu
            case 0x00756374:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tda
            case 0x00616474:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tde
            case 0x00656474:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tdo
            case 0x006f6474:
            {
                MKV_DATA char  data_chars[3]   = "wn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tea
            case 0x00616574:
            {
                MKV_DATA char  data_chars[9]   = "dcmntrsl";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd90b, // 0.847826 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0859, // 0.032609 
                    0x0591, // 0.021739 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                    0x02c8, // 0.010870 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // teb
            case 0x00626574:
            {
                MKV_DATA char  data_chars[9]   = "abeuwiry";
                MKV_DATA uint16_t data_weights[8] = {
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tec
            case 0x00636574:
            {
                MKV_DATA char  data_chars[4]   = "hlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ted
            case 0x00646574:
            {
                MKV_DATA char  data_chars[8]   = "esghobd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tee
            case 0x00656574:
            {
                MKV_DATA char  data_chars[8]   = "prnstdl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tef
            case 0x00666574:
            {
                MKV_DATA char  data_chars[4]   = "ofi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // teg
            case 0x00676574:
            {
                MKV_DATA char  data_chars[4]   = "lai";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // teh
            case 0x00686574:
            {
                MKV_DATA char  data_chars[5]   = "ioae";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tei
            case 0x00696574:
            {
                MKV_DATA char  data_chars[3]   = "gs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tek
            case 0x006b6574:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tel
            case 0x006c6574:
            {
                MKV_DATA char  data_chars[9]   = "elyaofhs";
                MKV_DATA uint16_t data_weights[8] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tem
            case 0x006d6574:
            {
                MKV_DATA char  data_chars[6]   = "poabe";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ten
            case 0x006e6574:
            {
                MKV_DATA char  data_chars[12]   = "hdstabcwfin";
                MKV_DATA uint16_t data_weights[11] = {
                    0x5d76, // 0.365079 
                    0x4514, // 0.269841 
                    0x1862, // 0.095238 
                    0x1041, // 0.063492 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0821, // 0.031746 
                    0x0821, // 0.031746 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                    0x0410, // 0.015873 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // teo
            case 0x006f6574:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tep
            case 0x00706574:
            {
                MKV_DATA char  data_chars[7]   = "phinsa";
                MKV_DATA uint16_t data_weights[6] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ter
            case 0x00726574:
            {
                MKV_DATA char  data_chars[22]   = "stlnbhfiwdrmygevcokap";
                MKV_DATA uint16_t data_weights[21] = {
                    0x3aab, // 0.229167 
                    0x1e39, // 0.118056 
                    0x19c7, // 0.100694 
                    0x12ab, // 0.072917 
                    0x12ab, // 0.072917 
                    0x10e4, // 0.065972 
                    0x0f1c, // 0.059028 
                    0x0e39, // 0.055556 
                    0x0b8e, // 0.045139 
                    0x0800, // 0.031250 
                    0x071c, // 0.027778 
                    0x0639, // 0.024306 
                    0x0639, // 0.024306 
                    0x0639, // 0.024306 
                    0x038e, // 0.013889 
                    0x02ab, // 0.010417 
                    0x01c7, // 0.006944 
                    0x01c7, // 0.006944 
                    0x00e4, // 0.003472 
                    0x00e4, // 0.003472 
                    0x00e4, // 0.003472 
                };
                return decision_fn( data_chars, data_weights, 21, input_weight, input_seed );
            }
            break;

            // tes
            case 0x00736574:
            {
                MKV_DATA char  data_chars[12]   = "thbwfmsdcgl";
                MKV_DATA uint16_t data_weights[11] = {
                    0x41a4, // 0.256410 
                    0x2df3, // 0.179487 
                    0x2df3, // 0.179487 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // tet
            case 0x00746574:
            {
                MKV_DATA char  data_chars[10]   = "chtwblfns";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // tev
            case 0x00766574:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tew
            case 0x00776574:
            {
                MKV_DATA char  data_chars[7]   = "aeiklt";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6276, // 0.384615 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tey
            case 0x00796574:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfe
            case 0x00656674:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfi
            case 0x00696674:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf5c3, // 0.960000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfl
            case 0x006c6674:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tfo
            case 0x006f6674:
            {
                MKV_DATA char  data_chars[4]   = "rlo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xf555, // 0.958333 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tfy
            case 0x00796674:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tga
            case 0x00616774:
            {
                MKV_DATA char  data_chars[4]   = "tvp";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tgo
            case 0x006f6774:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tgr
            case 0x00726774:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tha
            case 0x00616874:
            {
                MKV_DATA char  data_chars[12]   = "mlnycrtwkux";
                MKV_DATA uint16_t data_weights[11] = {
                    0x9a54, // 0.602837 
                    0x2f35, // 0.184397 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0743, // 0.028369 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x03a2, // 0.014184 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                    0x01d1, // 0.007092 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // thb
            case 0x00626874:
            {
                MKV_DATA char  data_chars[7]   = "uyroea";
                MKV_DATA uint16_t data_weights[6] = {
                    0x3cf4, // 0.238095 
                    0x3cf4, // 0.238095 
                    0x30c3, // 0.190476 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // thc
            case 0x00636874:
            {
                MKV_DATA char  data_chars[6]   = "oharu";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa5a6, // 0.647059 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // thd
            case 0x00646874:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // the
            case 0x00656874:
            {
                MKV_DATA char  data_chars[16]   = "rnlawdtmcybsfov";
                MKV_DATA uint16_t data_weights[15] = {
                    0xae14, // 0.680000 
                    0x1333, // 0.075000 
                    0x11ec, // 0.070000 
                    0x0e14, // 0.055000 
                    0x0666, // 0.025000 
                    0x03d7, // 0.015000 
                    0x03d7, // 0.015000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x028f, // 0.010000 
                    0x0148, // 0.005000 
                    0x0148, // 0.005000 
                    0x0148, // 0.005000 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // thf
            case 0x00666874:
            {
                MKV_DATA char  data_chars[4]   = "ilo";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thg
            case 0x00676874:
            {
                MKV_DATA char  data_chars[4]   = "aiw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // thh
            case 0x00686874:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thi
            case 0x00696874:
            {
                MKV_DATA char  data_chars[11]   = "lncaedmrso";
                MKV_DATA uint16_t data_weights[10] = {
                    0x5307, // 0.324324 
                    0x4530, // 0.270270 
                    0x1f23, // 0.121622 
                    0x1837, // 0.094595 
                    0x114c, // 0.067568 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                    0x0376, // 0.013514 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // thl
            case 0x006c6874:
            {
                MKV_DATA char  data_chars[6]   = "eaioy";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // thm
            case 0x006d6874:
            {
                MKV_DATA char  data_chars[5]   = "oeai";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // thn
            case 0x006e6874:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tho
            case 0x006f6874:
            {
                MKV_DATA char  data_chars[13]   = "rlunpmvgwces";
                MKV_DATA uint16_t data_weights[12] = {
                    0xd7d3, // 0.843066 
                    0x0a47, // 0.040146 
                    0x068a, // 0.025547 
                    0x068a, // 0.025547 
                    0x068a, // 0.025547 
                    0x03bd, // 0.014599 
                    0x01de, // 0.007299 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                    0x00ef, // 0.003650 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // thp
            case 0x00706874:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thr
            case 0x00726874:
            {
                MKV_DATA char  data_chars[6]   = "oeuia";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6db7, // 0.428571 
                    0x43eb, // 0.265306 
                    0x29cc, // 0.163265 
                    0x14e6, // 0.081633 
                    0x0fac, // 0.061224 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ths
            case 0x00736874:
            {
                MKV_DATA char  data_chars[4]   = "tde";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tht
            case 0x00746874:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thu
            case 0x00756874:
            {
                MKV_DATA char  data_chars[6]   = "rnmlx";
                MKV_DATA uint16_t data_weights[5] = {
                    0xd174, // 0.818182 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x05d1, // 0.022727 
                    0x05d1, // 0.022727 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // thv
            case 0x00766874:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // thw
            case 0x00776874:
            {
                MKV_DATA char  data_chars[5]   = "aoie";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc2de, // 0.761194 
                    0x1abf, // 0.104478 
                    0x16ed, // 0.089552 
                    0x0b76, // 0.044776 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // thy
            case 0x00796874:
            {
                MKV_DATA char  data_chars[10]   = "bcmpdhrsw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // tia
            case 0x00616974:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tib
            case 0x00626974:
            {
                MKV_DATA char  data_chars[4]   = "bes";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tic
            case 0x00636974:
            {
                MKV_DATA char  data_chars[5]   = "keho";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd99a, // 0.850000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tid
            case 0x00646974:
            {
                MKV_DATA char  data_chars[9]   = "ebcdmnpw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6aab, // 0.416667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tie
            case 0x00656974:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tif
            case 0x00666974:
            {
                MKV_DATA char  data_chars[3]   = "fo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tig
            case 0x00676974:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tik
            case 0x006b6974:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // til
            case 0x006c6974:
            {
                MKV_DATA char  data_chars[11]   = "elstbfgmkn";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4d65, // 0.302326 
                    0x417d, // 0.255814 
                    0x2fa1, // 0.186047 
                    0x17d0, // 0.093023 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // tim
            case 0x006d6974:
            {
                MKV_DATA char  data_chars[7]   = "beopsw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8889, // 0.533333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tin
            case 0x006e6974:
            {
                MKV_DATA char  data_chars[13]   = "gsedhtcknfmw";
                MKV_DATA uint16_t data_weights[12] = {
                    0xc53f, // 0.770492 
                    0x10c9, // 0.065574 
                    0x0865, // 0.032787 
                    0x064c, // 0.024590 
                    0x064c, // 0.024590 
                    0x064c, // 0.024590 
                    0x0432, // 0.016393 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                    0x0219, // 0.008197 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // tio
            case 0x006f6974:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tip
            case 0x00706974:
            {
                MKV_DATA char  data_chars[6]   = "tpsen";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tir
            case 0x00726974:
            {
                MKV_DATA char  data_chars[7]   = "ertvcl";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tis
            case 0x00736974:
            {
                MKV_DATA char  data_chars[12]   = "htbfclmwdks";
                MKV_DATA uint16_t data_weights[11] = {
                    0x6464, // 0.392157 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // tit
            case 0x00746974:
            {
                MKV_DATA char  data_chars[7]   = "tchlsm";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4aab, // 0.291667 
                    0x4aab, // 0.291667 
                    0x3555, // 0.208333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tiv
            case 0x00766974:
            {
                MKV_DATA char  data_chars[4]   = "ieo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tix
            case 0x00786974:
            {
                MKV_DATA char  data_chars[4]   = "aow";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tjo
            case 0x006f6a74:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tki
            case 0x00696b74:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tla
            case 0x00616c74:
            {
                MKV_DATA char  data_chars[7]   = "nkwsmr";
                MKV_DATA uint16_t data_weights[6] = {
                    0xbdef, // 0.741935 
                    0x18c6, // 0.096774 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tle
            case 0x00656c74:
            {
                MKV_DATA char  data_chars[19]   = "ystbwrihdmgcfapone";
                MKV_DATA uint16_t data_weights[18] = {
                    0x5134, // 0.317204 
                    0x268a, // 0.150538 
                    0x1a27, // 0.102151 
                    0x1606, // 0.086022 
                    0x0c63, // 0.048387 
                    0x0b03, // 0.043011 
                    0x0b03, // 0.043011 
                    0x09a2, // 0.037634 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x06e2, // 0.026882 
                    0x0581, // 0.021505 
                    0x0581, // 0.021505 
                    0x02c1, // 0.010753 
                    0x02c1, // 0.010753 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                    0x0160, // 0.005376 
                };
                return decision_fn( data_chars, data_weights, 18, input_weight, input_seed );
            }
            break;

            // tli
            case 0x00696c74:
            {
                MKV_DATA char  data_chars[4]   = "npe";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe666, // 0.900000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tlo
            case 0x006f6c74:
            {
                MKV_DATA char  data_chars[6]   = "wecop";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5a5a, // 0.352941 
                    0x4b4b, // 0.294118 
                    0x3c3c, // 0.235294 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tly
            case 0x00796c74:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tma
            case 0x00616d74:
            {
                MKV_DATA char  data_chars[7]   = "nrstwd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7000, // 0.437500 
                    0x5000, // 0.312500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tme
            case 0x00656d74:
            {
                MKV_DATA char  data_chars[8]   = "rlnstae";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tmi
            case 0x00696d74:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tmo
            case 0x006f6d74:
            {
                MKV_DATA char  data_chars[5]   = "ronu";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5d17, // 0.363636 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tna
            case 0x00616e74:
            {
                MKV_DATA char  data_chars[5]   = "lgsb";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tne
            case 0x00656e74:
            {
                MKV_DATA char  data_chars[6]   = "yslrw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9746, // 0.590909 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tno
            case 0x006f6e74:
            {
                MKV_DATA char  data_chars[4]   = "rel";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tnu
            case 0x00756e74:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // toa
            case 0x00616f74:
            {
                MKV_DATA char  data_chars[4]   = "dkt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tob
            case 0x00626f74:
            {
                MKV_DATA char  data_chars[7]   = "hiosye";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // toc
            case 0x00636f74:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tod
            case 0x00646f74:
            {
                MKV_DATA char  data_chars[8]   = "dpybehm";
                MKV_DATA uint16_t data_weights[7] = {
                    0x745d, // 0.454545 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // tof
            case 0x00666f74:
            {
                MKV_DATA char  data_chars[3]   = "to";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf685, // 0.962963 
                    0x097b, // 0.037037 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tog
            case 0x00676f74:
            {
                MKV_DATA char  data_chars[3]   = "us";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tok
            case 0x006b6f74:
            {
                MKV_DATA char  data_chars[4]   = "eoy";
                MKV_DATA uint16_t data_weights[3] = {
                    0xee58, // 0.931035 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tol
            case 0x006c6f74:
            {
                MKV_DATA char  data_chars[14]   = "lpcsvwedfghbm";
                MKV_DATA uint16_t data_weights[13] = {
                    0x70a4, // 0.440000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // tom
            case 0x006d6f74:
            {
                MKV_DATA char  data_chars[5]   = "pslt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ton
            case 0x006e6f74:
            {
                MKV_DATA char  data_chars[20]   = "esgwbyfvhdlcaotimzn";
                MKV_DATA uint16_t data_weights[19] = {
                    0xbdb0, // 0.740964 
                    0x11bc, // 0.069277 
                    0x07b6, // 0.030120 
                    0x062b, // 0.024096 
                    0x0566, // 0.021084 
                    0x04a0, // 0.018072 
                    0x03db, // 0.015060 
                    0x0316, // 0.012048 
                    0x0316, // 0.012048 
                    0x0250, // 0.009036 
                    0x0250, // 0.009036 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x018b, // 0.006024 
                    0x00c5, // 0.003012 
                    0x00c5, // 0.003012 
                    0x00c5, // 0.003012 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // too
            case 0x006f6f74:
            {
                MKV_DATA char  data_chars[4]   = "tpd";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // top
            case 0x00706f74:
            {
                MKV_DATA char  data_chars[10]   = "sptclregh";
                MKV_DATA uint16_t data_weights[9] = {
                    0x4ec5, // 0.307692 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // tor
            case 0x00726f74:
            {
                MKV_DATA char  data_chars[17]   = "rtybmkpoiwqvcefu";
                MKV_DATA uint16_t data_weights[16] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // tos
            case 0x00736f74:
            {
                MKV_DATA char  data_chars[5]   = "best";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tot
            case 0x00746f74:
            {
                MKV_DATA char  data_chars[9]   = "tnhlfmoe";
                MKV_DATA uint16_t data_weights[8] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tou
            case 0x00756f74:
            {
                MKV_DATA char  data_chars[5]   = "rlgt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tov
            case 0x00766f74:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tow
            case 0x00776f74:
            {
                MKV_DATA char  data_chars[13]   = "neafgstubclm";
                MKV_DATA uint16_t data_weights[12] = {
                    0xbe5c, // 0.743590 
                    0x2532, // 0.145299 
                    0x0690, // 0.025641 
                    0x0460, // 0.017094 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                    0x0230, // 0.008547 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // tox
            case 0x00786f74:
            {
                MKV_DATA char  data_chars[4]   = "eht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // toy
            case 0x00796f74:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpe
            case 0x00657074:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpi
            case 0x00697074:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpo
            case 0x006f7074:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tpu
            case 0x00757074:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tqu
            case 0x00757174:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tra
            case 0x00617274:
            {
                MKV_DATA char  data_chars[15]   = "nmvdctwpisbzgf";
                MKV_DATA uint16_t data_weights[14] = {
                    0x417d, // 0.255814 
                    0x29ad, // 0.162791 
                    0x17d0, // 0.093023 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x11dc, // 0.069767 
                    0x0be8, // 0.046512 
                    0x0be8, // 0.046512 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                    0x05f4, // 0.023256 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // tre
            case 0x00657274:
            {
                MKV_DATA char  data_chars[21]   = "evgwnstlbamdyfhkrzcq";
                MKV_DATA uint16_t data_weights[20] = {
                    0x2fe8, // 0.187135 
                    0x1f70, // 0.122807 
                    0x1d31, // 0.114035 
                    0x1675, // 0.087719 
                    0x15b5, // 0.084795 
                    0x11f7, // 0.070175 
                    0x0e39, // 0.055556 
                    0x0d79, // 0.052632 
                    0x0b3a, // 0.043860 
                    0x0a7b, // 0.040936 
                    0x083c, // 0.032164 
                    0x06bd, // 0.026316 
                    0x053d, // 0.020468 
                    0x047e, // 0.017544 
                    0x02ff, // 0.011696 
                    0x02ff, // 0.011696 
                    0x023f, // 0.008772 
                    0x017f, // 0.005848 
                    0x00c0, // 0.002924 
                    0x00c0, // 0.002924 
                };
                return decision_fn( data_chars, data_weights, 20, input_weight, input_seed );
            }
            break;

            // tri
            case 0x00697274:
            {
                MKV_DATA char  data_chars[12]   = "nmdclsgapxt";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2555, // 0.145833 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // tro
            case 0x006f7274:
            {
                MKV_DATA char  data_chars[15]   = "wputdacxosynbl";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3d38, // 0.239130 
                    0x2c86, // 0.173913 
                    0x2164, // 0.130435 
                    0x1bd3, // 0.108696 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // tru
            case 0x00757274:
            {
                MKV_DATA char  data_chars[13]   = "smenrtbclagd";
                MKV_DATA uint16_t data_weights[12] = {
                    0x3dcb, // 0.241379 
                    0x34f7, // 0.206897 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // try
            case 0x00797274:
            {
                MKV_DATA char  data_chars[4]   = "mst";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tsa
            case 0x00617374:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsb
            case 0x00627374:
            {
                MKV_DATA char  data_chars[6]   = "uroye";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tsc
            case 0x00637374:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tse
            case 0x00657374:
            {
                MKV_DATA char  data_chars[6]   = "yalns";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tsf
            case 0x00667374:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8889, // 0.533333 
                    0x6666, // 0.400000 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tsg
            case 0x00677374:
            {
                MKV_DATA char  data_chars[4]   = "rio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tsh
            case 0x00687374:
            {
                MKV_DATA char  data_chars[5]   = "aioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x44ec, // 0.269231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tsi
            case 0x00697374:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsk
            case 0x006b7374:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tsl
            case 0x006c7374:
            {
                MKV_DATA char  data_chars[5]   = "eaio";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tsm
            case 0x006d7374:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tso
            case 0x006f7374:
            {
                MKV_DATA char  data_chars[6]   = "nelpr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x745d, // 0.454545 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tsp
            case 0x00707374:
            {
                MKV_DATA char  data_chars[3]   = "ui";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tst
            case 0x00747374:
            {
                MKV_DATA char  data_chars[6]   = "oaire";
                MKV_DATA uint16_t data_weights[5] = {
                    0x7627, // 0.461538 
                    0x3b14, // 0.230769 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tsw
            case 0x00777374:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe38e, // 0.888889 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tta
            case 0x00617474:
            {
                MKV_DATA char  data_chars[10]   = "gfdklmwcu";
                MKV_DATA uint16_t data_weights[9] = {
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // ttb
            case 0x00627474:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tte
            case 0x00657474:
            {
                MKV_DATA char  data_chars[7]   = "rnsdwy";
                MKV_DATA uint16_t data_weights[6] = {
                    0xb454, // 0.704403 
                    0x36be, // 0.213836 
                    0x101a, // 0.062893 
                    0x019c, // 0.006289 
                    0x019c, // 0.006289 
                    0x019c, // 0.006289 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tth
            case 0x00687474:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tti
            case 0x00697474:
            {
                MKV_DATA char  data_chars[6]   = "nsfel";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8800, // 0.531250 
                    0x6800, // 0.406250 
                    0x0800, // 0.031250 
                    0x0400, // 0.015625 
                    0x0400, // 0.015625 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ttl
            case 0x006c7474:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xfb58, // 0.981818 
                    0x04a8, // 0.018182 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tto
            case 0x006f7474:
            {
                MKV_DATA char  data_chars[8]   = "nmcefwx";
                MKV_DATA uint16_t data_weights[7] = {
                    0xdb6e, // 0.857143 
                    0x0ea1, // 0.057143 
                    0x0c31, // 0.047619 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                    0x0270, // 0.009524 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ttr
            case 0x00727474:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tts
            case 0x00737474:
            {
                MKV_DATA char  data_chars[6]   = "bafow";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ttv
            case 0x00767474:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ttw
            case 0x00777474:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tty
            case 0x00797474:
            {
                MKV_DATA char  data_chars[4]   = "wnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tub
            case 0x00627574:
            {
                MKV_DATA char  data_chars[7]   = "bshntw";
                MKV_DATA uint16_t data_weights[6] = {
                    0xa000, // 0.625000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tuc
            case 0x00637574:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tud
            case 0x00647574:
            {
                MKV_DATA char  data_chars[7]   = "dhloey";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // tue
            case 0x00657574:
            {
                MKV_DATA char  data_chars[4]   = "lsb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tuf
            case 0x00667574:
            {
                MKV_DATA char  data_chars[4]   = "fnt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tug
            case 0x00677574:
            {
                MKV_DATA char  data_chars[4]   = "bfh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tuk
            case 0x006b7574:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tul
            case 0x006c7574:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tum
            case 0x006d7574:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tun
            case 0x006e7574:
            {
                MKV_DATA char  data_chars[9]   = "setnwbgl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // tup
            case 0x00707574:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tur
            case 0x00727574:
            {
                MKV_DATA char  data_chars[14]   = "nflvmsbtgkewr";
                MKV_DATA uint16_t data_weights[13] = {
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // tus
            case 0x00737574:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tut
            case 0x00747574:
            {
                MKV_DATA char  data_chars[6]   = "tbnsw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tux
            case 0x00787574:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tva
            case 0x00617674:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tvi
            case 0x00697674:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twa
            case 0x00617774:
            {
                MKV_DATA char  data_chars[5]   = "lyrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5d17, // 0.363636 
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // twe
            case 0x00657774:
            {
                MKV_DATA char  data_chars[6]   = "lenrm";
                MKV_DATA uint16_t data_weights[5] = {
                    0xc925, // 0.785714 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // twh
            case 0x00687774:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twi
            case 0x00697774:
            {
                MKV_DATA char  data_chars[6]   = "ctsng";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa257, // 0.634146 
                    0x2577, // 0.146341 
                    0x1f38, // 0.121951 
                    0x12bb, // 0.073171 
                    0x063e, // 0.024390 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // two
            case 0x006f7774:
            {
                MKV_DATA char  data_chars[5]   = "orld";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa1f6, // 0.632653 
                    0x5398, // 0.326531 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // twr
            case 0x00727774:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // twy
            case 0x00797774:
            {
                MKV_DATA char  data_chars[6]   = "nwcdf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // tya
            case 0x00617974:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyb
            case 0x00627974:
            {
                MKV_DATA char  data_chars[4]   = "uye";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tyc
            case 0x00637974:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyd
            case 0x00647974:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tye
            case 0x00657974:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyh
            case 0x00687974:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyl
            case 0x006c7974:
            {
                MKV_DATA char  data_chars[3]   = "ed";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tym
            case 0x006d7974:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyn
            case 0x006e7974:
            {
                MKV_DATA char  data_chars[5]   = "eidt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tyr
            case 0x00727974:
            {
                MKV_DATA char  data_chars[5]   = "irse";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // tys
            case 0x00737974:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tyt
            case 0x00747974:
            {
                MKV_DATA char  data_chars[4]   = "htr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tyw
            case 0x00777974:
            {
                MKV_DATA char  data_chars[4]   = "eoa";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // tzf
            case 0x00667a74:
            {
                return 'o';
            }
            break;

            // tzg
            case 0x00677a74:
            {
                return 'a';
            }
            break;

            // tzh
            case 0x00687a74:
            {
                MKV_DATA char  data_chars[3]   = "eu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // tzp
            case 0x00707a74:
            {
                return 'a';
            }
            break;

            // tzw
            case 0x00777a74:
            {
                return 'a';
            }
            break;

            } // switch _u32
        } // t
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'u':
        {
            switch ( trigram_u32 )
            {
            // uab
            case 0x00626175:
            {
                MKV_DATA char  data_chars[3]   = "br";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uad
            case 0x00646175:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uag
            case 0x00676175:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uai
            case 0x00696175:
            {
                MKV_DATA char  data_chars[3]   = "nd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uak
            case 0x006b6175:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ual
            case 0x006c6175:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uan
            case 0x006e6175:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uar
            case 0x00726175:
            {
                MKV_DATA char  data_chars[8]   = "rdlhnte";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // uat
            case 0x00746175:
            {
                MKV_DATA char  data_chars[3]   = "ft";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubb
            case 0x00626275:
            {
                MKV_DATA char  data_chars[8]   = "eilsauy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ubc
            case 0x00636275:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ube
            case 0x00656275:
            {
                MKV_DATA char  data_chars[4]   = "rdn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ubh
            case 0x00686275:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubi
            case 0x00696275:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubl
            case 0x006c6275:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ubm
            case 0x006d6275:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubn
            case 0x006e6275:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubo
            case 0x006f6275:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubs
            case 0x00736275:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubt
            case 0x00746275:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubu
            case 0x00756275:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ubw
            case 0x00776275:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uca
            case 0x00616375:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ucc
            case 0x00636375:
            {
                MKV_DATA char  data_chars[4]   = "elo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uce
            case 0x00656375:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uch
            case 0x00686375:
            {
                MKV_DATA char  data_chars[6]   = "eails";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uci
            case 0x00696375:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uck
            case 0x006b6375:
            {
                MKV_DATA char  data_chars[18]   = "lienshotmfbrwpadc";
                MKV_DATA uint16_t data_weights[17] = {
                    0x409f, // 0.252427 
                    0x22cc, // 0.135922 
                    0x1dd3, // 0.116505 
                    0x13e2, // 0.077670 
                    0x13e2, // 0.077670 
                    0x0eea, // 0.058252 
                    0x0c6d, // 0.048544 
                    0x0c6d, // 0.048544 
                    0x09f1, // 0.038835 
                    0x09f1, // 0.038835 
                    0x0775, // 0.029126 
                    0x04f9, // 0.019417 
                    0x04f9, // 0.019417 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                    0x027c, // 0.009709 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ucl
            case 0x006c6375:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uct
            case 0x00746375:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ucu
            case 0x00756375:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uda
            case 0x00616475:
            {
                MKV_DATA char  data_chars[3]   = "mn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udb
            case 0x00626475:
            {
                MKV_DATA char  data_chars[5]   = "rouy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // udd
            case 0x00646475:
            {
                MKV_DATA char  data_chars[8]   = "lieoasy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5b6e, // 0.357143 
                    0x430c, // 0.261905 
                    0x2aab, // 0.166667 
                    0x1862, // 0.095238 
                    0x1249, // 0.071429 
                    0x0618, // 0.023810 
                    0x0618, // 0.023810 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ude
            case 0x00656475:
            {
                MKV_DATA char  data_chars[6]   = "nsfla";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // udf
            case 0x00666475:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udg
            case 0x00676475:
            {
                MKV_DATA char  data_chars[7]   = "ewilrv";
                MKV_DATA uint16_t data_weights[6] = {
                    0x8000, // 0.500000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // udh
            case 0x00686475:
            {
                MKV_DATA char  data_chars[5]   = "aoue";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // udi
            case 0x00696475:
            {
                MKV_DATA char  data_chars[4]   = "tkm";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // udl
            case 0x006c6475:
            {
                MKV_DATA char  data_chars[5]   = "eoai";
                MKV_DATA uint16_t data_weights[4] = {
                    0xae8c, // 0.681818 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // udn
            case 0x006e6475:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udo
            case 0x006f6475:
            {
                MKV_DATA char  data_chars[5]   = "rcnx";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uds
            case 0x00736475:
            {
                MKV_DATA char  data_chars[4]   = "twb";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // udv
            case 0x00766475:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // udw
            case 0x00776475:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // udy
            case 0x00796475:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ueb
            case 0x00626575:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ued
            case 0x00646575:
            {
                MKV_DATA char  data_chars[3]   = "gu";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uee
            case 0x00656575:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ueg
            case 0x00676575:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uel
            case 0x006c6575:
            {
                MKV_DATA char  data_chars[3]   = "ms";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uem
            case 0x006d6575:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uen
            case 0x006e6575:
            {
                MKV_DATA char  data_chars[3]   = "id";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uer
            case 0x00726575:
            {
                MKV_DATA char  data_chars[9]   = "dnstboma";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4444, // 0.266667 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ues
            case 0x00736575:
            {
                MKV_DATA char  data_chars[4]   = "tln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uet
            case 0x00746575:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uev
            case 0x00766575:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uew
            case 0x00776575:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ufa
            case 0x00616675:
            {
                MKV_DATA char  data_chars[3]   = "ub";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uff
            case 0x00666675:
            {
                MKV_DATA char  data_chars[9]   = "ilocersm";
                MKV_DATA uint16_t data_weights[8] = {
                    0x50d8, // 0.315789 
                    0x286c, // 0.157895 
                    0x286c, // 0.157895 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ufn
            case 0x006e6675:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uft
            case 0x00746675:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uga
            case 0x00616775:
            {
                MKV_DATA char  data_chars[3]   = "rt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugb
            case 0x00626775:
            {
                MKV_DATA char  data_chars[5]   = "yaor";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uge
            case 0x00656775:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugf
            case 0x00666775:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugg
            case 0x00676775:
            {
                MKV_DATA char  data_chars[6]   = "liase";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ugh
            case 0x00686775:
            {
                MKV_DATA char  data_chars[13]   = "talsebiuwcfm";
                MKV_DATA uint16_t data_weights[12] = {
                    0x898d, // 0.537313 
                    0x2263, // 0.134328 
                    0x0f49, // 0.059701 
                    0x0f49, // 0.059701 
                    0x0b76, // 0.044776 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x07a4, // 0.029851 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // ugl
            case 0x006c6775:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugm
            case 0x006d6775:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugn
            case 0x006e6775:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugs
            case 0x00736775:
            {
                MKV_DATA char  data_chars[3]   = "dw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugt
            case 0x00746775:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugu
            case 0x00756775:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ugw
            case 0x00776775:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uic
            case 0x00636975:
            {
                MKV_DATA char  data_chars[3]   = "ke";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uid
            case 0x00646975:
            {
                MKV_DATA char  data_chars[5]   = "ehns";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uil
            case 0x006c6975:
            {
                MKV_DATA char  data_chars[4]   = "dst";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uin
            case 0x006e6975:
            {
                MKV_DATA char  data_chars[5]   = "tabe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uir
            case 0x00726975:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uis
            case 0x00736975:
            {
                MKV_DATA char  data_chars[6]   = "helty";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uit
            case 0x00746975:
            {
                MKV_DATA char  data_chars[5]   = "hioe";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uix
            case 0x00786975:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uiz
            case 0x007a6975:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uke
            case 0x00656b75:
            {
                MKV_DATA char  data_chars[3]   = "sl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uki
            case 0x00696b75:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uks
            case 0x00736b75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulb
            case 0x00626c75:
            {
                MKV_DATA char  data_chars[7]   = "eoryua";
                MKV_DATA uint16_t data_weights[6] = {
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x36db, // 0.214286 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ulc
            case 0x00636c75:
            {
                MKV_DATA char  data_chars[5]   = "oaeh";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8ba3, // 0.545455 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uld
            case 0x00646c75:
            {
                MKV_DATA char  data_chars[9]   = "eshroanw";
                MKV_DATA uint16_t data_weights[8] = {
                    0x68ba, // 0.409091 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ule
            case 0x00656c75:
            {
                MKV_DATA char  data_chars[5]   = "yfrs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ulf
            case 0x00666c75:
            {
                MKV_DATA char  data_chars[4]   = "orl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc71c, // 0.777778 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ulg
            case 0x00676c75:
            {
                MKV_DATA char  data_chars[4]   = "rha";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ulh
            case 0x00686c75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uli
            case 0x00696c75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulk
            case 0x006b6c75:
            {
                MKV_DATA char  data_chars[6]   = "ieblw";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ull
            case 0x006c6c75:
            {
                MKV_DATA char  data_chars[11]   = "eioabwghsc";
                MKV_DATA uint16_t data_weights[10] = {
                    0x609b, // 0.377358 
                    0x39f6, // 0.226415 
                    0x2b79, // 0.169811 
                    0x0e7e, // 0.056604 
                    0x0e7e, // 0.056604 
                    0x09a9, // 0.037736 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // ulm
            case 0x006d6c75:
            {
                MKV_DATA char  data_chars[6]   = "eilos";
                MKV_DATA uint16_t data_weights[5] = {
                    0xbbbc, // 0.733333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // uln
            case 0x006e6c75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulo
            case 0x006f6c75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulp
            case 0x00706c75:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulr
            case 0x00726c75:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uls
            case 0x00736c75:
            {
                MKV_DATA char  data_chars[9]   = "tehfdgol";
                MKV_DATA uint16_t data_weights[8] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ult
            case 0x00746c75:
            {
                MKV_DATA char  data_chars[5]   = "ohiw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xaaab, // 0.666667 
                    0x30c3, // 0.190476 
                    0x1862, // 0.095238 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ulv
            case 0x00766c75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xedb7, // 0.928571 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ulw
            case 0x00776c75:
            {
                MKV_DATA char  data_chars[4]   = "oei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uly
            case 0x00796c75:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uma
            case 0x00616d75:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umb
            case 0x00626d75:
            {
                MKV_DATA char  data_chars[8]   = "elyuoij";
                MKV_DATA uint16_t data_weights[7] = {
                    0x61e2, // 0.382353 
                    0x43c4, // 0.264706 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // umd
            case 0x00646d75:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ume
            case 0x00656d75:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umf
            case 0x00666d75:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uml
            case 0x006c6d75:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umm
            case 0x006d6d75:
            {
                MKV_DATA char  data_chars[4]   = "eio";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe38e, // 0.888889 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umn
            case 0x006e6d75:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umo
            case 0x006f6d75:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ump
            case 0x00706d75:
            {
                MKV_DATA char  data_chars[9]   = "stleifya";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5174, // 0.318182 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // umr
            case 0x00726d75:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ums
            case 0x00736d75:
            {
                MKV_DATA char  data_chars[4]   = "aht";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // umt
            case 0x00746d75:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // umw
            case 0x00776d75:
            {
                MKV_DATA char  data_chars[3]   = "he";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // una
            case 0x00616e75:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unb
            case 0x00626e75:
            {
                MKV_DATA char  data_chars[5]   = "urya";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // unc
            case 0x00636e75:
            {
                MKV_DATA char  data_chars[8]   = "ohetkla";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x3333, // 0.200000 
                    0x2666, // 0.150000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // und
            case 0x00646e75:
            {
                MKV_DATA char  data_chars[16]   = "esolrafhibwmytg";
                MKV_DATA uint16_t data_weights[15] = {
                    0x4afd, // 0.292929 
                    0x3122, // 0.191919 
                    0x1746, // 0.090909 
                    0x121a, // 0.070707 
                    0x121a, // 0.070707 
                    0x0f84, // 0.060606 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x07c2, // 0.030303 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                    0x052c, // 0.020202 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // une
            case 0x00656e75:
            {
                MKV_DATA char  data_chars[5]   = "ahsy";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // unf
            case 0x00666e75:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ung
            case 0x00676e75:
            {
                MKV_DATA char  data_chars[6]   = "easru";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6bca, // 0.421053 
                    0x50d8, // 0.315789 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // unh
            case 0x00686e75:
            {
                MKV_DATA char  data_chars[5]   = "aieo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uni
            case 0x00696e75:
            {
                MKV_DATA char  data_chars[5]   = "tvos";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // unk
            case 0x006b6e75:
            {
                MKV_DATA char  data_chars[4]   = "eis";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // unl
            case 0x006c6e75:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unm
            case 0x006d6e75:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unn
            case 0x006e6e75:
            {
                MKV_DATA char  data_chars[7]   = "iyeaos";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5075, // 0.314286 
                    0x4925, // 0.285714 
                    0x41d4, // 0.257143 
                    0x0ea1, // 0.057143 
                    0x0ea1, // 0.057143 
                    0x0750, // 0.028571 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // unr
            case 0x00726e75:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uns
            case 0x00736e75:
            {
                MKV_DATA char  data_chars[14]   = "tldfhebacwiom";
                MKV_DATA uint16_t data_weights[13] = {
                    0x6222, // 0.383333 
                    0x2aab, // 0.166667 
                    0x199a, // 0.100000 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // unt
            case 0x00746e75:
            {
                MKV_DATA char  data_chars[14]   = "oisehlfnraywj";
                MKV_DATA uint16_t data_weights[13] = {
                    0x47ae, // 0.280000 
                    0x2fc9, // 0.186667 
                    0x2fc9, // 0.186667 
                    0x1eb8, // 0.120000 
                    0x1111, // 0.066667 
                    0x0a3d, // 0.040000 
                    0x06d4, // 0.026667 
                    0x06d4, // 0.026667 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                    0x036a, // 0.013333 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // unv
            case 0x00766e75:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // unw
            case 0x00776e75:
            {
                MKV_DATA char  data_chars[5]   = "eoia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uod
            case 0x00646f75:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uoi
            case 0x00696f75:
            {
                MKV_DATA char  data_chars[3]   = "st";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uor
            case 0x00726f75:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upa
            case 0x00617075:
            {
                MKV_DATA char  data_chars[3]   = "vc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upc
            case 0x00637075:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upd
            case 0x00647075:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upe
            case 0x00657075:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upg
            case 0x00677075:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uph
            case 0x00687075:
            {
                MKV_DATA char  data_chars[4]   = "aei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // upi
            case 0x00697075:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upl
            case 0x006c7075:
            {
                MKV_DATA char  data_chars[5]   = "aoey";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // upm
            case 0x006d7075:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upn
            case 0x006e7075:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upo
            case 0x006f7075:
            {
                MKV_DATA char  data_chars[3]   = "nt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upp
            case 0x00707075:
            {
                MKV_DATA char  data_chars[5]   = "eiap";
                MKV_DATA uint16_t data_weights[4] = {
                    0x999a, // 0.600000 
                    0x4444, // 0.266667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // upr
            case 0x00727075:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ups
            case 0x00737075:
            {
                MKV_DATA char  data_chars[4]   = "hlt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // upt
            case 0x00747075:
            {
                MKV_DATA char  data_chars[3]   = "oh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // upw
            case 0x00777075:
            {
                MKV_DATA char  data_chars[5]   = "aeoi";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ura
            case 0x00617275:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // urb
            case 0x00627275:
            {
                MKV_DATA char  data_chars[6]   = "raeio";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6666, // 0.400000 
                    0x4ccd, // 0.300000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // urc
            case 0x00637275:
            {
                MKV_DATA char  data_chars[5]   = "hoae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdd9d, // 0.865672 
                    0x1abf, // 0.104478 
                    0x03d2, // 0.014925 
                    0x03d2, // 0.014925 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urd
            case 0x00647275:
            {
                MKV_DATA char  data_chars[8]   = "iroswac";
                MKV_DATA uint16_t data_weights[7] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ure
            case 0x00657275:
            {
                MKV_DATA char  data_chars[5]   = "safw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urf
            case 0x00667275:
            {
                MKV_DATA char  data_chars[5]   = "lodm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urg
            case 0x00677275:
            {
                MKV_DATA char  data_chars[8]   = "haeiouy";
                MKV_DATA uint16_t data_weights[7] = {
                    0x9bd3, // 0.608696 
                    0x3216, // 0.195652 
                    0x10b2, // 0.065217 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0591, // 0.021739 
                    0x0591, // 0.021739 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // urh
            case 0x00687275:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uri
            case 0x00697275:
            {
                MKV_DATA char  data_chars[5]   = "ctas";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // urk
            case 0x006b7275:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // url
            case 0x006c7275:
            {
                MKV_DATA char  data_chars[10]   = "eoiastbpw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5dde, // 0.366667 
                    0x2eef, // 0.183333 
                    0x2aab, // 0.166667 
                    0x2666, // 0.150000 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // urm
            case 0x006d7275:
            {
                MKV_DATA char  data_chars[6]   = "aeios";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // urn
            case 0x006e7275:
            {
                MKV_DATA char  data_chars[18]   = "ehsaitobdfwrcmvgl";
                MKV_DATA uint16_t data_weights[17] = {
                    0xa0a1, // 0.627451 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0bb6, // 0.045752 
                    0x085e, // 0.032680 
                    0x085e, // 0.032680 
                    0x06b1, // 0.026144 
                    0x06b1, // 0.026144 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0359, // 0.013072 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                    0x01ac, // 0.006536 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // urp
            case 0x00707275:
            {
                MKV_DATA char  data_chars[4]   = "eha";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // urr
            case 0x00727275:
            {
                MKV_DATA char  data_chars[7]   = "oieasy";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5be6, // 0.358974 
                    0x3483, // 0.205128 
                    0x2df3, // 0.179487 
                    0x20d2, // 0.128205 
                    0x13b1, // 0.076923 
                    0x0d21, // 0.051282 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // urs
            case 0x00737275:
            {
                MKV_DATA char  data_chars[9]   = "tlecdbwf";
                MKV_DATA uint16_t data_weights[8] = {
                    0xd5a4, // 0.834532 
                    0x1093, // 0.064748 
                    0x0935, // 0.035971 
                    0x0586, // 0.021583 
                    0x0586, // 0.021583 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                    0x01d7, // 0.007194 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // urt
            case 0x00747275:
            {
                MKV_DATA char  data_chars[11]   = "ohiewlnsmr";
                MKV_DATA uint16_t data_weights[10] = {
                    0x7d47, // 0.489362 
                    0x3105, // 0.191489 
                    0x1b3c, // 0.106383 
                    0x1057, // 0.063830 
                    0x0ae5, // 0.042553 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                    0x0572, // 0.021277 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // urv
            case 0x00767275:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // urw
            case 0x00777275:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0x745d, // 0.454545 
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ury
            case 0x00797275:
            {
                MKV_DATA char  data_chars[6]   = "aslnb";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // urz
            case 0x007a7275:
            {
                MKV_DATA char  data_chars[4]   = "etl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // usa
            case 0x00617375:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usb
            case 0x00627375:
            {
                MKV_DATA char  data_chars[6]   = "yaoru";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // usc
            case 0x00637375:
            {
                MKV_DATA char  data_chars[3]   = "ol";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usd
            case 0x00647375:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // use
            case 0x00657375:
            {
                MKV_DATA char  data_chars[6]   = "shwyb";
                MKV_DATA uint16_t data_weights[5] = {
                    0xa666, // 0.650000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // usf
            case 0x00667375:
            {
                MKV_DATA char  data_chars[3]   = "le";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usg
            case 0x00677375:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ush
            case 0x00687375:
            {
                MKV_DATA char  data_chars[16]   = "eamcbfyltiowgud";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3232, // 0.196078 
                    0x2323, // 0.137255 
                    0x1e1e, // 0.117647 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x1414, // 0.078431 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0a0a, // 0.039216 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                    0x0505, // 0.019608 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // usk
            case 0x006b7375:
            {
                MKV_DATA char  data_chars[3]   = "hi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usl
            case 0x006c7375:
            {
                MKV_DATA char  data_chars[5]   = "eiao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // uso
            case 0x006f7375:
            {
                MKV_DATA char  data_chars[3]   = "np";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usp
            case 0x00707375:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uss
            case 0x00737375:
            {
                MKV_DATA char  data_chars[4]   = "eia";
                MKV_DATA uint16_t data_weights[3] = {
                    0x89d9, // 0.538462 
                    0x3b14, // 0.230769 
                    0x3b14, // 0.230769 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ust
            case 0x00747375:
            {
                MKV_DATA char  data_chars[9]   = "oeahiyrl";
                MKV_DATA uint16_t data_weights[8] = {
                    0x67c9, // 0.405405 
                    0x306f, // 0.189189 
                    0x2298, // 0.135135 
                    0x14c2, // 0.081081 
                    0x14c2, // 0.081081 
                    0x0dd6, // 0.054054 
                    0x06eb, // 0.027027 
                    0x06eb, // 0.027027 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // usv
            case 0x00767375:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // usw
            case 0x00777375:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uta
            case 0x00617475:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utb
            case 0x00627475:
            {
                MKV_DATA char  data_chars[5]   = "ouye";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // utc
            case 0x00637475:
            {
                MKV_DATA char  data_chars[4]   = "oha";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ute
            case 0x00657475:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utf
            case 0x00667475:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utg
            case 0x00677475:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uth
            case 0x00687475:
            {
                MKV_DATA char  data_chars[20]   = "weaocrbmfilsdvgnupt";
                MKV_DATA uint16_t data_weights[19] = {
                    0x2762, // 0.153846 
                    0x20d2, // 0.128205 
                    0x1a42, // 0.102564 
                    0x16f9, // 0.089744 
                    0x13b1, // 0.076923 
                    0x1069, // 0.064103 
                    0x1069, // 0.064103 
                    0x0d21, // 0.051282 
                    0x0d21, // 0.051282 
                    0x09d9, // 0.038462 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                    0x0348, // 0.012821 
                };
                return decision_fn( data_chars, data_weights, 19, input_weight, input_seed );
            }
            break;

            // utk
            case 0x006b7475:
            {
                return 'i';
            }
            break;

            // utl
            case 0x006c7475:
            {
                MKV_DATA char  data_chars[4]   = "eao";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa5a6, // 0.647059 
                    0x3c3c, // 0.235294 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // utm
            case 0x006d7475:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // utn
            case 0x006e7475:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uto
            case 0x006f7475:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uts
            case 0x00737475:
            {
                MKV_DATA char  data_chars[5]   = "fhob";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // utt
            case 0x00747475:
            {
                MKV_DATA char  data_chars[9]   = "eosliarh";
                MKV_DATA uint16_t data_weights[8] = {
                    0x599a, // 0.350000 
                    0x5555, // 0.333333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x0ccd, // 0.050000 
                    0x0889, // 0.033333 
                    0x0444, // 0.016667 
                    0x0444, // 0.016667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // utw
            case 0x00777475:
            {
                MKV_DATA char  data_chars[4]   = "eoi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uva
            case 0x00617675:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uvi
            case 0x00697675:
            {
                MKV_DATA char  data_chars[3]   = "ac";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uvo
            case 0x006f7675:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uwo
            case 0x006f7775:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uwy
            case 0x00797775:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxb
            case 0x00627875:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxe
            case 0x00657875:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxf
            case 0x00667875:
            {
                MKV_DATA char  data_chars[3]   = "oi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxh
            case 0x00687875:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxl
            case 0x006c7875:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxm
            case 0x006d7875:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uxt
            case 0x00747875:
            {
                MKV_DATA char  data_chars[4]   = "oea";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // uxu
            case 0x00757875:
            {
                return 'l';
            }
            break;

            // uxw
            case 0x00777875:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uyh
            case 0x00687975:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uyt
            case 0x00747975:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // uyz
            case 0x007a7975:
            {
                return 'a';
            }
            break;

            // uzd
            case 0x00647a75:
            {
                return 'e';
            }
            break;

            // uzl
            case 0x006c7a75:
            {
                return 'e';
            }
            break;

            // uzz
            case 0x007a7a75:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // u
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'v':
        {
            switch ( trigram_u32 )
            {
            // vac
            case 0x00636176:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vad
            case 0x00646176:
            {
                MKV_DATA char  data_chars[4]   = "dln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vag
            case 0x00676176:
            {
                MKV_DATA char  data_chars[4]   = "egi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // val
            case 0x006c6176:
            {
                MKV_DATA char  data_chars[5]   = "egls";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc3c4, // 0.764706 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // van
            case 0x006e6176:
            {
                MKV_DATA char  data_chars[8]   = "tscgiln";
                MKV_DATA uint16_t data_weights[7] = {
                    0x5b6e, // 0.357143 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // var
            case 0x00726176:
            {
                MKV_DATA char  data_chars[8]   = "raefilt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6666, // 0.400000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // vas
            case 0x00736176:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vat
            case 0x00746176:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vau
            case 0x00756176:
            {
                MKV_DATA char  data_chars[3]   = "xl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vea
            case 0x00616576:
            {
                MKV_DATA char  data_chars[4]   = "nlr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // veb
            case 0x00626576:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vec
            case 0x00636576:
            {
                MKV_DATA char  data_chars[4]   = "roh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ved
            case 0x00646576:
            {
                MKV_DATA char  data_chars[5]   = "oeia";
                MKV_DATA uint16_t data_weights[4] = {
                    0x71c7, // 0.444444 
                    0x5555, // 0.333333 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vee
            case 0x00656576:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // veg
            case 0x00676576:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // veh
            case 0x00686576:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vei
            case 0x00696576:
            {
                MKV_DATA char  data_chars[3]   = "ng";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vel
            case 0x006c6576:
            {
                MKV_DATA char  data_chars[11]   = "elsadirhmv";
                MKV_DATA uint16_t data_weights[10] = {
                    0x4835, // 0.282051 
                    0x41a4, // 0.256410 
                    0x3b14, // 0.230769 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // vem
            case 0x006d6576:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ven
            case 0x006e6576:
            {
                MKV_DATA char  data_chars[17]   = "shtdeniaobwulypg";
                MKV_DATA uint16_t data_weights[16] = {
                    0x4000, // 0.250000 
                    0x28ba, // 0.159091 
                    0x22e9, // 0.136364 
                    0x1d17, // 0.113636 
                    0x1174, // 0.068182 
                    0x1174, // 0.068182 
                    0x0ba3, // 0.045455 
                    0x08ba, // 0.034091 
                    0x08ba, // 0.034091 
                    0x05d1, // 0.022727 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                    0x02e9, // 0.011364 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // veo
            case 0x006f6576:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ver
            case 0x00726576:
            {
                MKV_DATA char  data_chars[18]   = "sthlnideacybwmgpv";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4614, // 0.273743 
                    0x30a0, // 0.189944 
                    0x1574, // 0.083799 
                    0x1406, // 0.078212 
                    0x0e4d, // 0.055866 
                    0x0e4d, // 0.055866 
                    0x0a03, // 0.039106 
                    0x0a03, // 0.039106 
                    0x0895, // 0.033520 
                    0x0895, // 0.033520 
                    0x0727, // 0.027933 
                    0x05b8, // 0.022346 
                    0x044a, // 0.016760 
                    0x044a, // 0.016760 
                    0x02dc, // 0.011173 
                    0x02dc, // 0.011173 
                    0x02dc, // 0.011173 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // ves
            case 0x00736576:
            {
                MKV_DATA char  data_chars[8]   = "tebchyd";
                MKV_DATA uint16_t data_weights[7] = {
                    0x7333, // 0.450000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // vet
            case 0x00746576:
            {
                MKV_DATA char  data_chars[5]   = "otsh";
                MKV_DATA uint16_t data_weights[4] = {
                    0xa2e9, // 0.636364 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vew
            case 0x00776576:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vex
            case 0x00786576:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vey
            case 0x00796576:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // via
            case 0x00616976:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vic
            case 0x00636976:
            {
                MKV_DATA char  data_chars[5]   = "akth";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vid
            case 0x00646976:
            {
                MKV_DATA char  data_chars[5]   = "aegs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vie
            case 0x00656976:
            {
                MKV_DATA char  data_chars[3]   = "wv";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vig
            case 0x00676976:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vik
            case 0x006b6976:
            {
                MKV_DATA char  data_chars[3]   = "et";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vil
            case 0x006c6976:
            {
                MKV_DATA char  data_chars[6]   = "ldest";
                MKV_DATA uint16_t data_weights[5] = {
                    0xf129, // 0.942029 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                    0x03b6, // 0.014493 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // vin
            case 0x006e6976:
            {
                MKV_DATA char  data_chars[5]   = "genc";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd95c, // 0.849057 
                    0x1cfb, // 0.113208 
                    0x04d5, // 0.018868 
                    0x04d5, // 0.018868 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vio
            case 0x006f6976:
            {
                MKV_DATA char  data_chars[3]   = "cn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vir
            case 0x00726976:
            {
                MKV_DATA char  data_chars[3]   = "gl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vis
            case 0x00736976:
            {
                MKV_DATA char  data_chars[5]   = "tcks";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // vit
            case 0x00746976:
            {
                MKV_DATA char  data_chars[4]   = "hrt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // viz
            case 0x007a6976:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vob
            case 0x00626f76:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voc
            case 0x00636f76:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voe
            case 0x00656f76:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vog
            case 0x00676f76:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // voi
            case 0x00696f76:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vol
            case 0x006c6f76:
            {
                MKV_DATA char  data_chars[4]   = "lei";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // von
            case 0x006e6f76:
            {
                MKV_DATA char  data_chars[7]   = "scempw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // vor
            case 0x00726f76:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vos
            case 0x00736f76:
            {
                MKV_DATA char  data_chars[4]   = "est";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vou
            case 0x00756f76:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vow
            case 0x00776f76:
            {
                MKV_DATA char  data_chars[4]   = "cha";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // vox
            case 0x00786f76:
            {
                MKV_DATA char  data_chars[3]   = "ma";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vre
            case 0x00657276:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vro
            case 0x006f7276:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vul
            case 0x006c7576:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vya
            case 0x00617976:
            {
                MKV_DATA char  data_chars[3]   = "td";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vyb
            case 0x00627976:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vyc
            case 0x00637976:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // vyh
            case 0x00687976:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // v
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'w':
        {
            switch ( trigram_u32 )
            {
            // wab
            case 0x00626177:
            {
                MKV_DATA char  data_chars[3]   = "ye";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wac
            case 0x00636177:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wad
            case 0x00646177:
            {
                MKV_DATA char  data_chars[8]   = "edbshlw";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6c4f, // 0.423077 
                    0x4ec5, // 0.307692 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // waf
            case 0x00666177:
            {
                MKV_DATA char  data_chars[4]   = "efi";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wag
            case 0x00676177:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wai
            case 0x00696177:
            {
                MKV_DATA char  data_chars[4]   = "tnl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcdb7, // 0.803571 
                    0x2db7, // 0.178571 
                    0x0492, // 0.017857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wak
            case 0x006b6177:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wal
            case 0x006c6177:
            {
                MKV_DATA char  data_chars[17]   = "ldtkscembnwfghrp";
                MKV_DATA uint16_t data_weights[16] = {
                    0x67d5, // 0.405594 
                    0x1ada, // 0.104895 
                    0x1910, // 0.097902 
                    0x1746, // 0.090909 
                    0x157c, // 0.083916 
                    0x08f3, // 0.034965 
                    0x0729, // 0.027972 
                    0x0729, // 0.027972 
                    0x0729, // 0.027972 
                    0x055f, // 0.020979 
                    0x055f, // 0.020979 
                    0x0395, // 0.013986 
                    0x0395, // 0.013986 
                    0x0395, // 0.013986 
                    0x01ca, // 0.006993 
                    0x01ca, // 0.006993 
                };
                return decision_fn( data_chars, data_weights, 16, input_weight, input_seed );
            }
            break;

            // wam
            case 0x006d6177:
            {
                MKV_DATA char  data_chars[3]   = "pb";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wan
            case 0x006e6177:
            {
                MKV_DATA char  data_chars[15]   = "stbndlprgwamcf";
                MKV_DATA uint16_t data_weights[14] = {
                    0x43c4, // 0.264706 
                    0x25a6, // 0.147059 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // wap
            case 0x00706177:
            {
                MKV_DATA char  data_chars[3]   = "pl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // war
            case 0x00726177:
            {
                MKV_DATA char  data_chars[18]   = "dtemnbklrswphcgfi";
                MKV_DATA uint16_t data_weights[17] = {
                    0x4d2d, // 0.301471 
                    0x1878, // 0.095588 
                    0x14b5, // 0.080882 
                    0x12d3, // 0.073529 
                    0x12d3, // 0.073529 
                    0x10f1, // 0.066176 
                    0x10f1, // 0.066176 
                    0x0b4b, // 0.044118 
                    0x0b4b, // 0.044118 
                    0x0969, // 0.036765 
                    0x0788, // 0.029412 
                    0x05a6, // 0.022059 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x03c4, // 0.014706 
                    0x01e2, // 0.007353 
                };
                return decision_fn( data_chars, data_weights, 17, input_weight, input_seed );
            }
            break;

            // was
            case 0x00736177:
            {
                MKV_DATA char  data_chars[9]   = "hptdikls";
                MKV_DATA uint16_t data_weights[8] = {
                    0x9b6e, // 0.607143 
                    0x1b6e, // 0.107143 
                    0x1b6e, // 0.107143 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wat
            case 0x00746177:
            {
                MKV_DATA char  data_chars[9]   = "ecthlfno";
                MKV_DATA uint16_t data_weights[8] = {
                    0xbb62, // 0.731959 
                    0x1279, // 0.072165 
                    0x0fd6, // 0.061856 
                    0x0fd6, // 0.061856 
                    0x0a8f, // 0.041237 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                    0x02a4, // 0.010309 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wav
            case 0x00766177:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe000, // 0.875000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // waw
            case 0x00776177:
            {
                MKV_DATA char  data_chars[3]   = "ce";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wax
            case 0x00786177:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // way
            case 0x00796177:
            {
                MKV_DATA char  data_chars[8]   = "sftemwa";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x3000, // 0.187500 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // wba
            case 0x00616277:
            {
                MKV_DATA char  data_chars[4]   = "nrl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x71c7, // 0.444444 
                    0x71c7, // 0.444444 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wbe
            case 0x00656277:
            {
                MKV_DATA char  data_chars[4]   = "cer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wbi
            case 0x00696277:
            {
                MKV_DATA char  data_chars[4]   = "grt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wbo
            case 0x006f6277:
            {
                MKV_DATA char  data_chars[6]   = "rlotu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wbr
            case 0x00726277:
            {
                MKV_DATA char  data_chars[5]   = "ioae";
                MKV_DATA uint16_t data_weights[4] = {
                    0xbca2, // 0.736842 
                    0x1af3, // 0.105263 
                    0x1af3, // 0.105263 
                    0x0d79, // 0.052632 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wbu
            case 0x00756277:
            {
                MKV_DATA char  data_chars[4]   = "rsi";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc4ec, // 0.769231 
                    0x2762, // 0.153846 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wca
            case 0x00616377:
            {
                MKV_DATA char  data_chars[3]   = "sb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wce
            case 0x00656377:
            {
                MKV_DATA char  data_chars[3]   = "sa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wch
            case 0x00686377:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wcl
            case 0x006c6377:
            {
                MKV_DATA char  data_chars[3]   = "io";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wco
            case 0x006f6377:
            {
                MKV_DATA char  data_chars[4]   = "tma";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wcr
            case 0x00726377:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wde
            case 0x00656477:
            {
                MKV_DATA char  data_chars[5]   = "nrsc";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9746, // 0.590909 
                    0x3a2f, // 0.227273 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wdh
            case 0x00686477:
            {
                MKV_DATA char  data_chars[3]   = "ai";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdi
            case 0x00696477:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdl
            case 0x006c6477:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdo
            case 0x006f6477:
            {
                MKV_DATA char  data_chars[3]   = "nw";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdr
            case 0x00726477:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wds
            case 0x00736477:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wdy
            case 0x00796477:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wea
            case 0x00616577:
            {
                MKV_DATA char  data_chars[7]   = "rvlstc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x1eb8, // 0.120000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // web
            case 0x00626577:
            {
                MKV_DATA char  data_chars[4]   = "bsh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wec
            case 0x00636577:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wed
            case 0x00646577:
            {
                MKV_DATA char  data_chars[6]   = "nghmd";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wee
            case 0x00656577:
            {
                MKV_DATA char  data_chars[9]   = "tkndlcfp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6319, // 0.387097 
                    0x5295, // 0.322581 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x1084, // 0.064516 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                    0x0842, // 0.032258 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wef
            case 0x00666577:
            {
                MKV_DATA char  data_chars[3]   = "fi";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // weg
            case 0x00676577:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wei
            case 0x00696577:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wel
            case 0x006c6577:
            {
                MKV_DATA char  data_chars[13]   = "lsbvdtnmwcfh";
                MKV_DATA uint16_t data_weights[12] = {
                    0xec00, // 0.921875 
                    0x059a, // 0.021875 
                    0x0333, // 0.012500 
                    0x0266, // 0.009375 
                    0x019a, // 0.006250 
                    0x019a, // 0.006250 
                    0x019a, // 0.006250 
                    0x00cd, // 0.003125 
                    0x00cd, // 0.003125 
                    0x00cd, // 0.003125 
                    0x00cd, // 0.003125 
                    0x00cd, // 0.003125 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // wem
            case 0x006d6577:
            {
                MKV_DATA char  data_chars[3]   = "bl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wen
            case 0x006e6577:
            {
                MKV_DATA char  data_chars[8]   = "tdnshfl";
                MKV_DATA uint16_t data_weights[7] = {
                    0x469f, // 0.275862 
                    0x469f, // 0.275862 
                    0x2c23, // 0.172414 
                    0x234f, // 0.137931 
                    0x11a8, // 0.068966 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // weo
            case 0x006f6577:
            {
                MKV_DATA char  data_chars[4]   = "bln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wep
            case 0x00706577:
            {
                MKV_DATA char  data_chars[3]   = "hs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wer
            case 0x00726577:
            {
                MKV_DATA char  data_chars[15]   = "snbheftyavgmrc";
                MKV_DATA uint16_t data_weights[14] = {
                    0x3c3c, // 0.235294 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x1697, // 0.088235 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                    0x0788, // 0.029412 
                };
                return decision_fn( data_chars, data_weights, 14, input_weight, input_seed );
            }
            break;

            // wes
            case 0x00736577:
            {
                MKV_DATA char  data_chars[9]   = "tghfpswb";
                MKV_DATA uint16_t data_weights[8] = {
                    0xeaab, // 0.916667 
                    0x04be, // 0.018519 
                    0x04be, // 0.018519 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                    0x025f, // 0.009259 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wet
            case 0x00746577:
            {
                MKV_DATA char  data_chars[7]   = "htwlmo";
                MKV_DATA uint16_t data_weights[6] = {
                    0x9bd3, // 0.608696 
                    0x37a7, // 0.217391 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                    0x0b21, // 0.043478 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wex
            case 0x00786577:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wey
            case 0x00796577:
            {
                MKV_DATA char  data_chars[5]   = "bchm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wfa
            case 0x00616677:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfi
            case 0x00696677:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wfo
            case 0x006f6677:
            {
                MKV_DATA char  data_chars[5]   = "rlou";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc4ec, // 0.769231 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wga
            case 0x00616777:
            {
                MKV_DATA char  data_chars[4]   = "trn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xcccd, // 0.800000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wgi
            case 0x00696777:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wgr
            case 0x00726777:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xb6db, // 0.714286 
                    0x4925, // 0.285714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wha
            case 0x00616877:
            {
                MKV_DATA char  data_chars[10]   = "trlmdpsnv";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x3bbc, // 0.233333 
                    0x3333, // 0.200000 
                    0x1111, // 0.066667 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                    0x0889, // 0.033333 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // whe
            case 0x00656877:
            {
                MKV_DATA char  data_chars[12]   = "aletdrmsvpy";
                MKV_DATA uint16_t data_weights[11] = {
                    0x4835, // 0.282051 
                    0x2df3, // 0.179487 
                    0x2762, // 0.153846 
                    0x1a42, // 0.102564 
                    0x13b1, // 0.076923 
                    0x13b1, // 0.076923 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                    0x0690, // 0.025641 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // whi
            case 0x00696877:
            {
                MKV_DATA char  data_chars[12]   = "tslpncmxdrg";
                MKV_DATA uint16_t data_weights[11] = {
                    0xb6db, // 0.714286 
                    0x1340, // 0.075188 
                    0x0d79, // 0.052632 
                    0x0b8d, // 0.045113 
                    0x09a0, // 0.037594 
                    0x05c6, // 0.022556 
                    0x05c6, // 0.022556 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                    0x01ed, // 0.007519 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // who
            case 0x006f6877:
            {
                MKV_DATA char  data_chars[5]   = "rlob";
                MKV_DATA uint16_t data_weights[4] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // whu
            case 0x00756877:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // why
            case 0x00796877:
            {
                MKV_DATA char  data_chars[6]   = "dgklt";
                MKV_DATA uint16_t data_weights[5] = {
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wib
            case 0x00626977:
            {
                MKV_DATA char  data_chars[3]   = "dt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wic
            case 0x00636977:
            {
                MKV_DATA char  data_chars[3]   = "kh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd1b8, // 0.819209 
                    0x2e48, // 0.180791 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wid
            case 0x00646977:
            {
                MKV_DATA char  data_chars[12]   = "emgldhnwbcf";
                MKV_DATA uint16_t data_weights[11] = {
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 11, input_weight, input_seed );
            }
            break;

            // wie
            case 0x00656977:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wif
            case 0x00666977:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wig
            case 0x00676977:
            {
                MKV_DATA char  data_chars[10]   = "gstwbhmla";
                MKV_DATA uint16_t data_weights[9] = {
                    0x5555, // 0.333333 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x0aab, // 0.041667 
                    0x0aab, // 0.041667 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // wil
            case 0x006c6977:
            {
                MKV_DATA char  data_chars[13]   = "ldsbmkcntfgp";
                MKV_DATA uint16_t data_weights[12] = {
                    0x7b96, // 0.482759 
                    0x2932, // 0.160920 
                    0x178a, // 0.091954 
                    0x0bc5, // 0.045977 
                    0x0bc5, // 0.045977 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x08d4, // 0.034483 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                    0x02f1, // 0.011494 
                };
                return decision_fn( data_chars, data_weights, 12, input_weight, input_seed );
            }
            break;

            // wim
            case 0x006d6977:
            {
                MKV_DATA char  data_chars[3]   = "bp";
                MKV_DATA uint16_t data_weights[2] = {
                    0xba2f, // 0.727273 
                    0x45d1, // 0.272727 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // win
            case 0x006e6977:
            {
                MKV_DATA char  data_chars[16]   = "sdtgcnekfhlbymw";
                MKV_DATA uint16_t data_weights[15] = {
                    0x3000, // 0.187500 
                    0x2555, // 0.145833 
                    0x21c7, // 0.131944 
                    0x2000, // 0.125000 
                    0x1aab, // 0.104167 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0c72, // 0.048611 
                    0x0aab, // 0.041667 
                    0x071c, // 0.027778 
                    0x0555, // 0.020833 
                    0x0555, // 0.020833 
                    0x038e, // 0.013889 
                    0x038e, // 0.013889 
                    0x01c7, // 0.006944 
                };
                return decision_fn( data_chars, data_weights, 15, input_weight, input_seed );
            }
            break;

            // wip
            case 0x00706977:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wir
            case 0x00726977:
            {
                MKV_DATA char  data_chars[3]   = "ks";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wis
            case 0x00736977:
            {
                MKV_DATA char  data_chars[9]   = "thsbelwp";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6276, // 0.384615 
                    0x313b, // 0.192308 
                    0x1d8a, // 0.115385 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wit
            case 0x00746977:
            {
                MKV_DATA char  data_chars[7]   = "htcnlf";
                MKV_DATA uint16_t data_weights[6] = {
                    0xbbf3, // 0.734177 
                    0x1d2a, // 0.113924 
                    0x16af, // 0.088608 
                    0x09b9, // 0.037975 
                    0x033e, // 0.012658 
                    0x033e, // 0.012658 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wiv
            case 0x00766977:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wix
            case 0x00786977:
            {
                MKV_DATA char  data_chars[4]   = "ofh";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wkc
            case 0x00636b77:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wke
            case 0x00656b77:
            {
                MKV_DATA char  data_chars[5]   = "rsdn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wkf
            case 0x00666b77:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wkh
            case 0x00686b77:
            {
                MKV_DATA char  data_chars[5]   = "ioua";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wki
            case 0x00696b77:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wkl
            case 0x006c6b77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wkn
            case 0x006e6b77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wkr
            case 0x00726b77:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wks
            case 0x00736b77:
            {
                MKV_DATA char  data_chars[5]   = "hdpw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wkw
            case 0x00776b77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wla
            case 0x00616c77:
            {
                MKV_DATA char  data_chars[4]   = "ncs";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wlc
            case 0x00636c77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wld
            case 0x00646c77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wle
            case 0x00656c77:
            {
                MKV_DATA char  data_chars[10]   = "ysreitgad";
                MKV_DATA uint16_t data_weights[9] = {
                    0x829d, // 0.510204 
                    0x29cc, // 0.163265 
                    0x1a1f, // 0.102041 
                    0x0fac, // 0.061224 
                    0x0fac, // 0.061224 
                    0x0a73, // 0.040816 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                    0x0539, // 0.020408 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // wlh
            case 0x00686c77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wli
            case 0x00696c77:
            {
                MKV_DATA char  data_chars[3]   = "sn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8ba3, // 0.545455 
                    0x745d, // 0.454545 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wlm
            case 0x006d6c77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wlo
            case 0x006f6c77:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wlp
            case 0x00706c77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wls
            case 0x00736c77:
            {
                MKV_DATA char  data_chars[3]   = "mw";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wlt
            case 0x00746c77:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wly
            case 0x00796c77:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wma
            case 0x00616d77:
            {
                MKV_DATA char  data_chars[4]   = "nrc";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x6000, // 0.375000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wmb
            case 0x00626d77:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wmo
            case 0x006f6d77:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wna
            case 0x00616e77:
            {
                MKV_DATA char  data_chars[3]   = "ln";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnb
            case 0x00626e77:
            {
                MKV_DATA char  data_chars[3]   = "er";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnd
            case 0x00646e77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wne
            case 0x00656e77:
            {
                MKV_DATA char  data_chars[6]   = "ynsdr";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wnf
            case 0x00666e77:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wng
            case 0x00676e77:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnh
            case 0x00686e77:
            {
                MKV_DATA char  data_chars[5]   = "ieao";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wni
            case 0x00696e77:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wnl
            case 0x006c6e77:
            {
                MKV_DATA char  data_chars[4]   = "aeo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wnp
            case 0x00706e77:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wns
            case 0x00736e77:
            {
                MKV_DATA char  data_chars[8]   = "hicelot";
                MKV_DATA uint16_t data_weights[7] = {
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // wnt
            case 0x00746e77:
            {
                MKV_DATA char  data_chars[4]   = "ohl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xaaab, // 0.666667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wnw
            case 0x00776e77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wob
            case 0x00626f77:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wod
            case 0x00646f77:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wof
            case 0x00666f77:
            {
                MKV_DATA char  data_chars[3]   = "fa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wok
            case 0x006b6f77:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wol
            case 0x006c6f77:
            {
                MKV_DATA char  data_chars[8]   = "dvflsbt";
                MKV_DATA uint16_t data_weights[7] = {
                    0x6000, // 0.375000 
                    0x3333, // 0.200000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // wom
            case 0x006d6f77:
            {
                MKV_DATA char  data_chars[3]   = "be";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // won
            case 0x006e6f77:
            {
                MKV_DATA char  data_chars[5]   = "sdef";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // woo
            case 0x006f6f77:
            {
                MKV_DATA char  data_chars[10]   = "dltnbkrfp";
                MKV_DATA uint16_t data_weights[9] = {
                    0xda69, // 0.853165 
                    0x1d2a, // 0.113924 
                    0x033e, // 0.012658 
                    0x01f2, // 0.007595 
                    0x00a6, // 0.002532 
                    0x00a6, // 0.002532 
                    0x00a6, // 0.002532 
                    0x00a6, // 0.002532 
                    0x00a6, // 0.002532 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // wor
            case 0x00726f77:
            {
                MKV_DATA char  data_chars[14]   = "tmlksgcrndfbp";
                MKV_DATA uint16_t data_weights[13] = {
                    0xd76a, // 0.841463 
                    0x0aed, // 0.042683 
                    0x095e, // 0.036585 
                    0x03e7, // 0.015244 
                    0x03e7, // 0.015244 
                    0x031f, // 0.012195 
                    0x0257, // 0.009146 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x0190, // 0.006098 
                    0x00c8, // 0.003049 
                    0x00c8, // 0.003049 
                    0x00c8, // 0.003049 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // wot
            case 0x00746f77:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wou
            case 0x00756f77:
            {
                MKV_DATA char  data_chars[4]   = "lgn";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wpe
            case 0x00657077:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpi
            case 0x00697077:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpl
            case 0x006c7077:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wpo
            case 0x006f7077:
            {
                MKV_DATA char  data_chars[5]   = "orui";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wqu
            case 0x00757177:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wra
            case 0x00617277:
            {
                MKV_DATA char  data_chars[11]   = "nygtwxfhbm";
                MKV_DATA uint16_t data_weights[10] = {
                    0x471c, // 0.277778 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 10, input_weight, input_seed );
            }
            break;

            // wre
            case 0x00657277:
            {
                MKV_DATA char  data_chars[9]   = "antsyxck";
                MKV_DATA uint16_t data_weights[8] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // wri
            case 0x00697277:
            {
                MKV_DATA char  data_chars[7]   = "ngdtbc";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wro
            case 0x006f7277:
            {
                MKV_DATA char  data_chars[6]   = "xcotu";
                MKV_DATA uint16_t data_weights[5] = {
                    0x8e39, // 0.555556 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wry
            case 0x00797277:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsa
            case 0x00617377:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsb
            case 0x00627377:
            {
                MKV_DATA char  data_chars[4]   = "auy";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wsd
            case 0x00647377:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wse
            case 0x00657377:
            {
                MKV_DATA char  data_chars[4]   = "yln";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wsg
            case 0x00677377:
            {
                MKV_DATA char  data_chars[3]   = "ar";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsh
            case 0x00687377:
            {
                MKV_DATA char  data_chars[5]   = "aiou";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wsi
            case 0x00697377:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsl
            case 0x006c7377:
            {
                MKV_DATA char  data_chars[4]   = "eai";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc000, // 0.750000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wsm
            case 0x006d7377:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wsn
            case 0x006e7377:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wso
            case 0x006f7377:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wst
            case 0x00747377:
            {
                MKV_DATA char  data_chars[4]   = "oer";
                MKV_DATA uint16_t data_weights[3] = {
                    0xae8c, // 0.681818 
                    0x3a2f, // 0.227273 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wsw
            case 0x00777377:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wta
            case 0x00617477:
            {
                MKV_DATA char  data_chars[3]   = "kb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wte
            case 0x00657477:
            {
                MKV_DATA char  data_chars[4]   = "lnr";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wth
            case 0x00687477:
            {
                MKV_DATA char  data_chars[4]   = "oew";
                MKV_DATA uint16_t data_weights[3] = {
                    0xc3c4, // 0.764706 
                    0x1e1e, // 0.117647 
                    0x1e1e, // 0.117647 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wti
            case 0x00697477:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wto
            case 0x006f7477:
            {
                MKV_DATA char  data_chars[4]   = "nwp";
                MKV_DATA uint16_t data_weights[3] = {
                    0xe000, // 0.875000 
                    0x1800, // 0.093750 
                    0x0800, // 0.031250 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wtr
            case 0x00727477:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wue
            case 0x00657577:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wup
            case 0x00707577:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wya
            case 0x00617977:
            {
                MKV_DATA char  data_chars[4]   = "snt";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wyb
            case 0x00627977:
            {
                MKV_DATA char  data_chars[4]   = "euo";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // wyc
            case 0x00637977:
            {
                MKV_DATA char  data_chars[5]   = "hokr";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wyd
            case 0x00647977:
            {
                MKV_DATA char  data_chars[3]   = "ad";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wye
            case 0x00657977:
            {
                MKV_DATA char  data_chars[5]   = "rabg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wyf
            case 0x00667977:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyk
            case 0x006b7977:
            {
                MKV_DATA char  data_chars[3]   = "ei";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyl
            case 0x006c7977:
            {
                MKV_DATA char  data_chars[5]   = "dlya";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // wym
            case 0x006d7977:
            {
                MKV_DATA char  data_chars[7]   = "oeabim";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // wyn
            case 0x006e7977:
            {
                MKV_DATA char  data_chars[6]   = "ndsfi";
                MKV_DATA uint16_t data_weights[5] = {
                    0x71c7, // 0.444444 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // wyr
            case 0x00727977:
            {
                MKV_DATA char  data_chars[3]   = "el";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wys
            case 0x00737977:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyt
            case 0x00747977:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyv
            case 0x00767977:
            {
                MKV_DATA char  data_chars[3]   = "ie";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // wyw
            case 0x00777977:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // w
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'x':
        {
            switch ( trigram_u32 )
            {
            // xal
            case 0x006c6178:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xan
            case 0x006e6178:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xas
            case 0x00736178:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xba
            case 0x00616278:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbe
            case 0x00656278:
            {
                MKV_DATA char  data_chars[3]   = "an";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbo
            case 0x006f6278:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9249, // 0.571429 
                    0x6db7, // 0.428571 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbr
            case 0x00726278:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xbu
            case 0x00756278:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xce
            case 0x00656378:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xcl
            case 0x006c6378:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xco
            case 0x006f6378:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xcr
            case 0x00726378:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xda
            case 0x00616478:
            {
                MKV_DATA char  data_chars[3]   = "lc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xde
            case 0x00656478:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xdo
            case 0x006f6478:
            {
                MKV_DATA char  data_chars[3]   = "wa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xea
            case 0x00616578:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xeb
            case 0x00626578:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xel
            case 0x006c6578:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xen
            case 0x006e6578:
            {
                MKV_DATA char  data_chars[5]   = "dhpt";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // xet
            case 0x00746578:
            {
                MKV_DATA char  data_chars[3]   = "eh";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xfi
            case 0x00696678:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xfo
            case 0x006f6678:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xgr
            case 0x00726778:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xha
            case 0x00616878:
            {
                MKV_DATA char  data_chars[3]   = "ml";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaf28, // 0.684211 
                    0x50d8, // 0.315789 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xhe
            case 0x00656878:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xhi
            case 0x00696878:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xho
            case 0x006f6878:
            {
                MKV_DATA char  data_chars[4]   = "ler";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // xhu
            case 0x00756878:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xil
            case 0x006c6978:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xin
            case 0x006e6978:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xla
            case 0x00616c78:
            {
                MKV_DATA char  data_chars[3]   = "dn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xle
            case 0x00656c78:
            {
                MKV_DATA char  data_chars[3]   = "ya";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf333, // 0.950000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xli
            case 0x00696c78:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xlo
            case 0x006f6c78:
            {
                MKV_DATA char  data_chars[3]   = "de";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xly
            case 0x00796c78:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xma
            case 0x00616d78:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xmi
            case 0x00696d78:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xmo
            case 0x006f6d78:
            {
                MKV_DATA char  data_chars[3]   = "ou";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xmu
            case 0x00756d78:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xne
            case 0x00656e78:
            {
                MKV_DATA char  data_chars[3]   = "ay";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xni
            case 0x00696e78:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xon
            case 0x006e6f78:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xov
            case 0x00766f78:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xpa
            case 0x00617078:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xpe
            case 0x00657078:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xpo
            case 0x006f7078:
            {
                MKV_DATA char  data_chars[3]   = "oc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xsh
            case 0x00687378:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xsi
            case 0x00697378:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xst
            case 0x00747378:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xta
            case 0x00617478:
            {
                MKV_DATA char  data_chars[3]   = "bc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xte
            case 0x00657478:
            {
                MKV_DATA char  data_chars[6]   = "drtan";
                MKV_DATA uint16_t data_weights[5] = {
                    0x9697, // 0.588235 
                    0x2d2d, // 0.176471 
                    0x1e1e, // 0.117647 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // xth
            case 0x00687478:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xti
            case 0x00697478:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xto
            case 0x006f7478:
            {
                MKV_DATA char  data_chars[4]   = "nwl";
                MKV_DATA uint16_t data_weights[3] = {
                    0xeaab, // 0.916667 
                    0x1000, // 0.062500 
                    0x0555, // 0.020833 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // xul
            case 0x006c7578:
            {
                MKV_DATA char  data_chars[3]   = "yb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xwe
            case 0x00657778:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xwi
            case 0x00697778:
            {
                MKV_DATA char  data_chars[3]   = "cs";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // xwo
            case 0x006f7778:
            {
                MKV_DATA char  data_chars[5]   = "rolu";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb000, // 0.687500 
                    0x3000, // 0.187500 
                    0x1000, // 0.062500 
                    0x1000, // 0.062500 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // x
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'y':
        {
            switch ( trigram_u32 )
            {
            // yad
            case 0x00646179:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yaf
            case 0x00666179:
            {
                MKV_DATA char  data_chars[3]   = "fb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yal
            case 0x006c6179:
            {
                MKV_DATA char  data_chars[5]   = "sbdl";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yan
            case 0x006e6179:
            {
                MKV_DATA char  data_chars[7]   = "stlvwd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yap
            case 0x00706179:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yar
            case 0x00726179:
            {
                MKV_DATA char  data_chars[14]   = "dnblsfkhmprcw";
                MKV_DATA uint16_t data_weights[13] = {
                    0x5e51, // 0.368421 
                    0x2f28, // 0.184211 
                    0x1af3, // 0.105263 
                    0x1436, // 0.078947 
                    0x0d79, // 0.052632 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                    0x06bd, // 0.026316 
                };
                return decision_fn( data_chars, data_weights, 13, input_weight, input_seed );
            }
            break;

            // yas
            case 0x00736179:
            {
                MKV_DATA char  data_chars[3]   = "ht";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yat
            case 0x00746179:
            {
                MKV_DATA char  data_chars[3]   = "te";
                MKV_DATA uint16_t data_weights[2] = {
                    0x9697, // 0.588235 
                    0x6969, // 0.411765 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yav
            case 0x00766179:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yaw
            case 0x00776179:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yax
            case 0x00786179:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yaz
            case 0x007a6179:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yba
            case 0x00616279:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybe
            case 0x00656279:
            {
                MKV_DATA char  data_chars[5]   = "rcdn";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ybl
            case 0x006c6279:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ybo
            case 0x006f6279:
            {
                MKV_DATA char  data_chars[4]   = "urs";
                MKV_DATA uint16_t data_weights[3] = {
                    0x9249, // 0.571429 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ybr
            case 0x00726279:
            {
                MKV_DATA char  data_chars[4]   = "oie";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x7333, // 0.450000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ybu
            case 0x00756279:
            {
                MKV_DATA char  data_chars[4]   = "rsn";
                MKV_DATA uint16_t data_weights[3] = {
                    0xa2e9, // 0.636364 
                    0x45d1, // 0.272727 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yca
            case 0x00616379:
            {
                MKV_DATA char  data_chars[3]   = "mb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yce
            case 0x00656379:
            {
                MKV_DATA char  data_chars[3]   = "mt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ych
            case 0x00686379:
            {
                MKV_DATA char  data_chars[7]   = "euabnw";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yck
            case 0x006b6379:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ycl
            case 0x006c6379:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yco
            case 0x006f6379:
            {
                MKV_DATA char  data_chars[5]   = "mtlo";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ycr
            case 0x00726379:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yda
            case 0x00616479:
            {
                MKV_DATA char  data_chars[3]   = "lm";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydb
            case 0x00626479:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydc
            case 0x00636479:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydd
            case 0x00646479:
            {
                MKV_DATA char  data_chars[4]   = "ile";
                MKV_DATA uint16_t data_weights[3] = {
                    0x6666, // 0.400000 
                    0x6666, // 0.400000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yde
            case 0x00656479:
            {
                MKV_DATA char  data_chars[5]   = "nsra";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ydf
            case 0x00666479:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydg
            case 0x00676479:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydh
            case 0x00686479:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydi
            case 0x00696479:
            {
                MKV_DATA char  data_chars[3]   = "at";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydl
            case 0x006c6479:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydm
            case 0x006d6479:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydn
            case 0x006e6479:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydo
            case 0x006f6479:
            {
                MKV_DATA char  data_chars[5]   = "ncuw";
                MKV_DATA uint16_t data_weights[4] = {
                    0xdb6e, // 0.857143 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                    0x0c31, // 0.047619 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yds
            case 0x00736479:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ydy
            case 0x00796479:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yea
            case 0x00616579:
            {
                MKV_DATA char  data_chars[7]   = "tlrvbd";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5555, // 0.333333 
                    0x4000, // 0.250000 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yeb
            case 0x00626579:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yec
            case 0x00636579:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yed
            case 0x00646579:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yef
            case 0x00666579:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yeg
            case 0x00676579:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yei
            case 0x00696579:
            {
                MKV_DATA char  data_chars[3]   = "sc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yel
            case 0x006c6579:
            {
                MKV_DATA char  data_chars[7]   = "dlvsaf";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5d17, // 0.363636 
                    0x2e8c, // 0.181818 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yen
            case 0x006e6579:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yeo
            case 0x006f6579:
            {
                MKV_DATA char  data_chars[4]   = "vfl";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yer
            case 0x00726579:
            {
                MKV_DATA char  data_chars[5]   = "snmh";
                MKV_DATA uint16_t data_weights[4] = {
                    0xb4b5, // 0.705882 
                    0x2d2d, // 0.176471 
                    0x0f0f, // 0.058824 
                    0x0f0f, // 0.058824 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yes
            case 0x00736579:
            {
                MKV_DATA char  data_chars[3]   = "da";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yet
            case 0x00746579:
            {
                MKV_DATA char  data_chars[5]   = "tilm";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yew
            case 0x00776579:
            {
                MKV_DATA char  data_chars[5]   = "ohit";
                MKV_DATA uint16_t data_weights[4] = {
                    0x9249, // 0.571429 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yfa
            case 0x00616679:
            {
                MKV_DATA char  data_chars[3]   = "ib";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfe
            case 0x00656679:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yff
            case 0x00666679:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfi
            case 0x00696679:
            {
                MKV_DATA char  data_chars[3]   = "ec";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfl
            case 0x006c6679:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yfo
            case 0x006f6679:
            {
                MKV_DATA char  data_chars[3]   = "ro";
                MKV_DATA uint16_t data_weights[2] = {
                    0xf6db, // 0.964286 
                    0x0925, // 0.035714 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yga
            case 0x00616779:
            {
                MKV_DATA char  data_chars[4]   = "trd";
                MKV_DATA uint16_t data_weights[3] = {
                    0xba2f, // 0.727273 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ygo
            case 0x006f6779:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ygr
            case 0x00726779:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yha
            case 0x00616879:
            {
                MKV_DATA char  data_chars[9]   = "mlynrtuv";
                MKV_DATA uint16_t data_weights[8] = {
                    0x5555, // 0.333333 
                    0x3333, // 0.200000 
                    0x2222, // 0.133333 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                    0x1111, // 0.066667 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // yhe
            case 0x00656879:
            {
                MKV_DATA char  data_chars[3]   = "am";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yhi
            case 0x00696879:
            {
                MKV_DATA char  data_chars[5]   = "ldrt";
                MKV_DATA uint16_t data_weights[4] = {
                    0xd555, // 0.833333 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                    0x0e39, // 0.055556 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yho
            case 0x006f6879:
            {
                MKV_DATA char  data_chars[3]   = "pr";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yhu
            case 0x00756879:
            {
                MKV_DATA char  data_chars[3]   = "rl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yie
            case 0x00656979:
            {
                MKV_DATA char  data_chars[3]   = "wc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yin
            case 0x006e6979:
            {
                MKV_DATA char  data_chars[3]   = "ga";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yke
            case 0x00656b79:
            {
                MKV_DATA char  data_chars[6]   = "shnry";
                MKV_DATA uint16_t data_weights[5] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // yki
            case 0x00696b79:
            {
                MKV_DATA char  data_chars[3]   = "nr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ykl
            case 0x006c6b79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yla
            case 0x00616c79:
            {
                MKV_DATA char  data_chars[5]   = "nkhm";
                MKV_DATA uint16_t data_weights[4] = {
                    0xc5d1, // 0.772727 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ylb
            case 0x00626c79:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yld
            case 0x00646c79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yle
            case 0x00656c79:
            {
                MKV_DATA char  data_chars[9]   = "syrhieab";
                MKV_DATA uint16_t data_weights[8] = {
                    0x6666, // 0.400000 
                    0x3d71, // 0.240000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x147b, // 0.080000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                    0x0a3d, // 0.040000 
                };
                return decision_fn( data_chars, data_weights, 8, input_weight, input_seed );
            }
            break;

            // ylh
            case 0x00686c79:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yli
            case 0x00696c79:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yll
            case 0x006c6c79:
            {
                MKV_DATA char  data_chars[3]   = "ey";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylm
            case 0x006d6c79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylo
            case 0x006f6c79:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yls
            case 0x00736c79:
            {
                MKV_DATA char  data_chars[3]   = "dh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylt
            case 0x00746c79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylv
            case 0x00766c79:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ylw
            case 0x00776c79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yly
            case 0x00796c79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yma
            case 0x00616d79:
            {
                MKV_DATA char  data_chars[3]   = "rn";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymb
            case 0x00626d79:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymc
            case 0x00636d79:
            {
                MKV_DATA char  data_chars[3]   = "ho";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yme
            case 0x00656d79:
            {
                MKV_DATA char  data_chars[7]   = "rasdte";
                MKV_DATA uint16_t data_weights[6] = {
                    0x5b6e, // 0.357143 
                    0x36db, // 0.214286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x1249, // 0.071429 
                    0x1249, // 0.071429 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ymh
            case 0x00686d79:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymi
            case 0x00696d79:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xd555, // 0.833333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymm
            case 0x006d6d79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymo
            case 0x006f6d79:
            {
                MKV_DATA char  data_chars[7]   = "onurct";
                MKV_DATA uint16_t data_weights[6] = {
                    0x7627, // 0.461538 
                    0x44ec, // 0.269231 
                    0x1d8a, // 0.115385 
                    0x13b1, // 0.076923 
                    0x09d9, // 0.038462 
                    0x09d9, // 0.038462 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // ymp
            case 0x00706d79:
            {
                MKV_DATA char  data_chars[5]   = "tsni";
                MKV_DATA uint16_t data_weights[4] = {
                    0x745d, // 0.454545 
                    0x45d1, // 0.272727 
                    0x2e8c, // 0.181818 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yms
            case 0x00736d79:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ymt
            case 0x00746d79:
            {
                MKV_DATA char  data_chars[3]   = "rh";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yna
            case 0x00616e79:
            {
                MKV_DATA char  data_chars[5]   = "rlcs";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6db7, // 0.428571 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ynb
            case 0x00626e79:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ync
            case 0x00636e79:
            {
                MKV_DATA char  data_chars[3]   = "hl";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynd
            case 0x00646e79:
            {
                MKV_DATA char  data_chars[8]   = "eabhost";
                MKV_DATA uint16_t data_weights[7] = {
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // yne
            case 0x00656e79:
            {
                MKV_DATA char  data_chars[8]   = "shymalr";
                MKV_DATA uint16_t data_weights[7] = {
                    0x8000, // 0.500000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 7, input_weight, input_seed );
            }
            break;

            // ynf
            case 0x00666e79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yng
            case 0x00676e79:
            {
                MKV_DATA char  data_chars[4]   = "taf";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ynh
            case 0x00686e79:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0xdb6e, // 0.857143 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yni
            case 0x00696e79:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynm
            case 0x006d6e79:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ynn
            case 0x006e6e79:
            {
                MKV_DATA char  data_chars[3]   = "es";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcccd, // 0.800000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yno
            case 0x006f6e79:
            {
                MKV_DATA char  data_chars[4]   = "wer";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yns
            case 0x00736e79:
            {
                MKV_DATA char  data_chars[6]   = "htfow";
                MKV_DATA uint16_t data_weights[5] = {
                    0x4925, // 0.285714 
                    0x4925, // 0.285714 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ynt
            case 0x00746e79:
            {
                MKV_DATA char  data_chars[5]   = "oeiz";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8e39, // 0.555556 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ynw
            case 0x00776e79:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yoa
            case 0x00616f79:
            {
                MKV_DATA char  data_chars[3]   = "kc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yoc
            case 0x00636f79:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yod
            case 0x00646f79:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yok
            case 0x006b6f79:
            {
                MKV_DATA char  data_chars[3]   = "eb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yon
            case 0x006e6f79:
            {
                MKV_DATA char  data_chars[3]   = "ds";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yop
            case 0x00706f79:
            {
                MKV_DATA char  data_chars[3]   = "pa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yor
            case 0x00726f79:
            {
                MKV_DATA char  data_chars[3]   = "kt";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yot
            case 0x00746f79:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // you
            case 0x00756f79:
            {
                MKV_DATA char  data_chars[3]   = "nl";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yox
            case 0x00786f79:
            {
                MKV_DATA char  data_chars[3]   = "af";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypa
            case 0x00617079:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ype
            case 0x00657079:
            {
                MKV_DATA char  data_chars[3]   = "rs";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yph
            case 0x00687079:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypi
            case 0x00697079:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0xaaab, // 0.666667 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ypo
            case 0x006f7079:
            {
                MKV_DATA char  data_chars[5]   = "lrto";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6000, // 0.375000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yre
            case 0x00657279:
            {
                MKV_DATA char  data_chars[5]   = "slfw";
                MKV_DATA uint16_t data_weights[4] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x2000, // 0.125000 
                    0x2000, // 0.125000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yrf
            case 0x00667279:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yrh
            case 0x00687279:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yri
            case 0x00697279:
            {
                MKV_DATA char  data_chars[5]   = "ncdg";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // yrl
            case 0x006c7279:
            {
                MKV_DATA char  data_chars[3]   = "ae";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yrn
            case 0x006e7279:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yro
            case 0x006f7279:
            {
                MKV_DATA char  data_chars[4]   = "cdw";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yrr
            case 0x00727279:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yrt
            case 0x00747279:
            {
                MKV_DATA char  data_chars[3]   = "oa";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysa
            case 0x00617379:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysb
            case 0x00627379:
            {
                MKV_DATA char  data_chars[3]   = "ru";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysd
            case 0x00647379:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yse
            case 0x00657379:
            {
                MKV_DATA char  data_chars[5]   = "lrty";
                MKV_DATA uint16_t data_weights[4] = {
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ysf
            case 0x00667379:
            {
                MKV_DATA char  data_chars[3]   = "oe";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysh
            case 0x00687379:
            {
                MKV_DATA char  data_chars[5]   = "iaof";
                MKV_DATA uint16_t data_weights[4] = {
                    0x6aab, // 0.416667 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x1555, // 0.083333 
                };
                return decision_fn( data_chars, data_weights, 4, input_weight, input_seed );
            }
            break;

            // ysi
            case 0x00697379:
            {
                MKV_DATA char  data_chars[3]   = "db";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yso
            case 0x006f7379:
            {
                MKV_DATA char  data_chars[4]   = "neu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yst
            case 0x00747379:
            {
                MKV_DATA char  data_chars[6]   = "oeraf";
                MKV_DATA uint16_t data_weights[5] = {
                    0x999a, // 0.600000 
                    0x2666, // 0.150000 
                    0x199a, // 0.100000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ysu
            case 0x00757379:
            {
                MKV_DATA char  data_chars[3]   = "lb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ysw
            case 0x00777379:
            {
                MKV_DATA char  data_chars[4]   = "aio";
                MKV_DATA uint16_t data_weights[3] = {
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                    0x5555, // 0.333333 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ytc
            case 0x00637479:
            {
                MKV_DATA char  data_chars[3]   = "ha";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yte
            case 0x00657479:
            {
                MKV_DATA char  data_chars[4]   = "rls";
                MKV_DATA uint16_t data_weights[3] = {
                    0x999a, // 0.600000 
                    0x3333, // 0.200000 
                    0x3333, // 0.200000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // yth
            case 0x00687479:
            {
                MKV_DATA char  data_chars[7]   = "oeablr";
                MKV_DATA uint16_t data_weights[6] = {
                    0x6ccd, // 0.425000 
                    0x6000, // 0.375000 
                    0x199a, // 0.100000 
                    0x0ccd, // 0.050000 
                    0x0666, // 0.025000 
                    0x0666, // 0.025000 
                };
                return decision_fn( data_chars, data_weights, 6, input_weight, input_seed );
            }
            break;

            // yti
            case 0x00697479:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yto
            case 0x006f7479:
            {
                MKV_DATA char  data_chars[4]   = "nwr";
                MKV_DATA uint16_t data_weights[3] = {
                    0xd555, // 0.833333 
                    0x238e, // 0.138889 
                    0x071c, // 0.027778 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // ytr
            case 0x00727479:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0xc000, // 0.750000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ytt
            case 0x00747479:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yva
            case 0x00617679:
            {
                MKV_DATA char  data_chars[3]   = "lr";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yve
            case 0x00657679:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yvi
            case 0x00697679:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywa
            case 0x00617779:
            {
                MKV_DATA char  data_chars[6]   = "rlsty";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                    0x2aab, // 0.166667 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // ywe
            case 0x00657779:
            {
                MKV_DATA char  data_chars[3]   = "ls";
                MKV_DATA uint16_t data_weights[2] = {
                    0xe8ba, // 0.909091 
                    0x1746, // 0.090909 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywi
            case 0x00697779:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // ywo
            case 0x006f7779:
            {
                MKV_DATA char  data_chars[3]   = "or";
                MKV_DATA uint16_t data_weights[2] = {
                    0xcaab, // 0.791667 
                    0x3555, // 0.208333 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // yza
            case 0x00617a79:
            {
                MKV_DATA char  data_chars[3]   = "nb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // y
        break;

        // -- -- -- -- -- -- -- -- -- -- -- --
        case 'z':
        {
            switch ( trigram_u32 )
            {
            // zab
            case 0x0062617a:
            {
                MKV_DATA char  data_chars[3]   = "ua";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zac
            case 0x0063617a:
            {
                MKV_DATA char  data_chars[3]   = "ko";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zai
            case 0x0069617a:
            {
                MKV_DATA char  data_chars[3]   = "sd";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zak
            case 0x006b617a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zan
            case 0x006e617a:
            {
                MKV_DATA char  data_chars[4]   = "ctv";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // zar
            case 0x0072617a:
            {
                MKV_DATA char  data_chars[4]   = "des";
                MKV_DATA uint16_t data_weights[3] = {
                    0xb6db, // 0.714286 
                    0x2492, // 0.142857 
                    0x2492, // 0.142857 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // zde
            case 0x0065647a:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zea
            case 0x0061657a:
            {
                MKV_DATA char  data_chars[3]   = "lt";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zeb
            case 0x0062657a:
            {
                MKV_DATA char  data_chars[4]   = "reu";
                MKV_DATA uint16_t data_weights[3] = {
                    0x8000, // 0.500000 
                    0x4000, // 0.250000 
                    0x4000, // 0.250000 
                };
                return decision_fn( data_chars, data_weights, 3, input_weight, input_seed );
            }
            break;

            // zed
            case 0x0064657a:
            {
                MKV_DATA char  data_chars[3]   = "ao";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zeh
            case 0x0068657a:
            {
                MKV_DATA char  data_chars[3]   = "ia";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zei
            case 0x0069657a:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zel
            case 0x006c657a:
            {
                MKV_DATA char  data_chars[10]   = "easghtblw";
                MKV_DATA uint16_t data_weights[9] = {
                    0x68ba, // 0.409091 
                    0x2e8c, // 0.181818 
                    0x22e9, // 0.136364 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                    0x0ba3, // 0.045455 
                };
                return decision_fn( data_chars, data_weights, 9, input_weight, input_seed );
            }
            break;

            // zen
            case 0x006e657a:
            {
                MKV_DATA char  data_chars[3]   = "hn";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zer
            case 0x0072657a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zet
            case 0x0074657a:
            {
                MKV_DATA char  data_chars[3]   = "ta";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zew
            case 0x0077657a:
            {
                MKV_DATA char  data_chars[3]   = "eo";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zfo
            case 0x006f667a:
            {
                MKV_DATA char  data_chars[3]   = "ra";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zga
            case 0x0061677a:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zhe
            case 0x0065687a:
            {
                MKV_DATA char  data_chars[3]   = "ab";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zhu
            case 0x0075687a:
            {
                MKV_DATA char  data_chars[3]   = "gb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zia
            case 0x0061697a:
            {
                MKV_DATA char  data_chars[3]   = "tc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zic
            case 0x0063697a:
            {
                MKV_DATA char  data_chars[3]   = "ka";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zie
            case 0x0065697a:
            {
                MKV_DATA char  data_chars[3]   = "ns";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zin
            case 0x006e697a:
            {
                MKV_DATA char  data_chars[3]   = "gc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x8000, // 0.500000 
                    0x8000, // 0.500000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zio
            case 0x006f697a:
            {
                MKV_DATA char  data_chars[3]   = "nc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zis
            case 0x0073697a:
            {
                MKV_DATA char  data_chars[3]   = "ea";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zle
            case 0x00656c7a:
            {
                MKV_DATA char  data_chars[6]   = "ysrwm";
                MKV_DATA uint16_t data_weights[5] = {
                    0x5555, // 0.333333 
                    0x38e4, // 0.222222 
                    0x38e4, // 0.222222 
                    0x1c72, // 0.111111 
                    0x1c72, // 0.111111 
                };
                return decision_fn( data_chars, data_weights, 5, input_weight, input_seed );
            }
            break;

            // zoa
            case 0x00616f7a:
            {
                MKV_DATA char  data_chars[3]   = "rc";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zon
            case 0x006e6f7a:
            {
                MKV_DATA char  data_chars[3]   = "ba";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zou
            case 0x00756f7a:
            {
                MKV_DATA char  data_chars[3]   = "cb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zoy
            case 0x00796f7a:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zpa
            case 0x0061707a:
            {
                MKV_DATA char  data_chars[3]   = "ic";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zto
            case 0x006f747a:
            {
                MKV_DATA char  data_chars[3]   = "na";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zwa
            case 0x0061777a:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zza
            case 0x00617a7a:
            {
                MKV_DATA char  data_chars[3]   = "rb";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zze
            case 0x00657a7a:
            {
                MKV_DATA char  data_chars[3]   = "la";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            // zzi
            case 0x00697a7a:
            {
                MKV_DATA char  data_chars[3]   = "ca";
                MKV_DATA uint16_t data_weights[2] = {
                    0x999a, // 0.600000 
                    0x6666, // 0.400000 
                };
                return decision_fn( data_chars, data_weights, 2, input_weight, input_seed );
            }
            break;

            } // switch _u32
        } // z
        break;

    }
    return 0;
} // SelectNextLetter()

} // namespace england
} // namespace mk
